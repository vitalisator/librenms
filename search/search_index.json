{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Installing Ways to install Install LibreNMS Now Install Using Docker More... Setup Auto Discovery Oxidized RRDCached More... Alerting Rules Templates Transports More... API Using the API API Endpoints Support FAQ Install validation Performance tweaks More... Developing Code Guidelines Validating Code Using Git More...","title":"Home"},{"location":"API/","text":"Versioning Versioning an API is a minefield which saw us looking at numerous options on how to do this. We have currently settled on using versioning within the API end point itself /api/v0 . As the API itself is new and still in active development we also decided that v0 would be the best starting point to indicate it's in development. Tokens To access any of the token end points you will be required to authenticate using a token. Tokens can be created directly from within the LibreNMS web interface by going to /api-access/ . Click on 'Create API access token'. Select the user you would like to generate the token for. Enter an optional description. Click Create API Token. Endpoints Whilst this documentation will describe and show examples of the end points, we've designed the API so you should be able to traverse through it without knowing any of the available API routes. You can do this by first calling /api/v0 : curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0 Output: { \"list_bgp\" : \"https://librenms.org/api/v0/bgp\" , ... \"edit_rule\" : \"https://librenms.org/api/v0/rules\" } Input Input to the API is done in three different ways, sometimes a combination two or three of these. Passing parameters via the api route. For example when obtaining a devices details you will pass the hostname of the device in the route: /api/v0/devices/:hostname . Passing parameters via the query string. For example you can list all devices on your install but limit the output to devices that are currently down: /api/v0/devices?type=down Passing data in via JSON, this will mainly be used when adding or updating information via the API, for instance adding a new device: curl -X POST -d '{\"hostname\":\"localhost.localdomain\",\"version\":\"v1\",\"community\":\"public\"}'-H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices Output Output from the API currently is via two output types: JSON Most API responses will output json. As show in the example for calling the API endpoint. PNG This is for when the request is for an image such as a graph for a switch port. Endpoint Categories Devices DeviceGroups Ports PortGroups Alerts Routing Switching Inventory Bills ARP Services Logs System Locations","title":"Using the API"},{"location":"API/#versioning","text":"Versioning an API is a minefield which saw us looking at numerous options on how to do this. We have currently settled on using versioning within the API end point itself /api/v0 . As the API itself is new and still in active development we also decided that v0 would be the best starting point to indicate it's in development.","title":"Versioning"},{"location":"API/#tokens","text":"To access any of the token end points you will be required to authenticate using a token. Tokens can be created directly from within the LibreNMS web interface by going to /api-access/ . Click on 'Create API access token'. Select the user you would like to generate the token for. Enter an optional description. Click Create API Token.","title":"Tokens"},{"location":"API/#endpoints","text":"Whilst this documentation will describe and show examples of the end points, we've designed the API so you should be able to traverse through it without knowing any of the available API routes. You can do this by first calling /api/v0 : curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0 Output: { \"list_bgp\" : \"https://librenms.org/api/v0/bgp\" , ... \"edit_rule\" : \"https://librenms.org/api/v0/rules\" }","title":"Endpoints"},{"location":"API/#input","text":"Input to the API is done in three different ways, sometimes a combination two or three of these. Passing parameters via the api route. For example when obtaining a devices details you will pass the hostname of the device in the route: /api/v0/devices/:hostname . Passing parameters via the query string. For example you can list all devices on your install but limit the output to devices that are currently down: /api/v0/devices?type=down Passing data in via JSON, this will mainly be used when adding or updating information via the API, for instance adding a new device: curl -X POST -d '{\"hostname\":\"localhost.localdomain\",\"version\":\"v1\",\"community\":\"public\"}'-H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices","title":"Input"},{"location":"API/#output","text":"Output from the API currently is via two output types: JSON Most API responses will output json. As show in the example for calling the API endpoint. PNG This is for when the request is for an image such as a graph for a switch port.","title":"Output"},{"location":"API/#endpoint-categories","text":"Devices DeviceGroups Ports PortGroups Alerts Routing Switching Inventory Bills ARP Services Logs System Locations","title":"Endpoint Categories"},{"location":"API/API-Docs/","text":"","title":"API Docs"},{"location":"API/ARP/","text":"list_arp Retrieve a specific ARP entry or all ARP enties for a device Route: /api/v0/resources/ip/arp/:query Query can be: - An IP address - A MAC address - A CIDR network (192.168.1.0/24) - all and set ?device= hostname (or device id) Input: device if you specify all for the query then you need to populate this with the hostname or id of the device. Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/ip/arp/1.1.1.1 curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/ip/arp/192.168.1.0/24 curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/ip/arp/all?device=localhost Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 1 , \"arp\" : [ { \"port_id\" : \"229\" , \"mac_address\" : \"da160e5c2002\" , \"ipv4_address\" : \"1.1.1.1\" , \"context_name\" : \"\" } ] }","title":"ARP"},{"location":"API/ARP/#list_arp","text":"Retrieve a specific ARP entry or all ARP enties for a device Route: /api/v0/resources/ip/arp/:query Query can be: - An IP address - A MAC address - A CIDR network (192.168.1.0/24) - all and set ?device= hostname (or device id) Input: device if you specify all for the query then you need to populate this with the hostname or id of the device. Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/ip/arp/1.1.1.1 curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/ip/arp/192.168.1.0/24 curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/ip/arp/all?device=localhost Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 1 , \"arp\" : [ { \"port_id\" : \"229\" , \"mac_address\" : \"da160e5c2002\" , \"ipv4_address\" : \"1.1.1.1\" , \"context_name\" : \"\" } ] }","title":"list_arp"},{"location":"API/Alerts/","text":"get_alert Get details of an alert Route: /api/v0/alerts/:id id is the alert id, you can obtain a list of alert ids from list_alerts . Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/alerts/1 Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 7 , \"alerts\" : [ { \"hostname\" : \"localhost\" , \"id\" : \"1\" , \"device_id\" : \"1\" , \"rule_id\" : \"1\" , \"state\" : \"1\" , \"alerted\" : \"1\" , \"open\" : \"1\" , \"timestamp\" : \"2014-12-11 14:40:02\" }] } ack_alert Acknowledge an alert Route: /api/v0/alerts/:id id is the alert id, you can obtain a list of alert ids from list_alerts . note is the note to add to the alert until_clear is a boolean and if set to false, the alert will re-alert if it worsens/betters. Input: - Example: curl -X PUT -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/alerts/1 Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"message\" : \"Alert has been acknowledged\" } unmute_alert Unmute an alert Route: /api/v0/alerts/unmute/:id id is the alert id, you can obtain a list of alert ids from list_alerts . Input: - Example: curl -X PUT -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/alerts/unmute/1 Output: { \"status\" : \"ok\" , \"message\" : \"Alert has been unmuted\" } list_alerts List all alerts Route: /api/v0/alerts Input: state: Filter the alerts by state, 0 = ok, 1 = alert, 2 = ack severity: Filter the alerts by severity. Valid values are ok , warning , critical . alert_rule: Filter alerts by alert rule ID. order: How to order the output, default is by timestamp (descending). Can be appended by DESC or ASC to change the order. Examples: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/alerts?state=1 curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/alerts?severity=critical curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/alerts?order=timestamp%20ASC curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/alerts?alert_rule=49 Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 1 , \"alerts\" : [ { \"id\" : \"1\" , \"device_id\" : \"1\" , \"rule_id\" : \"1\" , \"state\" : \"1\" , \"alerted\" : \"1\" , \"open\" : \"1\" , \"timestamp\" : \"2014-12-11 14:40:02\" }] } Rules get_alert_rule Get the alert rule details. Route: /api/v0/rules/:id id is the rule id. Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/rules/1 Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 1 , \"rules\" : [ { \"id\" : \"1\" , \"device_id\" : \"1\" , \"rule\" : \"%devices.os != \\\"Juniper\\\"\" , \"severity\" : \"warning\" , \"extra\" : \"{\\\"mute\\\":true,\\\"count\\\":\\\"15\\\",\\\"delay\\\":null,\\\"invert\\\":false}\" , \"disabled\" : \"0\" , \"name\" : \"A test rule\" } ] } delete_rule Delete an alert rule by id Route: /api/v0/rules/:id id is the rule id. Input: - Example: curl -X DELETE -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/rules/1 Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"message\" : \"Alert rule has been removed\" } list_alert_rules List the alert rules. Route: /api/v0/rules - Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/rules Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 1 , \"rules\" : [ { \"id\" : \"1\" , \"device_id\" : \"-1\" , \"rule\" : \"%devices.os != \\\"Juniper\\\"\" , \"severity\" : \"critical\" , \"extra\" : \"{\\\"mute\\\":false,\\\"count\\\":\\\"15\\\",\\\"delay\\\":\\\"300\\\",\\\"invert\\\":false}\" , \"disabled\" : \"0\" , \"name\" : \"A test rule\" }] } add_rule Add a new alert rule. Route: /api/v0/rules - Input (JSON): devices: This is either an array of device ids or -1 for a global rule builder: The rule which should be in the format entity.condition value (i.e devices.status != 0 for devices marked as down). It must be json encoded in the format rules are currently stored. severity: The severity level the alert will be raised against, Ok, Warning, Critical. disabled: Whether the rule will be disabled or not, 0 = enabled, 1 = disabled count: This is how many polling runs before an alert will trigger and the frequency. delay: Delay is when to start alerting and how frequently. The value is stored in seconds but you can specify minutes, hours or days by doing 5 m, 5 h, 5 d for each one. interval: How often to re-issue notifications while this alert is active,0 means notify once.The value is stored in seconds but you can specify minutes, hours or days by doing 5 m, 5 h, 5 d for each one. mute: If mute is enabled then an alert will never be sent but will show up in the Web UI (true or false). invert: This would invert the rules check. name: This is the name of the rule and is mandatory. Example: curl -X POST -d '{\"devices\":[1,2,3], \"name\": \"testrule\", \"builder\":{\"condition\":\"AND\",\"rules\":[{\"id\":\"devices.hostname\",\"field\":\"devices.hostname\",\"type\":\"string\",\"input\":\"text\",\"operator\":\"equal\",\"value\":\"localhost\"}],\"valid\":true},\"severity\": \"critical\",\"count\":15,\"delay\":\"5 m\",\"interval\":\"5 m\",\"mute\":false}' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/rules Output: { \"status\" : \"ok\" } edit_rule Edit an existing alert rule Route: /api/v0/rules - Input (JSON): rule_id: You must specify the rule_id to edit an existing rule, if this is absent then a new rule will be created. devices: This is either an array of device ids or -1 for a global rule builder: The rule which should be in the format entity.condition value (i.e devices.status != 0 for devices marked as down). It must be json encoded in the format rules are currently stored. severity: The severity level the alert will be raised against, Ok, Warning, Critical. disabled: Whether the rule will be disabled or not, 0 = enabled, 1 = disabled count: This is how many polling runs before an alert will trigger and the frequency. delay: Delay is when to start alerting and how frequently. The value is stored in seconds but you can specify minutes, hours or days by doing 5 m, 5 h, 5 d for each one. interval: How often to re-issue notifications while this alert is active,0 means notify once.The value is stored in seconds but you can specify minutes, hours or days by doing 5 m, 5 h, 5 d for each one. mute: If mute is enabled then an alert will never be sent but will show up in the Web UI (true or false). invert: This would invert the rules check. name: This is the name of the rule and is mandatory. Example: curl -X PUT -d '{\"rule_id\":1,\"device_id\":\"-1\", \"name\": \"testrule\", \"builder\":\"{\"condition\":\"AND\",\"rules\":[{\"id\":\"devices.hostname\",\"field\":\"devices.hostname\",\"type\":\"string\",\"input\":\"text\",\"operator\":\"equal\",\"value\":\"localhost\"}],\"valid\":true}\",\"severity\": \"critical\",\"count\":15,\"delay\":\"5 m\",\"interval\":\"5 m\",\"mute\":false}' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/rules Output: { \"status\" : \"ok\" }","title":"Alerts"},{"location":"API/Alerts/#get_alert","text":"Get details of an alert Route: /api/v0/alerts/:id id is the alert id, you can obtain a list of alert ids from list_alerts . Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/alerts/1 Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 7 , \"alerts\" : [ { \"hostname\" : \"localhost\" , \"id\" : \"1\" , \"device_id\" : \"1\" , \"rule_id\" : \"1\" , \"state\" : \"1\" , \"alerted\" : \"1\" , \"open\" : \"1\" , \"timestamp\" : \"2014-12-11 14:40:02\" }] }","title":"get_alert"},{"location":"API/Alerts/#ack_alert","text":"Acknowledge an alert Route: /api/v0/alerts/:id id is the alert id, you can obtain a list of alert ids from list_alerts . note is the note to add to the alert until_clear is a boolean and if set to false, the alert will re-alert if it worsens/betters. Input: - Example: curl -X PUT -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/alerts/1 Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"message\" : \"Alert has been acknowledged\" }","title":"ack_alert"},{"location":"API/Alerts/#unmute_alert","text":"Unmute an alert Route: /api/v0/alerts/unmute/:id id is the alert id, you can obtain a list of alert ids from list_alerts . Input: - Example: curl -X PUT -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/alerts/unmute/1 Output: { \"status\" : \"ok\" , \"message\" : \"Alert has been unmuted\" }","title":"unmute_alert"},{"location":"API/Alerts/#list_alerts","text":"List all alerts Route: /api/v0/alerts Input: state: Filter the alerts by state, 0 = ok, 1 = alert, 2 = ack severity: Filter the alerts by severity. Valid values are ok , warning , critical . alert_rule: Filter alerts by alert rule ID. order: How to order the output, default is by timestamp (descending). Can be appended by DESC or ASC to change the order. Examples: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/alerts?state=1 curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/alerts?severity=critical curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/alerts?order=timestamp%20ASC curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/alerts?alert_rule=49 Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 1 , \"alerts\" : [ { \"id\" : \"1\" , \"device_id\" : \"1\" , \"rule_id\" : \"1\" , \"state\" : \"1\" , \"alerted\" : \"1\" , \"open\" : \"1\" , \"timestamp\" : \"2014-12-11 14:40:02\" }] }","title":"list_alerts"},{"location":"API/Alerts/#rules","text":"","title":"Rules"},{"location":"API/Alerts/#get_alert_rule","text":"Get the alert rule details. Route: /api/v0/rules/:id id is the rule id. Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/rules/1 Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 1 , \"rules\" : [ { \"id\" : \"1\" , \"device_id\" : \"1\" , \"rule\" : \"%devices.os != \\\"Juniper\\\"\" , \"severity\" : \"warning\" , \"extra\" : \"{\\\"mute\\\":true,\\\"count\\\":\\\"15\\\",\\\"delay\\\":null,\\\"invert\\\":false}\" , \"disabled\" : \"0\" , \"name\" : \"A test rule\" } ] }","title":"get_alert_rule"},{"location":"API/Alerts/#delete_rule","text":"Delete an alert rule by id Route: /api/v0/rules/:id id is the rule id. Input: - Example: curl -X DELETE -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/rules/1 Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"message\" : \"Alert rule has been removed\" }","title":"delete_rule"},{"location":"API/Alerts/#list_alert_rules","text":"List the alert rules. Route: /api/v0/rules - Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/rules Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 1 , \"rules\" : [ { \"id\" : \"1\" , \"device_id\" : \"-1\" , \"rule\" : \"%devices.os != \\\"Juniper\\\"\" , \"severity\" : \"critical\" , \"extra\" : \"{\\\"mute\\\":false,\\\"count\\\":\\\"15\\\",\\\"delay\\\":\\\"300\\\",\\\"invert\\\":false}\" , \"disabled\" : \"0\" , \"name\" : \"A test rule\" }] }","title":"list_alert_rules"},{"location":"API/Alerts/#add_rule","text":"Add a new alert rule. Route: /api/v0/rules - Input (JSON): devices: This is either an array of device ids or -1 for a global rule builder: The rule which should be in the format entity.condition value (i.e devices.status != 0 for devices marked as down). It must be json encoded in the format rules are currently stored. severity: The severity level the alert will be raised against, Ok, Warning, Critical. disabled: Whether the rule will be disabled or not, 0 = enabled, 1 = disabled count: This is how many polling runs before an alert will trigger and the frequency. delay: Delay is when to start alerting and how frequently. The value is stored in seconds but you can specify minutes, hours or days by doing 5 m, 5 h, 5 d for each one. interval: How often to re-issue notifications while this alert is active,0 means notify once.The value is stored in seconds but you can specify minutes, hours or days by doing 5 m, 5 h, 5 d for each one. mute: If mute is enabled then an alert will never be sent but will show up in the Web UI (true or false). invert: This would invert the rules check. name: This is the name of the rule and is mandatory. Example: curl -X POST -d '{\"devices\":[1,2,3], \"name\": \"testrule\", \"builder\":{\"condition\":\"AND\",\"rules\":[{\"id\":\"devices.hostname\",\"field\":\"devices.hostname\",\"type\":\"string\",\"input\":\"text\",\"operator\":\"equal\",\"value\":\"localhost\"}],\"valid\":true},\"severity\": \"critical\",\"count\":15,\"delay\":\"5 m\",\"interval\":\"5 m\",\"mute\":false}' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/rules Output: { \"status\" : \"ok\" }","title":"add_rule"},{"location":"API/Alerts/#edit_rule","text":"Edit an existing alert rule Route: /api/v0/rules - Input (JSON): rule_id: You must specify the rule_id to edit an existing rule, if this is absent then a new rule will be created. devices: This is either an array of device ids or -1 for a global rule builder: The rule which should be in the format entity.condition value (i.e devices.status != 0 for devices marked as down). It must be json encoded in the format rules are currently stored. severity: The severity level the alert will be raised against, Ok, Warning, Critical. disabled: Whether the rule will be disabled or not, 0 = enabled, 1 = disabled count: This is how many polling runs before an alert will trigger and the frequency. delay: Delay is when to start alerting and how frequently. The value is stored in seconds but you can specify minutes, hours or days by doing 5 m, 5 h, 5 d for each one. interval: How often to re-issue notifications while this alert is active,0 means notify once.The value is stored in seconds but you can specify minutes, hours or days by doing 5 m, 5 h, 5 d for each one. mute: If mute is enabled then an alert will never be sent but will show up in the Web UI (true or false). invert: This would invert the rules check. name: This is the name of the rule and is mandatory. Example: curl -X PUT -d '{\"rule_id\":1,\"device_id\":\"-1\", \"name\": \"testrule\", \"builder\":\"{\"condition\":\"AND\",\"rules\":[{\"id\":\"devices.hostname\",\"field\":\"devices.hostname\",\"type\":\"string\",\"input\":\"text\",\"operator\":\"equal\",\"value\":\"localhost\"}],\"valid\":true}\",\"severity\": \"critical\",\"count\":15,\"delay\":\"5 m\",\"interval\":\"5 m\",\"mute\":false}' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/rules Output: { \"status\" : \"ok\" }","title":"edit_rule"},{"location":"API/Bills/","text":"list_bills Retrieve the list of bills currently in the system. Route: /api/v0/bills /api/v0/bills?period=previous Input: Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills?period=previous Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 1 , \"bills\" : [ { \"bill_id\" : \"1\" , \"bill_name\" : \"Router bills\" , \"bill_type\" : \"cdr\" , \"bill_cdr\" : \"10000000\" , \"bill_day\" : \"1\" , \"bill_quota\" : \"0\" , \"rate_95th_in\" : \"0\" , \"rate_95th_out\" : \"0\" , \"rate_95th\" : \"0\" , \"dir_95th\" : \"in\" , \"total_data\" : \"0\" , \"total_data_in\" : \"0\" , \"total_data_out\" : \"0\" , \"rate_average_in\" : \"0\" , \"rate_average_out\" : \"0\" , \"rate_average\" : \"0\" , \"bill_last_calc\" : \"2015-07-02 17:01:26\" , \"bill_custid\" : \"Router\" , \"bill_ref\" : \"Router\" , \"bill_notes\" : \"Bill me\" , \"bill_autoadded\" : \"0\" , \"ports_total\" : \"0\" , \"allowed\" : \"10Mbps\" , \"used\" : \"0bps\" , \"percent\" : 0 , \"overuse\" : \"-\" , \"ports\" : [ { \"device_id\" : \"168\" , \"port_id\" : \"35146\" , \"ifName\" : \"eth0\" } ] } ] } get_bill Retrieve a specific bill Route: /api/v0/bills/:id /api/v0/bills/:id?period=previous /api/v0/bills?ref=:ref /api/v0/bills?ref=:ref&period=previous /api/v0/bills?custid=:custid /api/v0/bills?custid=:custid&period=previous id is the specific bill id ref is the billing reference custid is the customer reference period=previous indicates you would like the data for the last complete period rather than the current period Input: Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1 curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills?ref=:customerref curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills?custid=:custid Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 1 , \"bills\" : [ { \"bill_id\" : \"1\" , \"bill_name\" : \"Router bills\" , \"bill_type\" : \"cdr\" , \"bill_cdr\" : \"10000000\" , \"bill_day\" : \"1\" , \"bill_quota\" : \"0\" , \"rate_95th_in\" : \"0\" , \"rate_95th_out\" : \"0\" , \"rate_95th\" : \"0\" , \"dir_95th\" : \"in\" , \"total_data\" : \"0\" , \"total_data_in\" : \"0\" , \"total_data_out\" : \"0\" , \"rate_average_in\" : \"0\" , \"rate_average_out\" : \"0\" , \"rate_average\" : \"0\" , \"bill_last_calc\" : \"2015-07-02 17:01:26\" , \"bill_custid\" : \"Router\" , \"bill_ref\" : \"Router\" , \"bill_notes\" : \"Bill me\" , \"bill_autoadded\" : \"0\" , \"ports_total\" : \"0\" , \"allowed\" : \"10Mbps\" , \"used\" : \"0bps\" , \"percent\" : 0 , \"overuse\" : \"-\" , \"ports\" : [ { \"device_id\" : \"168\" , \"port_id\" : \"35146\" , \"ifName\" : \"eth0\" } ] } ] } get_bill_graph Retrieve a graph image associated with a bill. NB: The graphs returned from this will always be png as they do not come from rrdtool, even if you have SVG set. Route: `/api/v0/bills/:id/graphs/:graph_type Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1/graphs/bits curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1/graphs/bits?from=1517443200 curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1/graphs/bits?from=1517443200&to=1517788800 curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1/graphs/monthly Output: Graph Image get_bill_graphdata Retrieve the data used to draw a graph so it can be rendered in an external system Route: /api/v0/bills/:id/graphdata/:graph_type Input: The reducefactor parameter is used to reduce the number of data points. Billing data has 5 minute granularity, so requesting a graph for a long time period will result in many data points. If not supplied, it will be automatically calculated. A reducefactor of 1 means return all items, 2 means half of the items etc. Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1/graphdata/bits curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1/graphdata/bits?from=1517443200 curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1/graphdata/bits?from=1517443200&to=1517788800 curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1/graphdata/bits?from=1517443200&to=1517788800&reducefactor=5 Output: { \"status\": \"ok\", \"graph_data\": { \"from\": \"1517443200\", \"to\": 1518196161, \"last\": \"1518195901\", \"in_data\": [ 103190525.20999999, 104949255.81 ], \"out_data\": [ 1102059.1299999999, 1079216.46 ], \"tot_data\": [ 104292584.33999999, 106028472.27 ], \"ticks\": [ \"1517750401\", \"1517756101\" ], \"rate_95th\": \"251880417\", \"rate_average\": \"146575554\", \"bill_type\": \"cdr\", \"max_in\": 9888289942, \"max_out\": 75848756, \"ave_in\": 18029660.242105871, \"ave_out\": 196447.38060137472, \"last_in\": 3790227.9500000002, \"last_out\": 122731.63333333333 } } get_bill_history Retrieve the history of specific bill Route: /api/v0/bills/:id/history Input: Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1/history Output: { \"status\" : \"ok\" , \"bill_history\" : [ { \"bill_hist_id\" : \"1\" , \"bill_id\" : \"1\" , \"updated\" : \"2018-02-06 17:01:01\" , \"bill_datefrom\" : \"2018-02-01 00:00:00\" , \"bill_dateto\" : \"2018-02-28 23:59:59\" , \"bill_type\" : \"CDR\" , \"bill_allowed\" : \"100000000\" , \"bill_used\" : \"229963765\" , \"bill_overuse\" : \"129963765\" , \"bill_percent\" : \"229.96\" , \"rate_95th_in\" : \"229963765\" , \"rate_95th_out\" : \"1891344\" , \"rate_95th\" : \"229963765\" , \"dir_95th\" : \"in\" , \"rate_average\" : \"136527101\" , \"rate_average_in\" : \"135123359\" , \"rate_average_out\" : \"1403743\" , \"traf_in\" : \"3235123452544\" , \"traf_out\" : \"33608406566\" , \"traf_total\" : \"3268731859110\" , \"pdf\" : null } ], \"count\" : 1 , } get_bill_history_graph Retrieve a graph of a previous period of a bill NB: The graphs returned from this will always be png as they do not come from rrdtool, even if you have SVG set. Route: /api/v0/bills/:id/history/:bill_hist_id/graphs/:graph_type Input: Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1/history/1/graphs/bits curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1/history/1/graphs/hour curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1/history/1/graphs/day Output: (image) get_bill_history_graphdata Retrieve the data for a graph of a previous period of a bill, to be rendered in an external system Route: /api/v0/bills/:id/history/:bill_hist_id/graphdata/:graph_type Input: Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1/history/1/graphdata/bits curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1/history/1/graphdata/hour curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1/history/1/graphdata/day Output: delete_bill Delete a specific bill and all dependent data Route: /api/v0/bills/:id id is the specific bill id Input: Example: curl -X DELETE -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1 Output: { \"status\" : \"ok\" , \"message\" : \"Bill has been removed\" } create_edit_bill Creates a new bill or updates an existing one Route: /api/v0/bills Method: POST If you send an existing bill_id the call replaces all values it receives. For example if you send 2 ports it will delete the existing ports and add the the 2 new ports. So to add ports you have to get the current ports first and add them to your update call. Input: Example (create): curl -X POST -d '{\"ports\":[ 1021 ],\"bill_name\":\"NEWBILL\",\"bill_day\":\"1\",\"bill_type\":\"quota\",\"bill_quota\":\"2000000000000\",\"bill_custid\":\"1337\",\"bill_ref\":\"reference1\",\"bill_notes\":\"mynote\"}' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills Example (set): curl -X POST -d '{\"bill_id\":\"32\",\"ports\":[ 1021 ],\"bill_name\":\"NEWNAME\",\"bill_quota\":\"1000000000000\"}' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills Output: { \"status\" : \"ok\" , \"bill_id\" : 32 }","title":"Bills"},{"location":"API/Bills/#list_bills","text":"Retrieve the list of bills currently in the system. Route: /api/v0/bills /api/v0/bills?period=previous Input: Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills?period=previous Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 1 , \"bills\" : [ { \"bill_id\" : \"1\" , \"bill_name\" : \"Router bills\" , \"bill_type\" : \"cdr\" , \"bill_cdr\" : \"10000000\" , \"bill_day\" : \"1\" , \"bill_quota\" : \"0\" , \"rate_95th_in\" : \"0\" , \"rate_95th_out\" : \"0\" , \"rate_95th\" : \"0\" , \"dir_95th\" : \"in\" , \"total_data\" : \"0\" , \"total_data_in\" : \"0\" , \"total_data_out\" : \"0\" , \"rate_average_in\" : \"0\" , \"rate_average_out\" : \"0\" , \"rate_average\" : \"0\" , \"bill_last_calc\" : \"2015-07-02 17:01:26\" , \"bill_custid\" : \"Router\" , \"bill_ref\" : \"Router\" , \"bill_notes\" : \"Bill me\" , \"bill_autoadded\" : \"0\" , \"ports_total\" : \"0\" , \"allowed\" : \"10Mbps\" , \"used\" : \"0bps\" , \"percent\" : 0 , \"overuse\" : \"-\" , \"ports\" : [ { \"device_id\" : \"168\" , \"port_id\" : \"35146\" , \"ifName\" : \"eth0\" } ] } ] }","title":"list_bills"},{"location":"API/Bills/#get_bill","text":"Retrieve a specific bill Route: /api/v0/bills/:id /api/v0/bills/:id?period=previous /api/v0/bills?ref=:ref /api/v0/bills?ref=:ref&period=previous /api/v0/bills?custid=:custid /api/v0/bills?custid=:custid&period=previous id is the specific bill id ref is the billing reference custid is the customer reference period=previous indicates you would like the data for the last complete period rather than the current period Input: Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1 curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills?ref=:customerref curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills?custid=:custid Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 1 , \"bills\" : [ { \"bill_id\" : \"1\" , \"bill_name\" : \"Router bills\" , \"bill_type\" : \"cdr\" , \"bill_cdr\" : \"10000000\" , \"bill_day\" : \"1\" , \"bill_quota\" : \"0\" , \"rate_95th_in\" : \"0\" , \"rate_95th_out\" : \"0\" , \"rate_95th\" : \"0\" , \"dir_95th\" : \"in\" , \"total_data\" : \"0\" , \"total_data_in\" : \"0\" , \"total_data_out\" : \"0\" , \"rate_average_in\" : \"0\" , \"rate_average_out\" : \"0\" , \"rate_average\" : \"0\" , \"bill_last_calc\" : \"2015-07-02 17:01:26\" , \"bill_custid\" : \"Router\" , \"bill_ref\" : \"Router\" , \"bill_notes\" : \"Bill me\" , \"bill_autoadded\" : \"0\" , \"ports_total\" : \"0\" , \"allowed\" : \"10Mbps\" , \"used\" : \"0bps\" , \"percent\" : 0 , \"overuse\" : \"-\" , \"ports\" : [ { \"device_id\" : \"168\" , \"port_id\" : \"35146\" , \"ifName\" : \"eth0\" } ] } ] }","title":"get_bill"},{"location":"API/Bills/#get_bill_graph","text":"Retrieve a graph image associated with a bill. NB: The graphs returned from this will always be png as they do not come from rrdtool, even if you have SVG set. Route: `/api/v0/bills/:id/graphs/:graph_type Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1/graphs/bits curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1/graphs/bits?from=1517443200 curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1/graphs/bits?from=1517443200&to=1517788800 curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1/graphs/monthly Output: Graph Image","title":"get_bill_graph"},{"location":"API/Bills/#get_bill_graphdata","text":"Retrieve the data used to draw a graph so it can be rendered in an external system Route: /api/v0/bills/:id/graphdata/:graph_type Input: The reducefactor parameter is used to reduce the number of data points. Billing data has 5 minute granularity, so requesting a graph for a long time period will result in many data points. If not supplied, it will be automatically calculated. A reducefactor of 1 means return all items, 2 means half of the items etc. Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1/graphdata/bits curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1/graphdata/bits?from=1517443200 curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1/graphdata/bits?from=1517443200&to=1517788800 curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1/graphdata/bits?from=1517443200&to=1517788800&reducefactor=5 Output: { \"status\": \"ok\", \"graph_data\": { \"from\": \"1517443200\", \"to\": 1518196161, \"last\": \"1518195901\", \"in_data\": [ 103190525.20999999, 104949255.81 ], \"out_data\": [ 1102059.1299999999, 1079216.46 ], \"tot_data\": [ 104292584.33999999, 106028472.27 ], \"ticks\": [ \"1517750401\", \"1517756101\" ], \"rate_95th\": \"251880417\", \"rate_average\": \"146575554\", \"bill_type\": \"cdr\", \"max_in\": 9888289942, \"max_out\": 75848756, \"ave_in\": 18029660.242105871, \"ave_out\": 196447.38060137472, \"last_in\": 3790227.9500000002, \"last_out\": 122731.63333333333 } }","title":"get_bill_graphdata"},{"location":"API/Bills/#get_bill_history","text":"Retrieve the history of specific bill Route: /api/v0/bills/:id/history Input: Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1/history Output: { \"status\" : \"ok\" , \"bill_history\" : [ { \"bill_hist_id\" : \"1\" , \"bill_id\" : \"1\" , \"updated\" : \"2018-02-06 17:01:01\" , \"bill_datefrom\" : \"2018-02-01 00:00:00\" , \"bill_dateto\" : \"2018-02-28 23:59:59\" , \"bill_type\" : \"CDR\" , \"bill_allowed\" : \"100000000\" , \"bill_used\" : \"229963765\" , \"bill_overuse\" : \"129963765\" , \"bill_percent\" : \"229.96\" , \"rate_95th_in\" : \"229963765\" , \"rate_95th_out\" : \"1891344\" , \"rate_95th\" : \"229963765\" , \"dir_95th\" : \"in\" , \"rate_average\" : \"136527101\" , \"rate_average_in\" : \"135123359\" , \"rate_average_out\" : \"1403743\" , \"traf_in\" : \"3235123452544\" , \"traf_out\" : \"33608406566\" , \"traf_total\" : \"3268731859110\" , \"pdf\" : null } ], \"count\" : 1 , }","title":"get_bill_history"},{"location":"API/Bills/#get_bill_history_graph","text":"Retrieve a graph of a previous period of a bill NB: The graphs returned from this will always be png as they do not come from rrdtool, even if you have SVG set. Route: /api/v0/bills/:id/history/:bill_hist_id/graphs/:graph_type Input: Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1/history/1/graphs/bits curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1/history/1/graphs/hour curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1/history/1/graphs/day Output: (image)","title":"get_bill_history_graph"},{"location":"API/Bills/#get_bill_history_graphdata","text":"Retrieve the data for a graph of a previous period of a bill, to be rendered in an external system Route: /api/v0/bills/:id/history/:bill_hist_id/graphdata/:graph_type Input: Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1/history/1/graphdata/bits curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1/history/1/graphdata/hour curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1/history/1/graphdata/day Output:","title":"get_bill_history_graphdata"},{"location":"API/Bills/#delete_bill","text":"Delete a specific bill and all dependent data Route: /api/v0/bills/:id id is the specific bill id Input: Example: curl -X DELETE -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1 Output: { \"status\" : \"ok\" , \"message\" : \"Bill has been removed\" }","title":"delete_bill"},{"location":"API/Bills/#create_edit_bill","text":"Creates a new bill or updates an existing one Route: /api/v0/bills Method: POST If you send an existing bill_id the call replaces all values it receives. For example if you send 2 ports it will delete the existing ports and add the the 2 new ports. So to add ports you have to get the current ports first and add them to your update call. Input: Example (create): curl -X POST -d '{\"ports\":[ 1021 ],\"bill_name\":\"NEWBILL\",\"bill_day\":\"1\",\"bill_type\":\"quota\",\"bill_quota\":\"2000000000000\",\"bill_custid\":\"1337\",\"bill_ref\":\"reference1\",\"bill_notes\":\"mynote\"}' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills Example (set): curl -X POST -d '{\"bill_id\":\"32\",\"ports\":[ 1021 ],\"bill_name\":\"NEWNAME\",\"bill_quota\":\"1000000000000\"}' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills Output: { \"status\" : \"ok\" , \"bill_id\" : 32 }","title":"create_edit_bill"},{"location":"API/DeviceGroups/","text":"get_devicegroups List all device groups. Route: /api/v0/devicegroups Input (JSON): - Examples: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devicegroups Output: [ { \"status\" : \"ok\" , \"message\" : \"Found 1 device groups\" , \"count\" : 1 , \"groups\" : [ { \"id\" : \"1\" , \"name\" : \"Testing\" , \"desc\" : \"Testing\" , \"pattern\" : \"%devices.status = \\\"1\\\" &&\" } ] } ] add_devicegroup Add a new device group. Upon success, the ID of the new device group is returned and the HTTP response code is 201 . Route: /api/v0/devicegroups Input (JSON): name : required - The name of the device group type : required - should be static or dynamic . Setting this to static requires that the devices input be provided desc : optional - Description of the device group rules : required if type == dynamic - A set of rules to determine which devices should be included in this device group devices : required if type == static - A list of devices that should be included in this group. This is a static list of devices Examples: Dynamic Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' \\ -d '{\"name\": \"New Device Group\", \\ \"desc\": \"A very fancy dynamic group\", \\ \"type\": \"dynamic\", \"rules\": \"{\\\"condition\\\":\\\"AND\\\",\\\"rules\\\":[{\\\"id\\\":\\\"access_points.name\\\",\\\"field\\\":\\\"access_points.name\\\",\\\"type\\\":\\\"string\\\",\\\"input\\\":\\\"text\\\",\\\"operator\\\":\\\"equal\\\",\\\"value\\\":\\\"accesspoint1\\\"}],\\\"valid\\\":true}\"}' \\ https://librenms.org/api/v0/devicegroups Output: { \"status\" : \"ok\" , \"id\" : 86 , \"message\" : \"Device group New Device Group created\" } Static Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' \\ -X POST \\ -d '{\"name\":\"New Device Group\",\"type\":\"static\",\"devices\":[261,271]}' \\ https://librenms.org/api/v0/devicegroups Output: { \"status\" : \"ok\" , \"id\" : 86 , \"message\" : \"Device group New Device Group created\" } get_devices_by_group List all devices matching the group provided. Route: /api/v0/devicegroups/:name name Is the name of the device group which can be obtained using get_devicegroups . Please ensure that the name is urlencoded if it needs to be (i.e Linux Servers would need to be urlencoded. Input (JSON): full: set to any value to return all data for the devices in a given group Examples: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devicegroups/LinuxServers Output: [ { \"status\" : \"ok\" , \"message\" : \"Found 3 in group LinuxServers\" , \"count\" : 3 , \"devices\" : [ { \"device_id\" : \"15\" }, { \"device_id\" : \"18\" }, { \"device_id\" : \"20\" } ] } ]","title":"DeviceGroups"},{"location":"API/DeviceGroups/#get_devicegroups","text":"List all device groups. Route: /api/v0/devicegroups Input (JSON): - Examples: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devicegroups Output: [ { \"status\" : \"ok\" , \"message\" : \"Found 1 device groups\" , \"count\" : 1 , \"groups\" : [ { \"id\" : \"1\" , \"name\" : \"Testing\" , \"desc\" : \"Testing\" , \"pattern\" : \"%devices.status = \\\"1\\\" &&\" } ] } ]","title":"get_devicegroups"},{"location":"API/DeviceGroups/#add_devicegroup","text":"Add a new device group. Upon success, the ID of the new device group is returned and the HTTP response code is 201 . Route: /api/v0/devicegroups Input (JSON): name : required - The name of the device group type : required - should be static or dynamic . Setting this to static requires that the devices input be provided desc : optional - Description of the device group rules : required if type == dynamic - A set of rules to determine which devices should be included in this device group devices : required if type == static - A list of devices that should be included in this group. This is a static list of devices Examples: Dynamic Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' \\ -d '{\"name\": \"New Device Group\", \\ \"desc\": \"A very fancy dynamic group\", \\ \"type\": \"dynamic\", \"rules\": \"{\\\"condition\\\":\\\"AND\\\",\\\"rules\\\":[{\\\"id\\\":\\\"access_points.name\\\",\\\"field\\\":\\\"access_points.name\\\",\\\"type\\\":\\\"string\\\",\\\"input\\\":\\\"text\\\",\\\"operator\\\":\\\"equal\\\",\\\"value\\\":\\\"accesspoint1\\\"}],\\\"valid\\\":true}\"}' \\ https://librenms.org/api/v0/devicegroups Output: { \"status\" : \"ok\" , \"id\" : 86 , \"message\" : \"Device group New Device Group created\" } Static Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' \\ -X POST \\ -d '{\"name\":\"New Device Group\",\"type\":\"static\",\"devices\":[261,271]}' \\ https://librenms.org/api/v0/devicegroups Output: { \"status\" : \"ok\" , \"id\" : 86 , \"message\" : \"Device group New Device Group created\" }","title":"add_devicegroup"},{"location":"API/DeviceGroups/#get_devices_by_group","text":"List all devices matching the group provided. Route: /api/v0/devicegroups/:name name Is the name of the device group which can be obtained using get_devicegroups . Please ensure that the name is urlencoded if it needs to be (i.e Linux Servers would need to be urlencoded. Input (JSON): full: set to any value to return all data for the devices in a given group Examples: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devicegroups/LinuxServers Output: [ { \"status\" : \"ok\" , \"message\" : \"Found 3 in group LinuxServers\" , \"count\" : 3 , \"devices\" : [ { \"device_id\" : \"15\" }, { \"device_id\" : \"18\" }, { \"device_id\" : \"20\" } ] } ]","title":"get_devices_by_group"},{"location":"API/Devices/","text":"del_device Delete a given device. Route: /api/v0/devices/:hostname hostname can be either the device hostname or id Input: - Example: curl -X DELETE -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost Output: { \"status\" : \"ok\" , \"message\" : \"Removed device localhost\" , \"devices\" : [ { \"device_id\" : \"1\" , \"hostname\" : \"localhost\" , ... \"serial\" : null , \"icon\" : null } ] } get_device Get details of a given device. Route: /api/v0/devices/:hostname hostname can be either the device hostname or id Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost Output: { \"status\" : \"ok\" , \"devices\" : [ { \"device_id\" : \"1\" , \"hostname\" : \"localhost\" , ... \"serial\" : null , \"icon\" : null } ] } discover_device Trigger a discovery of given device. Route: /api/v0/devices/:hostname/discover hostname can be either the device hostname or id Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/discover Output: { \"status\" : \"ok\" , \"result\" : { \"status\" : 0 , \"message\" : \"Device will be rediscovered\" }, \"count\" : 2 } availability Get calculated availabilites of given device. Route: /api/v0/devices/:hostname/availability hostname can be either the device hostname or id Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/availability Output: { \"status\" : \"ok\" , \"availability\" : [ { \"duration\" : 86400 , \"availability_perc\" : \"100.000000\" }, { \"duration\" : 604800 , \"availability_perc\" : \"100.000000\" }, { \"duration\" : 2592000 , \"availability_perc\" : \"99.946000\" }, { \"duration\" : 31536000 , \"availability_perc\" : \"99.994000\" } ], \"count\" : 4 } outages Get detected outages of given device. Route: /api/v0/devices/:hostname/outages hostname can be either the device hostname or id Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/outages Output: { \"status\" : \"ok\" , \"outages\" : [ { \"going_down\" : 1593194031 , \"up_again\" : 1593194388 }, { \"going_down\" : 1593946507 , \"up_again\" : 1593946863 }, { \"going_down\" : 1594628616 , \"up_again\" : 1594628968 }, { \"going_down\" : 1594628974 , \"up_again\" : 1594629339 }, { \"going_down\" : 1594638668 , \"up_again\" : 1594638992 } ], \"count\" : 5 } get_graphs Get a list of available graphs for a device, this does not include ports. Route: /api/v0/devices/:hostname/graphs hostname can be either the device hostname or id Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/graphs Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 3 , \"graphs\" : [ { \"desc\" : \"Poller Time\" , \"name\" : \"device_poller_perf\" }, { \"desc\" : \"Ping Response\" , \"name\" : \"device_ping_perf\" }, { \"desc\" : \"System Uptime\" , \"name\" : \"uptime\" } ] } list_available_health_graphs This function allows to do three things: Get a list of overall health graphs available. Get a list of health graphs based on provided class. Get the health sensors information based on ID. Route: /api/v0/devices/:hostname/health(/:type)(/:sensor_id) hostname can be either the device hostname or id type (optional) is health type / sensor class sensor_id (optional) is the sensor id to retrieve specific information. Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/health Output: { \"status\": \"ok\", \"message\": \"\", \"count\": 2, \"graphs\": [ { \"desc\": \"Airflow\", \"name\": \"device_airflow\" }, { \"desc\": \"Voltage\", \"name\": \"device_voltage\" } ] } Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/health/device_voltage Output: { \"status\": \"ok\", \"message\": \"\", \"count\": 2, \"graphs\": [ { \"sensor_id\": \"1\", \"desc\": \"Input Feed A\" }, { \"sensor_id\": \"2\", \"desc\": \"Output Feed\" } ] } Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/health/device_voltage/1 Output: { \"status\": \"ok\", \"message\": \"\", \"count\": 1, \"graphs\": [ { \"sensor_id\": \"1\", \"sensor_deleted\": \"0\", \"sensor_class\": \"voltage\", \"device_id\": \"1\", \"poller_type\": \"snmp\", \"sensor_oid\": \".1.3.6.1.4.1.318.1.1.27.1.1.0\", \"sensor_index\": \"1\", \"sensor_type\": \"apc\", \"sensor_descr\": \"Input\", \"sensor_divisor\": \"1\", \"sensor_multiplier\": \"1\", \"sensor_current\": \"1\", \"sensor_limit\": \"1.15\", \"sensor_limit_warn\": null, \"sensor_limit_low\": \"0.85\", \"sensor_limit_low_warn\": null, \"sensor_alert\": \"1\", \"sensor_custom\": \"No\", \"entPhysicalIndex\": null, \"entPhysicalIndex_measured\": null, \"lastupdate\": \"2017-01-13 13:50:26\", \"sensor_prev\": \"1\" } ] } list_available_wireless_graphs This function allows to do three things: Get a list of overall wireless graphs available. Get a list of wireless graphs based on provided class. Get the wireless sensors information based on ID. Route: /api/v0/devices/:hostname/wireless(/:type)(/:sensor_id) hostname can be either the device hostname or id type (optional) is wireless type / wireless class sensor_id (optional) is the sensor id to retrieve specific information. Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/wireless Output: { \"status\": \"ok\", \"graphs\": [ { \"desc\": \"Ccq\", \"name\": \"device_wireless_ccq\" }, { \"desc\": \"Clients\", \"name\": \"device_wireless_clients\" } ], \"count\": 2 } Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/wireless/device_wireless_ccq Output: { \"status\": \"ok\", \"graphs\": [ { \"sensor_id\": \"791\", \"desc\": \"SSID: bast (ng)\" }, { \"sensor_id\": \"792\", \"desc\": \"SSID: bast (na)\" } ], \"count\": 2 } Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/health/device_wireless_ccq/1 Output: { \"status\": \"ok\", \"graphs\": [ { \"sensor_id\": \"791\", \"sensor_deleted\": \"0\", \"sensor_class\": \"ccq\", \"device_id\": \"381\", \"sensor_index\": \"0\", \"sensor_type\": \"unifi\", \"sensor_descr\": \"SSID: bast (ng)\", \"sensor_divisor\": \"10\", \"sensor_multiplier\": \"1\", \"sensor_aggregator\": \"sum\", \"sensor_current\": \"100\", \"sensor_prev\": \"100\", \"sensor_limit\": null, \"sensor_limit_warn\": null, \"sensor_limit_low\": null, \"sensor_limit_low_warn\": null, \"sensor_alert\": \"1\", \"sensor_custom\": \"No\", \"entPhysicalIndex\": null, \"entPhysicalIndex_measured\": null, \"lastupdate\": \"2017-12-06 21:26:29\", \"sensor_oids\": \"[\\\".1.3.6.1.4.1.41112.1.6.1.2.1.3.0\\\"]\", \"access_point_id\": null } ], \"count\": 1 } get_health_graph Get a particular health class graph for a device, if you provide a sensor_id as well then a single sensor graph will be provided. If no sensor_id value is provided then you will be sent a stacked sensor graph. Route: /api/v0/devices/:hostname/graphs/health/:type(/:sensor_id) hostname can be either the device hostname or id type is the name of the health graph as returned by list_available_health_graphs sensor_id (optional) restricts the graph to return a particular health sensor graph. Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/graphs/health/device_voltage Output: Output is a stacked graph for the health type provided. Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/graphs/health/device_voltage/1 Output: Output is the graph of the particular health type sensor provided. get_wireless_graph Get a particular wireless class graph for a device, if you provide a sensor_id as well then a single sensor graph will be provided. If no sensor_id value is provided then you will be sent a stacked wireless graph. Route: /api/v0/devices/:hostname/graphs/wireless/:type(/:sensor_id) hostname can be either the device hostname or id type is the name of the wireless graph as returned by list_available_wireless_graphs sensor_id (optional) restricts the graph to return a particular wireless sensor graph. Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/graphs/wireless/device_wireless_ccq Output: Output is a stacked graph for the wireless type provided. Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/graphs/wireless/device_wireless_ccq/1 Output: Output is the graph of the particular wireless type sensor provided. get_graph_generic_by_hostname Get a specific graph for a device, this does not include ports. Route: /api/v0/devices/:hostname/:type hostname can be either the device hostname or id type is the type of graph you want, use [ get_graphs ](#function-get_graphs to see the graphs available. Defaults to device uptime. Input: from: This is the date you would like the graph to start - See http://oss.oetiker.ch/rrdtool/doc/rrdgraph.en.html for more information. to: This is the date you would like the graph to end - See http://oss.oetiker.ch/rrdtool/doc/rrdgraph.en.html for more information. width: The graph width, defaults to 1075. height: The graph height, defaults to 300. output: Set how the graph should be outputted (base64, display), defaults to display. Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/device_poller_perf Output: Output is an image. get_port_graphs Get a list of ports for a particular device. Route: /api/v0/devices/:hostname/ports hostname can be either the device hostname or id Input: columns: Comma separated list of columns you want returned. Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/ports Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 3 , \"ports\" : [ { \"ifName\" : \"lo\" }, { \"ifName\" : \"eth0\" }, { \"ifName\" : \"eth1\" } ] } get_device_fdb Get a list of FDB entries associated with a device. Route: /api/v0/devices/:hostname/fdb hostname can be either the device hostname or id Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/fdb Output: { \"status\" : \"ok\" , \"ports_fdb\" : { \"ports_fdb_id\" : 10 , \"port_id\" : 10000 , \"mac_address\" : \"1aaa2bbb3ccc\" , \"vlan_id\" : 20000 , \"device_id\" : 1 , \"created_at\" : \"2019-01-1 01:01:01\" , \"updated_at\" : \"2019-01-1 01:01:01\" } } get_device_ip_addresses Get a list of IP addresses (v4 and v6) associated with a device. Route: /api/v0/devices/:hostname/ip hostname can be either the device hostname or id Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/ip Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"addresses\" : [ { \"ipv4_address_id\" : \"290\" , \"ipv4_address\" : \"192.168.99.292\" , \"ipv4_prefixlen\" : \"30\" , \"ipv4_network_id\" : \"247\" , \"port_id\" : \"323\" , \"context_name\" : \"\" } ] } get_port_stack Get a list of port mappings for a device. This is useful for showing physical ports that are in a virtual port-channel. Route: /api/v0/devices/:hostname/port_stack hostname can be either the device hostname or id Input: valid_mappings: Filter the result by only showing valid mappings (\"0\" values not shown). Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/port_stack?valid_mappings Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 2 , \"mappings\" : [ { \"device_id\" : \"3742\" , \"port_id_high\" : \"1001000\" , \"port_id_low\" : \"51001\" , \"ifStackStatus\" : \"active\" }, { \"device_id\" : \"3742\" , \"port_id_high\" : \"1001000\" , \"port_id_low\" : \"52001\" , \"ifStackStatus\" : \"active\" } ] } get_components Get a list of components for a particular device. Route: /api/v0/devices/:hostname/components hostname can be either the device hostname or id Input: type: Filter the result by type (Equals). id: Filter the result by id (Equals). label: Filter the result by label (Contains). status: Filter the result by status (Equals). disabled: Filter the result by disabled (Equals). ignore: Filter the result by ignore (Equals). Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/components Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 3 , \"components\" : { \"2\" : { \"TestAttribute-1\" : \"Value1\" , \"TestAttribute-2\" : \"Value2\" , \"TestAttribute-3\" : \"Value3\" , \"type\" : \"TestComponent-1\" , \"label\" : \"This is a really cool blue component\" , \"status\" : \"1\" , \"ignore\" : \"0\" , \"disabled\" : \"0\" }, \"20\" : { \"TestAttribute-1\" : \"Value4\" , \"TestAttribute-2\" : \"Value5\" , \"TestAttribute-3\" : \"Value6\" , \"type\" : \"TestComponent-1\" , \"label\" : \"This is a really cool red component\" , \"status\" : \"1\" , \"ignore\" : \"0\" , \"disabled\" : \"0\" }, \"27\" : { \"TestAttribute-1\" : \"Value7\" , \"TestAttribute-2\" : \"Value8\" , \"TestAttribute-3\" : \"Value9\" , \"type\" : \"TestComponent-2\" , \"label\" : \"This is a really cool yellow widget\" , \"status\" : \"1\" , \"ignore\" : \"0\" , \"disabled\" : \"0\" } } } add_components Create a new component of a type on a particular device. Route: /api/v0/devices/:hostname/components/:type hostname can be either the device hostname or id type is the type of component to add Example: curl -X POST -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/components/APITEST Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 1 , \"components\" : { \"4459\" : { \"type\" : \"APITEST\" , \"label\" : \"\" , \"status\" : 1 , \"ignore\" : 0 , \"disabled\" : 0 , \"error\" : \"\" } } } edit_components Edit an existing component on a particular device. Route: /api/v0/devices/:hostname/components hostname can be either the device hostname or id In this example we set the label and add a new field: TestField: curl -X PUT -d '{\"4459\": {\"type\": \"APITEST\",\"label\": \"This is a test label\",\"status\": 1,\"ignore\": 0,\"disabled\": 0,\"error\": \"\",\"TestField\": \"TestData\"}}' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/components Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 1 } Just take the JSON array from add_components or edit_components, edit as you wish and submit it back to edit components. delete_components Delete an existing component on a particular device. Route: /api/v0/devices/:hostname/components/:component hostname can be either the device hostname or id component is the component ID to be deleted. Example: curl -X DELETE -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/components/4459 Output: { \"status\" : \"ok\" , \"message\" : \"\" } get_port_stats_by_port_hostname Get information about a particular port for a device. Route: /api/v0/devices/:hostname/ports/:ifname hostname can be either the device hostname or id ifname can be any of the interface names for the device which can be obtained using get_port_graphs . Please ensure that the ifname is urlencoded if it needs to be (i.e Gi0/1/0 would need to be urlencoded. Input: columns: Comma separated list of columns you want returned. Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/ports/eth0 Output: { \"status\" : \"ok\" , \"port\" : { \"port_id\" : \"2\" , \"device_id\" : \"1\" , ... \"poll_prev\" : \"1418412902\" , \"poll_period\" : \"300\" } } get_graph_by_port_hostname Get a graph of a port for a particular device. Route: /api/v0/devices/:hostname/ports/:ifname/:type hostname can be either the device hostname or id ifname can be any of the interface names for the device which can be obtained using get_port_graphs . Please ensure that the ifname is urlencoded if it needs to be (i.e Gi0/1/0 would need to be urlencoded. type is the port type you want the graph for, you can request a list of ports for a device with get_port_graphs . Input: from: This is the date you would like the graph to start - See http://oss.oetiker.ch/rrdtool/doc/rrdgraph.en.html for more information. to: This is the date you would like the graph to end - See http://oss.oetiker.ch/rrdtool/doc/rrdgraph.en.html for more information. width: The graph width, defaults to 1075. height: The graph height, defaults to 300. ifDescr: If this is set to true then we will use ifDescr to lookup the port instead of ifName. Pass the ifDescr value you want to search as you would ifName. Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/ports/eth0/port_bits Output: Output is an image. list_locations Return a list of locations. Route: /api/v0/resources/locations Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/locations Output: { \"status\" : \"ok\" , \"locations\" : [ { \"id\" : \"1\" , \"location\" : \"Example location, Example city, Example Country\" , \"lat\" : \"-18.911436\" , \"lng\" : \"47.517446\" , \"timestamp\" : \"2017-04-01 02:40:05\" }, ... ], \"count\" : 100 } list_sensors Get a list of all Sensors. Route: /api/v0/resources/sensors Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/sensors Output: { \"status\" : \"ok\" , \"sensors\" : [ { \"sensor_id\" : 218810 , \"sensor_deleted\" : 0 , \"sensor_class\" : \"dbm\" , \"device_id\" : 136 , \"poller_type\" : \"snmp\" , \"sensor_oid\" : \".1.3.6.1.4.1.2636.3.60.1.1.1.1.7.919\" , \"sensor_index\" : \"tx-919\" , \"sensor_type\" : \"junos\" , \"sensor_descr\" : \"xe-2/1/4 Tx Power\" , \"group\" : null , \"sensor_divisor\" : 100 , \"sensor_multiplier\" : 1 , \"sensor_current\" : -1.81 , \"sensor_limit\" : 2 , \"sensor_limit_warn\" : 0.5 , \"sensor_limit_low\" : -9.7 , \"sensor_limit_low_warn\" : -8.21 , \"sensor_alert\" : 1 , \"sensor_custom\" : \"No\" , \"entPhysicalIndex\" : \"919\" , \"entPhysicalIndex_measured\" : \"ports\" , \"lastupdate\" : \"2019-02-18 02:47:09\" , \"sensor_prev\" : -1.77 , \"user_func\" : null }, ... ], \"count\" : 100 } list_devices Return a list of devices. Route: /api/v0/devices Input: order: How to order the output, default is by hostname. Can be prepended by DESC or ASC to change the order. type: can be one of the following to filter or search by: all: All devices active: Only not ignored and not disabled devices ignored: Only ignored devices up: Only devices that are up down: Only devices that are down disabled: Disabled devices os: search by os type mac: search by mac address ipv4: search by IPv4 address ipv6: search by IPv6 address (compressed or uncompressed) location: search by location hostname: search by hostname query: If searching by, then this will be used as the input. Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices?order=hostname%20DESC&type=down Output: { \"status\" : \"ok\" , \"count\" : 1 , \"devices\" : [ { \"device_id\" : \"1\" , \"hostname\" : \"localhost\" , ... \"serial\" : null , \"icon\" : null } ] } Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices?type=mac&query=00000c9ff013 Output: { \"status\" : \"ok\" , \"count\" : 1 , \"devices\" : [ { \"device_id\" : \"1\" , \"hostname\" : \"localhost\" , ... \"serial\" : null , \"icon\" : null } ] } add_device Add a new device. Route: /api/v0/devices Input (JSON): hostname: device hostname overwrite_ip: alternate polling IP. Will be use instead of hostname (optional) port: SNMP port (defaults to port defined in config). transport: SNMP protocol (defaults to transport defined in config). version: SNMP version to use, v1, v2c or v3. Defaults to v2c. poller_group: This is the poller_group id used for distributed poller setup. Defaults to 0. force_add: Force the device to be added regardless of it being able to respond to snmp or icmp. For SNMP v1 or v2c community: Required for SNMP v1 or v2c. For SNMP v3 authlevel: SNMP authlevel (noAuthNoPriv, authNoPriv, authPriv). authname: SNMP Auth username authpass: SNMP Auth password authalgo: SNMP Auth algorithm (MD5, SHA) cryptopass: SNMP Crypto Password cryptoalgo: SNMP Crypto algorithm (AES, DES) For ICMP only snmp_disable: Boolean, set to true for ICMP only. os: OS short name for the device (defaults to ping). hardware: Device hardware. Example: curl -X POST -d '{\"hostname\":\"localhost.localdomain\",\"version\":\"v1\",\"community\":\"public\"}' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices Output: { \"status\" : \"ok\" , \"message\" : \"Device localhost.localdomain (57) has been added successfully\" } list_oxidized List devices for use with Oxidized. If you have group support enabled then a group will also be returned based on your config. LibreNMS will automatically map the OS to the Oxidized model name if they don't match. Route: /api/v0/oxidized(/:hostname) Input (JSON): - Examples: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/oxidized Output: [ { \"hostname\" : \"localhost\" , \"os\" : \"linux\" }, { \"hostname\" : \"otherserver\" , \"os\" : \"linux\" } ] update_device_field Update devices field in the database. Route: /api/v0/devices/:hostname hostname can be either the device hostname or id Input (JSON): field: The column name within the database (can be an array of fields) data: The data to update the column with (can be an array of data)) Examples: curl -X PATCH -d '{\"field\": \"notes\", \"data\": \"This server should be kept online\"}' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost Output: [ { \"status\" : \"ok\" , \"message\" : \"Device notes has been updated\" } ] curl -X PATCH -d '{\"field\": [\"notes\",\"purpose\"], \"data\": [\"This server should be kept online\", \"For serving web traffic\"]}' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost Output: [ { \"status\" : \"ok\" , \"message\" : \"Device fields have been updated\" } ] rename_device Rename device. Route: /api/v0/devices/:hostname/rename/:new_hostname hostname can be either the device hostname or id Input: - Examples: curl -X PATCH -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/rename/localhost2 Output: [ { \"status\" : \"ok\" , \"message\" : \"Device has been renamed\" } ] get_device_groups List the device groups that a device is matched on. Route: /api/v0/devices/:hostname/groups hostname can be either the device hostname or id Input (JSON): - Examples: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/groups Output: [ { \"status\" : \"ok\" , \"message\" : \"Found 1 device groups\" , \"count\" : 1 , \"groups\" : [ { \"id\" : \"1\" , \"name\" : \"Testing\" , \"desc\" : \"Testing\" , \"pattern\" : \"%devices.status = \\\"1\\\" &&\" } ] } ] search_oxidized search all oxidized device configs for a string. Route: api/v0/oxidized/config/search/:searchstring searchstring is the specific string you would like to search for. Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/oxidized/config/search/vlan10 Output: { \"status\" : \"ok\" , \"nodes\" : [ { \"node\" : \"asr9k.librenms.org\" , \"full_name\" : \"cisco\\/ASR9K.Librenms.org\" }, { \"node\" : \"ios.Librenms.org\" , \"full_name\" : \"cisco\\/ios.Librenms.org\" } ], \"count\" : 2 } get_oxidized_config Returns a specific device's config from oxidized. Route: api/v0/oxidized/config/:device_name device_name is the full dns name of the device used when adding the device to librenms. Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/oxidized/config/router.corp.com Output: { \"status\" : \"ok\" , \"config\" : \"DEVICE CONFIG HERE\" } add_parents_to_host Add one or more parents to a host. Route: /api/v0/devices/:device/parents Input (JSON): parent_ids: one or more parent ids or hostnames Example: curl -X POST -d '{\"parent_ids\":\"15,16,17\"}' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/1/parents Output: { \"status\" : \"ok\" , \"message\" : \"Device dependencies have been saved\" } delete_parents_from_host Deletes some or all the parents from a host. Route: /api/v0/devices/:device/parents Input (JSON): parent_ids: One or more parent ids or hostnames, if not specified deletes all parents from host. Example: curl -X DELETE -d '{\"parent_ids\":\"15,16,17\"}' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/1/parents Output: { \"status\" : \"ok\" , \"message\" : \"All device dependencies have been removed\" }","title":"Devices"},{"location":"API/Devices/#del_device","text":"Delete a given device. Route: /api/v0/devices/:hostname hostname can be either the device hostname or id Input: - Example: curl -X DELETE -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost Output: { \"status\" : \"ok\" , \"message\" : \"Removed device localhost\" , \"devices\" : [ { \"device_id\" : \"1\" , \"hostname\" : \"localhost\" , ... \"serial\" : null , \"icon\" : null } ] }","title":"del_device"},{"location":"API/Devices/#get_device","text":"Get details of a given device. Route: /api/v0/devices/:hostname hostname can be either the device hostname or id Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost Output: { \"status\" : \"ok\" , \"devices\" : [ { \"device_id\" : \"1\" , \"hostname\" : \"localhost\" , ... \"serial\" : null , \"icon\" : null } ] }","title":"get_device"},{"location":"API/Devices/#discover_device","text":"Trigger a discovery of given device. Route: /api/v0/devices/:hostname/discover hostname can be either the device hostname or id Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/discover Output: { \"status\" : \"ok\" , \"result\" : { \"status\" : 0 , \"message\" : \"Device will be rediscovered\" }, \"count\" : 2 }","title":"discover_device"},{"location":"API/Devices/#availability","text":"Get calculated availabilites of given device. Route: /api/v0/devices/:hostname/availability hostname can be either the device hostname or id Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/availability Output: { \"status\" : \"ok\" , \"availability\" : [ { \"duration\" : 86400 , \"availability_perc\" : \"100.000000\" }, { \"duration\" : 604800 , \"availability_perc\" : \"100.000000\" }, { \"duration\" : 2592000 , \"availability_perc\" : \"99.946000\" }, { \"duration\" : 31536000 , \"availability_perc\" : \"99.994000\" } ], \"count\" : 4 }","title":"availability"},{"location":"API/Devices/#outages","text":"Get detected outages of given device. Route: /api/v0/devices/:hostname/outages hostname can be either the device hostname or id Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/outages Output: { \"status\" : \"ok\" , \"outages\" : [ { \"going_down\" : 1593194031 , \"up_again\" : 1593194388 }, { \"going_down\" : 1593946507 , \"up_again\" : 1593946863 }, { \"going_down\" : 1594628616 , \"up_again\" : 1594628968 }, { \"going_down\" : 1594628974 , \"up_again\" : 1594629339 }, { \"going_down\" : 1594638668 , \"up_again\" : 1594638992 } ], \"count\" : 5 }","title":"outages"},{"location":"API/Devices/#get_graphs","text":"Get a list of available graphs for a device, this does not include ports. Route: /api/v0/devices/:hostname/graphs hostname can be either the device hostname or id Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/graphs Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 3 , \"graphs\" : [ { \"desc\" : \"Poller Time\" , \"name\" : \"device_poller_perf\" }, { \"desc\" : \"Ping Response\" , \"name\" : \"device_ping_perf\" }, { \"desc\" : \"System Uptime\" , \"name\" : \"uptime\" } ] }","title":"get_graphs"},{"location":"API/Devices/#list_available_health_graphs","text":"This function allows to do three things: Get a list of overall health graphs available. Get a list of health graphs based on provided class. Get the health sensors information based on ID. Route: /api/v0/devices/:hostname/health(/:type)(/:sensor_id) hostname can be either the device hostname or id type (optional) is health type / sensor class sensor_id (optional) is the sensor id to retrieve specific information. Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/health Output: { \"status\": \"ok\", \"message\": \"\", \"count\": 2, \"graphs\": [ { \"desc\": \"Airflow\", \"name\": \"device_airflow\" }, { \"desc\": \"Voltage\", \"name\": \"device_voltage\" } ] } Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/health/device_voltage Output: { \"status\": \"ok\", \"message\": \"\", \"count\": 2, \"graphs\": [ { \"sensor_id\": \"1\", \"desc\": \"Input Feed A\" }, { \"sensor_id\": \"2\", \"desc\": \"Output Feed\" } ] } Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/health/device_voltage/1 Output: { \"status\": \"ok\", \"message\": \"\", \"count\": 1, \"graphs\": [ { \"sensor_id\": \"1\", \"sensor_deleted\": \"0\", \"sensor_class\": \"voltage\", \"device_id\": \"1\", \"poller_type\": \"snmp\", \"sensor_oid\": \".1.3.6.1.4.1.318.1.1.27.1.1.0\", \"sensor_index\": \"1\", \"sensor_type\": \"apc\", \"sensor_descr\": \"Input\", \"sensor_divisor\": \"1\", \"sensor_multiplier\": \"1\", \"sensor_current\": \"1\", \"sensor_limit\": \"1.15\", \"sensor_limit_warn\": null, \"sensor_limit_low\": \"0.85\", \"sensor_limit_low_warn\": null, \"sensor_alert\": \"1\", \"sensor_custom\": \"No\", \"entPhysicalIndex\": null, \"entPhysicalIndex_measured\": null, \"lastupdate\": \"2017-01-13 13:50:26\", \"sensor_prev\": \"1\" } ] }","title":"list_available_health_graphs"},{"location":"API/Devices/#list_available_wireless_graphs","text":"This function allows to do three things: Get a list of overall wireless graphs available. Get a list of wireless graphs based on provided class. Get the wireless sensors information based on ID. Route: /api/v0/devices/:hostname/wireless(/:type)(/:sensor_id) hostname can be either the device hostname or id type (optional) is wireless type / wireless class sensor_id (optional) is the sensor id to retrieve specific information. Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/wireless Output: { \"status\": \"ok\", \"graphs\": [ { \"desc\": \"Ccq\", \"name\": \"device_wireless_ccq\" }, { \"desc\": \"Clients\", \"name\": \"device_wireless_clients\" } ], \"count\": 2 } Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/wireless/device_wireless_ccq Output: { \"status\": \"ok\", \"graphs\": [ { \"sensor_id\": \"791\", \"desc\": \"SSID: bast (ng)\" }, { \"sensor_id\": \"792\", \"desc\": \"SSID: bast (na)\" } ], \"count\": 2 } Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/health/device_wireless_ccq/1 Output: { \"status\": \"ok\", \"graphs\": [ { \"sensor_id\": \"791\", \"sensor_deleted\": \"0\", \"sensor_class\": \"ccq\", \"device_id\": \"381\", \"sensor_index\": \"0\", \"sensor_type\": \"unifi\", \"sensor_descr\": \"SSID: bast (ng)\", \"sensor_divisor\": \"10\", \"sensor_multiplier\": \"1\", \"sensor_aggregator\": \"sum\", \"sensor_current\": \"100\", \"sensor_prev\": \"100\", \"sensor_limit\": null, \"sensor_limit_warn\": null, \"sensor_limit_low\": null, \"sensor_limit_low_warn\": null, \"sensor_alert\": \"1\", \"sensor_custom\": \"No\", \"entPhysicalIndex\": null, \"entPhysicalIndex_measured\": null, \"lastupdate\": \"2017-12-06 21:26:29\", \"sensor_oids\": \"[\\\".1.3.6.1.4.1.41112.1.6.1.2.1.3.0\\\"]\", \"access_point_id\": null } ], \"count\": 1 }","title":"list_available_wireless_graphs"},{"location":"API/Devices/#get_health_graph","text":"Get a particular health class graph for a device, if you provide a sensor_id as well then a single sensor graph will be provided. If no sensor_id value is provided then you will be sent a stacked sensor graph. Route: /api/v0/devices/:hostname/graphs/health/:type(/:sensor_id) hostname can be either the device hostname or id type is the name of the health graph as returned by list_available_health_graphs sensor_id (optional) restricts the graph to return a particular health sensor graph. Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/graphs/health/device_voltage Output: Output is a stacked graph for the health type provided. Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/graphs/health/device_voltage/1 Output: Output is the graph of the particular health type sensor provided.","title":"get_health_graph"},{"location":"API/Devices/#get_wireless_graph","text":"Get a particular wireless class graph for a device, if you provide a sensor_id as well then a single sensor graph will be provided. If no sensor_id value is provided then you will be sent a stacked wireless graph. Route: /api/v0/devices/:hostname/graphs/wireless/:type(/:sensor_id) hostname can be either the device hostname or id type is the name of the wireless graph as returned by list_available_wireless_graphs sensor_id (optional) restricts the graph to return a particular wireless sensor graph. Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/graphs/wireless/device_wireless_ccq Output: Output is a stacked graph for the wireless type provided. Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/graphs/wireless/device_wireless_ccq/1 Output: Output is the graph of the particular wireless type sensor provided.","title":"get_wireless_graph"},{"location":"API/Devices/#get_graph_generic_by_hostname","text":"Get a specific graph for a device, this does not include ports. Route: /api/v0/devices/:hostname/:type hostname can be either the device hostname or id type is the type of graph you want, use [ get_graphs ](#function-get_graphs to see the graphs available. Defaults to device uptime. Input: from: This is the date you would like the graph to start - See http://oss.oetiker.ch/rrdtool/doc/rrdgraph.en.html for more information. to: This is the date you would like the graph to end - See http://oss.oetiker.ch/rrdtool/doc/rrdgraph.en.html for more information. width: The graph width, defaults to 1075. height: The graph height, defaults to 300. output: Set how the graph should be outputted (base64, display), defaults to display. Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/device_poller_perf Output: Output is an image.","title":"get_graph_generic_by_hostname"},{"location":"API/Devices/#get_port_graphs","text":"Get a list of ports for a particular device. Route: /api/v0/devices/:hostname/ports hostname can be either the device hostname or id Input: columns: Comma separated list of columns you want returned. Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/ports Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 3 , \"ports\" : [ { \"ifName\" : \"lo\" }, { \"ifName\" : \"eth0\" }, { \"ifName\" : \"eth1\" } ] }","title":"get_port_graphs"},{"location":"API/Devices/#get_device_fdb","text":"Get a list of FDB entries associated with a device. Route: /api/v0/devices/:hostname/fdb hostname can be either the device hostname or id Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/fdb Output: { \"status\" : \"ok\" , \"ports_fdb\" : { \"ports_fdb_id\" : 10 , \"port_id\" : 10000 , \"mac_address\" : \"1aaa2bbb3ccc\" , \"vlan_id\" : 20000 , \"device_id\" : 1 , \"created_at\" : \"2019-01-1 01:01:01\" , \"updated_at\" : \"2019-01-1 01:01:01\" } }","title":"get_device_fdb"},{"location":"API/Devices/#get_device_ip_addresses","text":"Get a list of IP addresses (v4 and v6) associated with a device. Route: /api/v0/devices/:hostname/ip hostname can be either the device hostname or id Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/ip Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"addresses\" : [ { \"ipv4_address_id\" : \"290\" , \"ipv4_address\" : \"192.168.99.292\" , \"ipv4_prefixlen\" : \"30\" , \"ipv4_network_id\" : \"247\" , \"port_id\" : \"323\" , \"context_name\" : \"\" } ] }","title":"get_device_ip_addresses"},{"location":"API/Devices/#get_port_stack","text":"Get a list of port mappings for a device. This is useful for showing physical ports that are in a virtual port-channel. Route: /api/v0/devices/:hostname/port_stack hostname can be either the device hostname or id Input: valid_mappings: Filter the result by only showing valid mappings (\"0\" values not shown). Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/port_stack?valid_mappings Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 2 , \"mappings\" : [ { \"device_id\" : \"3742\" , \"port_id_high\" : \"1001000\" , \"port_id_low\" : \"51001\" , \"ifStackStatus\" : \"active\" }, { \"device_id\" : \"3742\" , \"port_id_high\" : \"1001000\" , \"port_id_low\" : \"52001\" , \"ifStackStatus\" : \"active\" } ] }","title":"get_port_stack"},{"location":"API/Devices/#get_components","text":"Get a list of components for a particular device. Route: /api/v0/devices/:hostname/components hostname can be either the device hostname or id Input: type: Filter the result by type (Equals). id: Filter the result by id (Equals). label: Filter the result by label (Contains). status: Filter the result by status (Equals). disabled: Filter the result by disabled (Equals). ignore: Filter the result by ignore (Equals). Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/components Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 3 , \"components\" : { \"2\" : { \"TestAttribute-1\" : \"Value1\" , \"TestAttribute-2\" : \"Value2\" , \"TestAttribute-3\" : \"Value3\" , \"type\" : \"TestComponent-1\" , \"label\" : \"This is a really cool blue component\" , \"status\" : \"1\" , \"ignore\" : \"0\" , \"disabled\" : \"0\" }, \"20\" : { \"TestAttribute-1\" : \"Value4\" , \"TestAttribute-2\" : \"Value5\" , \"TestAttribute-3\" : \"Value6\" , \"type\" : \"TestComponent-1\" , \"label\" : \"This is a really cool red component\" , \"status\" : \"1\" , \"ignore\" : \"0\" , \"disabled\" : \"0\" }, \"27\" : { \"TestAttribute-1\" : \"Value7\" , \"TestAttribute-2\" : \"Value8\" , \"TestAttribute-3\" : \"Value9\" , \"type\" : \"TestComponent-2\" , \"label\" : \"This is a really cool yellow widget\" , \"status\" : \"1\" , \"ignore\" : \"0\" , \"disabled\" : \"0\" } } }","title":"get_components"},{"location":"API/Devices/#add_components","text":"Create a new component of a type on a particular device. Route: /api/v0/devices/:hostname/components/:type hostname can be either the device hostname or id type is the type of component to add Example: curl -X POST -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/components/APITEST Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 1 , \"components\" : { \"4459\" : { \"type\" : \"APITEST\" , \"label\" : \"\" , \"status\" : 1 , \"ignore\" : 0 , \"disabled\" : 0 , \"error\" : \"\" } } }","title":"add_components"},{"location":"API/Devices/#edit_components","text":"Edit an existing component on a particular device. Route: /api/v0/devices/:hostname/components hostname can be either the device hostname or id In this example we set the label and add a new field: TestField: curl -X PUT -d '{\"4459\": {\"type\": \"APITEST\",\"label\": \"This is a test label\",\"status\": 1,\"ignore\": 0,\"disabled\": 0,\"error\": \"\",\"TestField\": \"TestData\"}}' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/components Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 1 } Just take the JSON array from add_components or edit_components, edit as you wish and submit it back to edit components.","title":"edit_components"},{"location":"API/Devices/#delete_components","text":"Delete an existing component on a particular device. Route: /api/v0/devices/:hostname/components/:component hostname can be either the device hostname or id component is the component ID to be deleted. Example: curl -X DELETE -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/components/4459 Output: { \"status\" : \"ok\" , \"message\" : \"\" }","title":"delete_components"},{"location":"API/Devices/#get_port_stats_by_port_hostname","text":"Get information about a particular port for a device. Route: /api/v0/devices/:hostname/ports/:ifname hostname can be either the device hostname or id ifname can be any of the interface names for the device which can be obtained using get_port_graphs . Please ensure that the ifname is urlencoded if it needs to be (i.e Gi0/1/0 would need to be urlencoded. Input: columns: Comma separated list of columns you want returned. Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/ports/eth0 Output: { \"status\" : \"ok\" , \"port\" : { \"port_id\" : \"2\" , \"device_id\" : \"1\" , ... \"poll_prev\" : \"1418412902\" , \"poll_period\" : \"300\" } }","title":"get_port_stats_by_port_hostname"},{"location":"API/Devices/#get_graph_by_port_hostname","text":"Get a graph of a port for a particular device. Route: /api/v0/devices/:hostname/ports/:ifname/:type hostname can be either the device hostname or id ifname can be any of the interface names for the device which can be obtained using get_port_graphs . Please ensure that the ifname is urlencoded if it needs to be (i.e Gi0/1/0 would need to be urlencoded. type is the port type you want the graph for, you can request a list of ports for a device with get_port_graphs . Input: from: This is the date you would like the graph to start - See http://oss.oetiker.ch/rrdtool/doc/rrdgraph.en.html for more information. to: This is the date you would like the graph to end - See http://oss.oetiker.ch/rrdtool/doc/rrdgraph.en.html for more information. width: The graph width, defaults to 1075. height: The graph height, defaults to 300. ifDescr: If this is set to true then we will use ifDescr to lookup the port instead of ifName. Pass the ifDescr value you want to search as you would ifName. Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/ports/eth0/port_bits Output: Output is an image.","title":"get_graph_by_port_hostname"},{"location":"API/Devices/#list_locations","text":"Return a list of locations. Route: /api/v0/resources/locations Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/locations Output: { \"status\" : \"ok\" , \"locations\" : [ { \"id\" : \"1\" , \"location\" : \"Example location, Example city, Example Country\" , \"lat\" : \"-18.911436\" , \"lng\" : \"47.517446\" , \"timestamp\" : \"2017-04-01 02:40:05\" }, ... ], \"count\" : 100 }","title":"list_locations"},{"location":"API/Devices/#list_sensors","text":"Get a list of all Sensors. Route: /api/v0/resources/sensors Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/sensors Output: { \"status\" : \"ok\" , \"sensors\" : [ { \"sensor_id\" : 218810 , \"sensor_deleted\" : 0 , \"sensor_class\" : \"dbm\" , \"device_id\" : 136 , \"poller_type\" : \"snmp\" , \"sensor_oid\" : \".1.3.6.1.4.1.2636.3.60.1.1.1.1.7.919\" , \"sensor_index\" : \"tx-919\" , \"sensor_type\" : \"junos\" , \"sensor_descr\" : \"xe-2/1/4 Tx Power\" , \"group\" : null , \"sensor_divisor\" : 100 , \"sensor_multiplier\" : 1 , \"sensor_current\" : -1.81 , \"sensor_limit\" : 2 , \"sensor_limit_warn\" : 0.5 , \"sensor_limit_low\" : -9.7 , \"sensor_limit_low_warn\" : -8.21 , \"sensor_alert\" : 1 , \"sensor_custom\" : \"No\" , \"entPhysicalIndex\" : \"919\" , \"entPhysicalIndex_measured\" : \"ports\" , \"lastupdate\" : \"2019-02-18 02:47:09\" , \"sensor_prev\" : -1.77 , \"user_func\" : null }, ... ], \"count\" : 100 }","title":"list_sensors"},{"location":"API/Devices/#list_devices","text":"Return a list of devices. Route: /api/v0/devices Input: order: How to order the output, default is by hostname. Can be prepended by DESC or ASC to change the order. type: can be one of the following to filter or search by: all: All devices active: Only not ignored and not disabled devices ignored: Only ignored devices up: Only devices that are up down: Only devices that are down disabled: Disabled devices os: search by os type mac: search by mac address ipv4: search by IPv4 address ipv6: search by IPv6 address (compressed or uncompressed) location: search by location hostname: search by hostname query: If searching by, then this will be used as the input. Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices?order=hostname%20DESC&type=down Output: { \"status\" : \"ok\" , \"count\" : 1 , \"devices\" : [ { \"device_id\" : \"1\" , \"hostname\" : \"localhost\" , ... \"serial\" : null , \"icon\" : null } ] } Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices?type=mac&query=00000c9ff013 Output: { \"status\" : \"ok\" , \"count\" : 1 , \"devices\" : [ { \"device_id\" : \"1\" , \"hostname\" : \"localhost\" , ... \"serial\" : null , \"icon\" : null } ] }","title":"list_devices"},{"location":"API/Devices/#add_device","text":"Add a new device. Route: /api/v0/devices Input (JSON): hostname: device hostname overwrite_ip: alternate polling IP. Will be use instead of hostname (optional) port: SNMP port (defaults to port defined in config). transport: SNMP protocol (defaults to transport defined in config). version: SNMP version to use, v1, v2c or v3. Defaults to v2c. poller_group: This is the poller_group id used for distributed poller setup. Defaults to 0. force_add: Force the device to be added regardless of it being able to respond to snmp or icmp. For SNMP v1 or v2c community: Required for SNMP v1 or v2c. For SNMP v3 authlevel: SNMP authlevel (noAuthNoPriv, authNoPriv, authPriv). authname: SNMP Auth username authpass: SNMP Auth password authalgo: SNMP Auth algorithm (MD5, SHA) cryptopass: SNMP Crypto Password cryptoalgo: SNMP Crypto algorithm (AES, DES) For ICMP only snmp_disable: Boolean, set to true for ICMP only. os: OS short name for the device (defaults to ping). hardware: Device hardware. Example: curl -X POST -d '{\"hostname\":\"localhost.localdomain\",\"version\":\"v1\",\"community\":\"public\"}' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices Output: { \"status\" : \"ok\" , \"message\" : \"Device localhost.localdomain (57) has been added successfully\" }","title":"add_device"},{"location":"API/Devices/#list_oxidized","text":"List devices for use with Oxidized. If you have group support enabled then a group will also be returned based on your config. LibreNMS will automatically map the OS to the Oxidized model name if they don't match. Route: /api/v0/oxidized(/:hostname) Input (JSON): - Examples: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/oxidized Output: [ { \"hostname\" : \"localhost\" , \"os\" : \"linux\" }, { \"hostname\" : \"otherserver\" , \"os\" : \"linux\" } ]","title":"list_oxidized"},{"location":"API/Devices/#update_device_field","text":"Update devices field in the database. Route: /api/v0/devices/:hostname hostname can be either the device hostname or id Input (JSON): field: The column name within the database (can be an array of fields) data: The data to update the column with (can be an array of data)) Examples: curl -X PATCH -d '{\"field\": \"notes\", \"data\": \"This server should be kept online\"}' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost Output: [ { \"status\" : \"ok\" , \"message\" : \"Device notes has been updated\" } ] curl -X PATCH -d '{\"field\": [\"notes\",\"purpose\"], \"data\": [\"This server should be kept online\", \"For serving web traffic\"]}' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost Output: [ { \"status\" : \"ok\" , \"message\" : \"Device fields have been updated\" } ]","title":"update_device_field"},{"location":"API/Devices/#rename_device","text":"Rename device. Route: /api/v0/devices/:hostname/rename/:new_hostname hostname can be either the device hostname or id Input: - Examples: curl -X PATCH -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/rename/localhost2 Output: [ { \"status\" : \"ok\" , \"message\" : \"Device has been renamed\" } ]","title":"rename_device"},{"location":"API/Devices/#get_device_groups","text":"List the device groups that a device is matched on. Route: /api/v0/devices/:hostname/groups hostname can be either the device hostname or id Input (JSON): - Examples: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/groups Output: [ { \"status\" : \"ok\" , \"message\" : \"Found 1 device groups\" , \"count\" : 1 , \"groups\" : [ { \"id\" : \"1\" , \"name\" : \"Testing\" , \"desc\" : \"Testing\" , \"pattern\" : \"%devices.status = \\\"1\\\" &&\" } ] } ]","title":"get_device_groups"},{"location":"API/Devices/#search_oxidized","text":"search all oxidized device configs for a string. Route: api/v0/oxidized/config/search/:searchstring searchstring is the specific string you would like to search for. Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/oxidized/config/search/vlan10 Output: { \"status\" : \"ok\" , \"nodes\" : [ { \"node\" : \"asr9k.librenms.org\" , \"full_name\" : \"cisco\\/ASR9K.Librenms.org\" }, { \"node\" : \"ios.Librenms.org\" , \"full_name\" : \"cisco\\/ios.Librenms.org\" } ], \"count\" : 2 }","title":"search_oxidized"},{"location":"API/Devices/#get_oxidized_config","text":"Returns a specific device's config from oxidized. Route: api/v0/oxidized/config/:device_name device_name is the full dns name of the device used when adding the device to librenms. Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/oxidized/config/router.corp.com Output: { \"status\" : \"ok\" , \"config\" : \"DEVICE CONFIG HERE\" }","title":"get_oxidized_config"},{"location":"API/Devices/#add_parents_to_host","text":"Add one or more parents to a host. Route: /api/v0/devices/:device/parents Input (JSON): parent_ids: one or more parent ids or hostnames Example: curl -X POST -d '{\"parent_ids\":\"15,16,17\"}' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/1/parents Output: { \"status\" : \"ok\" , \"message\" : \"Device dependencies have been saved\" }","title":"add_parents_to_host"},{"location":"API/Devices/#delete_parents_from_host","text":"Deletes some or all the parents from a host. Route: /api/v0/devices/:device/parents Input (JSON): parent_ids: One or more parent ids or hostnames, if not specified deletes all parents from host. Example: curl -X DELETE -d '{\"parent_ids\":\"15,16,17\"}' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/1/parents Output: { \"status\" : \"ok\" , \"message\" : \"All device dependencies have been removed\" }","title":"delete_parents_from_host"},{"location":"API/Inventory/","text":"get_inventory Retrieve the inventory for a device. If you call this without any parameters then you will only get part of the inventory. This is because a lot of devices nest each component, for instance you may initially have the chassis, within this the ports - 1 being an sfp cage, then the sfp itself. The way this API call is designed is to enable a recursive lookup. The first call will retrieve the root entry, included within this response will be entPhysicalIndex, you can then call for entPhysicalContainedIn which will then return the next layer of results. Route: /api/v0/inventory/:hostname hostname can be either the device hostname or the device id Input: entPhysicalClass: This is used to restrict the class of the inventory, for example you can specify chassis to only return items in the inventory that are labelled as chassis. entPhysicalContainedIn: This is used to retrieve items within the inventory assigned to a previous component, for example specifying the chassis (entPhysicalIndex) will retrieve all items where the chassis is the parent. Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/inventory/localhost?entPhysicalContainedIn=65536 Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 1 , \"inventory\" : [ { \"entPhysical_id\" : \"2\" , \"device_id\" : \"32\" , \"entPhysicalIndex\" : \"262145\" , \"entPhysicalDescr\" : \"Linux 3.3.5 ehci_hcd RB400 EHCI\" , \"entPhysicalClass\" : \"unknown\" , \"entPhysicalName\" : \"1:1\" , \"entPhysicalHardwareRev\" : \"\" , \"entPhysicalFirmwareRev\" : \"\" , \"entPhysicalSoftwareRev\" : \"\" , \"entPhysicalAlias\" : \"\" , \"entPhysicalAssetID\" : \"\" , \"entPhysicalIsFRU\" : \"false\" , \"entPhysicalModelName\" : \"0x0002\" , \"entPhysicalVendorType\" : \"zeroDotZero\" , \"entPhysicalSerialNum\" : \"rb400_usb\" , \"entPhysicalContainedIn\" : \"65536\" , \"entPhysicalParentRelPos\" : \"-1\" , \"entPhysicalMfgName\" : \"0x1d6b\" , \"ifIndex\" : \"0\" } ] }","title":"Inventory"},{"location":"API/Inventory/#get_inventory","text":"Retrieve the inventory for a device. If you call this without any parameters then you will only get part of the inventory. This is because a lot of devices nest each component, for instance you may initially have the chassis, within this the ports - 1 being an sfp cage, then the sfp itself. The way this API call is designed is to enable a recursive lookup. The first call will retrieve the root entry, included within this response will be entPhysicalIndex, you can then call for entPhysicalContainedIn which will then return the next layer of results. Route: /api/v0/inventory/:hostname hostname can be either the device hostname or the device id Input: entPhysicalClass: This is used to restrict the class of the inventory, for example you can specify chassis to only return items in the inventory that are labelled as chassis. entPhysicalContainedIn: This is used to retrieve items within the inventory assigned to a previous component, for example specifying the chassis (entPhysicalIndex) will retrieve all items where the chassis is the parent. Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/inventory/localhost?entPhysicalContainedIn=65536 Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 1 , \"inventory\" : [ { \"entPhysical_id\" : \"2\" , \"device_id\" : \"32\" , \"entPhysicalIndex\" : \"262145\" , \"entPhysicalDescr\" : \"Linux 3.3.5 ehci_hcd RB400 EHCI\" , \"entPhysicalClass\" : \"unknown\" , \"entPhysicalName\" : \"1:1\" , \"entPhysicalHardwareRev\" : \"\" , \"entPhysicalFirmwareRev\" : \"\" , \"entPhysicalSoftwareRev\" : \"\" , \"entPhysicalAlias\" : \"\" , \"entPhysicalAssetID\" : \"\" , \"entPhysicalIsFRU\" : \"false\" , \"entPhysicalModelName\" : \"0x0002\" , \"entPhysicalVendorType\" : \"zeroDotZero\" , \"entPhysicalSerialNum\" : \"rb400_usb\" , \"entPhysicalContainedIn\" : \"65536\" , \"entPhysicalParentRelPos\" : \"-1\" , \"entPhysicalMfgName\" : \"0x1d6b\" , \"ifIndex\" : \"0\" } ] }","title":"get_inventory"},{"location":"API/Locations/","text":"add_location Add a new location Route: /api/v0/locations/ Input: location: name of the new location lat: latitude lng: longitude Example: curl -X POST -d '{\"location\":\"Google\", \"lat\":\"37.4220041\",\"lng\":\"-122.0862462\"}' -H 'X-Auth-Token:YOUR-API-TOKEN' https://librenms.org/api/v0/locations Output: { \"status\" : \"ok\" , \"message\" : \"Location added with id #45\" } delete_location Deletes an existing location Route: /api/v0/locations/location location: name of the location to delete Example: curl -X DELETE -H 'X-Auth-Token:YOUR-API-TOKEN' https://librenms.org/api/v0/locations/Google Output: { \"status\" : \"ok\" , \"message\" : \"Location Google has been deleted successfully\" } edit_location Edits a location Route: /api/v0/locations/location location: name of the location to edit Input: lat: latitude lng: longitude Example: curl -X PATCH -d '{\"lng\":\"100.0862462\"}' -H 'X-Auth-Token:YOUR-API-TOKEN' https://librenms.org/api/v0/locations/Google Output: { \"status\" : \"ok\" , \"message\" : \"Location updated successfully\" }","title":"Locations"},{"location":"API/Locations/#add_location","text":"Add a new location Route: /api/v0/locations/ Input: location: name of the new location lat: latitude lng: longitude Example: curl -X POST -d '{\"location\":\"Google\", \"lat\":\"37.4220041\",\"lng\":\"-122.0862462\"}' -H 'X-Auth-Token:YOUR-API-TOKEN' https://librenms.org/api/v0/locations Output: { \"status\" : \"ok\" , \"message\" : \"Location added with id #45\" }","title":"add_location"},{"location":"API/Locations/#delete_location","text":"Deletes an existing location Route: /api/v0/locations/location location: name of the location to delete Example: curl -X DELETE -H 'X-Auth-Token:YOUR-API-TOKEN' https://librenms.org/api/v0/locations/Google Output: { \"status\" : \"ok\" , \"message\" : \"Location Google has been deleted successfully\" }","title":"delete_location"},{"location":"API/Locations/#edit_location","text":"Edits a location Route: /api/v0/locations/location location: name of the location to edit Input: lat: latitude lng: longitude Example: curl -X PATCH -d '{\"lng\":\"100.0862462\"}' -H 'X-Auth-Token:YOUR-API-TOKEN' https://librenms.org/api/v0/locations/Google Output: { \"status\" : \"ok\" , \"message\" : \"Location updated successfully\" }","title":"edit_location"},{"location":"API/Logs/","text":"All the list_*logs calls are aliased to list_logs . Retrieve all logs or logs for a specific device. id or hostname is the specific device Input: start: The page number to request. limit: The limit of results to be returned. from: The date and time to search from. to: The data and time to search to. list_eventlog Route: /api/v0/logs/eventlog/:hostname list_syslog Route: /api/v0/logs/syslog/:hostname list_alertlog Route: /api/v0/logs/alertlog/:hostname list_authlog Route: /api/v0/logs/authlog/:hostname Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/logs/eventlog/:hostname curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/logs/syslog/:hostname?limit=20 curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/logs/eventlog/:hostname?limit=20&start=5&from=2017-07-22%2023:00:00 Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 5 , \"total\" : \"15\" , \"logs\" : [ { \"hostname\" : \"localhost\" , \"sysName\" : \"web01.1.novalocal\" , \"event_id\" : \"10050349\" , \"host\" : \"279\" , \"device_id\" : \"279\" , \"datetime\" : \"2017-07-22 19:57:47\" , \"message\" : \"ifAlias: -> <pptp-something-something-tunnel-something>\" , \"type\" : \"interface\" , \"reference\" : \"NULL\" , \"username\" : \"\" , \"severity\" : \"3\" }, .... { \"hostname\" : \"localhost\" , \"sysName\" : \"web01.1.novalocal\" , \"event_id\" : \"10050353\" , \"host\" : \"279\" , \"device_id\" : \"279\" , \"datetime\" : \"2017-07-22 19:57:47\" , \"message\" : \"ifHighSpeed: -> 0\" , \"type\" : \"interface\" , \"reference\" : \"NULL\" , \"username\" : \"\" , \"severity\" : \"3\" } ] }","title":"Logs"},{"location":"API/Logs/#list_eventlog","text":"Route: /api/v0/logs/eventlog/:hostname","title":"list_eventlog"},{"location":"API/Logs/#list_syslog","text":"Route: /api/v0/logs/syslog/:hostname","title":"list_syslog"},{"location":"API/Logs/#list_alertlog","text":"Route: /api/v0/logs/alertlog/:hostname","title":"list_alertlog"},{"location":"API/Logs/#list_authlog","text":"Route: /api/v0/logs/authlog/:hostname Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/logs/eventlog/:hostname curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/logs/syslog/:hostname?limit=20 curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/logs/eventlog/:hostname?limit=20&start=5&from=2017-07-22%2023:00:00 Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 5 , \"total\" : \"15\" , \"logs\" : [ { \"hostname\" : \"localhost\" , \"sysName\" : \"web01.1.novalocal\" , \"event_id\" : \"10050349\" , \"host\" : \"279\" , \"device_id\" : \"279\" , \"datetime\" : \"2017-07-22 19:57:47\" , \"message\" : \"ifAlias: -> <pptp-something-something-tunnel-something>\" , \"type\" : \"interface\" , \"reference\" : \"NULL\" , \"username\" : \"\" , \"severity\" : \"3\" }, .... { \"hostname\" : \"localhost\" , \"sysName\" : \"web01.1.novalocal\" , \"event_id\" : \"10050353\" , \"host\" : \"279\" , \"device_id\" : \"279\" , \"datetime\" : \"2017-07-22 19:57:47\" , \"message\" : \"ifHighSpeed: -> 0\" , \"type\" : \"interface\" , \"reference\" : \"NULL\" , \"username\" : \"\" , \"severity\" : \"3\" } ] }","title":"list_authlog"},{"location":"API/PortGroups/","text":"get_graph_by_portgroup Get the graph based on the group type. Route: /api/v0/portgroups/:group group is the type of port group graph you want, I.e Transit, Peering, etc. You can specify multiple types comma separated. Input: from: This is the date you would like the graph to start - See http://oss.oetiker.ch/rrdtool/doc/rrdgraph.en.html for more information. to: This is the date you would like the graph to end - See http://oss.oetiker.ch/rrdtool/doc/rrdgraph.en.html for more information. width: The graph width, defaults to 1075. height: The graph height, defaults to 300. Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/portgroups/transit,peering Output: Output is an image. get_graph_by_portgroup_multiport_bits Get the graph based on the multiple port id separated by commas , . Route: /api/v0/portgroups/multiport/bits/:id id is a comma separated list of port ids you want, I.e 1,2,3,4, etc. You can specify multiple IDs comma separated. Input: from: This is the date you would like the graph to start - See http://oss.oetiker.ch/rrdtool/doc/rrdgraph.en.html for more information. to: This is the date you would like the graph to end - See http://oss.oetiker.ch/rrdtool/doc/rrdgraph.en.html for more information. width: The graph width, defaults to 1075. height: The graph height, defaults to 300. Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/portgroups/multiport/bits/1,2,3 Output: Output is an image.","title":"PortGroups"},{"location":"API/PortGroups/#get_graph_by_portgroup","text":"Get the graph based on the group type. Route: /api/v0/portgroups/:group group is the type of port group graph you want, I.e Transit, Peering, etc. You can specify multiple types comma separated. Input: from: This is the date you would like the graph to start - See http://oss.oetiker.ch/rrdtool/doc/rrdgraph.en.html for more information. to: This is the date you would like the graph to end - See http://oss.oetiker.ch/rrdtool/doc/rrdgraph.en.html for more information. width: The graph width, defaults to 1075. height: The graph height, defaults to 300. Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/portgroups/transit,peering Output: Output is an image.","title":"get_graph_by_portgroup"},{"location":"API/PortGroups/#get_graph_by_portgroup_multiport_bits","text":"Get the graph based on the multiple port id separated by commas , . Route: /api/v0/portgroups/multiport/bits/:id id is a comma separated list of port ids you want, I.e 1,2,3,4, etc. You can specify multiple IDs comma separated. Input: from: This is the date you would like the graph to start - See http://oss.oetiker.ch/rrdtool/doc/rrdgraph.en.html for more information. to: This is the date you would like the graph to end - See http://oss.oetiker.ch/rrdtool/doc/rrdgraph.en.html for more information. width: The graph width, defaults to 1075. height: The graph height, defaults to 300. Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/portgroups/multiport/bits/1,2,3 Output: Output is an image.","title":"get_graph_by_portgroup_multiport_bits"},{"location":"API/Ports/","text":"get_all_ports Get info for all ports on all devices. Strongly recommend that you use the columns parameter to avoid pulling too much data. Route: /api/v0/ports - Input: columns: Comma separated list of columns you want returned. Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/ports?columns=ifName%2Cport_id Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"ports\" : [ { \"ifName\" : \"Gi0/0/0\" , \"port_id\" : \"1\" }, { \"ifName\" : \"Gi0/0/1\" , \"port_id\" : \"2\" }, ... { \"ifName\" : \"Vlan 3615\" , \"port_id\" : \"5488\" } ] } search_ports Search for ports matching the query. Route: /api/v0/ports/search/:search search string to search in fields: ifAlias, ifDescr, and ifName Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/ports/search/lo Output: { \"status\" : \"ok\" , \"ports\" : [ { \"device_id\" : 1 , \"port_id\" : 1 , \"ifIndex\" : 1 , \"ifName\" : \"lo\" }, { \"device_id\" : 2 , \"port_id\" : 3 , \"ifIndex\" : 1 , \"ifName\" : \"lo\" }, { \"device_id\" : 3 , \"port_id\" : 5 , \"ifIndex\" : 1 , \"ifName\" : \"lo\" } ] } get_port_info Get all info for a particular port. Route: /api/v0/ports/:portid portid must be an integer Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/ports/323 Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"port\" : [ { \"port_id\" : \"323\" , \"device_id\" : \"55\" , \"port_descr_type\" : null , \"port_descr_descr\" : null , \"port_descr_circuit\" : null , \"port_descr_speed\" : null , \"port_descr_notes\" : null , \"ifDescr\" : \"GigabitEthernet0/0/0\" , \"ifName\" : \"Gi0/0/0\" , \"portName\" : null , \"ifIndex\" : \"1\" , \"ifSpeed\" : \"1000000000\" , \"ifConnectorPresent\" : \"true\" , \"ifPromiscuousMode\" : \"false\" , \"ifHighSpeed\" : \"1000\" , \"ifOperStatus\" : \"up\" , \"ifOperStatus_prev\" : null , \"ifAdminStatus\" : \"up\" , \"ifAdminStatus_prev\" : null , \"ifDuplex\" : \"fullDuplex\" , \"ifMtu\" : \"1560\" , \"ifType\" : \"ethernetCsmacd\" , \"ifAlias\" : \"ASR Interconnect Trunk\" , \"ifPhysAddress\" : \"84bf20853e00\" , \"ifHardType\" : null , \"ifLastChange\" : \"42407358\" , \"ifVlan\" : \"\" , \"ifTrunk\" : \"\" , \"ifVrf\" : \"0\" , \"counter_in\" : null , \"counter_out\" : null , \"ignore\" : \"0\" , \"disabled\" : \"0\" , \"detailed\" : \"0\" , \"deleted\" : \"0\" , \"pagpOperationMode\" : null , \"pagpPortState\" : null , \"pagpPartnerDeviceId\" : null , \"pagpPartnerLearnMethod\" : null , \"pagpPartnerIfIndex\" : null , \"pagpPartnerGroupIfIndex\" : null , \"pagpPartnerDeviceName\" : null , \"pagpEthcOperationMode\" : null , \"pagpDeviceId\" : null , \"pagpGroupIfIndex\" : null , \"ifInUcastPkts\" : \"128518576\" , \"ifInUcastPkts_prev\" : \"128517284\" , \"ifInUcastPkts_delta\" : \"1292\" , \"ifInUcastPkts_rate\" : \"4\" , \"ifOutUcastPkts\" : \"128510560\" , \"ifOutUcastPkts_prev\" : \"128509268\" , \"ifOutUcastPkts_delta\" : \"1292\" , \"ifOutUcastPkts_rate\" : \"4\" , \"ifInErrors\" : \"0\" , \"ifInErrors_prev\" : \"0\" , \"ifInErrors_delta\" : \"0\" , \"ifInErrors_rate\" : \"0\" , \"ifOutErrors\" : \"0\" , \"ifOutErrors_prev\" : \"0\" , \"ifOutErrors_delta\" : \"0\" , \"ifOutErrors_rate\" : \"0\" , \"ifInOctets\" : \"12827393730\" , \"ifInOctets_prev\" : \"12827276736\" , \"ifInOctets_delta\" : \"116994\" , \"ifInOctets_rate\" : \"387\" , \"ifOutOctets\" : \"14957481766\" , \"ifOutOctets_prev\" : \"14957301765\" , \"ifOutOctets_delta\" : \"180001\" , \"ifOutOctets_rate\" : \"596\" , \"poll_time\" : \"1483779150\" , \"poll_prev\" : \"1483778848\" , \"poll_period\" : \"302\" } ] } get_port_ip_info Get all IP info (v4 and v6) for a given port id. Route: /api/v0/ports/:portid/ip portid must be an integer Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/ports/323/ip Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"addresses\" : [ { \"ipv4_address_id\" : \"290\" , \"ipv4_address\" : \"192.168.99.292\" , \"ipv4_prefixlen\" : \"30\" , \"ipv4_network_id\" : \"247\" , \"port_id\" : \"323\" , \"context_name\" : \"\" } ] }","title":"Ports"},{"location":"API/Ports/#get_all_ports","text":"Get info for all ports on all devices. Strongly recommend that you use the columns parameter to avoid pulling too much data. Route: /api/v0/ports - Input: columns: Comma separated list of columns you want returned. Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/ports?columns=ifName%2Cport_id Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"ports\" : [ { \"ifName\" : \"Gi0/0/0\" , \"port_id\" : \"1\" }, { \"ifName\" : \"Gi0/0/1\" , \"port_id\" : \"2\" }, ... { \"ifName\" : \"Vlan 3615\" , \"port_id\" : \"5488\" } ] }","title":"get_all_ports"},{"location":"API/Ports/#search_ports","text":"Search for ports matching the query. Route: /api/v0/ports/search/:search search string to search in fields: ifAlias, ifDescr, and ifName Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/ports/search/lo Output: { \"status\" : \"ok\" , \"ports\" : [ { \"device_id\" : 1 , \"port_id\" : 1 , \"ifIndex\" : 1 , \"ifName\" : \"lo\" }, { \"device_id\" : 2 , \"port_id\" : 3 , \"ifIndex\" : 1 , \"ifName\" : \"lo\" }, { \"device_id\" : 3 , \"port_id\" : 5 , \"ifIndex\" : 1 , \"ifName\" : \"lo\" } ] }","title":"search_ports"},{"location":"API/Ports/#get_port_info","text":"Get all info for a particular port. Route: /api/v0/ports/:portid portid must be an integer Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/ports/323 Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"port\" : [ { \"port_id\" : \"323\" , \"device_id\" : \"55\" , \"port_descr_type\" : null , \"port_descr_descr\" : null , \"port_descr_circuit\" : null , \"port_descr_speed\" : null , \"port_descr_notes\" : null , \"ifDescr\" : \"GigabitEthernet0/0/0\" , \"ifName\" : \"Gi0/0/0\" , \"portName\" : null , \"ifIndex\" : \"1\" , \"ifSpeed\" : \"1000000000\" , \"ifConnectorPresent\" : \"true\" , \"ifPromiscuousMode\" : \"false\" , \"ifHighSpeed\" : \"1000\" , \"ifOperStatus\" : \"up\" , \"ifOperStatus_prev\" : null , \"ifAdminStatus\" : \"up\" , \"ifAdminStatus_prev\" : null , \"ifDuplex\" : \"fullDuplex\" , \"ifMtu\" : \"1560\" , \"ifType\" : \"ethernetCsmacd\" , \"ifAlias\" : \"ASR Interconnect Trunk\" , \"ifPhysAddress\" : \"84bf20853e00\" , \"ifHardType\" : null , \"ifLastChange\" : \"42407358\" , \"ifVlan\" : \"\" , \"ifTrunk\" : \"\" , \"ifVrf\" : \"0\" , \"counter_in\" : null , \"counter_out\" : null , \"ignore\" : \"0\" , \"disabled\" : \"0\" , \"detailed\" : \"0\" , \"deleted\" : \"0\" , \"pagpOperationMode\" : null , \"pagpPortState\" : null , \"pagpPartnerDeviceId\" : null , \"pagpPartnerLearnMethod\" : null , \"pagpPartnerIfIndex\" : null , \"pagpPartnerGroupIfIndex\" : null , \"pagpPartnerDeviceName\" : null , \"pagpEthcOperationMode\" : null , \"pagpDeviceId\" : null , \"pagpGroupIfIndex\" : null , \"ifInUcastPkts\" : \"128518576\" , \"ifInUcastPkts_prev\" : \"128517284\" , \"ifInUcastPkts_delta\" : \"1292\" , \"ifInUcastPkts_rate\" : \"4\" , \"ifOutUcastPkts\" : \"128510560\" , \"ifOutUcastPkts_prev\" : \"128509268\" , \"ifOutUcastPkts_delta\" : \"1292\" , \"ifOutUcastPkts_rate\" : \"4\" , \"ifInErrors\" : \"0\" , \"ifInErrors_prev\" : \"0\" , \"ifInErrors_delta\" : \"0\" , \"ifInErrors_rate\" : \"0\" , \"ifOutErrors\" : \"0\" , \"ifOutErrors_prev\" : \"0\" , \"ifOutErrors_delta\" : \"0\" , \"ifOutErrors_rate\" : \"0\" , \"ifInOctets\" : \"12827393730\" , \"ifInOctets_prev\" : \"12827276736\" , \"ifInOctets_delta\" : \"116994\" , \"ifInOctets_rate\" : \"387\" , \"ifOutOctets\" : \"14957481766\" , \"ifOutOctets_prev\" : \"14957301765\" , \"ifOutOctets_delta\" : \"180001\" , \"ifOutOctets_rate\" : \"596\" , \"poll_time\" : \"1483779150\" , \"poll_prev\" : \"1483778848\" , \"poll_period\" : \"302\" } ] }","title":"get_port_info"},{"location":"API/Ports/#get_port_ip_info","text":"Get all IP info (v4 and v6) for a given port id. Route: /api/v0/ports/:portid/ip portid must be an integer Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/ports/323/ip Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"addresses\" : [ { \"ipv4_address_id\" : \"290\" , \"ipv4_address\" : \"192.168.99.292\" , \"ipv4_prefixlen\" : \"30\" , \"ipv4_network_id\" : \"247\" , \"port_id\" : \"323\" , \"context_name\" : \"\" } ] }","title":"get_port_ip_info"},{"location":"API/Routing/","text":"list_bgp List the current BGP sessions. Route: /api/v0/bgp Input: hostname = Either the devices hostname or id. asn = The local ASN you would like to filter by remote_asn = Filter by remote peer ASN remote_address = Filter by remote peer address local_address = Filter by local address Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bgp curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bgp?hostname=host.example.com curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bgp?asn=1234 curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bgp?remote_asn=1234 curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bgp?local_address=1.1.1.1&remote_address=2.2.2.2 Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"bgp_sessions\" : [ { \"bgpPeer_id\" : \"4\" , \"device_id\" : \"2\" , \"astext\" : \"\" , \"bgpPeerIdentifier\" : \"1234:1b80:1:12::2\" , \"bgpPeerRemoteAs\" : \"54321\" , \"bgpPeerState\" : \"established\" , \"bgpPeerAdminStatus\" : \"running\" , \"bgpLocalAddr\" : \"1234:1b80:1:12::1\" , \"bgpPeerRemoteAddr\" : \"0.0.0.0\" , \"bgpPeerInUpdates\" : \"3\" , \"bgpPeerOutUpdates\" : \"1\" , \"bgpPeerInTotalMessages\" : \"0\" , \"bgpPeerOutTotalMessages\" : \"0\" , \"bgpPeerFsmEstablishedTime\" : \"0\" , \"bgpPeerInUpdateElapsedTime\" : \"0\" , \"context_name\" : \"\" }, ... ], \"count\" : 100 } get_bgp Retrieves a BGP session by ID Route: /api/v0/bgp/:id Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bgp/4 Output: { \"status\" : \"ok\" , \"bgp_session\" : [ { \"bgpPeer_id\" : \"4\" , \"device_id\" : \"2\" , \"astext\" : \"\" , \"bgpPeerIdentifier\" : \"1234:1b80:1:12::2\" , \"bgpPeerRemoteAs\" : \"54321\" , \"bgpPeerState\" : \"established\" , \"bgpPeerAdminStatus\" : \"running\" , \"bgpLocalAddr\" : \"1234:1b80:1:12::1\" , \"bgpPeerRemoteAddr\" : \"0.0.0.0\" , \"bgpPeerInUpdates\" : \"3\" , \"bgpPeerOutUpdates\" : \"1\" , \"bgpPeerInTotalMessages\" : \"0\" , \"bgpPeerOutTotalMessages\" : \"0\" , \"bgpPeerFsmEstablishedTime\" : \"0\" , \"bgpPeerInUpdateElapsedTime\" : \"0\" , \"context_name\" : \"\" } ], \"count\" : 1 } list_cbgp List the current BGP sessions counters. Route: /api/v0/routing/bgp/cbgp Input: hostname = Either the devices hostname or id Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/routing/bgp/cbgp curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/routing/bgp/cbgp?hostname=host.example.com Output: { \"status\" : \"ok\" , \"bgp_counters\" : [ { \"device_id\" : \"9\" , \"bgpPeerIdentifier\" : \"192.168.99.31\" , \"afi\" : \"ipv4\" , \"safi\" : \"multicast\" , \"AcceptedPrefixes\" : \"2\" , \"DeniedPrefixes\" : \"0\" , \"PrefixAdminLimit\" : \"0\" , \"PrefixThreshold\" : \"0\" , \"PrefixClearThreshold\" : \"0\" , \"AdvertisedPrefixes\" : \"11487\" , \"SuppressedPrefixes\" : \"0\" , \"WithdrawnPrefixes\" : \"10918\" , \"AcceptedPrefixes_delta\" : \"-2\" , \"AcceptedPrefixes_prev\" : \"2\" , \"DeniedPrefixes_delta\" : \"0\" , \"DeniedPrefixes_prev\" : \"0\" , \"AdvertisedPrefixes_delta\" : \"-11487\" , \"AdvertisedPrefixes_prev\" : \"11487\" , \"SuppressedPrefixes_delta\" : \"0\" , \"SuppressedPrefixes_prev\" : \"0\" , \"WithdrawnPrefixes_delta\" : \"-10918\" , \"WithdrawnPrefixes_prev\" : \"10918\" , \"context_name\" : \"\" }, ... ], \"count\" : 100 } list_ip_addresses List all IPv4 and IPv6 addresses. Route: /api/v0/resources/ip/addresses Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/ip/addresses Output: { \"status\" : \"ok\" , \"ip_addresses\" : [ { \"ipv4_address_id\" : \"69\" , \"ipv4_address\" : \"127.0.0.1\" , \"ipv4_prefixlen\" : \"8\" , \"ipv4_network_id\" : \"55\" , \"port_id\" : \"135\" , \"context_name\" : \"\" }, ... ], \"count\" : 55 } get_network_ip_addresses Get all IPv4 and IPv6 addresses for particular network. Route: /api/v0/resources/ip/networks/:id/ip id must be integer Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/ip/networks/55/ip Output: { \"status\" : \"ok\" , \"addresses\" : [ { \"ipv4_address_id\" : \"69\" , \"ipv4_address\" : \"127.0.0.1\" , \"ipv4_prefixlen\" : \"8\" , \"ipv4_network_id\" : \"55\" , \"port_id\" : \"135\" , \"context_name\" : \"\" } ], \"count\" : 1 } list_ip_networks List all IPv4 and IPv6 networks. Route: /api/v0/resources/ip/networks Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/ip/networks Output: { \"status\" : \"ok\" , \"ip_networks\" : [ { \"ipv4_network_id\" : \"1\" , \"ipv4_network\" : \"127.0.0.0/8\" , \"context_name\" : \"\" }, ... ], \"count\" : 100 } list_ipsec List the current IPSec tunnels which are active. Route: /api/v0/routing/ipsec/data/:hostname hostname can be either the device hostname or id Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/routing/ipsec/data/localhost Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 0 , \"ipsec\" : [ \"tunnel_id\" : \"1\" , \"device_id\" : \"1\" , \"peer_port\" : \"0\" , \"peer_addr\" : \"127.0.0.1\" , \"local_addr\" : \"127.0.0.2\" , \"local_port\" : \"0\" , \"tunnel_name\" : \"\" , \"tunnel_status\" : \"active\" ] } Please note, this will only show active VPN sessions not all configured. list_ospf List the current OSPF neighbours. Route: /api/v0/ospf Input: hostname = Either the devices hostname or id. Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/ospf curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/ospf?hostname=host.example.com Output: { \"status\" : \"ok\" , \"ospf_neighbours\" : [ { \"device_id\" : \"1\" , \"port_id\" : \"0\" , \"ospf_nbr_id\" : \"172.16.1.145.0\" , \"ospfNbrIpAddr\" : \"172.16.1.145\" , \"ospfNbrAddressLessIndex\" : \"0\" , \"ospfNbrRtrId\" : \"172.16.0.140\" , \"ospfNbrOptions\" : \"82\" , \"ospfNbrPriority\" : \"1\" , \"ospfNbrState\" : \"full\" , \"ospfNbrEvents\" : \"5\" , \"ospfNbrLsRetransQLen\" : \"0\" , \"ospfNbmaNbrStatus\" : \"active\" , \"ospfNbmaNbrPermanence\" : \"dynamic\" , \"ospfNbrHelloSuppressed\" : \"false\" , \"context_name\" : \"\" } ], \"count\" : 1 } list_vrf List the current VRFs. Route: /api/v0/routing/vrf Input: hostname = Either the devices hostname or id OR vrfname = The VRF name you would like to filter by Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/routing/vrf curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/routing/vrf?hostname=host.example.com curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/routing/vrf?vrfname=Mgmt-vrf Output: { \"status\" : \"ok\" , \"vrfs\" : [ { \"vrf_id\" : \"2\" , \"vrf_oid\" : \"8.77.103.109.116.45.118.114.102\" , \"vrf_name\" : \"Mgmt-vrf\" , \"mplsVpnVrfRouteDistinguisher\" : \"\" , \"mplsVpnVrfDescription\" : \"\" , \"device_id\" : \"8\" }, ... ], \"count\" : 100 } get_vrf Retrieves VRF by ID Route: /api/v0/routing/vrf/:id Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/routing/vrf/2 Output: { \"status\" : \"ok\" , \"vrf\" : [ { \"vrf_id\" : \"2\" , \"vrf_oid\" : \"8.77.103.109.116.45.118.114.102\" , \"vrf_name\" : \"Mgmt-vrf\" , \"mplsVpnVrfRouteDistinguisher\" : \"\" , \"mplsVpnVrfDescription\" : \"\" , \"device_id\" : \"8\" } ], \"count\" : 1 }","title":"Routing"},{"location":"API/Routing/#list_bgp","text":"List the current BGP sessions. Route: /api/v0/bgp Input: hostname = Either the devices hostname or id. asn = The local ASN you would like to filter by remote_asn = Filter by remote peer ASN remote_address = Filter by remote peer address local_address = Filter by local address Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bgp curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bgp?hostname=host.example.com curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bgp?asn=1234 curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bgp?remote_asn=1234 curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bgp?local_address=1.1.1.1&remote_address=2.2.2.2 Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"bgp_sessions\" : [ { \"bgpPeer_id\" : \"4\" , \"device_id\" : \"2\" , \"astext\" : \"\" , \"bgpPeerIdentifier\" : \"1234:1b80:1:12::2\" , \"bgpPeerRemoteAs\" : \"54321\" , \"bgpPeerState\" : \"established\" , \"bgpPeerAdminStatus\" : \"running\" , \"bgpLocalAddr\" : \"1234:1b80:1:12::1\" , \"bgpPeerRemoteAddr\" : \"0.0.0.0\" , \"bgpPeerInUpdates\" : \"3\" , \"bgpPeerOutUpdates\" : \"1\" , \"bgpPeerInTotalMessages\" : \"0\" , \"bgpPeerOutTotalMessages\" : \"0\" , \"bgpPeerFsmEstablishedTime\" : \"0\" , \"bgpPeerInUpdateElapsedTime\" : \"0\" , \"context_name\" : \"\" }, ... ], \"count\" : 100 }","title":"list_bgp"},{"location":"API/Routing/#get_bgp","text":"Retrieves a BGP session by ID Route: /api/v0/bgp/:id Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bgp/4 Output: { \"status\" : \"ok\" , \"bgp_session\" : [ { \"bgpPeer_id\" : \"4\" , \"device_id\" : \"2\" , \"astext\" : \"\" , \"bgpPeerIdentifier\" : \"1234:1b80:1:12::2\" , \"bgpPeerRemoteAs\" : \"54321\" , \"bgpPeerState\" : \"established\" , \"bgpPeerAdminStatus\" : \"running\" , \"bgpLocalAddr\" : \"1234:1b80:1:12::1\" , \"bgpPeerRemoteAddr\" : \"0.0.0.0\" , \"bgpPeerInUpdates\" : \"3\" , \"bgpPeerOutUpdates\" : \"1\" , \"bgpPeerInTotalMessages\" : \"0\" , \"bgpPeerOutTotalMessages\" : \"0\" , \"bgpPeerFsmEstablishedTime\" : \"0\" , \"bgpPeerInUpdateElapsedTime\" : \"0\" , \"context_name\" : \"\" } ], \"count\" : 1 }","title":"get_bgp"},{"location":"API/Routing/#list_cbgp","text":"List the current BGP sessions counters. Route: /api/v0/routing/bgp/cbgp Input: hostname = Either the devices hostname or id Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/routing/bgp/cbgp curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/routing/bgp/cbgp?hostname=host.example.com Output: { \"status\" : \"ok\" , \"bgp_counters\" : [ { \"device_id\" : \"9\" , \"bgpPeerIdentifier\" : \"192.168.99.31\" , \"afi\" : \"ipv4\" , \"safi\" : \"multicast\" , \"AcceptedPrefixes\" : \"2\" , \"DeniedPrefixes\" : \"0\" , \"PrefixAdminLimit\" : \"0\" , \"PrefixThreshold\" : \"0\" , \"PrefixClearThreshold\" : \"0\" , \"AdvertisedPrefixes\" : \"11487\" , \"SuppressedPrefixes\" : \"0\" , \"WithdrawnPrefixes\" : \"10918\" , \"AcceptedPrefixes_delta\" : \"-2\" , \"AcceptedPrefixes_prev\" : \"2\" , \"DeniedPrefixes_delta\" : \"0\" , \"DeniedPrefixes_prev\" : \"0\" , \"AdvertisedPrefixes_delta\" : \"-11487\" , \"AdvertisedPrefixes_prev\" : \"11487\" , \"SuppressedPrefixes_delta\" : \"0\" , \"SuppressedPrefixes_prev\" : \"0\" , \"WithdrawnPrefixes_delta\" : \"-10918\" , \"WithdrawnPrefixes_prev\" : \"10918\" , \"context_name\" : \"\" }, ... ], \"count\" : 100 }","title":"list_cbgp"},{"location":"API/Routing/#list_ip_addresses","text":"List all IPv4 and IPv6 addresses. Route: /api/v0/resources/ip/addresses Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/ip/addresses Output: { \"status\" : \"ok\" , \"ip_addresses\" : [ { \"ipv4_address_id\" : \"69\" , \"ipv4_address\" : \"127.0.0.1\" , \"ipv4_prefixlen\" : \"8\" , \"ipv4_network_id\" : \"55\" , \"port_id\" : \"135\" , \"context_name\" : \"\" }, ... ], \"count\" : 55 }","title":"list_ip_addresses"},{"location":"API/Routing/#get_network_ip_addresses","text":"Get all IPv4 and IPv6 addresses for particular network. Route: /api/v0/resources/ip/networks/:id/ip id must be integer Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/ip/networks/55/ip Output: { \"status\" : \"ok\" , \"addresses\" : [ { \"ipv4_address_id\" : \"69\" , \"ipv4_address\" : \"127.0.0.1\" , \"ipv4_prefixlen\" : \"8\" , \"ipv4_network_id\" : \"55\" , \"port_id\" : \"135\" , \"context_name\" : \"\" } ], \"count\" : 1 }","title":"get_network_ip_addresses"},{"location":"API/Routing/#list_ip_networks","text":"List all IPv4 and IPv6 networks. Route: /api/v0/resources/ip/networks Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/ip/networks Output: { \"status\" : \"ok\" , \"ip_networks\" : [ { \"ipv4_network_id\" : \"1\" , \"ipv4_network\" : \"127.0.0.0/8\" , \"context_name\" : \"\" }, ... ], \"count\" : 100 }","title":"list_ip_networks"},{"location":"API/Routing/#list_ipsec","text":"List the current IPSec tunnels which are active. Route: /api/v0/routing/ipsec/data/:hostname hostname can be either the device hostname or id Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/routing/ipsec/data/localhost Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 0 , \"ipsec\" : [ \"tunnel_id\" : \"1\" , \"device_id\" : \"1\" , \"peer_port\" : \"0\" , \"peer_addr\" : \"127.0.0.1\" , \"local_addr\" : \"127.0.0.2\" , \"local_port\" : \"0\" , \"tunnel_name\" : \"\" , \"tunnel_status\" : \"active\" ] } Please note, this will only show active VPN sessions not all configured.","title":"list_ipsec"},{"location":"API/Routing/#list_ospf","text":"List the current OSPF neighbours. Route: /api/v0/ospf Input: hostname = Either the devices hostname or id. Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/ospf curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/ospf?hostname=host.example.com Output: { \"status\" : \"ok\" , \"ospf_neighbours\" : [ { \"device_id\" : \"1\" , \"port_id\" : \"0\" , \"ospf_nbr_id\" : \"172.16.1.145.0\" , \"ospfNbrIpAddr\" : \"172.16.1.145\" , \"ospfNbrAddressLessIndex\" : \"0\" , \"ospfNbrRtrId\" : \"172.16.0.140\" , \"ospfNbrOptions\" : \"82\" , \"ospfNbrPriority\" : \"1\" , \"ospfNbrState\" : \"full\" , \"ospfNbrEvents\" : \"5\" , \"ospfNbrLsRetransQLen\" : \"0\" , \"ospfNbmaNbrStatus\" : \"active\" , \"ospfNbmaNbrPermanence\" : \"dynamic\" , \"ospfNbrHelloSuppressed\" : \"false\" , \"context_name\" : \"\" } ], \"count\" : 1 }","title":"list_ospf"},{"location":"API/Routing/#list_vrf","text":"List the current VRFs. Route: /api/v0/routing/vrf Input: hostname = Either the devices hostname or id OR vrfname = The VRF name you would like to filter by Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/routing/vrf curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/routing/vrf?hostname=host.example.com curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/routing/vrf?vrfname=Mgmt-vrf Output: { \"status\" : \"ok\" , \"vrfs\" : [ { \"vrf_id\" : \"2\" , \"vrf_oid\" : \"8.77.103.109.116.45.118.114.102\" , \"vrf_name\" : \"Mgmt-vrf\" , \"mplsVpnVrfRouteDistinguisher\" : \"\" , \"mplsVpnVrfDescription\" : \"\" , \"device_id\" : \"8\" }, ... ], \"count\" : 100 }","title":"list_vrf"},{"location":"API/Routing/#get_vrf","text":"Retrieves VRF by ID Route: /api/v0/routing/vrf/:id Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/routing/vrf/2 Output: { \"status\" : \"ok\" , \"vrf\" : [ { \"vrf_id\" : \"2\" , \"vrf_oid\" : \"8.77.103.109.116.45.118.114.102\" , \"vrf_name\" : \"Mgmt-vrf\" , \"mplsVpnVrfRouteDistinguisher\" : \"\" , \"mplsVpnVrfDescription\" : \"\" , \"device_id\" : \"8\" } ], \"count\" : 1 }","title":"get_vrf"},{"location":"API/Services/","text":"list_services Retrieve all services Route: /api/v0/services Input: state: only which have a certain state (valid options are 0=Ok, 1=Warning, 2=Critical). type: service type, used sql LIKE to find services, so for tcp, use type=tcp for http use type=http Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/services curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/services?state=2 curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/services?state=0&type=tcp Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 1 , \"services\" : [ [ { \"service_id\" : \"13\" , \"device_id\" : \"1\" , \"service_ip\" : \"demo1.yourdomian.net\" , \"service_type\" : \"ntp_peer\" , \"service_desc\" : \"NTP\" , \"service_param\" : \"-H 192.168.1.10\" , \"service_ignore\" : \"0\" , \"service_status\" : \"0\" , \"service_changed\" : \"1470962470\" , \"service_message\" : \"NTP OK: Offset -0.000717 secs\" , \"service_disabled\" : \"0\" , \"service_ds\" : \"{\\\"offset\\\":\\\"s\\\"}\" } ], [ { \"service_id\" : \"2\" , \"device_id\" : \"2\" , \"service_ip\" : \"demo2.yourdomian.net\" , \"service_type\" : \"esxi_hardware.py\" , \"service_desc\" : \"vmware hardware\" , \"service_param\" : \"-H 192.168.1.11 -U USER -P PASS -p\" , \"service_ignore\" : \"0\" , \"service_status\" : \"0\" , \"service_changed\" : \"1471702206\" , \"service_message\" : \"OK - Server: Supermicro X9SCL/X9SCM s/n: 0123456789 System BIOS: 2.2 2015-02-20\" , \"service_disabled\" : \"0\" , \"service_ds\" : \"{\\\"P2Vol_0_Processor_1_Vcore\\\":\\\"\\\",\\\"P2Vol_1_System_Board_1_-12V\\\":\\\"\\\",\\\"P2Vol_2_System_Board_1_12V\\\":\\\"\\\",\\\"P2Vol_3_System_Board_1_3.3VCC\\\":\\\"\\\",\\\"P2Vol_4_System_Board_1_5VCC\\\":\\\"\\\",\\\"P2Vol_5_System_Board_1_AVCC\\\":\\\"\\\",\\\"P2Vol_6_System_Board_1_VBAT\\\":\\\"\\\",\\\"P2Vol_7_System_Board_1_\" } ] ] } get_service_for_host Retrieve services for device Route: /api/v0/services/:hostname id or hostname is the specific device Input: state: only which have a certain state (valid options are 0=Ok, 1=Warning, 2=Critical). type: service type, used sql LIKE to find services, so for tcp, use type=tcp for http use type=http Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/services/:hostname curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/services/:hostname?state=2 curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/services/:hostname?state=0&type=tcp Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 1 , \"services\" : [ [ { \"service_id\" : \"2\" , \"device_id\" : \"2\" , \"service_ip\" : \"demo2.yourdomian.net\" , \"service_type\" : \"esxi_hardware.py\" , \"service_desc\" : \"vmware hardware\" , \"service_param\" : \"-H 192.168.1.11 -U USER -P PASS -p\" , \"service_ignore\" : \"0\" , \"service_status\" : \"0\" , \"service_changed\" : \"1471702206\" , \"service_message\" : \"OK - Server: Supermicro X9SCL/X9SCM s/n: 0123456789 System BIOS: 2.2 2015-02-20\" , \"service_disabled\" : \"0\" , \"service_ds\" : \"{\\\"P2Vol_0_Processor_1_Vcore\\\":\\\"\\\",\\\"P2Vol_1_System_Board_1_-12V\\\":\\\"\\\",\\\"P2Vol_2_System_Board_1_12V\\\":\\\"\\\",\\\"P2Vol_3_System_Board_1_3.3VCC\\\":\\\"\\\",\\\"P2Vol_4_System_Board_1_5VCC\\\":\\\"\\\",\\\"P2Vol_5_System_Board_1_AVCC\\\":\\\"\\\",\\\"P2Vol_6_System_Board_1_VBAT\\\":\\\"\\\",\\\"P2Vol_7_System_Board_1_\" } ] ] } add_service_for_host Add a service for device Route: /api/v0/services/:hostname id or hostname is the specific device Input: type: service type ip: ip of the service desc: description for the service param: parameters for the service ignore: ignore the service for checks Example: curl -X POST -d '{\"type\":\"ping\",\"ip\": \"192.168.1.10\",\"desc\":\"test ping\",\"param\": \"-t 10 -c 5\"}' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/services/192.168.1.10 Output: { \"status\" : \"ok\" , \"message\" : \"Service ping has been added to device 192.168.1.10 (#10)\" } edit_service_from_host Edits a service Route: /api/v0/services/:service_id service id Input: id: service id Example: curl -X PATCH -d '{\"service_disabled\":\"1\"}' 'X-Auth-Token:YOUR-API-TOKEN' https://librenms.org/api/v0/services/5 Output: { \"status\" : \"ok\" , \"message\" : \"Service updated successfully\" } delete_service_from_host Deletes service from device Route: /api/v0/services/:service_id service id Input: id: service id Example: curl -X DELETE -H 'X-Auth-Token:YOUR-API-TOKEN' https://librenms.org/api/v0/services/35 Output: { \"status\" : \"ok\" , \"message\" : \"Service has been deleted successfully\" }","title":"Services"},{"location":"API/Services/#list_services","text":"Retrieve all services Route: /api/v0/services Input: state: only which have a certain state (valid options are 0=Ok, 1=Warning, 2=Critical). type: service type, used sql LIKE to find services, so for tcp, use type=tcp for http use type=http Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/services curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/services?state=2 curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/services?state=0&type=tcp Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 1 , \"services\" : [ [ { \"service_id\" : \"13\" , \"device_id\" : \"1\" , \"service_ip\" : \"demo1.yourdomian.net\" , \"service_type\" : \"ntp_peer\" , \"service_desc\" : \"NTP\" , \"service_param\" : \"-H 192.168.1.10\" , \"service_ignore\" : \"0\" , \"service_status\" : \"0\" , \"service_changed\" : \"1470962470\" , \"service_message\" : \"NTP OK: Offset -0.000717 secs\" , \"service_disabled\" : \"0\" , \"service_ds\" : \"{\\\"offset\\\":\\\"s\\\"}\" } ], [ { \"service_id\" : \"2\" , \"device_id\" : \"2\" , \"service_ip\" : \"demo2.yourdomian.net\" , \"service_type\" : \"esxi_hardware.py\" , \"service_desc\" : \"vmware hardware\" , \"service_param\" : \"-H 192.168.1.11 -U USER -P PASS -p\" , \"service_ignore\" : \"0\" , \"service_status\" : \"0\" , \"service_changed\" : \"1471702206\" , \"service_message\" : \"OK - Server: Supermicro X9SCL/X9SCM s/n: 0123456789 System BIOS: 2.2 2015-02-20\" , \"service_disabled\" : \"0\" , \"service_ds\" : \"{\\\"P2Vol_0_Processor_1_Vcore\\\":\\\"\\\",\\\"P2Vol_1_System_Board_1_-12V\\\":\\\"\\\",\\\"P2Vol_2_System_Board_1_12V\\\":\\\"\\\",\\\"P2Vol_3_System_Board_1_3.3VCC\\\":\\\"\\\",\\\"P2Vol_4_System_Board_1_5VCC\\\":\\\"\\\",\\\"P2Vol_5_System_Board_1_AVCC\\\":\\\"\\\",\\\"P2Vol_6_System_Board_1_VBAT\\\":\\\"\\\",\\\"P2Vol_7_System_Board_1_\" } ] ] }","title":"list_services"},{"location":"API/Services/#get_service_for_host","text":"Retrieve services for device Route: /api/v0/services/:hostname id or hostname is the specific device Input: state: only which have a certain state (valid options are 0=Ok, 1=Warning, 2=Critical). type: service type, used sql LIKE to find services, so for tcp, use type=tcp for http use type=http Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/services/:hostname curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/services/:hostname?state=2 curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/services/:hostname?state=0&type=tcp Output: { \"status\" : \"ok\" , \"message\" : \"\" , \"count\" : 1 , \"services\" : [ [ { \"service_id\" : \"2\" , \"device_id\" : \"2\" , \"service_ip\" : \"demo2.yourdomian.net\" , \"service_type\" : \"esxi_hardware.py\" , \"service_desc\" : \"vmware hardware\" , \"service_param\" : \"-H 192.168.1.11 -U USER -P PASS -p\" , \"service_ignore\" : \"0\" , \"service_status\" : \"0\" , \"service_changed\" : \"1471702206\" , \"service_message\" : \"OK - Server: Supermicro X9SCL/X9SCM s/n: 0123456789 System BIOS: 2.2 2015-02-20\" , \"service_disabled\" : \"0\" , \"service_ds\" : \"{\\\"P2Vol_0_Processor_1_Vcore\\\":\\\"\\\",\\\"P2Vol_1_System_Board_1_-12V\\\":\\\"\\\",\\\"P2Vol_2_System_Board_1_12V\\\":\\\"\\\",\\\"P2Vol_3_System_Board_1_3.3VCC\\\":\\\"\\\",\\\"P2Vol_4_System_Board_1_5VCC\\\":\\\"\\\",\\\"P2Vol_5_System_Board_1_AVCC\\\":\\\"\\\",\\\"P2Vol_6_System_Board_1_VBAT\\\":\\\"\\\",\\\"P2Vol_7_System_Board_1_\" } ] ] }","title":"get_service_for_host"},{"location":"API/Services/#add_service_for_host","text":"Add a service for device Route: /api/v0/services/:hostname id or hostname is the specific device Input: type: service type ip: ip of the service desc: description for the service param: parameters for the service ignore: ignore the service for checks Example: curl -X POST -d '{\"type\":\"ping\",\"ip\": \"192.168.1.10\",\"desc\":\"test ping\",\"param\": \"-t 10 -c 5\"}' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/services/192.168.1.10 Output: { \"status\" : \"ok\" , \"message\" : \"Service ping has been added to device 192.168.1.10 (#10)\" }","title":"add_service_for_host"},{"location":"API/Services/#edit_service_from_host","text":"Edits a service Route: /api/v0/services/:service_id service id Input: id: service id Example: curl -X PATCH -d '{\"service_disabled\":\"1\"}' 'X-Auth-Token:YOUR-API-TOKEN' https://librenms.org/api/v0/services/5 Output: { \"status\" : \"ok\" , \"message\" : \"Service updated successfully\" }","title":"edit_service_from_host"},{"location":"API/Services/#delete_service_from_host","text":"Deletes service from device Route: /api/v0/services/:service_id service id Input: id: service id Example: curl -X DELETE -H 'X-Auth-Token:YOUR-API-TOKEN' https://librenms.org/api/v0/services/35 Output: { \"status\" : \"ok\" , \"message\" : \"Service has been deleted successfully\" }","title":"delete_service_from_host"},{"location":"API/Switching/","text":"list_vlans Get a list of all VLANs. Route: /api/v0/resources/vlans Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/vlans Output: { \"status\" : \"ok\" , \"vlans\" : [ { \"vlan_id\" : \"31\" , \"device_id\" : \"10\" , \"vlan_vlan\" : \"1\" , \"vlan_domain\" : \"1\" , \"vlan_name\" : \"default\" , \"vlan_type\" : \"ethernet\" , \"vlan_mtu\" : null }, ... ], \"count\" : 100 } get_vlans Get a list of all VLANs for a given device. Route: /api/v0/devices/:hostname/vlans hostname can be either the device hostname or id Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/vlans Output: { \"status\" : \"ok\" , \"count\" : 0 , \"vlans\" : [ { \"vlan_vlan\" : \"1\" , \"vlan_domain\" : \"1\" , \"vlan_name\" : \"default\" , \"vlan_type\" : \"ethernet\" , \"vlan_mtu\" : null } ] } list_links Get a list of all Links. Route: /api/v0/resources/links Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/links Output: { \"status\" : \"ok\" , \"links\" : [ { \"id\" : 10 , \"local_port_id\" : 100 , \"local_device_id\" : 1 , \"remote_port_id\" : 200 , \"active\" : 1 , \"protocol\" : \"lldp\" , \"remote_hostname\" : \"host2.example.com\" , \"remote_device_id\" : 2 , \"remote_port\" : \"xe-0/0/1\" , \"remote_platform\" : null , \"remote_version\" : \"Example Router v.1.0\" }, ... ], \"count\" : 100 } get_links Get a list of Links per giver device. Route: /api/v0/devices/:hostname/links hostname can be either the device hostname or id Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/links Output: { \"status\" : \"ok\" , \"links\" : [ { \"id\" : 10 , \"local_port_id\" : 100 , \"local_device_id\" : 1 , \"remote_port_id\" : 200 , \"active\" : 1 , \"protocol\" : \"lldp\" , \"remote_hostname\" : \"host2.example.com\" , \"remote_device_id\" : 2 , \"remote_port\" : \"xe-0/0/1\" , \"remote_platform\" : null , \"remote_version\" : \"Example Router v.1.0\" }, ... ], \"count\" : 10 } get_link Retrieves Link by ID Route: /api/v0/resources/links/:id Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/link/10 Output: { \"status\" : \"ok\" , \"links\" : [ { \"id\" : 10 , \"local_port_id\" : 100 , \"local_device_id\" : 1 , \"remote_port_id\" : 200 , \"active\" : 1 , \"protocol\" : \"lldp\" , \"remote_hostname\" : \"host2.example.com\" , \"remote_device_id\" : 2 , \"remote_port\" : \"xe-0/0/1\" , \"remote_platform\" : null , \"remote_version\" : \"Example Router v.1.0\" } ], \"count\" : 1 } list_fdb Get a list of all ports FDB. Route: /api/v0/resources/fdb/:mac mac is the specific MAC address you would like to query Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/fdb curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/fdb/1aaa2bbb3ccc Output: { \"status\" : \"ok\" , \"ports_fdb\" : [ { \"ports_fdb_id\" : 10 , \"port_id\" : 10000 , \"mac_address\" : \"1aaa2bbb3ccc\" , \"vlan_id\" : 20000 , \"device_id\" : 1 , \"created_at\" : \"2019-01-1 01:01:01\" , \"updated_at\" : \"2019-01-1 01:01:01\" }, ... ], \"count\" : 100 }","title":"Switching"},{"location":"API/Switching/#list_vlans","text":"Get a list of all VLANs. Route: /api/v0/resources/vlans Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/vlans Output: { \"status\" : \"ok\" , \"vlans\" : [ { \"vlan_id\" : \"31\" , \"device_id\" : \"10\" , \"vlan_vlan\" : \"1\" , \"vlan_domain\" : \"1\" , \"vlan_name\" : \"default\" , \"vlan_type\" : \"ethernet\" , \"vlan_mtu\" : null }, ... ], \"count\" : 100 }","title":"list_vlans"},{"location":"API/Switching/#get_vlans","text":"Get a list of all VLANs for a given device. Route: /api/v0/devices/:hostname/vlans hostname can be either the device hostname or id Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/vlans Output: { \"status\" : \"ok\" , \"count\" : 0 , \"vlans\" : [ { \"vlan_vlan\" : \"1\" , \"vlan_domain\" : \"1\" , \"vlan_name\" : \"default\" , \"vlan_type\" : \"ethernet\" , \"vlan_mtu\" : null } ] }","title":"get_vlans"},{"location":"API/Switching/#list_links","text":"Get a list of all Links. Route: /api/v0/resources/links Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/links Output: { \"status\" : \"ok\" , \"links\" : [ { \"id\" : 10 , \"local_port_id\" : 100 , \"local_device_id\" : 1 , \"remote_port_id\" : 200 , \"active\" : 1 , \"protocol\" : \"lldp\" , \"remote_hostname\" : \"host2.example.com\" , \"remote_device_id\" : 2 , \"remote_port\" : \"xe-0/0/1\" , \"remote_platform\" : null , \"remote_version\" : \"Example Router v.1.0\" }, ... ], \"count\" : 100 }","title":"list_links"},{"location":"API/Switching/#get_links","text":"Get a list of Links per giver device. Route: /api/v0/devices/:hostname/links hostname can be either the device hostname or id Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/links Output: { \"status\" : \"ok\" , \"links\" : [ { \"id\" : 10 , \"local_port_id\" : 100 , \"local_device_id\" : 1 , \"remote_port_id\" : 200 , \"active\" : 1 , \"protocol\" : \"lldp\" , \"remote_hostname\" : \"host2.example.com\" , \"remote_device_id\" : 2 , \"remote_port\" : \"xe-0/0/1\" , \"remote_platform\" : null , \"remote_version\" : \"Example Router v.1.0\" }, ... ], \"count\" : 10 }","title":"get_links"},{"location":"API/Switching/#get_link","text":"Retrieves Link by ID Route: /api/v0/resources/links/:id Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/link/10 Output: { \"status\" : \"ok\" , \"links\" : [ { \"id\" : 10 , \"local_port_id\" : 100 , \"local_device_id\" : 1 , \"remote_port_id\" : 200 , \"active\" : 1 , \"protocol\" : \"lldp\" , \"remote_hostname\" : \"host2.example.com\" , \"remote_device_id\" : 2 , \"remote_port\" : \"xe-0/0/1\" , \"remote_platform\" : null , \"remote_version\" : \"Example Router v.1.0\" } ], \"count\" : 1 }","title":"get_link"},{"location":"API/Switching/#list_fdb","text":"Get a list of all ports FDB. Route: /api/v0/resources/fdb/:mac mac is the specific MAC address you would like to query Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/fdb curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/fdb/1aaa2bbb3ccc Output: { \"status\" : \"ok\" , \"ports_fdb\" : [ { \"ports_fdb_id\" : 10 , \"port_id\" : 10000 , \"mac_address\" : \"1aaa2bbb3ccc\" , \"vlan_id\" : 20000 , \"device_id\" : 1 , \"created_at\" : \"2019-01-1 01:01:01\" , \"updated_at\" : \"2019-01-1 01:01:01\" }, ... ], \"count\" : 100 }","title":"list_fdb"},{"location":"API/System/","text":"system Display Librenms instance information. Route: /api/v0/system Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/system Output: { \"status\" : \"ok\" , \"system\" : [ { \"local_ver\" : \"1.37-234-g19103ee\" , \"local_sha\" : \"19103ee36f68f009272c15be22e5a7e10a8b0b85\" , \"local_date\" : \"1526480966\" , \"local_branch\" : \"master\" , \"db_schema\" : 249 , \"php_ver\" : \"7.2.2\" , \"mysql_ver\" : \"5.5.56-MariaDB\" , \"rrdtool_ver\" : \"1.4.8\" , \"netsnmp_ver\" : \"NET-SNMP 5.7.2\" } ], \"count\" : 1 }","title":"System"},{"location":"API/System/#system","text":"Display Librenms instance information. Route: /api/v0/system Input: - Example: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/system Output: { \"status\" : \"ok\" , \"system\" : [ { \"local_ver\" : \"1.37-234-g19103ee\" , \"local_sha\" : \"19103ee36f68f009272c15be22e5a7e10a8b0b85\" , \"local_date\" : \"1526480966\" , \"local_branch\" : \"master\" , \"db_schema\" : 249 , \"php_ver\" : \"7.2.2\" , \"mysql_ver\" : \"5.5.56-MariaDB\" , \"rrdtool_ver\" : \"1.4.8\" , \"netsnmp_ver\" : \"NET-SNMP 5.7.2\" } ], \"count\" : 1 }","title":"system"},{"location":"Alerting/","text":"About LibreNMS includes a highly customizable alerting system. The system requires a set of user-defined rules to evaluate the situation of each device, port, service or any other entity. You can configure all options for alerting and transports via the WebUI, config options in this document are crossed out but left for reference. Table of Content: Introduction Rules Syntax Options Examples Procedure Templates Syntax Testing Examples Included Transports E-Mail API Nagios-Compatible IRC Slack Rocket.chat HipChat PagerDuty Pushover Boxcar Telegram Pushbullet Clickatell PlaySMS VictorOps Canopsis osTicket Microsoft Teams Cisco Spark SMSEagle Syslog Elasticsearch Jira Entities Devices BGP Peers IPSec Tunnels Memory Pools Ports Processors Storage Sensors Macros Device Port Time Sensors Misc Device Dependencies","title":"Intro"},{"location":"Alerting/#about","text":"LibreNMS includes a highly customizable alerting system. The system requires a set of user-defined rules to evaluate the situation of each device, port, service or any other entity. You can configure all options for alerting and transports via the WebUI, config options in this document are crossed out but left for reference. Table of Content: Introduction Rules Syntax Options Examples Procedure Templates Syntax Testing Examples Included Transports E-Mail API Nagios-Compatible IRC Slack Rocket.chat HipChat PagerDuty Pushover Boxcar Telegram Pushbullet Clickatell PlaySMS VictorOps Canopsis osTicket Microsoft Teams Cisco Spark SMSEagle Syslog Elasticsearch Jira Entities Devices BGP Peers IPSec Tunnels Memory Pools Ports Processors Storage Sensors Macros Device Port Time Sensors Misc Device Dependencies","title":"About"},{"location":"Alerting/Creating-Transport/","text":"Creating a new Transport File location All transports are located in LibreNMS\\Alert\\Transport and the files are named after the Transport name. I.e Discord.php for Discord. Transport structure The following functions are required for a new transport to pass the unit tests: deliverAlert() - This is function called within alerts to invoke the transport. Here you should do any post processing of the transport config to get it ready for use. contact$Transport() - This is named after the transport so for Discord it would be contactDiscord() . This is what actually interacts with the 3rd party API, invokes the mail command or whatever you want your alert to do. configTemplate() - This is used to define the form that will accept the transport config in the webui and then what data should be validated and how. Validation is done using Laravel validation The following function is not required for new Transports and is for legacy reasons only. deliverAlertOld() . Documentation Please don't forget to update the Transport file to include details of your new transport. A table should be provided to indicate the form values that we ask for and examples. I.e: Config Example Discord URL https://discordapp.com/api/webhooks/4515489001665127664/82-sf4385ysuhfn34u2fhfsdePGLrg8K7cP9wl553Fg6OlZuuxJGaa1d54fe Options username=myname","title":"Creating Transports"},{"location":"Alerting/Creating-Transport/#creating-a-new-transport","text":"","title":"Creating a new Transport"},{"location":"Alerting/Creating-Transport/#file-location","text":"All transports are located in LibreNMS\\Alert\\Transport and the files are named after the Transport name. I.e Discord.php for Discord.","title":"File location"},{"location":"Alerting/Creating-Transport/#transport-structure","text":"The following functions are required for a new transport to pass the unit tests: deliverAlert() - This is function called within alerts to invoke the transport. Here you should do any post processing of the transport config to get it ready for use. contact$Transport() - This is named after the transport so for Discord it would be contactDiscord() . This is what actually interacts with the 3rd party API, invokes the mail command or whatever you want your alert to do. configTemplate() - This is used to define the form that will accept the transport config in the webui and then what data should be validated and how. Validation is done using Laravel validation The following function is not required for new Transports and is for legacy reasons only. deliverAlertOld() .","title":"Transport structure"},{"location":"Alerting/Creating-Transport/#documentation","text":"Please don't forget to update the Transport file to include details of your new transport. A table should be provided to indicate the form values that we ask for and examples. I.e: Config Example Discord URL https://discordapp.com/api/webhooks/4515489001665127664/82-sf4385ysuhfn34u2fhfsdePGLrg8K7cP9wl553Fg6OlZuuxJGaa1d54fe Options username=myname","title":"Documentation"},{"location":"Alerting/Device-Dependencies/","text":"Device Dependencies It is possible to set one or more parents for a device. The aim for that is, if all parent devices are down, alert contacts will not receive redundant alerts for dependent devices. This is very useful when you have an outage, say in a branch office, where normally you'd receive hundreds of alerts, but when this is properly configured, you'd only receive an alert for the parent hosts. There are three ways to configure this feature. First one is from general settings of a device. The other two can be done in the 'Device Dependencies' item under 'Devices' menu. In this page, you can see all devices and with its parents. Clicking on the 'bin' icon will clear the dependency setting. Clicking on the 'pen' icon will let you edit or change the current setting for chosen device. There's also a 'Manage Device Dependencies' button on the top. This will let you set parents for multiple devices at once. For an intro on getting started with Device Dependencies, take a look at our Youtube video","title":"Device Dependencies"},{"location":"Alerting/Device-Dependencies/#device-dependencies","text":"It is possible to set one or more parents for a device. The aim for that is, if all parent devices are down, alert contacts will not receive redundant alerts for dependent devices. This is very useful when you have an outage, say in a branch office, where normally you'd receive hundreds of alerts, but when this is properly configured, you'd only receive an alert for the parent hosts. There are three ways to configure this feature. First one is from general settings of a device. The other two can be done in the 'Device Dependencies' item under 'Devices' menu. In this page, you can see all devices and with its parents. Clicking on the 'bin' icon will clear the dependency setting. Clicking on the 'pen' icon will let you edit or change the current setting for chosen device. There's also a 'Manage Device Dependencies' button on the top. This will let you set parents for multiple devices at once. For an intro on getting started with Device Dependencies, take a look at our Youtube video","title":"Device Dependencies"},{"location":"Alerting/Entities/","text":"Entities Entities as described earlier are based on the table and column names within the database, if you are unsure of what the entity is you want then have a browse around inside MySQL using show tables and desc <tablename> . Below are some common entities that you can use within the alerting system. This list is not exhaustive and you should look at the MySQL database schema for the full list. Devices Entity Description devices.hostname The device hostname devices.sysName The device sysName devices.sysDescr The device sysDescr devices.hardware The device hardware devices.version The device os version devices.location The device location devices.status The status of the device, 1 devices.status_reason The reason the device was detected as down (icmp or snmp) devices.ignore If the device is ignored this will be set to 1 devices.disabled If the device is disabled this will be set to 1 devices.last_polled The the last polled datetime (yyyy-mm-dd hh:mm:ss) devices.type The device type such as network, server, firewall, etc. BGP Peers Entity Description bgpPeers.astext This is the description of the BGP Peer bgpPeers.bgpPeerIdentifier The IP address of the BGP Peer bgpPeers.bgpPeerRemoteAs The AS number of the BGP Peer bgpPeers.bgpPeerState The operational state of the BGP session bgpPeers.bgpPeerAdminStatus The administrative state of the BGP session bgpPeers.bgpLocalAddr The local address of the BGP session. IPSec Tunnels Entity Description ipsec_tunnels.peer_addr The remote VPN peer address ipsec_tunnels.local_addr The local VPN address ipsec_tunnels.tunnel_status The VPN tunnels operational status. Memory pools Entity Description mempools.mempool_type The memory pool type such as hrstorage, cmp and cemp mempools.mempool_descr The description of the pool such as Physical memory, Virtual memory and System memory mempools.mempool_perc The used percentage of the memory pool. Ports Entity Description ports.ifDescr The interface description ports.ifName The interface name ports.ifSpeed The port speed in bps ports.ifHighSpeed The port speed in mbps ports.ifOperStatus The operational status of the port (up or down) ports.ifAdminStatus The administrative status of the port (up or down) ports.ifDuplex Duplex setting of the port ports.ifMtu The MTU setting of the port.` Processors Entity Description processors.processor_usage The usage of the processor as a percentage processors.processor_descr The description of the processor. Storage Entity Description storage.storage_descr The description of the storage storage.storage_perc The usage of the storage as a percentage. Health / Sensors Entity Description sensors.sensor_desc The sensors description. sensors.sensor_current The current sensors value. sensors.sensor_prev The previous sensor value. sensors.lastupdate The sensors last updated datetime stamp.","title":"Entities"},{"location":"Alerting/Entities/#entities","text":"Entities as described earlier are based on the table and column names within the database, if you are unsure of what the entity is you want then have a browse around inside MySQL using show tables and desc <tablename> . Below are some common entities that you can use within the alerting system. This list is not exhaustive and you should look at the MySQL database schema for the full list.","title":"Entities"},{"location":"Alerting/Entities/#devices","text":"Entity Description devices.hostname The device hostname devices.sysName The device sysName devices.sysDescr The device sysDescr devices.hardware The device hardware devices.version The device os version devices.location The device location devices.status The status of the device, 1 devices.status_reason The reason the device was detected as down (icmp or snmp) devices.ignore If the device is ignored this will be set to 1 devices.disabled If the device is disabled this will be set to 1 devices.last_polled The the last polled datetime (yyyy-mm-dd hh:mm:ss) devices.type The device type such as network, server, firewall, etc.","title":"Devices"},{"location":"Alerting/Entities/#bgp-peers","text":"Entity Description bgpPeers.astext This is the description of the BGP Peer bgpPeers.bgpPeerIdentifier The IP address of the BGP Peer bgpPeers.bgpPeerRemoteAs The AS number of the BGP Peer bgpPeers.bgpPeerState The operational state of the BGP session bgpPeers.bgpPeerAdminStatus The administrative state of the BGP session bgpPeers.bgpLocalAddr The local address of the BGP session.","title":"BGP Peers"},{"location":"Alerting/Entities/#ipsec-tunnels","text":"Entity Description ipsec_tunnels.peer_addr The remote VPN peer address ipsec_tunnels.local_addr The local VPN address ipsec_tunnels.tunnel_status The VPN tunnels operational status.","title":"IPSec Tunnels"},{"location":"Alerting/Entities/#memory-pools","text":"Entity Description mempools.mempool_type The memory pool type such as hrstorage, cmp and cemp mempools.mempool_descr The description of the pool such as Physical memory, Virtual memory and System memory mempools.mempool_perc The used percentage of the memory pool.","title":"Memory pools"},{"location":"Alerting/Entities/#ports","text":"Entity Description ports.ifDescr The interface description ports.ifName The interface name ports.ifSpeed The port speed in bps ports.ifHighSpeed The port speed in mbps ports.ifOperStatus The operational status of the port (up or down) ports.ifAdminStatus The administrative status of the port (up or down) ports.ifDuplex Duplex setting of the port ports.ifMtu The MTU setting of the port.`","title":"Ports"},{"location":"Alerting/Entities/#processors","text":"Entity Description processors.processor_usage The usage of the processor as a percentage processors.processor_descr The description of the processor.","title":"Processors"},{"location":"Alerting/Entities/#storage","text":"Entity Description storage.storage_descr The description of the storage storage.storage_perc The usage of the storage as a percentage.","title":"Storage"},{"location":"Alerting/Entities/#health-sensors","text":"Entity Description sensors.sensor_desc The sensors description. sensors.sensor_current The current sensors value. sensors.sensor_prev The previous sensor value. sensors.lastupdate The sensors last updated datetime stamp.","title":"Health / Sensors"},{"location":"Alerting/Introduction/","text":"Introduction To get started, you first need some alert rules which will react to changes with your devices before raising an alert. Creating alert rules After that you also need to tell LibreNMS how to notify you when an alert is raised, this is done using Alert Transports . Configuring alert transports The next step is not strictly required but most people find it useful. Creating custom alert templates will help you get the benefit out of the alert system in general. Whilst we include a default template, it is limited in the data that you will receive in the alerts. Configuring alert templates Managing alerts When an alert has triggered you will see these in the Alerts -> Notifications page within the Web UI. This list has a couple of options available to it and we'll explain what these are here. ACK This column provides you visibility on the status of the alert: This alert is currently active and sending alerts. Click this icon to acknowledge the alert. This alert is currently acknowledged until the alert clears. Click this icon to un-acknowledge the alert. This alert is currently acknowledged until the alert worsens or gets better, at which stage it will be automatically unacknowledged and alerts will resume. Click this icon to un-acknowledge the alert. Notes This column will allow you access to the acknowledge/unacknowledge notes for this alert.","title":"Introduction"},{"location":"Alerting/Introduction/#introduction","text":"To get started, you first need some alert rules which will react to changes with your devices before raising an alert. Creating alert rules After that you also need to tell LibreNMS how to notify you when an alert is raised, this is done using Alert Transports . Configuring alert transports The next step is not strictly required but most people find it useful. Creating custom alert templates will help you get the benefit out of the alert system in general. Whilst we include a default template, it is limited in the data that you will receive in the alerts. Configuring alert templates","title":"Introduction"},{"location":"Alerting/Introduction/#managing-alerts","text":"When an alert has triggered you will see these in the Alerts -> Notifications page within the Web UI. This list has a couple of options available to it and we'll explain what these are here.","title":"Managing alerts"},{"location":"Alerting/Introduction/#ack","text":"This column provides you visibility on the status of the alert: This alert is currently active and sending alerts. Click this icon to acknowledge the alert. This alert is currently acknowledged until the alert clears. Click this icon to un-acknowledge the alert. This alert is currently acknowledged until the alert worsens or gets better, at which stage it will be automatically unacknowledged and alerts will resume. Click this icon to un-acknowledge the alert.","title":"ACK"},{"location":"Alerting/Introduction/#notes","text":"This column will allow you access to the acknowledge/unacknowledge notes for this alert.","title":"Notes"},{"location":"Alerting/Macros/","text":"Macros Macros are shorthands to either portion of rules or pure SQL enhanced with placeholders. You can define your own macros in your config.php . Example macro-implementation of Debian-Devices $config [ 'alert' ][ 'macros' ][ 'rule' ][ 'is_debian' ] = 'devices.features ~ \"@debian@\"' ; And in the Rule: ... macros.is_debian = 1 ... This Example-macro is a Boolean-macro, it applies a form of filter to the set of results defined by the rule. All macros that are not unary should return Boolean. Device (Boolean) Entity: macros.device Description: Only select devices that aren't deleted, ignored or disabled. Source: (devices.disabled = 0 AND devices.ignore = 0) Device is up (Boolean) Entity: macros.device_up Description: Only select devices that are up. Implies: macros.device Source: (devices.status = 1 AND macros.device) Device is down (Boolean) Entity: macros.device_down Description: Only select devices that are down. Implies: macros.device Source: (devices.status = 0 AND macros.device) Port (Boolean) Entity: macros.port Description: Only select ports that aren't deleted, ignored or disabled. Source: (ports.deleted = 0 AND ports.ignore = 0 AND ports.disabled = 0) Port is up (Boolean) Entity: macros.port_up Description: Only select ports that are up and also should be up. Implies: macros.port Source: (ports.ifOperStatus = up AND ports.ifAdminStatus = up AND macros.port) Port is down (Boolean) Entity: macros.port_down Description: Only select ports that are down. Implies: macros.port Source: (ports.ifOperStatus != \"up\" AND ports.ifAdminStatus != \"down\" AND macros.port) Port-Usage in Percent (Decimal) Entity: macros.port_usage_perc Description: Return port-usage (max value of in and out) in percent. Source: ((SELECT IF(ports.ifOutOctets_rate>ports.ifInOctets_rate, ports.ifOutOctets_rate, ports.ifInOctets_rate)*8) / ports.ifSpeed)*100 Time Now (Datetime) Entity: macros.now Description: Alias of MySQL's NOW() Source: NOW() Past N Minutes (Datetime) Entity: macros.past_$m Description: Returns a MySQL Timestamp dated $ Minutes in the past. $ can only be a supported Resolution. Example: macros.past_5m is Last 5 Minutes. Resolution: 5,10,15,30,60 Source: DATE_SUB(NOW(),INTERVAL $ MINUTE) Sensors (Boolean) Entity: macros.sensor Description: Only select sensors that aren't ignored. Source: (sensors.sensor_alert = 1) Entity: macros.sensor_port_link = 1 Description: Only selects sensors that have a port linked to them, the port is up and the device is up. Source: (sensors.entity_link_type = \"port\" AND sensors.entity_link_index = ports.ifIndex AND macros.port_up AND macros.device_up)) State Sensors (Boolean) Entity: macros.state_sensor_ok , macros.state_sensor_warning , macros.state_sensor_critical , macros.state_sensor_unknown Description: Select state sensors by their generic status ok (0), warning (1), critical (2), unknown (3) Source: (sensors.sensor_current = state_translations.state_value AND state_translations.state_generic_value = 2) Misc (Boolean) Packet Loss Entity: (macros.packet_loss_5m) Description: Packet loss % value for the device within the last 5 minutes. Example: macros.packet_loss_5m > 50 Entity: (macros.packet_loss_15m) Description: Packet loss % value for the device within the last 15 minutes. Example: macros.packet_loss_15m > 50 Ports in usage perc (Int) Entity: ((ports.ifInOctets_rate*8)/ports.ifSpeed)*100 Description: Port in used more than 50% Example: `macros.port_in_usage_perc > 50 Ports out usage perc (Int) Entity: ((ports.ifOutOctets_rate*8)/ports.ifSpeed)*100 Description: Port out used more than 50% Example: `macros.port_out_usage_perc > 50 Ports now down (Boolean) Entity: ports.ifOperStatus != ports.ifOperStatus_prev AND ports.ifOperStatus_prev = \"up\" AND ports.ifAdminStatus = \"up\" Description: Ports that were previously up and have now gone down. Example: macros.port_now_down = 1 Port has xDP neighbour (Boolean) Entity: %macros.port AND %links.local_port_id = %ports.port_id Description: Ports that have an xDP (lldp, cdp, etc) neighbour. Example: macros.port_has_xdp_neighbours = 1 Port has xDP neighbour already known in LibreNMS (Boolean) Entity: %macros.port_has_neighbours AND (%links.remote_port_id IS NOT NULL) Description: Ports that have an xDP (lldp, cdp, etc) neighbour that is already known in libreNMS. Example: macros.port_has_xdp_neighbours_device = 1 Device component down [JunOS] Entity: sensors.sensor_class = \"state\" AND sensors.sensor_current != \"6\" AND sensors.sensor_type = \"jnxFruState\" AND sensors.sensor_current != \"2\" Description: Device component is down such as Fan, PSU, etc for JunOS devices. Example: macros.device_component_down_junos = 1 Device component down [Cisco] Entity: sensors.sensor_current != 1 AND sensors.sensor_current != 5 AND sensors.sensor_type ~ \"^cisco.*State$\" Description: Device component is down such as Fan, PSU, etc for Cisco devices. Example: macros.device_component_down_cisco = 1 PDU over amperage [APC] Entity: sensors.sensor_class = \"current\" AND sensors.sensor_descr = \"Bank Total\" AND sensors.sensor_current > sensors.sensor_limit AND devices.os = \"apc\" Description: APC PDU over amperage Example: macros.pdu_over_amperage_apc = 1","title":"Macros"},{"location":"Alerting/Macros/#macros","text":"Macros are shorthands to either portion of rules or pure SQL enhanced with placeholders. You can define your own macros in your config.php . Example macro-implementation of Debian-Devices $config [ 'alert' ][ 'macros' ][ 'rule' ][ 'is_debian' ] = 'devices.features ~ \"@debian@\"' ; And in the Rule: ... macros.is_debian = 1 ... This Example-macro is a Boolean-macro, it applies a form of filter to the set of results defined by the rule. All macros that are not unary should return Boolean.","title":"Macros"},{"location":"Alerting/Macros/#device-boolean","text":"Entity: macros.device Description: Only select devices that aren't deleted, ignored or disabled. Source: (devices.disabled = 0 AND devices.ignore = 0)","title":"Device (Boolean)"},{"location":"Alerting/Macros/#device-is-up-boolean","text":"Entity: macros.device_up Description: Only select devices that are up. Implies: macros.device Source: (devices.status = 1 AND macros.device)","title":"Device is up (Boolean)"},{"location":"Alerting/Macros/#device-is-down-boolean","text":"Entity: macros.device_down Description: Only select devices that are down. Implies: macros.device Source: (devices.status = 0 AND macros.device)","title":"Device is down (Boolean)"},{"location":"Alerting/Macros/#port-boolean","text":"Entity: macros.port Description: Only select ports that aren't deleted, ignored or disabled. Source: (ports.deleted = 0 AND ports.ignore = 0 AND ports.disabled = 0)","title":"Port (Boolean)"},{"location":"Alerting/Macros/#port-is-up-boolean","text":"Entity: macros.port_up Description: Only select ports that are up and also should be up. Implies: macros.port Source: (ports.ifOperStatus = up AND ports.ifAdminStatus = up AND macros.port)","title":"Port is up (Boolean)"},{"location":"Alerting/Macros/#port-is-down-boolean","text":"Entity: macros.port_down Description: Only select ports that are down. Implies: macros.port Source: (ports.ifOperStatus != \"up\" AND ports.ifAdminStatus != \"down\" AND macros.port)","title":"Port is down (Boolean)"},{"location":"Alerting/Macros/#port-usage-in-percent-decimal","text":"Entity: macros.port_usage_perc Description: Return port-usage (max value of in and out) in percent. Source: ((SELECT IF(ports.ifOutOctets_rate>ports.ifInOctets_rate, ports.ifOutOctets_rate, ports.ifInOctets_rate)*8) / ports.ifSpeed)*100","title":"Port-Usage in Percent (Decimal)"},{"location":"Alerting/Macros/#time","text":"","title":"Time"},{"location":"Alerting/Macros/#now-datetime","text":"Entity: macros.now Description: Alias of MySQL's NOW() Source: NOW()","title":"Now (Datetime)"},{"location":"Alerting/Macros/#past-n-minutes-datetime","text":"Entity: macros.past_$m Description: Returns a MySQL Timestamp dated $ Minutes in the past. $ can only be a supported Resolution. Example: macros.past_5m is Last 5 Minutes. Resolution: 5,10,15,30,60 Source: DATE_SUB(NOW(),INTERVAL $ MINUTE)","title":"Past N Minutes (Datetime)"},{"location":"Alerting/Macros/#sensors-boolean","text":"Entity: macros.sensor Description: Only select sensors that aren't ignored. Source: (sensors.sensor_alert = 1) Entity: macros.sensor_port_link = 1 Description: Only selects sensors that have a port linked to them, the port is up and the device is up. Source: (sensors.entity_link_type = \"port\" AND sensors.entity_link_index = ports.ifIndex AND macros.port_up AND macros.device_up))","title":"Sensors (Boolean)"},{"location":"Alerting/Macros/#state-sensors-boolean","text":"Entity: macros.state_sensor_ok , macros.state_sensor_warning , macros.state_sensor_critical , macros.state_sensor_unknown Description: Select state sensors by their generic status ok (0), warning (1), critical (2), unknown (3) Source: (sensors.sensor_current = state_translations.state_value AND state_translations.state_generic_value = 2)","title":"State Sensors (Boolean)"},{"location":"Alerting/Macros/#misc-boolean","text":"","title":"Misc (Boolean)"},{"location":"Alerting/Macros/#packet-loss","text":"Entity: (macros.packet_loss_5m) Description: Packet loss % value for the device within the last 5 minutes. Example: macros.packet_loss_5m > 50 Entity: (macros.packet_loss_15m) Description: Packet loss % value for the device within the last 15 minutes. Example: macros.packet_loss_15m > 50","title":"Packet Loss"},{"location":"Alerting/Macros/#ports-in-usage-perc-int","text":"Entity: ((ports.ifInOctets_rate*8)/ports.ifSpeed)*100 Description: Port in used more than 50% Example: `macros.port_in_usage_perc > 50","title":"Ports in usage perc (Int)"},{"location":"Alerting/Macros/#ports-out-usage-perc-int","text":"Entity: ((ports.ifOutOctets_rate*8)/ports.ifSpeed)*100 Description: Port out used more than 50% Example: `macros.port_out_usage_perc > 50","title":"Ports out usage perc (Int)"},{"location":"Alerting/Macros/#ports-now-down-boolean","text":"Entity: ports.ifOperStatus != ports.ifOperStatus_prev AND ports.ifOperStatus_prev = \"up\" AND ports.ifAdminStatus = \"up\" Description: Ports that were previously up and have now gone down. Example: macros.port_now_down = 1","title":"Ports now down (Boolean)"},{"location":"Alerting/Macros/#port-has-xdp-neighbour-boolean","text":"Entity: %macros.port AND %links.local_port_id = %ports.port_id Description: Ports that have an xDP (lldp, cdp, etc) neighbour. Example: macros.port_has_xdp_neighbours = 1","title":"Port has xDP neighbour (Boolean)"},{"location":"Alerting/Macros/#port-has-xdp-neighbour-already-known-in-librenms-boolean","text":"Entity: %macros.port_has_neighbours AND (%links.remote_port_id IS NOT NULL) Description: Ports that have an xDP (lldp, cdp, etc) neighbour that is already known in libreNMS. Example: macros.port_has_xdp_neighbours_device = 1","title":"Port has xDP neighbour already known in LibreNMS (Boolean)"},{"location":"Alerting/Macros/#device-component-down-junos","text":"Entity: sensors.sensor_class = \"state\" AND sensors.sensor_current != \"6\" AND sensors.sensor_type = \"jnxFruState\" AND sensors.sensor_current != \"2\" Description: Device component is down such as Fan, PSU, etc for JunOS devices. Example: macros.device_component_down_junos = 1","title":"Device component down [JunOS]"},{"location":"Alerting/Macros/#device-component-down-cisco","text":"Entity: sensors.sensor_current != 1 AND sensors.sensor_current != 5 AND sensors.sensor_type ~ \"^cisco.*State$\" Description: Device component is down such as Fan, PSU, etc for Cisco devices. Example: macros.device_component_down_cisco = 1","title":"Device component down [Cisco]"},{"location":"Alerting/Macros/#pdu-over-amperage-apc","text":"Entity: sensors.sensor_class = \"current\" AND sensors.sensor_descr = \"Bank Total\" AND sensors.sensor_current > sensors.sensor_limit AND devices.os = \"apc\" Description: APC PDU over amperage Example: macros.pdu_over_amperage_apc = 1","title":"PDU over amperage [APC]"},{"location":"Alerting/Old_Templates/","text":"Templates Templates can be assigned to a single or a group of rules and can contain any kind of text. There is also a default template which is used for any rule that isn't associated with a template. This template can be found under Alert Templates page and can be edited. It also has an option revert it back to its default content. The template-parser understands if and foreach controls and replaces certain placeholders with information gathered about the alert. Syntax Controls: if-else (Else can be omitted): {if %placeholder == value}Some Text{else}Other Text{/if} foreach-loop: {foreach %faults}Key: %key<br/>Value: %value{/foreach} Placeholders: Placeholders are special variables that if used within the template will be replaced with the relevant data, I.e: The device %hostname has been up for %uptime seconds would result in the following The device localhost has been up for 30344 seconds . Device ID: %device_id Hostname of the Device: %hostname sysName of the Device: %sysName sysDescr of the Device: %sysDescr hardware of the Device: %hardware Software version of the Device: %version location of the Device: %location uptime of the Device (in seconds): %uptime short uptime of the Device (28d 22h 30m 7s): %uptime_short long uptime of the Device (28 days, 22h 30m 7s): %uptime_long description (purpose db field) of the Device: %description notes of the Device: %notes notes of the alert: %alert_notes ping timestamp (if icmp enabled): %ping_timestamp ping loss (if icmp enabled): %ping_loss ping min (if icmp enabled): %ping_min ping max (if icmp enabled): %ping_max ping avg (if icmp enabled): %ping_avg Title for the Alert: %title Time Elapsed, Only available on recovery ( %state == 0 ): %elapsed Alert-ID: %id Unique-ID: %uid Faults, Only available on alert ( %state != 0 ), must be iterated in a foreach ( {foreach %faults} ). Holds all available information about the Fault, accessible in the format %value.Column , for example: %value.ifDescr . Special field %value.string has most Identification-information (IDs, Names, Descrs) as single string, this is the equivalent of the default used. State: %state Severity: %severity Rule: %rule Rule-Name: %name Timestamp: %timestamp Transport name: %transport Contacts, must be iterated in a foreach, %key holds email and %value holds name: %contacts Placeholders can be used within the subjects for templates as well although %faults is most likely going to be worthless. NOTE: Placeholder names which are contained within another need to be ordered correctly. As an example: Limit: %value.sensor_limit / %value.sensor_limit_low Should be done as: Limit: %value.sensor_limit_low / %value.sensor_limit The Default Template is a 'one-size-fit-all'. We highly recommend defining your own templates for your rules to include more specific information. Examples Default Template: %title Severity: %severity {if %state == 0}Time elapsed: %elapsed{/if} Timestamp: %timestamp Unique-ID: %uid Rule: {if %name}%name{else}%rule{/if} {if %faults}Faults: {foreach %faults} #%key: %value.string{/foreach}{/if} Alert sent to: {foreach %contacts}%value <%key> {/foreach} Ports Utilization Template: %title Device Name: %hostname Severity: %severity {if %state == 0}Time elapsed: %elapsed{/if} Timestamp: %timestamp Rule: {if %name}%name{else}%rule{/if} {foreach %faults} Physical Interface: %value.ifDescr Interface Description: %value.ifAlias Interface Speed: {calc (%value.ifSpeed/1000000000)} Gbs Inbound Utilization: {calc ((%value.ifInOctets_rate*8)/%value.ifSpeed)*100}% Outbound Utilization: {calc ((%value.ifOutOctets_rate*8)/%value.ifSpeed)*100}% {/foreach} Storage: %title Device Name: %hostname Severity: %severity Uptime: %uptime_short {if %state == 0}Time elapsed: %elapsed{/if} Timestamp: %timestamp Location: %location Description: %description Features: %features Purpose: %purpose Notes: %notes Server: %sysName {foreach %faults}Mount Point: %value.storage_descr Percent Utilized: %value.storage_perc{/foreach} Temperature Sensors: %title Device Name: %hostname Severity: %severity Timestamp: %timestamp Uptime: %uptime_short {if %state == 0}Time elapsed: %elapsed{/if} Location: %location Description: %description Features: %features Purpose: %purpose Notes: %notes Rule: {if %name}%name{else}%rule{/if} {if %faults}Faults: {foreach %faults} #%key: Temperature: %value.sensor_current\u00b0C ** {calc(%value.sensor_current-%value.sensor_limit)}\u00b0C over limit Previous Measurement: %value.sensor_prev\u00b0C High Temperature Limit: %value.sensor_limit\u00b0C {/foreach} {/if} Value Sensors: %title Device Name: %hostname Severity: %severity Timestamp: %timestamp Uptime: %uptime_short {if %state == 0}Time elapsed: %elapsed{/if} Location: %location Description: %description Features: %features Purpose: %purpose Notes: %notes Rule: {if %name}%name{else}%rule{/if} {if %faults}Faults: {foreach %faults} #%key: Sensor%value.sensor_current ** {calc(%value.sensor_current-%value.sensor_limit)}over limit Previous Measurement: %value.sensor_prev Limit: %value.sensor_limit {/foreach} {/if} Memory Alert: %title Device Name: %hostname Severity: %severity Uptime: %uptime_short {if %state == 0}Time elapsed: %elapsed{/if} Timestamp: %timestamp Location: %location Description: %description Notes: %notes Server: %hostname {foreach %faults} Memory Description: %value.mempool_descr Percent Utilized: %value.mempool_perc{/foreach} Conditional formatting example, will display a link to the host in email or just the hostname in any other transport: {if %transport == mail}<a href=\"https://my.librenms.install/device/device=%hostname/\">%hostname</a> {else} %hostname {/if} Note the use of double-quotes. Single quotes ( ' ) in templates will be escaped (replaced with \\' ) in the output and should therefore be avoided. Examples HTML Note: To use HTML emails you must set HTML email to Yes in the WebUI under Global Settings > Alerting Settings > Email transport > Use HTML emails Note: To include Graphs you must enable unauthorized graphs in config.php. Allow_unauth_graphs_cidr is optional, but more secure. $config['allow_unauth_graphs_cidr'] = array('127.0.0.1/32'); $config['allow_unauth_graphs'] = true; Service Alert: <div style=\"font-family:Helvetica;\"> <h2>{if %state == 1}<span style=\"color:red;\">%severity{/if} {if %state == 2}<span style=\"color:goldenrod;\">acknowledged{/if}</span> {if %state == 3}<span style=\"color:green;\">recovering{/if}</span> {if %state == 0}<span style=\"color:green;\">recovered{/if}</span> </h2> <b>Host:</b> %hostname<br> <b>Duration:</b> %elapsed<br> <br> {if %faults} {foreach %faults}<b>%value.service_desc - %value.service_type</b><br> %value.service_message<br> <br> {/foreach} {/if} </div> Processor Alert with Graph: %title <br> Severity: %severity <br> {if %state == 0}Time elapsed: %elapsed{/if} Timestamp: %timestamp <br> Alert-ID: %id <br> Rule: {if %name}%name{else}%rule{/if} <br> {if %faults}Faults: {foreach %faults} #%key: %value.string <br> {/foreach} {if %faults}<b>Faults:</b><br> {foreach %faults}<img src=\"https://server/graph.php?device=%value.device_id&type=device_processor&width=459&height=213&lazy_w=552&from=end-72h%22/%3E<br> https://server/graphs/id=%value.device_id/type=device_processor/<br> {/foreach} Template: CPU alert <br> {/if} {/if} Included We include a few templates for you to use, these are specific to the type of alert rules you are creating. For example if you create a rule that would alert on BGP sessions then you can assign the BGP template to this rule to provide more information. The included templates apart from the default template are: BGP Sessions Ports Temperature","title":"Templates"},{"location":"Alerting/Old_Templates/#templates","text":"Templates can be assigned to a single or a group of rules and can contain any kind of text. There is also a default template which is used for any rule that isn't associated with a template. This template can be found under Alert Templates page and can be edited. It also has an option revert it back to its default content. The template-parser understands if and foreach controls and replaces certain placeholders with information gathered about the alert.","title":"Templates"},{"location":"Alerting/Old_Templates/#syntax","text":"Controls: if-else (Else can be omitted): {if %placeholder == value}Some Text{else}Other Text{/if} foreach-loop: {foreach %faults}Key: %key<br/>Value: %value{/foreach} Placeholders: Placeholders are special variables that if used within the template will be replaced with the relevant data, I.e: The device %hostname has been up for %uptime seconds would result in the following The device localhost has been up for 30344 seconds . Device ID: %device_id Hostname of the Device: %hostname sysName of the Device: %sysName sysDescr of the Device: %sysDescr hardware of the Device: %hardware Software version of the Device: %version location of the Device: %location uptime of the Device (in seconds): %uptime short uptime of the Device (28d 22h 30m 7s): %uptime_short long uptime of the Device (28 days, 22h 30m 7s): %uptime_long description (purpose db field) of the Device: %description notes of the Device: %notes notes of the alert: %alert_notes ping timestamp (if icmp enabled): %ping_timestamp ping loss (if icmp enabled): %ping_loss ping min (if icmp enabled): %ping_min ping max (if icmp enabled): %ping_max ping avg (if icmp enabled): %ping_avg Title for the Alert: %title Time Elapsed, Only available on recovery ( %state == 0 ): %elapsed Alert-ID: %id Unique-ID: %uid Faults, Only available on alert ( %state != 0 ), must be iterated in a foreach ( {foreach %faults} ). Holds all available information about the Fault, accessible in the format %value.Column , for example: %value.ifDescr . Special field %value.string has most Identification-information (IDs, Names, Descrs) as single string, this is the equivalent of the default used. State: %state Severity: %severity Rule: %rule Rule-Name: %name Timestamp: %timestamp Transport name: %transport Contacts, must be iterated in a foreach, %key holds email and %value holds name: %contacts Placeholders can be used within the subjects for templates as well although %faults is most likely going to be worthless. NOTE: Placeholder names which are contained within another need to be ordered correctly. As an example: Limit: %value.sensor_limit / %value.sensor_limit_low Should be done as: Limit: %value.sensor_limit_low / %value.sensor_limit The Default Template is a 'one-size-fit-all'. We highly recommend defining your own templates for your rules to include more specific information.","title":"Syntax"},{"location":"Alerting/Old_Templates/#examples","text":"Default Template: %title Severity: %severity {if %state == 0}Time elapsed: %elapsed{/if} Timestamp: %timestamp Unique-ID: %uid Rule: {if %name}%name{else}%rule{/if} {if %faults}Faults: {foreach %faults} #%key: %value.string{/foreach}{/if} Alert sent to: {foreach %contacts}%value <%key> {/foreach} Ports Utilization Template: %title Device Name: %hostname Severity: %severity {if %state == 0}Time elapsed: %elapsed{/if} Timestamp: %timestamp Rule: {if %name}%name{else}%rule{/if} {foreach %faults} Physical Interface: %value.ifDescr Interface Description: %value.ifAlias Interface Speed: {calc (%value.ifSpeed/1000000000)} Gbs Inbound Utilization: {calc ((%value.ifInOctets_rate*8)/%value.ifSpeed)*100}% Outbound Utilization: {calc ((%value.ifOutOctets_rate*8)/%value.ifSpeed)*100}% {/foreach} Storage: %title Device Name: %hostname Severity: %severity Uptime: %uptime_short {if %state == 0}Time elapsed: %elapsed{/if} Timestamp: %timestamp Location: %location Description: %description Features: %features Purpose: %purpose Notes: %notes Server: %sysName {foreach %faults}Mount Point: %value.storage_descr Percent Utilized: %value.storage_perc{/foreach} Temperature Sensors: %title Device Name: %hostname Severity: %severity Timestamp: %timestamp Uptime: %uptime_short {if %state == 0}Time elapsed: %elapsed{/if} Location: %location Description: %description Features: %features Purpose: %purpose Notes: %notes Rule: {if %name}%name{else}%rule{/if} {if %faults}Faults: {foreach %faults} #%key: Temperature: %value.sensor_current\u00b0C ** {calc(%value.sensor_current-%value.sensor_limit)}\u00b0C over limit Previous Measurement: %value.sensor_prev\u00b0C High Temperature Limit: %value.sensor_limit\u00b0C {/foreach} {/if} Value Sensors: %title Device Name: %hostname Severity: %severity Timestamp: %timestamp Uptime: %uptime_short {if %state == 0}Time elapsed: %elapsed{/if} Location: %location Description: %description Features: %features Purpose: %purpose Notes: %notes Rule: {if %name}%name{else}%rule{/if} {if %faults}Faults: {foreach %faults} #%key: Sensor%value.sensor_current ** {calc(%value.sensor_current-%value.sensor_limit)}over limit Previous Measurement: %value.sensor_prev Limit: %value.sensor_limit {/foreach} {/if} Memory Alert: %title Device Name: %hostname Severity: %severity Uptime: %uptime_short {if %state == 0}Time elapsed: %elapsed{/if} Timestamp: %timestamp Location: %location Description: %description Notes: %notes Server: %hostname {foreach %faults} Memory Description: %value.mempool_descr Percent Utilized: %value.mempool_perc{/foreach} Conditional formatting example, will display a link to the host in email or just the hostname in any other transport: {if %transport == mail}<a href=\"https://my.librenms.install/device/device=%hostname/\">%hostname</a> {else} %hostname {/if} Note the use of double-quotes. Single quotes ( ' ) in templates will be escaped (replaced with \\' ) in the output and should therefore be avoided.","title":"Examples"},{"location":"Alerting/Old_Templates/#examples-html","text":"Note: To use HTML emails you must set HTML email to Yes in the WebUI under Global Settings > Alerting Settings > Email transport > Use HTML emails Note: To include Graphs you must enable unauthorized graphs in config.php. Allow_unauth_graphs_cidr is optional, but more secure. $config['allow_unauth_graphs_cidr'] = array('127.0.0.1/32'); $config['allow_unauth_graphs'] = true; Service Alert: <div style=\"font-family:Helvetica;\"> <h2>{if %state == 1}<span style=\"color:red;\">%severity{/if} {if %state == 2}<span style=\"color:goldenrod;\">acknowledged{/if}</span> {if %state == 3}<span style=\"color:green;\">recovering{/if}</span> {if %state == 0}<span style=\"color:green;\">recovered{/if}</span> </h2> <b>Host:</b> %hostname<br> <b>Duration:</b> %elapsed<br> <br> {if %faults} {foreach %faults}<b>%value.service_desc - %value.service_type</b><br> %value.service_message<br> <br> {/foreach} {/if} </div> Processor Alert with Graph: %title <br> Severity: %severity <br> {if %state == 0}Time elapsed: %elapsed{/if} Timestamp: %timestamp <br> Alert-ID: %id <br> Rule: {if %name}%name{else}%rule{/if} <br> {if %faults}Faults: {foreach %faults} #%key: %value.string <br> {/foreach} {if %faults}<b>Faults:</b><br> {foreach %faults}<img src=\"https://server/graph.php?device=%value.device_id&type=device_processor&width=459&height=213&lazy_w=552&from=end-72h%22/%3E<br> https://server/graphs/id=%value.device_id/type=device_processor/<br> {/foreach} Template: CPU alert <br> {/if} {/if}","title":"Examples HTML"},{"location":"Alerting/Old_Templates/#included","text":"We include a few templates for you to use, these are specific to the type of alert rules you are creating. For example if you create a rule that would alert on BGP sessions then you can assign the BGP template to this rule to provide more information. The included templates apart from the default template are: BGP Sessions Ports Temperature","title":"Included"},{"location":"Alerting/Rules/","text":"Rules Rules are defined using a logical language. The GUI provides a simple way of creating rules. Creating more complicated rules which may include maths calculations and MySQL queries can be done using macros Video on how the alert rules work in LibreNMS Alert Rules Video on how to use alert rule with wildcards Alert Rules wildcard Syntax Rules must consist of at least 3 elements: An Entity , a Condition and a Value . Rules can contain braces and Glues . Entities are provided from Table and Field from the database. For Example: ports.ifOperStatus . Conditions can be any of: Equals = Not Equals != In IN Not In NOT IN Begins with LIKE ('...%') Doesn't begin with NOT LIKE ('...%') Contains LIKE ('%...%') Doesn't Contain NOT LIKE ('%...%') Ends with LIKE ('%...') Doesn't end with NOT LIKE ('%...') Between BETWEEN Not Between NOT BETWEEN Is Empty = '' Is Not Empty != ''' Is Null IS NULL Is Not Null IS NOT NULL Greater > Greater or Equal >= Less < Less or Equal <= Regex REGEXP Values can be an entity or any data. If using macros as value you must include the macro name into backticks. i.e. `macros.past_60m` Note : Regex supports MySQL Regular expressions. Arithmetics are allowed as well. Options Here are some of the other options available when adding an alerting rule: Rule name: The name associated with the rule. Severity: How \"important\" the rule is. Max alerts: The maximum number of alerts sent for the event. -1 means unlimited. Delay: The amount of time in seconds to wait after a rule is matched before sending an alert out transport. Interval: The interval of time in seconds between alerts for an event until Max alert is reached. Mute alerts: Disables sending alert rule through alert transport. But will still show the alert in the Web UI. Invert match: Invert the matching rule (ie. alert on items that _don't match the rule). Recovery alerts: This will disable the recovery notification from being sent if turned off. Advanced On the Advanced tab, you can specify some additional options for the alert rule: Override SQL: Enable this if you using a custom query Query: The query to be used for the alert. An example of this would be an average rule for all CPUs over 10% SELECT * , AVG ( processors . processor_usage ) as cpu_avg FROM devices , processors WHERE ( devices . device_id = ? AND devices . device_id = processors . device_id ) AND ( devices . status = 1 && ( devices . disabled = 0 && devices . ignore = 0 )) = 1 HAVING AVG ( processors . processor_usage ) > 10 The 10 would then contain the average CPU usage value, you can change this value to be whatever you like. You will to need copy and paste this into the Alert Rule under Advanced then paste into Query box and switch the Override SQL. Procedure You can associate a rule to a procedure by giving the URL of the procedure when creating the rule. Only links like \"http://\" are supported, otherwise an error will be returned. Once configured, procedure can be opened from the Alert widget through the \"Open\" button, which can be shown/hidden from the widget configuration box. Examples Alert when: Device goes down: devices.status != 1 Any port changes: ports.ifOperStatus != 'up' Root-directory gets too full: storage.storage_descr = '/' AND storage.storage_perc >= '75' Any storage gets fuller than the 'warning': storage.storage_perc >= storage_perc_warn If device is a server and the used storage is above the warning level, but ignore /boot partitions: storage.storage_perc > storage.storage_perc_warn AND devices.type = \"server\" AND storage.storage_descr != \"/boot\" VMware LAG is not using \"Source ip address hash\" load balancing: devices.os = \"vmware\" AND ports.ifType = \"ieee8023adLag\" AND ports.ifDescr REGEXP \"Link Aggregation .*, load balancing algorithm: Source ip address hash\" Syslog, authentication failure during the last 5m: syslog.timestamp >= macros.past_5m AND syslog.msg REGEXP \".*authentication failure.*\" High memory usage: macros.device_up = 1 AND mempools.mempool_perc >= 90 AND mempools.mempool_descr REGEXP \"Virtual.*\" High CPU usage(per core usage, not overall): macros.device_up = 1 AND processors.processor_usage >= 90 High port usage, where description is not client & ifType is not softwareLoopback: macros.port_usage_perc >= 80 AND port.port_descr_type != \"client\" AND ports.ifType != \"softwareLoopback\" Alert when mac address is located on your network ipv4_mac.mac_address = \"2c233a756912\" Alert Rules Collection You can also select Alert Rule from the Alerts Collection. These Alert Rules are submitted by users in the community :) If would like to submit your alert rules to the collection, please submit them here Alert Rules Collection","title":"Rules"},{"location":"Alerting/Rules/#rules","text":"Rules are defined using a logical language. The GUI provides a simple way of creating rules. Creating more complicated rules which may include maths calculations and MySQL queries can be done using macros","title":"Rules"},{"location":"Alerting/Rules/#video-on-how-the-alert-rules-work-in-librenms","text":"Alert Rules","title":"Video on how the alert rules work in LibreNMS"},{"location":"Alerting/Rules/#video-on-how-to-use-alert-rule-with-wildcards","text":"Alert Rules wildcard","title":"Video on how to use alert rule with wildcards"},{"location":"Alerting/Rules/#syntax","text":"Rules must consist of at least 3 elements: An Entity , a Condition and a Value . Rules can contain braces and Glues . Entities are provided from Table and Field from the database. For Example: ports.ifOperStatus . Conditions can be any of: Equals = Not Equals != In IN Not In NOT IN Begins with LIKE ('...%') Doesn't begin with NOT LIKE ('...%') Contains LIKE ('%...%') Doesn't Contain NOT LIKE ('%...%') Ends with LIKE ('%...') Doesn't end with NOT LIKE ('%...') Between BETWEEN Not Between NOT BETWEEN Is Empty = '' Is Not Empty != ''' Is Null IS NULL Is Not Null IS NOT NULL Greater > Greater or Equal >= Less < Less or Equal <= Regex REGEXP Values can be an entity or any data. If using macros as value you must include the macro name into backticks. i.e. `macros.past_60m` Note : Regex supports MySQL Regular expressions. Arithmetics are allowed as well.","title":"Syntax"},{"location":"Alerting/Rules/#options","text":"Here are some of the other options available when adding an alerting rule: Rule name: The name associated with the rule. Severity: How \"important\" the rule is. Max alerts: The maximum number of alerts sent for the event. -1 means unlimited. Delay: The amount of time in seconds to wait after a rule is matched before sending an alert out transport. Interval: The interval of time in seconds between alerts for an event until Max alert is reached. Mute alerts: Disables sending alert rule through alert transport. But will still show the alert in the Web UI. Invert match: Invert the matching rule (ie. alert on items that _don't match the rule). Recovery alerts: This will disable the recovery notification from being sent if turned off.","title":"Options"},{"location":"Alerting/Rules/#advanced","text":"On the Advanced tab, you can specify some additional options for the alert rule: Override SQL: Enable this if you using a custom query Query: The query to be used for the alert. An example of this would be an average rule for all CPUs over 10% SELECT * , AVG ( processors . processor_usage ) as cpu_avg FROM devices , processors WHERE ( devices . device_id = ? AND devices . device_id = processors . device_id ) AND ( devices . status = 1 && ( devices . disabled = 0 && devices . ignore = 0 )) = 1 HAVING AVG ( processors . processor_usage ) > 10 The 10 would then contain the average CPU usage value, you can change this value to be whatever you like. You will to need copy and paste this into the Alert Rule under Advanced then paste into Query box and switch the Override SQL.","title":"Advanced"},{"location":"Alerting/Rules/#procedure","text":"You can associate a rule to a procedure by giving the URL of the procedure when creating the rule. Only links like \"http://\" are supported, otherwise an error will be returned. Once configured, procedure can be opened from the Alert widget through the \"Open\" button, which can be shown/hidden from the widget configuration box.","title":"Procedure"},{"location":"Alerting/Rules/#examples","text":"Alert when: Device goes down: devices.status != 1 Any port changes: ports.ifOperStatus != 'up' Root-directory gets too full: storage.storage_descr = '/' AND storage.storage_perc >= '75' Any storage gets fuller than the 'warning': storage.storage_perc >= storage_perc_warn If device is a server and the used storage is above the warning level, but ignore /boot partitions: storage.storage_perc > storage.storage_perc_warn AND devices.type = \"server\" AND storage.storage_descr != \"/boot\" VMware LAG is not using \"Source ip address hash\" load balancing: devices.os = \"vmware\" AND ports.ifType = \"ieee8023adLag\" AND ports.ifDescr REGEXP \"Link Aggregation .*, load balancing algorithm: Source ip address hash\" Syslog, authentication failure during the last 5m: syslog.timestamp >= macros.past_5m AND syslog.msg REGEXP \".*authentication failure.*\" High memory usage: macros.device_up = 1 AND mempools.mempool_perc >= 90 AND mempools.mempool_descr REGEXP \"Virtual.*\" High CPU usage(per core usage, not overall): macros.device_up = 1 AND processors.processor_usage >= 90 High port usage, where description is not client & ifType is not softwareLoopback: macros.port_usage_perc >= 80 AND port.port_descr_type != \"client\" AND ports.ifType != \"softwareLoopback\" Alert when mac address is located on your network ipv4_mac.mac_address = \"2c233a756912\"","title":"Examples"},{"location":"Alerting/Rules/#alert-rules-collection","text":"You can also select Alert Rule from the Alerts Collection. These Alert Rules are submitted by users in the community :) If would like to submit your alert rules to the collection, please submit them here Alert Rules Collection","title":"Alert Rules Collection"},{"location":"Alerting/Templates/","text":"Templates This page is for installs running version 1.42 or later. You can find the older docs here Templates can be assigned to a single or a group of rules and can contain any kind of text. There is also a default template which is used for any rule that isn't associated with a template. This template can be found under Alert Templates page and can be edited. It also has an option revert it back to its default content. To attach a template to a rule just open the Alert Templates settings page, choose the template to assign and click the yellow button in the Actions column. In the appearing popupbox select the rule(s) you want the template to be assigned to and click the Attach button. You might hold down the CTRL key to select multiple rules at once. The templating engine in use is Laravel Blade. We will cover some of the basics here, however the official Laravel docs will have more information here Syntax Controls: if-else (Else can be omitted): @if ($alert->placeholder == 'value') Some Text @else Other Text @endif foreach-loop: @foreach ($alert->faults as $key => $value) Key: $key </br> alue: $value @endforeach Placeholders: Placeholders are special variables that if used within the template will be replaced with the relevant data, I.e: The device {{ $alert->hostname }} has been up for {{ $alert->uptime }} seconds would result in the following The device localhost has been up for 30344 seconds . When using placeholders to echo data, you need to wrap the placeholder in {{ }} . I.e {{ $alert->hostname }} . Device ID: $alert->device_id Hostname of the Device: $alert->hostname sysName of the Device: $alert->sysName sysDescr of the Device: $alert->sysDescr sysContact of the Device: $alert->sysContact OS of the Device: $alert->os Type of Device: $alert->type IP of the Device: $alert->ip Hardware of the Device: $alert->hardware Software version of the Device: $alert->version Features of the Device: $alert->features Serial number of the Device: $alert->serial Location of the Device: $alert->location uptime of the Device (in seconds): $alert->uptime Short uptime of the Device (28d 22h 30m 7s): $alert->uptime_short Long uptime of the Device (28 days, 22h 30m 7s): $alert->uptime_long Description (purpose db field) of the Device: $alert->description Notes of the Device: $alert->notes Notes of the alert (ack notes): $alert->alert_notes ping timestamp (if icmp enabled): $alert->ping_timestamp ping loss (if icmp enabled): $alert->ping_loss ping min (if icmp enabled): $alert->ping_min ping max (if icmp enabled): $alert->ping_max ping avg (if icmp enabled): $alert->ping_avg debug (array) If $config['debug']['run_trace] = true; is set then this will contain: traceroute (if enabled you will receive traceroute output): $alert->debug['traceroute'] output (if the traceroute fails this will contain why): $alert->debug['output'] Title for the Alert: $alert->title Time Elapsed, Only available on recovery ( $alert->state == 0 ): $alert->elapsed Rule Builder (the actual rule) (use {!! $alert->builder !!} ): $alert->builder Alert-ID: $alert->id Unique-ID: $alert->uid Faults, Only available on alert ( $alert->state != 0 ), must be iterated in a foreach ( @foreach ($alert->faults as $key => $value) @endforeach ). Holds all available information about the Fault, accessible in the format $value['Column'] , for example: $value['ifDescr'] . Special field $value['string'] has most Identification-information (IDs, Names, Descrs) as single string, this is the equivalent of the default used and must be encased in {{ }} State: $alert->state Severity: $alert->severity Rule: $alert->rule Rule-Name: $alert->name Procedure URL: $alert->proc Timestamp: $alert->timestamp Transport type: $alert->transport Transport name: $alert->transport_name Contacts, must be iterated in a foreach, $key holds email and $value holds name: $alert->contacts Placeholders can be used within the subjects for templates as well although $faults is most likely going to be worthless. The Default Template is a 'one-size-fit-all'. We highly recommend defining your own templates for your rules to include more specific information. Base Templates If you'd like to reuse a common template for your alerts follow below A default file is located in resources/views/alerts/templates/default.blade.php Displays the following: <html> <head> <title>LibreNMS Alert</title> </head> <body> <div class=\"container\"> @yield('content') </div> </body> </html> The important part being the @yield('content') You can use plain text or html as per Alert templates and this will form the basis of your common template, feel free to make as many templates in the directory as needed. In your alert template just use @extends('alerts.templates.default') @section('content') {{ $alert->title }} Severity: {{ $alert->severity }} ... @endsection More info: https://laravel.com/docs/5.7/blade#extending-a-layout Examples Default Template {{ $alert->title }} Severity: {{ $alert->severity }} @if ($alert->state == 0) Time elapsed: {{ $alert->elapsed }} @endif Timestamp: {{ $alert->timestamp }} Unique-ID: {{ $alert->uid }} Rule: @if ($alert->name) {{ $alert->name }} @else {{ $alert->rule }} @endif @if ($alert->faults) Faults: @foreach ($alert->faults as $key => $value) {{ $key }}: {{ $value['string'] }} @endforeach @endif Alert sent to: @foreach ($alert->contacts as $key => $value) {{ $value }} <{{ $key }}> @endforeach Ports Utilization Template {{ $alert->title }} Device Name: {{ $alert->hostname }} Severity: {{ $alert->severity }} @if ($alert->state == 0) Time elapsed: {{ $alert->elapsed }} @endif Timestamp: {{ $alert->timestamp }} Rule: @if ($alert->name) {{ $alert->name }} @else {{ $alert->rule }} @endif @foreach ($alert->faults as $key => $value) Physical Interface: {{ $value['ifDescr'] }} Interface Description: {{ $value['ifAlias'] }} Interface Speed: {{ ($value['ifSpeed']/1000000000) }} Gbs Inbound Utilization: {{ (($value['ifInOctets_rate']*8)/$value['ifSpeed'])*100 }} Outbound Utilization: {{ (($value['ifOutOctets_rate']*8)/$value['ifSpeed'])*100 }} @endforeach Storage {{ $alert->title }} Device Name: {{ $alert->hostname }} Severity: {{ $alert->severity }} Uptime: {{ $alert->uptime_short }} @if ($alert->state == 0) Time elapsed: {{ $alert->elapsed }} @endif Timestamp: {{ $alert->timestamp }} Location: {{ $alert->location }} Description: {{ $alert->description }} Features: {{ $alert->features }} Purpose: {{ $alert->purpose }} Notes: {{ $alert->notes }} Server: {{ $alert->sysName }} @foreach ($alert->faults as $key => $value) Mount Point: {{ $value['storage_descr'] }} Percent Utilized: {{ $value['storage_perc'] }} @endforeach Temperature Sensors {{ $alert->title }} Device Name: {{ $alert->hostname }} Severity: {{ $alert->severity }} Timestamp: {{ $alert->timestamp }} Uptime: {{ $alert->uptime_short }} @if ($alert->state == 0) Time elapsed: {{ $alert->elapsed }} @endif Location: {{ $alert->location }} Description: {{ $alert->description }} Features: {{ $alert->features }} Purpose: {{ $alert->purpose }} Notes: {{ $alert->notes }} Rule: @if ($alert->name) {{ $alert->name }} @else {{ $alert->rule }} @endif @if ($alert->faults) Faults: @foreach ($faults as $key => $value) #{{ $key }}: Temperature: {{ $value['sensor_current'] }} \u00b0C ** @php echo ($value['sensor_current']-$value['sensor_limit']); @endphp\u00b0C over limit Previous Measurement: {{ $value['sensor_prev'] }} \u00b0C High Temperature Limit: {{ $value['sensor_limit'] }} \u00b0C @endforeach @endif Value Sensors {{ $alert->title }} Device Name: {{ $alert->hostname }} Severity: {{ $alert->severity }} Timestamp: {{ $alert->timestamp }} Uptime: {{ $alert->uptime_short }} @if ($alert->state == 0) Time elapsed: {{ $alert->elapsed }} @endif Location: {{ $alert->location }} Description: {{ $alert->description }} Features: {{ $alert->features }} Purpose: {{ $alert->purpose }} Notes: {{ $alert->notes }} Rule: @if ($alert->name) {{ $alert->name }} @else {{ $alert->rule }} @endif @if ($alert->faults) Faults: @foreach ($alert->faults as $key => $value) #{{ $key }}: Sensor {{ $value['sensor_current'] }} ** @php echo ($value['sensor_current']-$value['sensor_limit']); @endphp over limit Previous Measurement: {{ $value['sensor_prev'] }} Limit: {{ $value['sensor_limit'] }} @endforeach @endif Memory Alert {{ $alert->title }} Device Name: {{ $alert->hostname }} Severity: {{ $alert->severity }} Uptime: {{ $alert->uptime_short }} @if ($alert->state == 0) Time elapsed: {{ $alert->elapsed }} @endif Timestamp: {{ $alert->timestamp }} Location: {{ $alert->location }} Description: {{ $alert->description }} Notes: {{ $alert->notes }} Server: {{ $alert->hostname }} @foreach ($alert->faults as $key => $value) Memory Description: {{ $value['mempool_descr'] }} Percent Utilized: {{ $value['mempool_perc'] }} @endforeach Advanced options Conditional formatting Conditional formatting example, will display a link to the host in email or just the hostname in any other transport: @if ($alert->transport == 'mail')<a href=\"https://my.librenms.install/device/device={{ $alert->hostname }}/\">{{ $alert->hostname }}</a> @else {{ $alert->hostname }} @endif Traceroute debugs @if ($alert->status == 0) @if ($alert->status == icmp) {{ $alert->debug['traceroute'] }} @endif @endif Examples HTML Note: To use HTML emails you must set HTML email to Yes in the WebUI under Global Settings > Alerting Settings > Email transport > Use HTML emails Note: To include Graphs you must enable unauthorized graphs in config.php. Allow_unauth_graphs_cidr is optional, but more secure. $config['allow_unauth_graphs_cidr'] = array('127.0.0.1/32'); $config['allow_unauth_graphs'] = true; Service Alert <div style=\"font-family:Helvetica;\"> <h2>@if ($alert->state == 1) <span style=\"color:red;\">{{ $alert->severity }} @endif @if ($alert->state == 2) <span style=\"color:goldenrod;\">acknowledged @endif</span> @if ($alert->state == 3) <span style=\"color:green;\">recovering @endif</span> @if ($alert->state == 0) <span style=\"color:green;\">recovered @endif</span> </h2> <b>Host:</b> {{ $alert->hostname }}<br> <b>Duration:</b> {{ $alert->elapsed }}<br> <br> @if ($alert->faults) @foreach ($alert->faults as $key => $value) <b>{{ $value['service_desc'] }} - {{ $value['service_type'] }}</b><br> {{ $value['service_message'] }}<br> <br> @endforeach @endif </div> Processor Alert with Graph {{ $alert->title }} <br> Severity: {{ $alert->severity }} <br> @if ($alert->state == 0) Time elapsed: {{ $alert->elapsed }} @endif Timestamp: {{ $alert->timestamp }} <br> Alert-ID: {{ $alert->id }} <br> Rule: @if ($alert->name) {{ $alert->name }} @else {{ $alert->rule }} @endif <br> @if ($alert->faults) Faults: @foreach ($alert->faults as $key => $value) {{ $key }}: {{ $value['string'] }}<br> @endforeach @if ($alert->faults) <b>Faults:</b><br> @foreach ($alert->faults as $key => $value)<img src=\"https://server/graph.php?device={{ $value['device_id'] }}&type=device_processor&width=459&height=213&lazy_w=552&from=end-72h\"><br> https://server/graphs/id={{ $value['device_id'] }}/type=device_processor/<br> @endforeach Template: CPU alert <br> @endif @endif Included We include a few templates for you to use, these are specific to the type of alert rules you are creating. For example if you create a rule that would alert on BGP sessions then you can assign the BGP template to this rule to provide more information. The included templates apart from the default template are: BGP Sessions Ports Temperature Other Examples Microsoft Teams - Markdown [{{ $alert->title }}](https://your.librenms.url/device/device={{ $alert->device_id }}/) **Device name:** {{ $alert->sysName }} **Severity:** {{ $alert->severity }} @if ($alert->state == 0) **Time elapsed:** {{ $alert->elapsed }} @endif **Timestamp:** {{ $alert->timestamp }} **Unique-ID:** {{ $alert->uid }} @if ($alert->name) **Rule:** {{ $alert->name }} @else **Rule:** {{ $alert->rule }} @endif @if ($alert->faults) **Faults:**@foreach ($alert->faults as $key => $value) {{ $key }}: {{ $value['string'] }} @endforeach @endif Microsoft Teams - JSON { \"@context\": \"https://schema.org/extensions\", \"@type\": \"MessageCard\", \"title\": \"{{ $alert->title }}\", @if ($alert->state === 0) \"themeColor\": \"00FF00\", @elseif ($alert->state === 1) \"themeColor\": \"FF0000\", @elseif ($alert->state === 2) \"themeColor\": \"337AB7\", @elseif ($alert->state === 3) \"themeColor\": \"FF0000\", @elseif ($alert->state === 4) \"themeColor\": \"F0AD4E\", @else \"themeColor\": \"337AB7\", @endif \"summary\": \"LibreNMS\", \"sections\": [ { @if ($alert->name) \"facts\": [ { \"name\": \"Rule:\", \"value\": \"[{{ $alert->name }}](https://your.librenms.url/device/device={{ $alert->device_id }}/tab=alert/)\" }, @else { \"name\": \"Rule:\", \"value\": \"[{{ $alert->rule }}](https://your.librenms.url/device/device={{ $alert->device_id }}/tab=alert/)\" }, @endif { \"name\": \"Severity:\", \"value\": \"{{ $alert->severity }}\" }, { \"name\": \"Unique-ID:\", \"value\": \"{{ $alert->uid }}\" }, { \"name\": \"Timestamp:\", \"value\": \"{{ $alert->timestamp }}\" }, @if ($alert->state == 0) { \"name\": \"Time elapsed:\", \"value\": \"{{ $alert->elapsed }}\" }, @endif { \"name\": \"Hostname:\", \"value\": \"[{{ $alert->hostname }}](https://your.librenms.url/device/device={{ $alert->device_id }}/)\" }, { \"name\": \"Hardware:\", \"value\": \"{{ $alert->hardware }}\" }, { \"name\": \"IP:\", \"value\": \"{{ $alert->ip }}\" }, { \"name\": \"Faults:\", \"value\": \" \" } ] @if ($alert->faults) @foreach ($alert->faults as $key => $value) }, { \"facts\": [ { \"name\": \"Port:\", \"value\": \"[{{ $value['ifName'] }}](https://your.librenms.url/device/device={{ $alert->device_id }}/tab=port/port={{ $value['port_id'] }}/)\" }, { \"name\": \"Description:\", \"value\": \"{{ $value['ifAlias'] }}\" }, @if ($alert->state != 0) { \"name\": \"Status:\", \"value\": \"down\" } ] @else { \"name\": \"Status:\", \"value\": \"up\" } ] @endif @endforeach @endif } ] }","title":"Templates"},{"location":"Alerting/Templates/#templates","text":"This page is for installs running version 1.42 or later. You can find the older docs here Templates can be assigned to a single or a group of rules and can contain any kind of text. There is also a default template which is used for any rule that isn't associated with a template. This template can be found under Alert Templates page and can be edited. It also has an option revert it back to its default content. To attach a template to a rule just open the Alert Templates settings page, choose the template to assign and click the yellow button in the Actions column. In the appearing popupbox select the rule(s) you want the template to be assigned to and click the Attach button. You might hold down the CTRL key to select multiple rules at once. The templating engine in use is Laravel Blade. We will cover some of the basics here, however the official Laravel docs will have more information here","title":"Templates"},{"location":"Alerting/Templates/#syntax","text":"Controls: if-else (Else can be omitted): @if ($alert->placeholder == 'value') Some Text @else Other Text @endif foreach-loop: @foreach ($alert->faults as $key => $value) Key: $key </br> alue: $value @endforeach Placeholders: Placeholders are special variables that if used within the template will be replaced with the relevant data, I.e: The device {{ $alert->hostname }} has been up for {{ $alert->uptime }} seconds would result in the following The device localhost has been up for 30344 seconds . When using placeholders to echo data, you need to wrap the placeholder in {{ }} . I.e {{ $alert->hostname }} . Device ID: $alert->device_id Hostname of the Device: $alert->hostname sysName of the Device: $alert->sysName sysDescr of the Device: $alert->sysDescr sysContact of the Device: $alert->sysContact OS of the Device: $alert->os Type of Device: $alert->type IP of the Device: $alert->ip Hardware of the Device: $alert->hardware Software version of the Device: $alert->version Features of the Device: $alert->features Serial number of the Device: $alert->serial Location of the Device: $alert->location uptime of the Device (in seconds): $alert->uptime Short uptime of the Device (28d 22h 30m 7s): $alert->uptime_short Long uptime of the Device (28 days, 22h 30m 7s): $alert->uptime_long Description (purpose db field) of the Device: $alert->description Notes of the Device: $alert->notes Notes of the alert (ack notes): $alert->alert_notes ping timestamp (if icmp enabled): $alert->ping_timestamp ping loss (if icmp enabled): $alert->ping_loss ping min (if icmp enabled): $alert->ping_min ping max (if icmp enabled): $alert->ping_max ping avg (if icmp enabled): $alert->ping_avg debug (array) If $config['debug']['run_trace] = true; is set then this will contain: traceroute (if enabled you will receive traceroute output): $alert->debug['traceroute'] output (if the traceroute fails this will contain why): $alert->debug['output'] Title for the Alert: $alert->title Time Elapsed, Only available on recovery ( $alert->state == 0 ): $alert->elapsed Rule Builder (the actual rule) (use {!! $alert->builder !!} ): $alert->builder Alert-ID: $alert->id Unique-ID: $alert->uid Faults, Only available on alert ( $alert->state != 0 ), must be iterated in a foreach ( @foreach ($alert->faults as $key => $value) @endforeach ). Holds all available information about the Fault, accessible in the format $value['Column'] , for example: $value['ifDescr'] . Special field $value['string'] has most Identification-information (IDs, Names, Descrs) as single string, this is the equivalent of the default used and must be encased in {{ }} State: $alert->state Severity: $alert->severity Rule: $alert->rule Rule-Name: $alert->name Procedure URL: $alert->proc Timestamp: $alert->timestamp Transport type: $alert->transport Transport name: $alert->transport_name Contacts, must be iterated in a foreach, $key holds email and $value holds name: $alert->contacts Placeholders can be used within the subjects for templates as well although $faults is most likely going to be worthless. The Default Template is a 'one-size-fit-all'. We highly recommend defining your own templates for your rules to include more specific information.","title":"Syntax"},{"location":"Alerting/Templates/#base-templates","text":"If you'd like to reuse a common template for your alerts follow below A default file is located in resources/views/alerts/templates/default.blade.php Displays the following: <html> <head> <title>LibreNMS Alert</title> </head> <body> <div class=\"container\"> @yield('content') </div> </body> </html> The important part being the @yield('content') You can use plain text or html as per Alert templates and this will form the basis of your common template, feel free to make as many templates in the directory as needed. In your alert template just use @extends('alerts.templates.default') @section('content') {{ $alert->title }} Severity: {{ $alert->severity }} ... @endsection More info: https://laravel.com/docs/5.7/blade#extending-a-layout","title":"Base Templates"},{"location":"Alerting/Templates/#examples","text":"","title":"Examples"},{"location":"Alerting/Templates/#default-template","text":"{{ $alert->title }} Severity: {{ $alert->severity }} @if ($alert->state == 0) Time elapsed: {{ $alert->elapsed }} @endif Timestamp: {{ $alert->timestamp }} Unique-ID: {{ $alert->uid }} Rule: @if ($alert->name) {{ $alert->name }} @else {{ $alert->rule }} @endif @if ($alert->faults) Faults: @foreach ($alert->faults as $key => $value) {{ $key }}: {{ $value['string'] }} @endforeach @endif Alert sent to: @foreach ($alert->contacts as $key => $value) {{ $value }} <{{ $key }}> @endforeach","title":"Default Template"},{"location":"Alerting/Templates/#ports-utilization-template","text":"{{ $alert->title }} Device Name: {{ $alert->hostname }} Severity: {{ $alert->severity }} @if ($alert->state == 0) Time elapsed: {{ $alert->elapsed }} @endif Timestamp: {{ $alert->timestamp }} Rule: @if ($alert->name) {{ $alert->name }} @else {{ $alert->rule }} @endif @foreach ($alert->faults as $key => $value) Physical Interface: {{ $value['ifDescr'] }} Interface Description: {{ $value['ifAlias'] }} Interface Speed: {{ ($value['ifSpeed']/1000000000) }} Gbs Inbound Utilization: {{ (($value['ifInOctets_rate']*8)/$value['ifSpeed'])*100 }} Outbound Utilization: {{ (($value['ifOutOctets_rate']*8)/$value['ifSpeed'])*100 }} @endforeach","title":"Ports Utilization Template"},{"location":"Alerting/Templates/#storage","text":"{{ $alert->title }} Device Name: {{ $alert->hostname }} Severity: {{ $alert->severity }} Uptime: {{ $alert->uptime_short }} @if ($alert->state == 0) Time elapsed: {{ $alert->elapsed }} @endif Timestamp: {{ $alert->timestamp }} Location: {{ $alert->location }} Description: {{ $alert->description }} Features: {{ $alert->features }} Purpose: {{ $alert->purpose }} Notes: {{ $alert->notes }} Server: {{ $alert->sysName }} @foreach ($alert->faults as $key => $value) Mount Point: {{ $value['storage_descr'] }} Percent Utilized: {{ $value['storage_perc'] }} @endforeach","title":"Storage"},{"location":"Alerting/Templates/#temperature-sensors","text":"{{ $alert->title }} Device Name: {{ $alert->hostname }} Severity: {{ $alert->severity }} Timestamp: {{ $alert->timestamp }} Uptime: {{ $alert->uptime_short }} @if ($alert->state == 0) Time elapsed: {{ $alert->elapsed }} @endif Location: {{ $alert->location }} Description: {{ $alert->description }} Features: {{ $alert->features }} Purpose: {{ $alert->purpose }} Notes: {{ $alert->notes }} Rule: @if ($alert->name) {{ $alert->name }} @else {{ $alert->rule }} @endif @if ($alert->faults) Faults: @foreach ($faults as $key => $value) #{{ $key }}: Temperature: {{ $value['sensor_current'] }} \u00b0C ** @php echo ($value['sensor_current']-$value['sensor_limit']); @endphp\u00b0C over limit Previous Measurement: {{ $value['sensor_prev'] }} \u00b0C High Temperature Limit: {{ $value['sensor_limit'] }} \u00b0C @endforeach @endif","title":"Temperature Sensors"},{"location":"Alerting/Templates/#value-sensors","text":"{{ $alert->title }} Device Name: {{ $alert->hostname }} Severity: {{ $alert->severity }} Timestamp: {{ $alert->timestamp }} Uptime: {{ $alert->uptime_short }} @if ($alert->state == 0) Time elapsed: {{ $alert->elapsed }} @endif Location: {{ $alert->location }} Description: {{ $alert->description }} Features: {{ $alert->features }} Purpose: {{ $alert->purpose }} Notes: {{ $alert->notes }} Rule: @if ($alert->name) {{ $alert->name }} @else {{ $alert->rule }} @endif @if ($alert->faults) Faults: @foreach ($alert->faults as $key => $value) #{{ $key }}: Sensor {{ $value['sensor_current'] }} ** @php echo ($value['sensor_current']-$value['sensor_limit']); @endphp over limit Previous Measurement: {{ $value['sensor_prev'] }} Limit: {{ $value['sensor_limit'] }} @endforeach @endif","title":"Value Sensors"},{"location":"Alerting/Templates/#memory-alert","text":"{{ $alert->title }} Device Name: {{ $alert->hostname }} Severity: {{ $alert->severity }} Uptime: {{ $alert->uptime_short }} @if ($alert->state == 0) Time elapsed: {{ $alert->elapsed }} @endif Timestamp: {{ $alert->timestamp }} Location: {{ $alert->location }} Description: {{ $alert->description }} Notes: {{ $alert->notes }} Server: {{ $alert->hostname }} @foreach ($alert->faults as $key => $value) Memory Description: {{ $value['mempool_descr'] }} Percent Utilized: {{ $value['mempool_perc'] }} @endforeach","title":"Memory Alert"},{"location":"Alerting/Templates/#advanced-options","text":"","title":"Advanced options"},{"location":"Alerting/Templates/#conditional-formatting","text":"Conditional formatting example, will display a link to the host in email or just the hostname in any other transport: @if ($alert->transport == 'mail')<a href=\"https://my.librenms.install/device/device={{ $alert->hostname }}/\">{{ $alert->hostname }}</a> @else {{ $alert->hostname }} @endif","title":"Conditional formatting"},{"location":"Alerting/Templates/#traceroute-debugs","text":"@if ($alert->status == 0) @if ($alert->status == icmp) {{ $alert->debug['traceroute'] }} @endif @endif","title":"Traceroute debugs"},{"location":"Alerting/Templates/#examples-html","text":"Note: To use HTML emails you must set HTML email to Yes in the WebUI under Global Settings > Alerting Settings > Email transport > Use HTML emails Note: To include Graphs you must enable unauthorized graphs in config.php. Allow_unauth_graphs_cidr is optional, but more secure. $config['allow_unauth_graphs_cidr'] = array('127.0.0.1/32'); $config['allow_unauth_graphs'] = true;","title":"Examples HTML"},{"location":"Alerting/Templates/#service-alert","text":"<div style=\"font-family:Helvetica;\"> <h2>@if ($alert->state == 1) <span style=\"color:red;\">{{ $alert->severity }} @endif @if ($alert->state == 2) <span style=\"color:goldenrod;\">acknowledged @endif</span> @if ($alert->state == 3) <span style=\"color:green;\">recovering @endif</span> @if ($alert->state == 0) <span style=\"color:green;\">recovered @endif</span> </h2> <b>Host:</b> {{ $alert->hostname }}<br> <b>Duration:</b> {{ $alert->elapsed }}<br> <br> @if ($alert->faults) @foreach ($alert->faults as $key => $value) <b>{{ $value['service_desc'] }} - {{ $value['service_type'] }}</b><br> {{ $value['service_message'] }}<br> <br> @endforeach @endif </div>","title":"Service Alert"},{"location":"Alerting/Templates/#processor-alert-with-graph","text":"{{ $alert->title }} <br> Severity: {{ $alert->severity }} <br> @if ($alert->state == 0) Time elapsed: {{ $alert->elapsed }} @endif Timestamp: {{ $alert->timestamp }} <br> Alert-ID: {{ $alert->id }} <br> Rule: @if ($alert->name) {{ $alert->name }} @else {{ $alert->rule }} @endif <br> @if ($alert->faults) Faults: @foreach ($alert->faults as $key => $value) {{ $key }}: {{ $value['string'] }}<br> @endforeach @if ($alert->faults) <b>Faults:</b><br> @foreach ($alert->faults as $key => $value)<img src=\"https://server/graph.php?device={{ $value['device_id'] }}&type=device_processor&width=459&height=213&lazy_w=552&from=end-72h\"><br> https://server/graphs/id={{ $value['device_id'] }}/type=device_processor/<br> @endforeach Template: CPU alert <br> @endif @endif","title":"Processor Alert with Graph"},{"location":"Alerting/Templates/#included","text":"We include a few templates for you to use, these are specific to the type of alert rules you are creating. For example if you create a rule that would alert on BGP sessions then you can assign the BGP template to this rule to provide more information. The included templates apart from the default template are: BGP Sessions Ports Temperature","title":"Included"},{"location":"Alerting/Templates/#other-examples","text":"","title":"Other Examples"},{"location":"Alerting/Templates/#microsoft-teams-markdown","text":"[{{ $alert->title }}](https://your.librenms.url/device/device={{ $alert->device_id }}/) **Device name:** {{ $alert->sysName }} **Severity:** {{ $alert->severity }} @if ($alert->state == 0) **Time elapsed:** {{ $alert->elapsed }} @endif **Timestamp:** {{ $alert->timestamp }} **Unique-ID:** {{ $alert->uid }} @if ($alert->name) **Rule:** {{ $alert->name }} @else **Rule:** {{ $alert->rule }} @endif @if ($alert->faults) **Faults:**@foreach ($alert->faults as $key => $value) {{ $key }}: {{ $value['string'] }} @endforeach @endif","title":"Microsoft Teams - Markdown"},{"location":"Alerting/Templates/#microsoft-teams-json","text":"{ \"@context\": \"https://schema.org/extensions\", \"@type\": \"MessageCard\", \"title\": \"{{ $alert->title }}\", @if ($alert->state === 0) \"themeColor\": \"00FF00\", @elseif ($alert->state === 1) \"themeColor\": \"FF0000\", @elseif ($alert->state === 2) \"themeColor\": \"337AB7\", @elseif ($alert->state === 3) \"themeColor\": \"FF0000\", @elseif ($alert->state === 4) \"themeColor\": \"F0AD4E\", @else \"themeColor\": \"337AB7\", @endif \"summary\": \"LibreNMS\", \"sections\": [ { @if ($alert->name) \"facts\": [ { \"name\": \"Rule:\", \"value\": \"[{{ $alert->name }}](https://your.librenms.url/device/device={{ $alert->device_id }}/tab=alert/)\" }, @else { \"name\": \"Rule:\", \"value\": \"[{{ $alert->rule }}](https://your.librenms.url/device/device={{ $alert->device_id }}/tab=alert/)\" }, @endif { \"name\": \"Severity:\", \"value\": \"{{ $alert->severity }}\" }, { \"name\": \"Unique-ID:\", \"value\": \"{{ $alert->uid }}\" }, { \"name\": \"Timestamp:\", \"value\": \"{{ $alert->timestamp }}\" }, @if ($alert->state == 0) { \"name\": \"Time elapsed:\", \"value\": \"{{ $alert->elapsed }}\" }, @endif { \"name\": \"Hostname:\", \"value\": \"[{{ $alert->hostname }}](https://your.librenms.url/device/device={{ $alert->device_id }}/)\" }, { \"name\": \"Hardware:\", \"value\": \"{{ $alert->hardware }}\" }, { \"name\": \"IP:\", \"value\": \"{{ $alert->ip }}\" }, { \"name\": \"Faults:\", \"value\": \" \" } ] @if ($alert->faults) @foreach ($alert->faults as $key => $value) }, { \"facts\": [ { \"name\": \"Port:\", \"value\": \"[{{ $value['ifName'] }}](https://your.librenms.url/device/device={{ $alert->device_id }}/tab=port/port={{ $value['port_id'] }}/)\" }, { \"name\": \"Description:\", \"value\": \"{{ $value['ifAlias'] }}\" }, @if ($alert->state != 0) { \"name\": \"Status:\", \"value\": \"down\" } ] @else { \"name\": \"Status:\", \"value\": \"up\" } ] @endif @endforeach @endif } ] }","title":"Microsoft Teams - JSON"},{"location":"Alerting/Testing/","text":"Rules The simplest way of testing if an alert rule will match a device is by going to the device, clicking edit (the cog), select Capture. From this new screen choose Alerts and click run. The output will cycle through all alerts applicable to this device and show you the Rule name, rule, MySQL query and if the rule matches. See Device Troubleshooting Transports You can test your transports by forcing an actual active alert to run regardless of the interval or delay values. ./scripts/test-alert.php . This script accepts -r for the rule id, -h for the device id or hostname and -d for debug. Templates It's possible to test your new template before assigning it to a rule. To do so you can run ./scripts/test-template.php . The script will provide the help info when ran without any parameters. As an example, if you wanted to test template ID 10 against localhost running rule ID 2 then you would run: ./scripts/test-template.php -t 10 -d -h localhost -r 2 If the rule is currently alerting for localhost then you will get the full template as expected to see on email, if it's not then you will just see the template without any fault information.","title":"Testing"},{"location":"Alerting/Testing/#rules","text":"The simplest way of testing if an alert rule will match a device is by going to the device, clicking edit (the cog), select Capture. From this new screen choose Alerts and click run. The output will cycle through all alerts applicable to this device and show you the Rule name, rule, MySQL query and if the rule matches. See Device Troubleshooting","title":"Rules"},{"location":"Alerting/Testing/#transports","text":"You can test your transports by forcing an actual active alert to run regardless of the interval or delay values. ./scripts/test-alert.php . This script accepts -r for the rule id, -h for the device id or hostname and -d for debug.","title":"Transports"},{"location":"Alerting/Testing/#templates","text":"It's possible to test your new template before assigning it to a rule. To do so you can run ./scripts/test-template.php . The script will provide the help info when ran without any parameters. As an example, if you wanted to test template ID 10 against localhost running rule ID 2 then you would run: ./scripts/test-template.php -t 10 -d -h localhost -r 2 If the rule is currently alerting for localhost then you will get the full template as expected to see on email, if it's not then you will just see the template without any fault information.","title":"Templates"},{"location":"Alerting/Transports/","text":"Transports Transports are located within LibreNMS/Alert/Transport/ and can be configured within the WebUI under Alerts -> Alert Transports. Contacts will be gathered automatically and passed to the configured transports. By default the Contacts will be only gathered when the alert triggers and will ignore future changes in contacts for the incident. If you want contacts to be re-gathered before each dispatch, please set 'Updates to contact email addresses not honored' to Off in the WebUI. The contacts will always include the SysContact defined in the Device's SNMP configuration and also every LibreNMS user that has at least read -permissions on the entity that is to be alerted. At the moment LibreNMS only supports Port or Device permissions. You can exclude the SysContact by toggling 'Issue alerts to sysContact'. To include users that have Global-Read , Administrator or Normal-User permissions it is required to toggle the options: Issue alerts to admins. Issue alerts to read only users Issue alerts to normal users. Using a Proxy Proxy Configuration Using a AMQP based Transport You need to install an additional php module : bcmath (eg php72w-bcmath for Centos 7) Alerta The alerta monitoring system is a tool used to consolidate and de-duplicate alerts from multiple sources for quick \u2018at-a-glance\u2019 visualisation. With just one system you can monitor alerts from many other monitoring tools on a single screen. Example: Config Example API Endpoint http://alerta.example.com/api/alert Environment Production Apy key api key with write permission Alert state critical Recover state cleared Alertmanager Alertmanager is an alert handling software, initially developed for alert processing sent by Prometheus. It has built-in functionality for deduplicating, grouping and routing alerts based on configurable criteria. LibreNMS uses alert grouping by alert rule, which can produce an array of alerts of similar content for an array of hosts, whereas Alertmanager can group them by alert meta, ideally producing one single notice in case an issue occurs. It is possible to configure as much label values as required in Alertmanager Options section. Every label and it's value should be entered as a new line. Alertmanager Docs Example: Config Example Alertmanager URL http://alertmanager.example.com Alertmanager Options: source=librenms customlabel=value API The API transport allows to reach any service provider using POST, PUT or GET URLs (Like SMS provider, etc). It can be used in multiple ways: The same text built from the Alert template is available in the variable $msg , which can then be sent as an option to the API. Be carefull that HTTP GET requests are usually limited in length. The API-Option fields can be directly built from the variables defined in Template-Syntax but without the 'alert->' prefix. For instance, $alert->uptime is available as $uptime in the API transport The API-Headers allows you to add the headers that the api endpoint requires. The API-body allow sending data in the format required by the ApI endpoint. A few variables commonly used : Variable Description {{ $hostname }} Hostname {{ $sysName }} SysName {{ $sysDescr }} SysDescr {{ $os }} OS of device (librenms defined) {{ $type }} Type of device (librenms defined) {{ $ip }} IP Address {{ $hardware }} Hardware {{ $version }} Version {{ $uptime }} Uptime in seconds {{ $uptime_short }} Uptime in human-readable format {{ $timestamp }} Timestamp of alert {{ $description }} Description of device {{ $title }} Title (as built from the Alert Template) {{ $msg }} Body text (as built from the Alert Template) Example: The example below will use the API named sms-api of my.example.com and send the title of the alert to the provided number using the provided service key. Refer to your service documentation to configure it properly. Config Example API Method GET API URL http://my.example.com/sms-api API Options rcpt=0123456789 key=0987654321abcdef msg=(LNMS) {{ $title }} API Username myUsername API Password myPassword The example below will use the API named wall-display of my.example.com and send the title and text of the alert to a screen in the Network Operation Center. Config Example API Method POST API URL http://my.example.com/wall-display API Options title={{ $title }} msg={{ $msg }} The example below will use the API named component of my.example.com with id 1, body as json status value and headers send token authentication and content type required. Config Example API Method PUT API URL http://my.example.com/comonent/1 API Headers X-Token=HASH Content-Type=application/json API Body { \"status\": 2 } aspSMS aspSMS is a SMS provider that can be configured by using the generic API Transport. You need a token you can find on your personnal space. aspSMS docs Example: Config Example Transport type Api API Method POST API URL https://soap.aspsms.com/aspsmsx.asmx/SimpleTextSMS Options UserKey=USERKEY Password=APIPASSWORD Recipient=RECIPIENT Originator=ORIGINATOR MessageText={{ $msg }} Boxcar Copy your access token from the Boxcar app or from the Boxcar.io website and setup the transport. Boxcar Docs Example: Config Example Access Token i23f23mr23rwerw Canopsis Canopsis is a hypervision tool. LibreNMS can send alerts to Canopsis which are then converted to canopsis events. Canopsis Docs Example: Config Example Hostname www.xxx.yyy.zzz Port Number 5672 User admin Password my_password Vhost canopsis Cisco Spark (aka Webex Teams) Cisco Spark (now known as Webex Teams). LibreNMS can send alerts to a Cisco Spark room. To make this possible you need to have a RoomID and a token. You can also choose to send alerts using Markdown syntax. Enabling this option provides for more richly formatted alerts, but be sure to adjust your alert template to account for the Markdown syntax. For more information about Cisco Spark RoomID and token, take a look here : Getting started Rooms Example: Config Example API Token ASd23r23edewda RoomID 34243243251 Use Markdown? x Clickatell Clickatell provides a REST-API requiring an Authorization-Token and at least one Cellphone number. Clickatell Docs Here an example using 3 numbers, any amount of numbers is supported: Example: Config Example Token dsaWd3rewdwea Mobile Numbers +1234567890,+1234567891,+1234567892 Discord The Discord transport will POST the alert message to your Discord Incoming WebHook. Simple html tags are stripped from the message. The only required value is for url, without this no call to Discord will be made. The Options field supports the JSON/Form Params listed in the Discord Docs below. Discord Docs Example: Config Example Discord URL https://discordapp.com/api/webhooks/4515489001665127664/82-sf4385ysuhfn34u2fhfsdePGLrg8K7cP9wl553Fg6OlZuuxJGaa1d54fe Options username=myname Elasticsearch You can have LibreNMS send alerts to an elasticsearch database. Each fault will be sent as a separate document. The index pattern uses strftime() formatting. Example: Config Example Host 127.0.0.1 Port 9200 Index Patter librenms-%Y.%m.%d Gitlab LibreNMS will create issues for warning and critical level alerts however only title and description are set. Uses Personal access tokens to authenticate with Gitlab and will store the token in cleartext. Example: Config Example Host http://gitlab.host.tld Project ID 1 Personal Access Token AbCdEf12345 HipChat See the HipChat API Documentation for rooms/message for details on acceptable values. You may notice that the link points at the \"deprecated\" v1 API. This is because the v2 API is still in beta. Example: Config Example API URL https://api.hipchat.com/v1/rooms/message?auth_token=109jawregoaihj Room ID 7654321 From Name LibreNMS Options color = red notify = 1 message_format = text At present the following options are supported: color , notify and message_format . Note: The default message format for HipChat messages is HTML. It is recommended that you specify the text message format to prevent unexpected results, such as HipChat attempting to interpret angled brackets ( < and > ). IRC The IRC transports only works together with the LibreNMS IRC-Bot. Configuration of the LibreNMS IRC-Bot is described here . Example: Config Example IRC enabled JIRA You can have LibreNMS create issues on a Jira instance for critical and warning alerts. The Jira transport only sets summary and description fields. Therefore your Jira project must not have any other mandatory field for the provided issuetype. The config fields that need to set are Jira URL, Jira username, Jira password, Project key, and issue type. Currently http authentication is used to access Jira and Jira username and password will be stored as cleartext in the LibreNMS database. Jira Issue Types Example: Config Example URL https://myjira.mysite.com Project Key JIRAPROJECTKEY Issue Type Myissuetype Jira Username myjirauser Jira Password myjirapass LINE Notify LINE Notify LINE Notify API Document Example: Config Example Token AbCdEf12345 Mail The E-Mail transports uses the same email-configuration like the rest of LibreNMS. As a small reminder, here is it's configuration directives including defaults: Example: Config Example Email me@example.com Matrix For using the Matrix transports, you have to create a room on the Matrix-server. The provided Auth_token belongs to an user, which is member of this room. The Message, sent to the matrix-room can be built from the variables defined in Template-Syntax but without the 'alert->' prefix. See API-Transport. The variable $msg is contains the result of the Alert template. The Matrix-Server URL is cutted before the beginning of the _matrix/client/r0/... API-part. Example: Config Example Matrix-Server URL https://matrix.example.com/ Room !ajPbbPalmVbNuQoBDK:example.com Auth_token: MDAyYmxvY2F0aW9uI...z1DCn6lz_uOhtW3XRICg Message: Alert: {{ $msg }} https://librenms.example.com Microsoft Teams LibreNMS can send alerts to Microsoft Teams Incoming Webhooks which are then posted to a specific channel. Microsoft recommends using markdown formatting for connector cards. Administrators can opt to compose the MessageCard themselves using JSON to get the full functionality. Example: Config Example WebHook URL https://outlook.office365.com/webhook/123456789 Use JSON? x Nagios Compatible The nagios transport will feed a FIFO at the defined location with the same format that nagios would. This allows you to use other alerting systems with LibreNMS, for example Flapjack . Example: Config Example Nagios FIFO /path/to/my.fifo OpsGenie Using OpsGenie LibreNMS integration, LibreNMS forwards alerts to OpsGenie with detailed information. OpsGenie acts as a dispatcher for LibreNMS alerts, determines the right people to notify based on on-call schedules and notifies via email, text messages (SMS), phone calls and iOS & Android push notifications. Then escalates alerts until the alert is acknowledged or closed. Create a LibreNMS Integration from the integrations page once you signup. Then copy the API key from OpsGenie to LibreNMS. If you want to automatically ack and close alerts, leverage Marid integration. More detail with screenshots is available in OpsGenie LibreNMS Integration page . Example: Config Example WebHook URL https://url/path/to/webhook osTicket LibreNMS can send alerts to osTicket API which are then converted to osTicket tickets. Example: Config Example API URL http://osticket.example.com/api/http.php/tickets.json API Token 123456789 PagerDuty LibreNMS can make use of PagerDuty, this is done by utilizing an API key and Integraton Key. API Keys can be found under 'API Access' in the PagerDuty portal. Integration Keys can be found under 'Integration' for the particular Service you have created in the PagerDuty portal. Example: Config Example API Key randomsample Integration Key somerandomstring Philips Hue Want to spice up your noc life? LibreNMS will flash all lights connected to your philips hue bridge whenever an alert is triggered. To setup, go to the you http:// your-bridge-ip /debug/clip.html Update the \"URL:\" field to /api Paste this in the \"Message Body\" {\"devicetype\":\"librenms\"} Press the round button on your philips Hue Bridge Click on POST In the Command Response You should see output with your username. Copy this without the quotes More Info: Philips Hue Documentation Example: Config Example Host http://your-bridge-ip Hue User username Duration 1 Second PlaySMS PlaySMS is an open source SMS-Gateway that can be used via their HTTP API using a Username and WebService Token. Please consult PlaySMS's documentation regarding number formatting. PlaySMS Docs Here an example using 3 numbers, any amount of numbers is supported: Example: Config Example PlaySMS https://localhost/index.php?app=ws User user1 Token MYFANCYACCESSTOKEN From My Name Mobiles +1234567892,+1234567890,+1234567891 Pushbullet Get your Access Token from your Pushbullet's settings page and set it in your transport: Example: Config Example Access Token MYFANCYACCESSTOKEN Pushover If you want to change the default notification sound for all notifications then you can add the following in Pushover Options: sound=falling You also have the possibility to change sound per severity: sound_critical=falling sound_warning=siren sound_ok=magic Enabling Pushover support is fairly easy, there are only two required parameters. Firstly you need to create a new Application (called LibreNMS, for example) in your account on the Pushover website ( https://pushover.net/apps ). Now copy your API Key and obtain your User Key from the newly created Application and setup the transport. Pushover Docs Example: Config Example Api Key APPLICATIONAPIKEYGOESHERE User Key USERKEYGOESHERE Pushover Options sound_critical=falling sound_warning=siren sound_ok=magic Rocket.chat The Rocket.chat transport will POST the alert message to your Rocket.chat Incoming WebHook using the attachments option. Simple html tags are stripped from the message. All options are optional, the only required value is for url, without this then no call to Rocket.chat will be made. Rocket.chat Docs Example: Config Example Webhook URL https://rocket.url/api/v1/chat.postMessage Rocket.chat Options channel=#Alerting username=myname icon_url=http://someurl/image.gif icon_emoji=:smirk: Sensu The Sensu transport will POST an Event to the Agent API upon an alert being generated. It will be categorised (ok, warning or critical), and if you configure the alert to send recovery notifications, Sensu will also clear the alert automatically. No configuration is required - as long as you are running the Sensu Agent on your poller with the HTTP socket enabled on tcp/3031, LibreNMS will start generating Sensu events as soon as you create the transport. Acknowledging alerts within LibreNMS is not directly supported, but an annotation ( acknowledged ) is set, so a mutator or silence, or even the handler could be written to look for it directly in the handler. There is also an annotation ( generated-by ) set, to allow you to treat LibreNMS events differently from agent events. The 'shortname' option is a simple way to reduce the length of device names in configs. It replaces the last 3 domain components with single letters (e.g. websrv08.dc4.eu.corp.example.net gets shortened to websrv08.dc4.eu.cen). Limitations Only a single namespace is supported Sensu will reject rules with special characters - the Transport will attempt to fix up rule names, but it's best to stick to letters, numbers and spaces The transport only deals in absolutes - it ignores the got worse/got better states The agent will buffer alerts, but LibreNMS will not - if your agent is offline, alerts will be dropped There is no backchannel between Sensu and LibreNMS - if you make changes in Sensu to LibreNMS alerts, they'll be lost on the next event (silences will work) Example: Config Example Sensu Endpoint http://localhost:3031 Sensu Namespace eu-west Check Prefix lnms Source Key hostname Slack The Slack transport will POST the alert message to your Slack Incoming WebHook using the attachments option, you are able to specify multiple webhooks along with the relevant options to go with it. Simple html tags are stripped from the message. All options are optional, the only required value is for url, without this then no call to Slack will be made. We currently support the following attachment options: author_name Slack docs Example: Config Example Webhook URL https://slack.com/url/somehook Slack Options author_name=Me SMSEagle SMSEagle is a hardware SMS Gateway that can be used via their HTTP API using a Username and password. Destination numbers are one per line, with no spaces. They can be in either local or international dialling format. SMSEagle Docs Example: Config Example SMSEagle Host ip.add.re.ss User smseagle_user Password smseagle_user_password Mobiles +3534567890 0834567891 SMSmode SMSmode is a SMS provider that can be configured by using the generic API Transport. You need a token you can find on your personnal space. SMSmode docs Example: Config Example Transport type Api API Method POST API URL http://api.smsmode.com/http/1.6/sendSMS.do Options accessToken= PUT_HERE_YOUR_TOKEN numero= PUT_HERE_DESTS_NUMBER_COMMA_SEPARATED message={{ $msg }} Splunk LibreNMS can send alerts to a Splunk instance and provide all device and alert details. Example output: Feb 21 15:21:52 nms hostname=\"localhost\", sysName=\"localhost\", sysDescr=\"\", sysContact=\"\", os=\"fortigate\", type=\"firewall\", ip=\"localhost\", hardware=\"FGT_50E\", version=\"v5.6.9\", serial=\"\", features=\"\", location=\"\", uptime=\"387\", uptime_short=\" 6m 27s\", uptime_long=\" 6 minutes 27 seconds\", description=\"\", notes=\"\", alert_notes=\"\", device_id=\"0\", rule_id=\"0\", id=\"0\", proc=\"\", status=\"1\", status_reason=\"\", ping_timestamp=\"\", ping_loss=\"0\", ping_min=\"25.6\", ping_max=\"26.8\", ping_avg=\"26.3\", title=\"localhost recovered from Device up/down \", elapsed=\"14m 54s\", uid=\"0\", alert_id=\"0\", severity=\"critical\", name=\"Device up/down\", timestamp=\"2020-02-21 15:21:33\", state=\"0\", device_device_id=\"0\", device_inserted=\"\", device_hostname=\"localhost\", device_sysName=\"localhost\", device_ip=\"localhost\", device_overwrite_ip=\"\", device_timeout=\"\", device_retries=\"\", device_snmp_disable=\"0\", device_bgpLocalAs=\"0\", device_sysObjectID=\"\", device_sysDescr=\"\", device_sysContact=\"\", device_version=\"v5.6.9\", device_hardware=\"FGT_50E\", device_features=\"build1673\", device_location_id=\"\", device_os=\"fortigate\", device_status=\"1\", device_status_reason=\"\", device_ignore=\"0\", device_disabled=\"0\", device_uptime=\"387\", device_agent_uptime=\"0\", device_last_polled=\"2020-02-21 15:21:33\", device_last_poll_attempted=\"\", device_last_polled_timetaken=\"7.9\", device_last_discovered_timetaken=\"11.77\", device_last_discovered=\"2020-02-21 13:16:42\", device_last_ping=\"2020-02-21 15:21:33\", device_last_ping_timetaken=\"26.3\", device_purpose=\"\", device_type=\"firewall\", device_serial=\"FGT50EXXX\", device_icon=\"images/os/fortinet.svg\", device_poller_group=\"0\", device_override_sysLocation=\"0\", device_notes=\"\", device_port_association_mode=\"1\", device_max_depth=\"0\", device_disable_notify=\"0\", device_location=\"\", device_vrf_lites=\"Array\", device_lat=\"\", device_lng=\"\", - sysObjectID => \"\"; Each alert will be sent as a separate message. Example: Config Example Host 127.0.0.1 UDP Port 514 Syslog You can have LibreNMS emit alerts as syslogs complying with RFC 3164. More information on RFC 3164 can be found here: https://tools.ietf.org/html/rfc3164 Example output: <26> Mar 22 00:59:03 librenms.host.net librenms[233]: [Critical] network.device.net: Port Down - port_id => 98939; ifDescr => xe-1/1/0; Each fault will be sent as a separate syslog. Example: Config Example Host 127.0.0.1 Port 514 Facility 3 Telegram Thank you to snis for these instructions. First you must create a telegram account and add BotFather to you list. To do this click on the following url: https://telegram.me/botfather Generate a new bot with the command \"/newbot\" BotFather is then asking for a username and a normal name. After that your bot is created and you get a HTTP token. (for more options for your bot type \"/help\") Add your bot to telegram with the following url: http://telegram.me/<botname> to use app or https://web.telegram.org/<botname> to use in web, and send some text to the bot. The BotFather should have responded with a token, copy your token code and go to the following page in chrome: https://api.telegram.org/bot<tokencode>/getUpdates (this could take a while so continue to refresh until you see something similar to below) You see a json code with the message you sent to the bot. Copy the Chat id. In this example that is \u201c-9787468\u201d within this example: \"message\":{\"message_id\":7,\"from\":\"id\":656556,\"first_name\":\"Joo\",\"last_name\":\"Doo\",\"username\":\"JohnDoo\"},\"chat\":{\"id\":-9787468,\"title\":\"Telegram Group\"},\"date\":1435216924,\"text\":\"Hi\"}}]} . Now create a new \"Telegram transport\" in LibreNMS (Global Settings -> Alerting Settings -> Telegram transport). Click on 'Add Telegram config' and put your chat id and token into the relevant box. If want to use a group to receive alerts, you need to pick the Chat ID of the group chat, and not of the Bot itself. Telegram Docs Example: Config Example Chat ID 34243432 Token 3ed32wwf235234 Format HTML or MARKDOWN Twilio SMS Twilio will send your alert via SMS. From your Twilio account you will need your account SID, account token and your Twilio SMS phone number that you would like to send the alerts from. Twilio's APIs are located at: https://www.twilio.com/docs/api?filter-product=sms Example: Config Example SID ACxxxxxxxxxxxxxxxxxxxxxxxxxxxx Token 7xxxx573acxxxbc2xxx308d6xxx652d32 Twilio SMS Number 8888778660 VictorOps VictorOps provide a webHook url to make integration extremely simple. To get the URL required login to your VictorOps account and go to: Settings -> Integrations -> REST Endpoint -> Enable Integration. The URL provided will have $routing_key at the end, you need to change this to something that is unique to the system sending the alerts such as librenms. I.e: https://alert.victorops.com/integrations/generic/20132414/alert/2f974ce1-08fc-4dg8-a4f4-9aee6cf35c98/librenms Example: Config Example Post URL https://alert.victorops.com/integrations/generic/20132414/alert/2f974ce1-08fc-4dg8-a4f4-9aee6cf35c98/librenms Kayako Classic LibreNMS can send alerts to Kayako Classic API which are then converted to tickets. To use this module, you need REST API feature enabled in Kayako Classic and configured email account at LibreNMS. To enable this, do this: AdminCP -> REST API -> Settings -> Enable API (Yes) Also you need to know the department id to provide tickets to appropriate department and a user email to provide, which is used as ticket author. To get department id: navigate to appropriate department name at the departments list page in Admin CP and watch the number at the end of url. Example: http://servicedesk.example.com/admin/Base/Department/Edit/17 . Department ID is 17 As a requirement, you have to know API Url, API Key and API Secret to connect to servicedesk Kayako REST API Docs Example: Config Example Kayako URL http://servicedesk.example.com/api/ Kayako API Key 8cc02f38-7465-4a0c-8730-bb3af122167b Kayako API Secret Y2NhZDIxNDMtNjVkMi0wYzE0LWExYTUtZGUwMjJiZDI0ZWEzMmRhOGNiYWMtNTU2YS0yODk0LTA1MTEtN2VhN2YzYzgzZjk5 Kayako Department 1 SMSFeedback SMSFeedback is a SAAS service, which can be used to deliver Alerts via API, using API url, Username & Password. They can be in international dialling format only. SMSFeedback Api Docs Example: Config Example User smsfeedback_user Password smsfeedback_password Mobiles 71234567890 Sender name CIA","title":"Transports"},{"location":"Alerting/Transports/#transports","text":"Transports are located within LibreNMS/Alert/Transport/ and can be configured within the WebUI under Alerts -> Alert Transports. Contacts will be gathered automatically and passed to the configured transports. By default the Contacts will be only gathered when the alert triggers and will ignore future changes in contacts for the incident. If you want contacts to be re-gathered before each dispatch, please set 'Updates to contact email addresses not honored' to Off in the WebUI. The contacts will always include the SysContact defined in the Device's SNMP configuration and also every LibreNMS user that has at least read -permissions on the entity that is to be alerted. At the moment LibreNMS only supports Port or Device permissions. You can exclude the SysContact by toggling 'Issue alerts to sysContact'. To include users that have Global-Read , Administrator or Normal-User permissions it is required to toggle the options: Issue alerts to admins. Issue alerts to read only users Issue alerts to normal users.","title":"Transports"},{"location":"Alerting/Transports/#using-a-proxy","text":"Proxy Configuration","title":"Using a Proxy"},{"location":"Alerting/Transports/#using-a-amqp-based-transport","text":"You need to install an additional php module : bcmath (eg php72w-bcmath for Centos 7)","title":"Using a AMQP based Transport"},{"location":"Alerting/Transports/#alerta","text":"The alerta monitoring system is a tool used to consolidate and de-duplicate alerts from multiple sources for quick \u2018at-a-glance\u2019 visualisation. With just one system you can monitor alerts from many other monitoring tools on a single screen. Example: Config Example API Endpoint http://alerta.example.com/api/alert Environment Production Apy key api key with write permission Alert state critical Recover state cleared","title":"Alerta"},{"location":"Alerting/Transports/#alertmanager","text":"Alertmanager is an alert handling software, initially developed for alert processing sent by Prometheus. It has built-in functionality for deduplicating, grouping and routing alerts based on configurable criteria. LibreNMS uses alert grouping by alert rule, which can produce an array of alerts of similar content for an array of hosts, whereas Alertmanager can group them by alert meta, ideally producing one single notice in case an issue occurs. It is possible to configure as much label values as required in Alertmanager Options section. Every label and it's value should be entered as a new line. Alertmanager Docs Example: Config Example Alertmanager URL http://alertmanager.example.com Alertmanager Options: source=librenms customlabel=value","title":"Alertmanager"},{"location":"Alerting/Transports/#api","text":"The API transport allows to reach any service provider using POST, PUT or GET URLs (Like SMS provider, etc). It can be used in multiple ways: The same text built from the Alert template is available in the variable $msg , which can then be sent as an option to the API. Be carefull that HTTP GET requests are usually limited in length. The API-Option fields can be directly built from the variables defined in Template-Syntax but without the 'alert->' prefix. For instance, $alert->uptime is available as $uptime in the API transport The API-Headers allows you to add the headers that the api endpoint requires. The API-body allow sending data in the format required by the ApI endpoint. A few variables commonly used : Variable Description {{ $hostname }} Hostname {{ $sysName }} SysName {{ $sysDescr }} SysDescr {{ $os }} OS of device (librenms defined) {{ $type }} Type of device (librenms defined) {{ $ip }} IP Address {{ $hardware }} Hardware {{ $version }} Version {{ $uptime }} Uptime in seconds {{ $uptime_short }} Uptime in human-readable format {{ $timestamp }} Timestamp of alert {{ $description }} Description of device {{ $title }} Title (as built from the Alert Template) {{ $msg }} Body text (as built from the Alert Template) Example: The example below will use the API named sms-api of my.example.com and send the title of the alert to the provided number using the provided service key. Refer to your service documentation to configure it properly. Config Example API Method GET API URL http://my.example.com/sms-api API Options rcpt=0123456789 key=0987654321abcdef msg=(LNMS) {{ $title }} API Username myUsername API Password myPassword The example below will use the API named wall-display of my.example.com and send the title and text of the alert to a screen in the Network Operation Center. Config Example API Method POST API URL http://my.example.com/wall-display API Options title={{ $title }} msg={{ $msg }} The example below will use the API named component of my.example.com with id 1, body as json status value and headers send token authentication and content type required. Config Example API Method PUT API URL http://my.example.com/comonent/1 API Headers X-Token=HASH Content-Type=application/json API Body { \"status\": 2 }","title":"API"},{"location":"Alerting/Transports/#aspsms","text":"aspSMS is a SMS provider that can be configured by using the generic API Transport. You need a token you can find on your personnal space. aspSMS docs Example: Config Example Transport type Api API Method POST API URL https://soap.aspsms.com/aspsmsx.asmx/SimpleTextSMS Options UserKey=USERKEY Password=APIPASSWORD Recipient=RECIPIENT Originator=ORIGINATOR MessageText={{ $msg }}","title":"aspSMS"},{"location":"Alerting/Transports/#boxcar","text":"Copy your access token from the Boxcar app or from the Boxcar.io website and setup the transport. Boxcar Docs Example: Config Example Access Token i23f23mr23rwerw","title":"Boxcar"},{"location":"Alerting/Transports/#canopsis","text":"Canopsis is a hypervision tool. LibreNMS can send alerts to Canopsis which are then converted to canopsis events. Canopsis Docs Example: Config Example Hostname www.xxx.yyy.zzz Port Number 5672 User admin Password my_password Vhost canopsis","title":"Canopsis"},{"location":"Alerting/Transports/#cisco-spark-aka-webex-teams","text":"Cisco Spark (now known as Webex Teams). LibreNMS can send alerts to a Cisco Spark room. To make this possible you need to have a RoomID and a token. You can also choose to send alerts using Markdown syntax. Enabling this option provides for more richly formatted alerts, but be sure to adjust your alert template to account for the Markdown syntax. For more information about Cisco Spark RoomID and token, take a look here : Getting started Rooms Example: Config Example API Token ASd23r23edewda RoomID 34243243251 Use Markdown? x","title":"Cisco Spark (aka Webex Teams)"},{"location":"Alerting/Transports/#clickatell","text":"Clickatell provides a REST-API requiring an Authorization-Token and at least one Cellphone number. Clickatell Docs Here an example using 3 numbers, any amount of numbers is supported: Example: Config Example Token dsaWd3rewdwea Mobile Numbers +1234567890,+1234567891,+1234567892","title":"Clickatell"},{"location":"Alerting/Transports/#discord","text":"The Discord transport will POST the alert message to your Discord Incoming WebHook. Simple html tags are stripped from the message. The only required value is for url, without this no call to Discord will be made. The Options field supports the JSON/Form Params listed in the Discord Docs below. Discord Docs Example: Config Example Discord URL https://discordapp.com/api/webhooks/4515489001665127664/82-sf4385ysuhfn34u2fhfsdePGLrg8K7cP9wl553Fg6OlZuuxJGaa1d54fe Options username=myname","title":"Discord"},{"location":"Alerting/Transports/#elasticsearch","text":"You can have LibreNMS send alerts to an elasticsearch database. Each fault will be sent as a separate document. The index pattern uses strftime() formatting. Example: Config Example Host 127.0.0.1 Port 9200 Index Patter librenms-%Y.%m.%d","title":"Elasticsearch"},{"location":"Alerting/Transports/#gitlab","text":"LibreNMS will create issues for warning and critical level alerts however only title and description are set. Uses Personal access tokens to authenticate with Gitlab and will store the token in cleartext. Example: Config Example Host http://gitlab.host.tld Project ID 1 Personal Access Token AbCdEf12345","title":"Gitlab"},{"location":"Alerting/Transports/#hipchat","text":"See the HipChat API Documentation for rooms/message for details on acceptable values. You may notice that the link points at the \"deprecated\" v1 API. This is because the v2 API is still in beta. Example: Config Example API URL https://api.hipchat.com/v1/rooms/message?auth_token=109jawregoaihj Room ID 7654321 From Name LibreNMS Options color = red notify = 1 message_format = text At present the following options are supported: color , notify and message_format . Note: The default message format for HipChat messages is HTML. It is recommended that you specify the text message format to prevent unexpected results, such as HipChat attempting to interpret angled brackets ( < and > ).","title":"HipChat"},{"location":"Alerting/Transports/#irc","text":"The IRC transports only works together with the LibreNMS IRC-Bot. Configuration of the LibreNMS IRC-Bot is described here . Example: Config Example IRC enabled","title":"IRC"},{"location":"Alerting/Transports/#jira","text":"You can have LibreNMS create issues on a Jira instance for critical and warning alerts. The Jira transport only sets summary and description fields. Therefore your Jira project must not have any other mandatory field for the provided issuetype. The config fields that need to set are Jira URL, Jira username, Jira password, Project key, and issue type. Currently http authentication is used to access Jira and Jira username and password will be stored as cleartext in the LibreNMS database. Jira Issue Types Example: Config Example URL https://myjira.mysite.com Project Key JIRAPROJECTKEY Issue Type Myissuetype Jira Username myjirauser Jira Password myjirapass","title":"JIRA"},{"location":"Alerting/Transports/#line-notify","text":"LINE Notify LINE Notify API Document Example: Config Example Token AbCdEf12345","title":"LINE Notify"},{"location":"Alerting/Transports/#mail","text":"The E-Mail transports uses the same email-configuration like the rest of LibreNMS. As a small reminder, here is it's configuration directives including defaults: Example: Config Example Email me@example.com","title":"Mail"},{"location":"Alerting/Transports/#matrix","text":"For using the Matrix transports, you have to create a room on the Matrix-server. The provided Auth_token belongs to an user, which is member of this room. The Message, sent to the matrix-room can be built from the variables defined in Template-Syntax but without the 'alert->' prefix. See API-Transport. The variable $msg is contains the result of the Alert template. The Matrix-Server URL is cutted before the beginning of the _matrix/client/r0/... API-part. Example: Config Example Matrix-Server URL https://matrix.example.com/ Room !ajPbbPalmVbNuQoBDK:example.com Auth_token: MDAyYmxvY2F0aW9uI...z1DCn6lz_uOhtW3XRICg Message: Alert: {{ $msg }} https://librenms.example.com","title":"Matrix"},{"location":"Alerting/Transports/#microsoft-teams","text":"LibreNMS can send alerts to Microsoft Teams Incoming Webhooks which are then posted to a specific channel. Microsoft recommends using markdown formatting for connector cards. Administrators can opt to compose the MessageCard themselves using JSON to get the full functionality. Example: Config Example WebHook URL https://outlook.office365.com/webhook/123456789 Use JSON? x","title":"Microsoft Teams"},{"location":"Alerting/Transports/#nagios-compatible","text":"The nagios transport will feed a FIFO at the defined location with the same format that nagios would. This allows you to use other alerting systems with LibreNMS, for example Flapjack . Example: Config Example Nagios FIFO /path/to/my.fifo","title":"Nagios Compatible"},{"location":"Alerting/Transports/#opsgenie","text":"Using OpsGenie LibreNMS integration, LibreNMS forwards alerts to OpsGenie with detailed information. OpsGenie acts as a dispatcher for LibreNMS alerts, determines the right people to notify based on on-call schedules and notifies via email, text messages (SMS), phone calls and iOS & Android push notifications. Then escalates alerts until the alert is acknowledged or closed. Create a LibreNMS Integration from the integrations page once you signup. Then copy the API key from OpsGenie to LibreNMS. If you want to automatically ack and close alerts, leverage Marid integration. More detail with screenshots is available in OpsGenie LibreNMS Integration page . Example: Config Example WebHook URL https://url/path/to/webhook","title":"OpsGenie"},{"location":"Alerting/Transports/#osticket","text":"LibreNMS can send alerts to osTicket API which are then converted to osTicket tickets. Example: Config Example API URL http://osticket.example.com/api/http.php/tickets.json API Token 123456789","title":"osTicket"},{"location":"Alerting/Transports/#pagerduty","text":"LibreNMS can make use of PagerDuty, this is done by utilizing an API key and Integraton Key. API Keys can be found under 'API Access' in the PagerDuty portal. Integration Keys can be found under 'Integration' for the particular Service you have created in the PagerDuty portal. Example: Config Example API Key randomsample Integration Key somerandomstring","title":"PagerDuty"},{"location":"Alerting/Transports/#philips-hue","text":"Want to spice up your noc life? LibreNMS will flash all lights connected to your philips hue bridge whenever an alert is triggered. To setup, go to the you http:// your-bridge-ip /debug/clip.html Update the \"URL:\" field to /api Paste this in the \"Message Body\" {\"devicetype\":\"librenms\"} Press the round button on your philips Hue Bridge Click on POST In the Command Response You should see output with your username. Copy this without the quotes More Info: Philips Hue Documentation Example: Config Example Host http://your-bridge-ip Hue User username Duration 1 Second","title":"Philips Hue"},{"location":"Alerting/Transports/#playsms","text":"PlaySMS is an open source SMS-Gateway that can be used via their HTTP API using a Username and WebService Token. Please consult PlaySMS's documentation regarding number formatting. PlaySMS Docs Here an example using 3 numbers, any amount of numbers is supported: Example: Config Example PlaySMS https://localhost/index.php?app=ws User user1 Token MYFANCYACCESSTOKEN From My Name Mobiles +1234567892,+1234567890,+1234567891","title":"PlaySMS"},{"location":"Alerting/Transports/#pushbullet","text":"Get your Access Token from your Pushbullet's settings page and set it in your transport: Example: Config Example Access Token MYFANCYACCESSTOKEN","title":"Pushbullet"},{"location":"Alerting/Transports/#pushover","text":"If you want to change the default notification sound for all notifications then you can add the following in Pushover Options: sound=falling You also have the possibility to change sound per severity: sound_critical=falling sound_warning=siren sound_ok=magic Enabling Pushover support is fairly easy, there are only two required parameters. Firstly you need to create a new Application (called LibreNMS, for example) in your account on the Pushover website ( https://pushover.net/apps ). Now copy your API Key and obtain your User Key from the newly created Application and setup the transport. Pushover Docs Example: Config Example Api Key APPLICATIONAPIKEYGOESHERE User Key USERKEYGOESHERE Pushover Options sound_critical=falling sound_warning=siren sound_ok=magic","title":"Pushover"},{"location":"Alerting/Transports/#rocketchat","text":"The Rocket.chat transport will POST the alert message to your Rocket.chat Incoming WebHook using the attachments option. Simple html tags are stripped from the message. All options are optional, the only required value is for url, without this then no call to Rocket.chat will be made. Rocket.chat Docs Example: Config Example Webhook URL https://rocket.url/api/v1/chat.postMessage Rocket.chat Options channel=#Alerting username=myname icon_url=http://someurl/image.gif icon_emoji=:smirk:","title":"Rocket.chat"},{"location":"Alerting/Transports/#sensu","text":"The Sensu transport will POST an Event to the Agent API upon an alert being generated. It will be categorised (ok, warning or critical), and if you configure the alert to send recovery notifications, Sensu will also clear the alert automatically. No configuration is required - as long as you are running the Sensu Agent on your poller with the HTTP socket enabled on tcp/3031, LibreNMS will start generating Sensu events as soon as you create the transport. Acknowledging alerts within LibreNMS is not directly supported, but an annotation ( acknowledged ) is set, so a mutator or silence, or even the handler could be written to look for it directly in the handler. There is also an annotation ( generated-by ) set, to allow you to treat LibreNMS events differently from agent events. The 'shortname' option is a simple way to reduce the length of device names in configs. It replaces the last 3 domain components with single letters (e.g. websrv08.dc4.eu.corp.example.net gets shortened to websrv08.dc4.eu.cen).","title":"Sensu"},{"location":"Alerting/Transports/#limitations","text":"Only a single namespace is supported Sensu will reject rules with special characters - the Transport will attempt to fix up rule names, but it's best to stick to letters, numbers and spaces The transport only deals in absolutes - it ignores the got worse/got better states The agent will buffer alerts, but LibreNMS will not - if your agent is offline, alerts will be dropped There is no backchannel between Sensu and LibreNMS - if you make changes in Sensu to LibreNMS alerts, they'll be lost on the next event (silences will work) Example: Config Example Sensu Endpoint http://localhost:3031 Sensu Namespace eu-west Check Prefix lnms Source Key hostname","title":"Limitations"},{"location":"Alerting/Transports/#slack","text":"The Slack transport will POST the alert message to your Slack Incoming WebHook using the attachments option, you are able to specify multiple webhooks along with the relevant options to go with it. Simple html tags are stripped from the message. All options are optional, the only required value is for url, without this then no call to Slack will be made. We currently support the following attachment options: author_name Slack docs Example: Config Example Webhook URL https://slack.com/url/somehook Slack Options author_name=Me","title":"Slack"},{"location":"Alerting/Transports/#smseagle","text":"SMSEagle is a hardware SMS Gateway that can be used via their HTTP API using a Username and password. Destination numbers are one per line, with no spaces. They can be in either local or international dialling format. SMSEagle Docs Example: Config Example SMSEagle Host ip.add.re.ss User smseagle_user Password smseagle_user_password Mobiles +3534567890 0834567891","title":"SMSEagle"},{"location":"Alerting/Transports/#smsmode","text":"SMSmode is a SMS provider that can be configured by using the generic API Transport. You need a token you can find on your personnal space. SMSmode docs Example: Config Example Transport type Api API Method POST API URL http://api.smsmode.com/http/1.6/sendSMS.do Options accessToken= PUT_HERE_YOUR_TOKEN numero= PUT_HERE_DESTS_NUMBER_COMMA_SEPARATED message={{ $msg }}","title":"SMSmode"},{"location":"Alerting/Transports/#splunk","text":"LibreNMS can send alerts to a Splunk instance and provide all device and alert details. Example output: Feb 21 15:21:52 nms hostname=\"localhost\", sysName=\"localhost\", sysDescr=\"\", sysContact=\"\", os=\"fortigate\", type=\"firewall\", ip=\"localhost\", hardware=\"FGT_50E\", version=\"v5.6.9\", serial=\"\", features=\"\", location=\"\", uptime=\"387\", uptime_short=\" 6m 27s\", uptime_long=\" 6 minutes 27 seconds\", description=\"\", notes=\"\", alert_notes=\"\", device_id=\"0\", rule_id=\"0\", id=\"0\", proc=\"\", status=\"1\", status_reason=\"\", ping_timestamp=\"\", ping_loss=\"0\", ping_min=\"25.6\", ping_max=\"26.8\", ping_avg=\"26.3\", title=\"localhost recovered from Device up/down \", elapsed=\"14m 54s\", uid=\"0\", alert_id=\"0\", severity=\"critical\", name=\"Device up/down\", timestamp=\"2020-02-21 15:21:33\", state=\"0\", device_device_id=\"0\", device_inserted=\"\", device_hostname=\"localhost\", device_sysName=\"localhost\", device_ip=\"localhost\", device_overwrite_ip=\"\", device_timeout=\"\", device_retries=\"\", device_snmp_disable=\"0\", device_bgpLocalAs=\"0\", device_sysObjectID=\"\", device_sysDescr=\"\", device_sysContact=\"\", device_version=\"v5.6.9\", device_hardware=\"FGT_50E\", device_features=\"build1673\", device_location_id=\"\", device_os=\"fortigate\", device_status=\"1\", device_status_reason=\"\", device_ignore=\"0\", device_disabled=\"0\", device_uptime=\"387\", device_agent_uptime=\"0\", device_last_polled=\"2020-02-21 15:21:33\", device_last_poll_attempted=\"\", device_last_polled_timetaken=\"7.9\", device_last_discovered_timetaken=\"11.77\", device_last_discovered=\"2020-02-21 13:16:42\", device_last_ping=\"2020-02-21 15:21:33\", device_last_ping_timetaken=\"26.3\", device_purpose=\"\", device_type=\"firewall\", device_serial=\"FGT50EXXX\", device_icon=\"images/os/fortinet.svg\", device_poller_group=\"0\", device_override_sysLocation=\"0\", device_notes=\"\", device_port_association_mode=\"1\", device_max_depth=\"0\", device_disable_notify=\"0\", device_location=\"\", device_vrf_lites=\"Array\", device_lat=\"\", device_lng=\"\", - sysObjectID => \"\"; Each alert will be sent as a separate message. Example: Config Example Host 127.0.0.1 UDP Port 514","title":"Splunk"},{"location":"Alerting/Transports/#syslog","text":"You can have LibreNMS emit alerts as syslogs complying with RFC 3164. More information on RFC 3164 can be found here: https://tools.ietf.org/html/rfc3164 Example output: <26> Mar 22 00:59:03 librenms.host.net librenms[233]: [Critical] network.device.net: Port Down - port_id => 98939; ifDescr => xe-1/1/0; Each fault will be sent as a separate syslog. Example: Config Example Host 127.0.0.1 Port 514 Facility 3","title":"Syslog"},{"location":"Alerting/Transports/#telegram","text":"Thank you to snis for these instructions. First you must create a telegram account and add BotFather to you list. To do this click on the following url: https://telegram.me/botfather Generate a new bot with the command \"/newbot\" BotFather is then asking for a username and a normal name. After that your bot is created and you get a HTTP token. (for more options for your bot type \"/help\") Add your bot to telegram with the following url: http://telegram.me/<botname> to use app or https://web.telegram.org/<botname> to use in web, and send some text to the bot. The BotFather should have responded with a token, copy your token code and go to the following page in chrome: https://api.telegram.org/bot<tokencode>/getUpdates (this could take a while so continue to refresh until you see something similar to below) You see a json code with the message you sent to the bot. Copy the Chat id. In this example that is \u201c-9787468\u201d within this example: \"message\":{\"message_id\":7,\"from\":\"id\":656556,\"first_name\":\"Joo\",\"last_name\":\"Doo\",\"username\":\"JohnDoo\"},\"chat\":{\"id\":-9787468,\"title\":\"Telegram Group\"},\"date\":1435216924,\"text\":\"Hi\"}}]} . Now create a new \"Telegram transport\" in LibreNMS (Global Settings -> Alerting Settings -> Telegram transport). Click on 'Add Telegram config' and put your chat id and token into the relevant box. If want to use a group to receive alerts, you need to pick the Chat ID of the group chat, and not of the Bot itself. Telegram Docs Example: Config Example Chat ID 34243432 Token 3ed32wwf235234 Format HTML or MARKDOWN","title":"Telegram"},{"location":"Alerting/Transports/#twilio-sms","text":"Twilio will send your alert via SMS. From your Twilio account you will need your account SID, account token and your Twilio SMS phone number that you would like to send the alerts from. Twilio's APIs are located at: https://www.twilio.com/docs/api?filter-product=sms Example: Config Example SID ACxxxxxxxxxxxxxxxxxxxxxxxxxxxx Token 7xxxx573acxxxbc2xxx308d6xxx652d32 Twilio SMS Number 8888778660","title":"Twilio SMS"},{"location":"Alerting/Transports/#victorops","text":"VictorOps provide a webHook url to make integration extremely simple. To get the URL required login to your VictorOps account and go to: Settings -> Integrations -> REST Endpoint -> Enable Integration. The URL provided will have $routing_key at the end, you need to change this to something that is unique to the system sending the alerts such as librenms. I.e: https://alert.victorops.com/integrations/generic/20132414/alert/2f974ce1-08fc-4dg8-a4f4-9aee6cf35c98/librenms Example: Config Example Post URL https://alert.victorops.com/integrations/generic/20132414/alert/2f974ce1-08fc-4dg8-a4f4-9aee6cf35c98/librenms","title":"VictorOps"},{"location":"Alerting/Transports/#kayako-classic","text":"LibreNMS can send alerts to Kayako Classic API which are then converted to tickets. To use this module, you need REST API feature enabled in Kayako Classic and configured email account at LibreNMS. To enable this, do this: AdminCP -> REST API -> Settings -> Enable API (Yes) Also you need to know the department id to provide tickets to appropriate department and a user email to provide, which is used as ticket author. To get department id: navigate to appropriate department name at the departments list page in Admin CP and watch the number at the end of url. Example: http://servicedesk.example.com/admin/Base/Department/Edit/17 . Department ID is 17 As a requirement, you have to know API Url, API Key and API Secret to connect to servicedesk Kayako REST API Docs Example: Config Example Kayako URL http://servicedesk.example.com/api/ Kayako API Key 8cc02f38-7465-4a0c-8730-bb3af122167b Kayako API Secret Y2NhZDIxNDMtNjVkMi0wYzE0LWExYTUtZGUwMjJiZDI0ZWEzMmRhOGNiYWMtNTU2YS0yODk0LTA1MTEtN2VhN2YzYzgzZjk5 Kayako Department 1","title":"Kayako Classic"},{"location":"Alerting/Transports/#smsfeedback","text":"SMSFeedback is a SAAS service, which can be used to deliver Alerts via API, using API url, Username & Password. They can be in international dialling format only. SMSFeedback Api Docs Example: Config Example User smsfeedback_user Password smsfeedback_password Mobiles 71234567890 Sender name CIA","title":"SMSFeedback"},{"location":"Developing/","text":"Copyright and Licensing All contributors to LibreNMS retain copyright to their own code and are not required to sign over their rights to any other party. Code should be licensed under the GPLv3 and MUST NOT contain non-GPL Observium code or GPL incompatible code. To be safe do not view Observium code at all. See Licensing for more details. General Guidelines Test your patches first. Don't break the poller. User interface blemishes are not critical, but losing data from network monitoring systems might be. As a general rule, if you're replacing lines of code with new lines of code, don't comment them out, just delete them. Commented out code makes the patch and the resultant code harder to read, and there's no good reason to it since we can easily get them back from git. If you're fixing a bug or making another minor change, don't reformat the code at the same time. This makes it harder to see what's changed. If you need to reformat it after making the change, do so in a separate commit. Please join us in discord if you are able. Collaborating in real time makes the coordination of contributions easier. Ensure you read the Code Guidelines documentation and understand the code style that should be adhered to. You can validate that your code adheres to these guidelines before submitting. Check Style Guidelines for Web UI guidelines and conventions. How to Contribute Getting Started Set up your development environment to make things easier. Using Git gives you step-by-step instructions on using git to submit a pull request. Code Structure can help you understand where specific code exists in LibreNMS. Creating Documentation It is very important for the continued improvement of LibreNMS that we have good documentation. If you see anything that that needs improvement please submit a pull request to fix it. Don't be afraid to submit a GitHub Pull Request. We will help you with anything that needs to be change or suggest ways of improving your patch. Because the maintainers are volunteers too sometimes response may be delayed or brief, please be patient or ask for clarification if needed. Thanks! Good places to start to learn PHP or improve your coding PHP: The Right Way A community curated list of best practices and quick help. Laracasts Video coding tutorials that are easy to follow. Many of the beginner videos are free. Suggested Series: The PHP Practitioner Object-Oriented Bootcamp Simple Rules for Simpler Code Laravel Documentation","title":"Contributing"},{"location":"Developing/#copyright-and-licensing","text":"All contributors to LibreNMS retain copyright to their own code and are not required to sign over their rights to any other party. Code should be licensed under the GPLv3 and MUST NOT contain non-GPL Observium code or GPL incompatible code. To be safe do not view Observium code at all. See Licensing for more details.","title":"Copyright and Licensing"},{"location":"Developing/#general-guidelines","text":"Test your patches first. Don't break the poller. User interface blemishes are not critical, but losing data from network monitoring systems might be. As a general rule, if you're replacing lines of code with new lines of code, don't comment them out, just delete them. Commented out code makes the patch and the resultant code harder to read, and there's no good reason to it since we can easily get them back from git. If you're fixing a bug or making another minor change, don't reformat the code at the same time. This makes it harder to see what's changed. If you need to reformat it after making the change, do so in a separate commit. Please join us in discord if you are able. Collaborating in real time makes the coordination of contributions easier. Ensure you read the Code Guidelines documentation and understand the code style that should be adhered to. You can validate that your code adheres to these guidelines before submitting. Check Style Guidelines for Web UI guidelines and conventions.","title":"General Guidelines"},{"location":"Developing/#how-to-contribute","text":"Getting Started Set up your development environment to make things easier. Using Git gives you step-by-step instructions on using git to submit a pull request. Code Structure can help you understand where specific code exists in LibreNMS. Creating Documentation It is very important for the continued improvement of LibreNMS that we have good documentation. If you see anything that that needs improvement please submit a pull request to fix it. Don't be afraid to submit a GitHub Pull Request. We will help you with anything that needs to be change or suggest ways of improving your patch. Because the maintainers are volunteers too sometimes response may be delayed or brief, please be patient or ask for clarification if needed. Thanks!","title":"How to Contribute"},{"location":"Developing/#good-places-to-start-to-learn-php-or-improve-your-coding","text":"PHP: The Right Way A community curated list of best practices and quick help. Laracasts Video coding tutorials that are easy to follow. Many of the beginner videos are free. Suggested Series: The PHP Practitioner Object-Oriented Bootcamp Simple Rules for Simpler Code Laravel Documentation","title":"Good places to start to learn PHP or improve your coding"},{"location":"Developing/Code-Guidelines/","text":"Coding guidelines This document is here to help code standards for contributions towards LibreNMS. The original code base that we forked from had a lack of standards and as such the code base has a variety of different styles. Whilst we don't want to restrict how people write code, these guidelines should mean we have a good standard going forward that makes reading the code easier. All modern day ide's should be able to assist in these guidelines without breaking your usual workflow. PHP-FIG PSR-2 Coding Style All new code should follow the PHP-FIG PSR-2 standard . Below are a few key items from that specification, please make sure to follow the full spec. Indentation Please use four (4) spaces to indent code rather than a tab. Ensure you increase indentation for nested code blocks. if ( $foo == 5 ) { if ( $foo == 5 ) { if ( $foo == 5 ) { Line length Try to keep the length of a line under 80 characters. If you must exceed 80 characters, please keep it under 120 characters. This makes reading the code easier and also enables compatibility for all screen sizes. Control structures A space must be used both before and after the parenthesis and also surrounding the condition operator. if ( $foo == 5 ) { Do not put blocks of code on a single line, do use parenthesis if ( $foo == 5 ) { echo 'foo is 5' ; } else and elseif should start on the same line as ending of the previous code block. if ( $foo == 5 ) { echo 'foo is 5' ; } elsif ( $foo == 4 ) { echo 'foo is 4' ; } else { echo 'foo is something else' ; } Including files Using parenthesis around file includes isn't required, instead just place the file in between '' require_once 'includes/snmp.inc.php' ; PHP tags Ensure you use <?php rather than the shorthand version <?. <? php The ?> must be excluded from all files that only include PHP (no html). For instance anything in includes/ or html/includes don't need the tag along with config.php.","title":"Code Guidelines"},{"location":"Developing/Code-Guidelines/#coding-guidelines","text":"This document is here to help code standards for contributions towards LibreNMS. The original code base that we forked from had a lack of standards and as such the code base has a variety of different styles. Whilst we don't want to restrict how people write code, these guidelines should mean we have a good standard going forward that makes reading the code easier. All modern day ide's should be able to assist in these guidelines without breaking your usual workflow.","title":"Coding guidelines"},{"location":"Developing/Code-Guidelines/#php-fig-psr-2-coding-style","text":"All new code should follow the PHP-FIG PSR-2 standard . Below are a few key items from that specification, please make sure to follow the full spec.","title":"PHP-FIG PSR-2 Coding Style"},{"location":"Developing/Code-Guidelines/#indentation","text":"Please use four (4) spaces to indent code rather than a tab. Ensure you increase indentation for nested code blocks. if ( $foo == 5 ) { if ( $foo == 5 ) { if ( $foo == 5 ) {","title":"Indentation"},{"location":"Developing/Code-Guidelines/#line-length","text":"Try to keep the length of a line under 80 characters. If you must exceed 80 characters, please keep it under 120 characters. This makes reading the code easier and also enables compatibility for all screen sizes.","title":"Line length"},{"location":"Developing/Code-Guidelines/#control-structures","text":"A space must be used both before and after the parenthesis and also surrounding the condition operator. if ( $foo == 5 ) { Do not put blocks of code on a single line, do use parenthesis if ( $foo == 5 ) { echo 'foo is 5' ; } else and elseif should start on the same line as ending of the previous code block. if ( $foo == 5 ) { echo 'foo is 5' ; } elsif ( $foo == 4 ) { echo 'foo is 4' ; } else { echo 'foo is something else' ; }","title":"Control structures"},{"location":"Developing/Code-Guidelines/#including-files","text":"Using parenthesis around file includes isn't required, instead just place the file in between '' require_once 'includes/snmp.inc.php' ;","title":"Including files"},{"location":"Developing/Code-Guidelines/#php-tags","text":"Ensure you use <?php rather than the shorthand version <?. <? php The ?> must be excluded from all files that only include PHP (no html). For instance anything in includes/ or html/includes don't need the tag along with config.php.","title":"PHP tags"},{"location":"Developing/Code-Structure/","text":"Code structure This document will try and provide a good overview of how the code is structured within LibreNMS. We will go through the main directories and provide information on how and when they are used. LibreNMS now uses Laravel for much of it's frontend (webui) and database code. Much of the Laravel documentation applies: https://laravel.com/docs/structure Directories from the (filtered) structure tree below are some of the directories that will be most interesting during development: . \u251c\u2500 app \u251c\u2500 database \u2502 \u2514\u2500 migrations \u251c\u2500 doc \u251c\u2500 html \u2502 \u251c\u2500 css \u2502 \u2502 \u2514\u2500 custom \u2502 \u2514\u2500 js \u251c\u2500 includes \u2502 \u251c\u2500 definitions \u2502 \u251c\u2500 discovery \u2502 \u251c\u2500 html \u2502 \u2502 \u251c\u2500 forms \u2502 \u2502 \u251c\u2500 graphs \u2502 \u2502 \u251c\u2500 pages \u2502 \u2502 \u2514\u2500 reports \u2502 \u2514\u2500 polling \u251c\u2500 LibreNMS \u251c\u2500 logs \u251c\u2500 mibs \u2514\u2500 rrd doc/ This is the location of all the documentation for LibreNMS, this is in GitHub markdown format and can be viewed online app/ Most Laravel and Eloquent classes should be under this directory. LibreNMS/ Classes that don't belong to the Laravel application belong in this directory, with a directory structure that matches the namespace. One class per file. See PSR-0 for details. html/ All legacy web accessible files are located here. New pages should follow the Laravel conventions. html/api_v0.php This is the API routing file which directs users to the correct API function based on the API endpoint call. html/index.php This is the main file which all links within LibreNMS are parsed through. It loads the majority of the relevant includes needed for the control panel to function. CSS and JS files are also loaded here. html/css/ All used CSS files are located here. html/css/custom/ This is a directory you can put custom css files into that won't interfere with auto updates html/js/ All used JS files are located here. includes/ This directory is quite big and contains all the files to make the cli and polling / discovery to work. This code is not currently accessible from Laravel code (intentionally). includes/discovery/, includes/polling/ All the discovery and polling code. The format is usually quite similar between discovery and polling. Both are made up of modules and the files within the relevant directories will match that module. So for instance if you want to update the os detection for a device, you would look in includes/discovery/os/ for a file named after the operating system such as linux: includes/discovery/linux.inc.php . Within here you would update or add support for newer OS'. This is the same for polling as well. includes/html/ This is where the majority of the website core files are located. These tend to be files that contain functions or often used code segments that can be included where needed rather than duplicating code. includes/html/forms/ This directory contains all of the files that are dynamically included from an ajax call to ajax/form. includes/html/api_functions.inc.php All of the functions and calls for the API are located here. includes/html/functions.inc.php This contains the majority of functions used throughout the standard web ui. includes/html/graphs/ This directory contains global and OS specific graph definitions. includes/html/reports/ In here is a list of of files that generate PDF reports available to the user. These are dynamically called in from html/pdf.php based on the report the user requests. includes/html/table/ This directory contains all of the ajax calls when generating the table of data. Most have been converted over so if you are planning to add a new table of data then you will do so here for all of the back end data calls. includes/html/pages/ This directory contains the URL structure when browsing the Web UI. So for example /devices/ is actually a call to includes/html/pages/devices.inc.php , /device/tab=ports/ is includes/html/pages/device/ports.inc.php . logs/ Contains the main librenms.log file by default, but can also contain your web server's logs, poller logs, and other items. mibs/ Here is where all of the mibs are located. Generally standard mibs should be in the root directory and specific vendor mibs should be in their own subdirectory. rrd/ Simple enough, this is where all of the rrd files are created. They are stored in directory based on the device hostname. database/migrations Contains all the database migrations. See Laravel docs for additional info: https://laravel.com/docs/migrations In general to create a new table you should run: php artisan make:model ModelName -m -c -r","title":"Code Structure"},{"location":"Developing/Code-Structure/#code-structure","text":"This document will try and provide a good overview of how the code is structured within LibreNMS. We will go through the main directories and provide information on how and when they are used. LibreNMS now uses Laravel for much of it's frontend (webui) and database code. Much of the Laravel documentation applies: https://laravel.com/docs/structure Directories from the (filtered) structure tree below are some of the directories that will be most interesting during development: . \u251c\u2500 app \u251c\u2500 database \u2502 \u2514\u2500 migrations \u251c\u2500 doc \u251c\u2500 html \u2502 \u251c\u2500 css \u2502 \u2502 \u2514\u2500 custom \u2502 \u2514\u2500 js \u251c\u2500 includes \u2502 \u251c\u2500 definitions \u2502 \u251c\u2500 discovery \u2502 \u251c\u2500 html \u2502 \u2502 \u251c\u2500 forms \u2502 \u2502 \u251c\u2500 graphs \u2502 \u2502 \u251c\u2500 pages \u2502 \u2502 \u2514\u2500 reports \u2502 \u2514\u2500 polling \u251c\u2500 LibreNMS \u251c\u2500 logs \u251c\u2500 mibs \u2514\u2500 rrd","title":"Code structure"},{"location":"Developing/Code-Structure/#doc","text":"This is the location of all the documentation for LibreNMS, this is in GitHub markdown format and can be viewed online","title":"doc/"},{"location":"Developing/Code-Structure/#app","text":"Most Laravel and Eloquent classes should be under this directory.","title":"app/"},{"location":"Developing/Code-Structure/#librenms","text":"Classes that don't belong to the Laravel application belong in this directory, with a directory structure that matches the namespace. One class per file. See PSR-0 for details.","title":"LibreNMS/"},{"location":"Developing/Code-Structure/#html","text":"All legacy web accessible files are located here. New pages should follow the Laravel conventions.","title":"html/"},{"location":"Developing/Code-Structure/#htmlapi_v0php","text":"This is the API routing file which directs users to the correct API function based on the API endpoint call.","title":"html/api_v0.php"},{"location":"Developing/Code-Structure/#htmlindexphp","text":"This is the main file which all links within LibreNMS are parsed through. It loads the majority of the relevant includes needed for the control panel to function. CSS and JS files are also loaded here.","title":"html/index.php"},{"location":"Developing/Code-Structure/#htmlcss","text":"All used CSS files are located here.","title":"html/css/"},{"location":"Developing/Code-Structure/#htmlcsscustom","text":"This is a directory you can put custom css files into that won't interfere with auto updates","title":"html/css/custom/"},{"location":"Developing/Code-Structure/#htmljs","text":"All used JS files are located here.","title":"html/js/"},{"location":"Developing/Code-Structure/#includes","text":"This directory is quite big and contains all the files to make the cli and polling / discovery to work. This code is not currently accessible from Laravel code (intentionally).","title":"includes/"},{"location":"Developing/Code-Structure/#includesdiscovery-includespolling","text":"All the discovery and polling code. The format is usually quite similar between discovery and polling. Both are made up of modules and the files within the relevant directories will match that module. So for instance if you want to update the os detection for a device, you would look in includes/discovery/os/ for a file named after the operating system such as linux: includes/discovery/linux.inc.php . Within here you would update or add support for newer OS'. This is the same for polling as well.","title":"includes/discovery/, includes/polling/"},{"location":"Developing/Code-Structure/#includeshtml","text":"This is where the majority of the website core files are located. These tend to be files that contain functions or often used code segments that can be included where needed rather than duplicating code.","title":"includes/html/"},{"location":"Developing/Code-Structure/#includeshtmlforms","text":"This directory contains all of the files that are dynamically included from an ajax call to ajax/form.","title":"includes/html/forms/"},{"location":"Developing/Code-Structure/#includeshtmlapi_functionsincphp","text":"All of the functions and calls for the API are located here.","title":"includes/html/api_functions.inc.php"},{"location":"Developing/Code-Structure/#includeshtmlfunctionsincphp","text":"This contains the majority of functions used throughout the standard web ui.","title":"includes/html/functions.inc.php"},{"location":"Developing/Code-Structure/#includeshtmlgraphs","text":"This directory contains global and OS specific graph definitions.","title":"includes/html/graphs/"},{"location":"Developing/Code-Structure/#includeshtmlreports","text":"In here is a list of of files that generate PDF reports available to the user. These are dynamically called in from html/pdf.php based on the report the user requests.","title":"includes/html/reports/"},{"location":"Developing/Code-Structure/#includeshtmltable","text":"This directory contains all of the ajax calls when generating the table of data. Most have been converted over so if you are planning to add a new table of data then you will do so here for all of the back end data calls.","title":"includes/html/table/"},{"location":"Developing/Code-Structure/#includeshtmlpages","text":"This directory contains the URL structure when browsing the Web UI. So for example /devices/ is actually a call to includes/html/pages/devices.inc.php , /device/tab=ports/ is includes/html/pages/device/ports.inc.php .","title":"includes/html/pages/"},{"location":"Developing/Code-Structure/#logs","text":"Contains the main librenms.log file by default, but can also contain your web server's logs, poller logs, and other items.","title":"logs/"},{"location":"Developing/Code-Structure/#mibs","text":"Here is where all of the mibs are located. Generally standard mibs should be in the root directory and specific vendor mibs should be in their own subdirectory.","title":"mibs/"},{"location":"Developing/Code-Structure/#rrd","text":"Simple enough, this is where all of the rrd files are created. They are stored in directory based on the device hostname.","title":"rrd/"},{"location":"Developing/Code-Structure/#databasemigrations","text":"Contains all the database migrations. See Laravel docs for additional info: https://laravel.com/docs/migrations In general to create a new table you should run: php artisan make:model ModelName -m -c -r","title":"database/migrations"},{"location":"Developing/Creating-Documentation/","text":"Creating Documentation One of the goals of the LibreNMS project is to enable users to get all of the help they need from our documentation. The documentation is generated with mkdocs . If you want to build a local copy, install mkdocs and mkdocs-material , then run make docs . This produces the HTML in docs/out directory. Alternatively you can start a webserver at http://localhost:8000 for live preview by executing mkdocs serve Writing docs When you are adding a new feature or extension, we need to have full documentation to go along with it. It's quite simple to do this: Find the relevant directory to store your new document in, General, Support and Extensions are the most likely choices. Think of a descriptive name that's not too long, it should match what they may be looking for or describes the feature. Add the new document into the nav section of mkdocs.yml if it needs to appear in the table of contents Ensure the first line contains: source: path/to/file.md - don't include the initial doc/ . In the body of the document, be descriptive but keep things simple. Some tips: If the document could cover different distros like CentOS and Ubuntu please try and include the information for them all. If that's not possible then at least put a placeholder in asking for contributions. Ensure you use the correct formating for commands and code blocks by wrapping one liners in backticks or blocks in ```. Put content into sub-headings where possible to organise the content. If you rename a file, please add a redirect in for the old file by using <meta http-equiv=\"refresh\" content=\"0; url=/NewLocation/\" /> within the old file name. Please ensure you add the document to the relevant section within pages of mkdocs.yml so that it's in the correct menu and is built. Forgetting this step will result in your document never seeing the light of day :) Formatting docs Our docs are based on Markdown using mkdocs which adheres to markdown specs and nothing more, because of that we also import a couple of extra libraries: pymdownx.tasklist pymdownx.tilde This means you can use: ~~strikethrough~~ to perform strikethrough - [X] List items Url's can be made [like this](http://www.librenms.org) like this Code can be placed in `` for single line or ``` for multiline. # Can be used for main headings which translates to a <h1> tag, increasing the # 's will increase the hX tags. ### Can be used for sub-headings which will appear in the TOC to the left. Markdown CheatSheet Link","title":"Creating Documentation"},{"location":"Developing/Creating-Documentation/#creating-documentation","text":"One of the goals of the LibreNMS project is to enable users to get all of the help they need from our documentation. The documentation is generated with mkdocs . If you want to build a local copy, install mkdocs and mkdocs-material , then run make docs . This produces the HTML in docs/out directory. Alternatively you can start a webserver at http://localhost:8000 for live preview by executing mkdocs serve","title":"Creating Documentation"},{"location":"Developing/Creating-Documentation/#writing-docs","text":"When you are adding a new feature or extension, we need to have full documentation to go along with it. It's quite simple to do this: Find the relevant directory to store your new document in, General, Support and Extensions are the most likely choices. Think of a descriptive name that's not too long, it should match what they may be looking for or describes the feature. Add the new document into the nav section of mkdocs.yml if it needs to appear in the table of contents Ensure the first line contains: source: path/to/file.md - don't include the initial doc/ . In the body of the document, be descriptive but keep things simple. Some tips: If the document could cover different distros like CentOS and Ubuntu please try and include the information for them all. If that's not possible then at least put a placeholder in asking for contributions. Ensure you use the correct formating for commands and code blocks by wrapping one liners in backticks or blocks in ```. Put content into sub-headings where possible to organise the content. If you rename a file, please add a redirect in for the old file by using <meta http-equiv=\"refresh\" content=\"0; url=/NewLocation/\" /> within the old file name. Please ensure you add the document to the relevant section within pages of mkdocs.yml so that it's in the correct menu and is built. Forgetting this step will result in your document never seeing the light of day :)","title":"Writing docs"},{"location":"Developing/Creating-Documentation/#formatting-docs","text":"Our docs are based on Markdown using mkdocs which adheres to markdown specs and nothing more, because of that we also import a couple of extra libraries: pymdownx.tasklist pymdownx.tilde This means you can use: ~~strikethrough~~ to perform strikethrough - [X] List items Url's can be made [like this](http://www.librenms.org) like this Code can be placed in `` for single line or ``` for multiline. # Can be used for main headings which translates to a <h1> tag, increasing the # 's will increase the hX tags. ### Can be used for sub-headings which will appear in the TOC to the left. Markdown CheatSheet Link","title":"Formatting docs"},{"location":"Developing/Creating-Release/","text":"Creating a release GitHub You can create a new release on GitHub . Enter the tag version that month, i.e for September 2016 you would enter 201609 . Enter a title, we usually use August 2016 Release Enter a placeholder for the body, we will edit this later. Create changelog For this, we assume you are using the master branch to create the release against. We now generate the changelog using the GitHub API itself so it shouldn't matter what state your local branch is in so long as it has the code to generate the changelog itself. Using the GitHub API means we can use the labels associated with merged pull requests to categorise the changelog. We also then record who made the pull request to thank them in the changelog itself. You will be asked for a GitHub personal access token. You can generate this here . No permissions should be needed so just give it a name and click Generate Token . You can then export the token as an environment variable GH_TOKEN or place it in your .env file. The basic command to run is by using artisan . Here you pass new tag (1.41) and previous tag (1.40). For further help run php artisan release:tag --help . This will generate a changelog up to the latest master branch, if you want it to be done against something else then pass the latest pull request number with --pr $PR_NUMBER . php artisan release:tag 1 .41 1 .40 Now commit and push the change that has been made to doc/General/Changelog.md . Once the pull request has been merged in for the Changelog, you can create a new release on GitHub . Create two threads on the community site: A changelog thread example An info thread example Tweet it Facebook it Google Plus it LinkedIn it","title":"Creating Release"},{"location":"Developing/Creating-Release/#creating-a-release","text":"","title":"Creating a release"},{"location":"Developing/Creating-Release/#github","text":"You can create a new release on GitHub . Enter the tag version that month, i.e for September 2016 you would enter 201609 . Enter a title, we usually use August 2016 Release Enter a placeholder for the body, we will edit this later.","title":"GitHub"},{"location":"Developing/Creating-Release/#create-changelog","text":"For this, we assume you are using the master branch to create the release against. We now generate the changelog using the GitHub API itself so it shouldn't matter what state your local branch is in so long as it has the code to generate the changelog itself. Using the GitHub API means we can use the labels associated with merged pull requests to categorise the changelog. We also then record who made the pull request to thank them in the changelog itself. You will be asked for a GitHub personal access token. You can generate this here . No permissions should be needed so just give it a name and click Generate Token . You can then export the token as an environment variable GH_TOKEN or place it in your .env file. The basic command to run is by using artisan . Here you pass new tag (1.41) and previous tag (1.40). For further help run php artisan release:tag --help . This will generate a changelog up to the latest master branch, if you want it to be done against something else then pass the latest pull request number with --pr $PR_NUMBER . php artisan release:tag 1 .41 1 .40 Now commit and push the change that has been made to doc/General/Changelog.md . Once the pull request has been merged in for the Changelog, you can create a new release on GitHub . Create two threads on the community site: A changelog thread example An info thread example Tweet it Facebook it Google Plus it LinkedIn it","title":"Create changelog"},{"location":"Developing/Dynamic-Config/","text":"Adding new config settings Adding support for users to update a new config option via the WebUI is now a lot easier for general options. This document shows you how to add a new config option and even section to the WebUI. Config settings are defined in misc/config_definitions.json You should give a little thought to the name of your config setting. For example: a good setting for snmp community, would be snmp.community . The dot notation is path and when the config is hydrated, it is converted to a nested array. If the user is overriding the option in config.php it would use the format $config['snmp']['community'] Translation The config definition system inherently supports translation. You must add the English names in the resoures/lang/en/settings.php file (and other languages if you can). To update the javascript translation files, run: ./lnms translation:generate Definition Format For snmp.community, this is the definition: \"snmp.community\" : { \"group\" : \"poller\" , \"section\" : \"snmp\" , \"order\" : 2 , \"type\" : \"array\" , \"default\" : [ \"public\" ] } Fields All fields are optional. To show in the web ui, group and section are required, order is recommended. type : Defines the type, there are a few predefined types and custom types can be defined and implemented in a vue.js component default : the default value for this setting options : the options for the select type. An object with {\"value1\": \"display string\", \"value2\": \"display string\"} validate : Defines more complex validation than the default simple type check. Uses Laravel validation syntax. group : The web ui tab this is under section : A panel grouping settings in the web ui order : The order to display this setting within the section Predefined Types string : A string integer : A number boolean : A simple toggle switch array : A list of values that can be added, removed, and re-ordered. select : A dropdown box with predefined options. Requires the option field. email : Will validate the input is the correct format for an email password : Will mask the value of the input (but does not keep it fully private) Custom Types You may set the type field to a custom type and define a Vue.js component to display it to the user. The Vue.js component should be named as \"SettingType\" where type is the custom type entered with the first letter capitalized. Vue.js components exist in the resources/js/components directory. Here is an empty component named SettingType (make sure to rename it). It pulls in BaseSetting mixin for basic setting code to reuse. You should review the BaseSetting component. <template> <div></div> </template> <script> import BaseSetting from \"./BaseSetting\"; export default { name: \"SettingType\", mixins: [BaseSetting] } </script> <style scoped> </style> Using Vue.js is beyond the scope of this document. Documentation can be found at vuejs.org .","title":"Dynamic Config"},{"location":"Developing/Dynamic-Config/#adding-new-config-settings","text":"Adding support for users to update a new config option via the WebUI is now a lot easier for general options. This document shows you how to add a new config option and even section to the WebUI. Config settings are defined in misc/config_definitions.json You should give a little thought to the name of your config setting. For example: a good setting for snmp community, would be snmp.community . The dot notation is path and when the config is hydrated, it is converted to a nested array. If the user is overriding the option in config.php it would use the format $config['snmp']['community']","title":"Adding new config settings"},{"location":"Developing/Dynamic-Config/#translation","text":"The config definition system inherently supports translation. You must add the English names in the resoures/lang/en/settings.php file (and other languages if you can). To update the javascript translation files, run: ./lnms translation:generate","title":"Translation"},{"location":"Developing/Dynamic-Config/#definition-format","text":"For snmp.community, this is the definition: \"snmp.community\" : { \"group\" : \"poller\" , \"section\" : \"snmp\" , \"order\" : 2 , \"type\" : \"array\" , \"default\" : [ \"public\" ] }","title":"Definition Format"},{"location":"Developing/Dynamic-Config/#fields","text":"All fields are optional. To show in the web ui, group and section are required, order is recommended. type : Defines the type, there are a few predefined types and custom types can be defined and implemented in a vue.js component default : the default value for this setting options : the options for the select type. An object with {\"value1\": \"display string\", \"value2\": \"display string\"} validate : Defines more complex validation than the default simple type check. Uses Laravel validation syntax. group : The web ui tab this is under section : A panel grouping settings in the web ui order : The order to display this setting within the section","title":"Fields"},{"location":"Developing/Dynamic-Config/#predefined-types","text":"string : A string integer : A number boolean : A simple toggle switch array : A list of values that can be added, removed, and re-ordered. select : A dropdown box with predefined options. Requires the option field. email : Will validate the input is the correct format for an email password : Will mask the value of the input (but does not keep it fully private)","title":"Predefined Types"},{"location":"Developing/Dynamic-Config/#custom-types","text":"You may set the type field to a custom type and define a Vue.js component to display it to the user. The Vue.js component should be named as \"SettingType\" where type is the custom type entered with the first letter capitalized. Vue.js components exist in the resources/js/components directory. Here is an empty component named SettingType (make sure to rename it). It pulls in BaseSetting mixin for basic setting code to reuse. You should review the BaseSetting component. <template> <div></div> </template> <script> import BaseSetting from \"./BaseSetting\"; export default { name: \"SettingType\", mixins: [BaseSetting] } </script> <style scoped> </style> Using Vue.js is beyond the scope of this document. Documentation can be found at vuejs.org .","title":"Custom Types"},{"location":"Developing/Getting-Started/","text":"Get ready to contribute to LibreNMS This document is intended to help you get your local environment set up to contribute code to the LibreNMS project. Setting up a development environment When starting to develop, it may be tempting to just make changes on your production server, but that will make things harder for you. Taking a little time to set up somewhere to work on code changes can really help. Possible options: A Linux computer, VM, or container Another directory on your LibreNMS server Windows Subsystem for Linux Set up your development git clone Follow the documentation on using git Install development dependencies ./scripts/composer_wrapper.php install Set variables in .env, including database settings. Which could be a local or remote MySQL server including your production DB. APP_ENV=local APP_DEBUG=true ... Start a development webserver ./lnms serve Access the Web UI at http://localhost:8000 Automated testing LibreNMS uses continuous integration to test code changes to help reduce bugs. This also helps guarantee the changes you contribute won't be broken in the future. You can find out more in our Validating Code Documentation Polling debug output You can see detailed info by running your polling code in debug mode. If you are looking at a specific ./discovery.php -d -h HOSTNAME ./poller.php -d -h HOSTNAME Inspecting variables Sometimes you want to find out what a variable contains (such as the data return from an snmpwalk). You can dump one or more variables and halt execution with the dd() function. dd ( $variable1 , $variable2 ); Inspecting web pages Installing the development dependencies and setting APP_DEBUG enables the Laravel Debugbar This will allow you to inspect page generation and errors right in your web browser. Better code completion in IDEs and editors You can generate some files to improve code completion. (These file are not updated automatically, so you may need to re-run these command periodically) ./lnms ide-helper:generate ./lnms ide-helper:models -N Emulating devices You can capture and emulate devices using Snmpsim . LibreNMS has a set of scripts to make it easier to work with snmprec files. LibreNMS Snmpsim helpers Laravel documentation You can find a lot of how LibreNMS works by following the Laravel Documentation","title":"Getting Started"},{"location":"Developing/Getting-Started/#get-ready-to-contribute-to-librenms","text":"This document is intended to help you get your local environment set up to contribute code to the LibreNMS project.","title":"Get ready to contribute to LibreNMS"},{"location":"Developing/Getting-Started/#setting-up-a-development-environment","text":"When starting to develop, it may be tempting to just make changes on your production server, but that will make things harder for you. Taking a little time to set up somewhere to work on code changes can really help. Possible options: A Linux computer, VM, or container Another directory on your LibreNMS server Windows Subsystem for Linux","title":"Setting up a development environment"},{"location":"Developing/Getting-Started/#set-up-your-development-git-clone","text":"Follow the documentation on using git Install development dependencies ./scripts/composer_wrapper.php install Set variables in .env, including database settings. Which could be a local or remote MySQL server including your production DB. APP_ENV=local APP_DEBUG=true ... Start a development webserver ./lnms serve Access the Web UI at http://localhost:8000","title":"Set up your development git clone"},{"location":"Developing/Getting-Started/#automated-testing","text":"LibreNMS uses continuous integration to test code changes to help reduce bugs. This also helps guarantee the changes you contribute won't be broken in the future. You can find out more in our Validating Code Documentation","title":"Automated testing"},{"location":"Developing/Getting-Started/#polling-debug-output","text":"You can see detailed info by running your polling code in debug mode. If you are looking at a specific ./discovery.php -d -h HOSTNAME ./poller.php -d -h HOSTNAME","title":"Polling debug output"},{"location":"Developing/Getting-Started/#inspecting-variables","text":"Sometimes you want to find out what a variable contains (such as the data return from an snmpwalk). You can dump one or more variables and halt execution with the dd() function. dd ( $variable1 , $variable2 );","title":"Inspecting variables"},{"location":"Developing/Getting-Started/#inspecting-web-pages","text":"Installing the development dependencies and setting APP_DEBUG enables the Laravel Debugbar This will allow you to inspect page generation and errors right in your web browser.","title":"Inspecting web pages"},{"location":"Developing/Getting-Started/#better-code-completion-in-ides-and-editors","text":"You can generate some files to improve code completion. (These file are not updated automatically, so you may need to re-run these command periodically) ./lnms ide-helper:generate ./lnms ide-helper:models -N","title":"Better code completion in IDEs and editors"},{"location":"Developing/Getting-Started/#emulating-devices","text":"You can capture and emulate devices using Snmpsim . LibreNMS has a set of scripts to make it easier to work with snmprec files. LibreNMS Snmpsim helpers","title":"Emulating devices"},{"location":"Developing/Getting-Started/#laravel-documentation","text":"You can find a lot of how LibreNMS works by following the Laravel Documentation","title":"Laravel documentation"},{"location":"Developing/Licensing/","text":"Contributor Agreement path: blob/master/doc/ By contributing code to LibreNMS (whether by a GitHub pull request, or by any other means), you assert that: You have the rights to include the code, either as its original author, or due to it being released to you under a compatible license. You are not aware of any third party claims on the code, including copyright, patent, trademark, or any other legal claim. You have acknowledged in the content of your contribution (usually as a source code comment) any and all sources and influences used in the production of that contribution. You have not viewed code written under the Observium License in the production of contributed code. This includes all Observium code after Subversion revision 3250 and any patches or other code covered by that license after Tue May 29 13:08:01 2012 +0000 (the date of Observium r3250). To agree with these assertions, when you submit your first pull request you will be asked after submitting to sign the CLA, you do this by following the link provided in the PR and agreeing to the CLA using your GitHub account. Local patches Please note that the above contributor agreement means that if you have developed a feature for a non-GPL version of Observium, we can't include it in LibreNMS, even if you have not released it to the public. If there's a feature you use to which this applies, please document its functionality in an issue, and we'll do our best to include equivalent functionality in LibreNMS. Copyright We recommend that if you add a new file containing original code to the code base that you include a copyright notice in it as per the Free Software Foundation's guidelines. You might find something like the following header appropriate (although this is not legal advice ;-). Please also ensure you add the package information to the header. <?php /* * This program is free software: you can redistribute it and/or modify it * under the terms of the GNU General Public License as published by the * Free Software Foundation, either version 3 of the License, or (at your * option) any later version. Please see LICENSE.txt at the top level of * the source code distribution for details. */ * @package LibreNMS * @subpackage webui * @link http://librenms.org * @copyright 2017 Internet Widgitz Pty Ltd <info@widgitz.com> * @author Me <me@infowidgitz.com> The GPLv3 itself also contains recommendations about applying the GPL to your code. Please see LICENSE.txt at the top of this source code distribution for details. Integrating other code Giving credit where credit is due is critical to the Free Software philosophy. If you use code from somewhere else, even if it's trivial, be sure to note this as a comment in the code (preferably) or the commit message. Accurate attribution is crucial to our success as a Free Software project. For any dependency Include its name, source URL, copyright notice, and license in doc/General/Credits.md To add a php dependency, please use composer Add the dependency composer require slim/slim Updating php dependencies Update dependencies FORCE=1 php56 ./scripts/composer_wrapper.php update Commit the updated composer.lock file To add a javascript dependency Where possible please include minimized libraries in the html/js/ folder. Don't submit code whose license conflicts with the GPLv3. If you're not sure, consult the Free Software Foundation's license list and see if your code's license is on the compatible or incompatible list. If you prefer a non-copyleft license, Apache 2.0 is the recommended choice as per the FSF guidelines. The current Observium license is incompatible with GPLv3. Don't submit code from current Observium unless you are the copyright holder, and you specifically state in the code that you are releasing it under GPLv3 (or a compatible license). Because contributing to Observium requires that you reassign copyright to Adam Armstrong, if you want to release the same code for both Observium and LibreNMS, you need to release it for LibreNMS first and mark it with your own copyright notice, then release it to Observium and remove your copyright, granting Adam ownership. Please note that the above is necessary even if you don't care about keeping the copyright to your code, because otherwise we could be accused of misappropriating Observium's code. As the code bases develop, we expect them to diverge, which means this will become less of an issue anyway. Because the GPL's provisions about linking don't apply to PHP-based projects, we interpret the linking provisions of the license to refer to the use of PHP library functions called from LibreNMS code. We consider inclusion of files such as MIBs in the LibreNMS repository to be merely aggregation in a distribution medium as per the last paragraph of the GPLv3 section 5 (\"Conveying Modified Source Versions\"), and because they are not combined with LibreNMS to form a larger program, the GPLv3 does not apply to them. This is not a legal ruling - it is simply a statement of our intent and current interpretation.","title":"Licensing"},{"location":"Developing/Licensing/#contributor-agreement","text":"path: blob/master/doc/ By contributing code to LibreNMS (whether by a GitHub pull request, or by any other means), you assert that: You have the rights to include the code, either as its original author, or due to it being released to you under a compatible license. You are not aware of any third party claims on the code, including copyright, patent, trademark, or any other legal claim. You have acknowledged in the content of your contribution (usually as a source code comment) any and all sources and influences used in the production of that contribution. You have not viewed code written under the Observium License in the production of contributed code. This includes all Observium code after Subversion revision 3250 and any patches or other code covered by that license after Tue May 29 13:08:01 2012 +0000 (the date of Observium r3250). To agree with these assertions, when you submit your first pull request you will be asked after submitting to sign the CLA, you do this by following the link provided in the PR and agreeing to the CLA using your GitHub account.","title":"Contributor Agreement"},{"location":"Developing/Licensing/#local-patches","text":"Please note that the above contributor agreement means that if you have developed a feature for a non-GPL version of Observium, we can't include it in LibreNMS, even if you have not released it to the public. If there's a feature you use to which this applies, please document its functionality in an issue, and we'll do our best to include equivalent functionality in LibreNMS.","title":"Local patches"},{"location":"Developing/Licensing/#copyright","text":"We recommend that if you add a new file containing original code to the code base that you include a copyright notice in it as per the Free Software Foundation's guidelines. You might find something like the following header appropriate (although this is not legal advice ;-). Please also ensure you add the package information to the header. <?php /* * This program is free software: you can redistribute it and/or modify it * under the terms of the GNU General Public License as published by the * Free Software Foundation, either version 3 of the License, or (at your * option) any later version. Please see LICENSE.txt at the top level of * the source code distribution for details. */ * @package LibreNMS * @subpackage webui * @link http://librenms.org * @copyright 2017 Internet Widgitz Pty Ltd <info@widgitz.com> * @author Me <me@infowidgitz.com> The GPLv3 itself also contains recommendations about applying the GPL to your code. Please see LICENSE.txt at the top of this source code distribution for details.","title":"Copyright"},{"location":"Developing/Licensing/#integrating-other-code","text":"Giving credit where credit is due is critical to the Free Software philosophy. If you use code from somewhere else, even if it's trivial, be sure to note this as a comment in the code (preferably) or the commit message. Accurate attribution is crucial to our success as a Free Software project. For any dependency Include its name, source URL, copyright notice, and license in doc/General/Credits.md To add a php dependency, please use composer Add the dependency composer require slim/slim Updating php dependencies Update dependencies FORCE=1 php56 ./scripts/composer_wrapper.php update Commit the updated composer.lock file To add a javascript dependency Where possible please include minimized libraries in the html/js/ folder. Don't submit code whose license conflicts with the GPLv3. If you're not sure, consult the Free Software Foundation's license list and see if your code's license is on the compatible or incompatible list. If you prefer a non-copyleft license, Apache 2.0 is the recommended choice as per the FSF guidelines. The current Observium license is incompatible with GPLv3. Don't submit code from current Observium unless you are the copyright holder, and you specifically state in the code that you are releasing it under GPLv3 (or a compatible license). Because contributing to Observium requires that you reassign copyright to Adam Armstrong, if you want to release the same code for both Observium and LibreNMS, you need to release it for LibreNMS first and mark it with your own copyright notice, then release it to Observium and remove your copyright, granting Adam ownership. Please note that the above is necessary even if you don't care about keeping the copyright to your code, because otherwise we could be accused of misappropriating Observium's code. As the code bases develop, we expect them to diverge, which means this will become less of an issue anyway. Because the GPL's provisions about linking don't apply to PHP-based projects, we interpret the linking provisions of the license to refer to the use of PHP library functions called from LibreNMS code. We consider inclusion of files such as MIBs in the LibreNMS repository to be merely aggregation in a distribution medium as per the last paragraph of the GPLv3 section 5 (\"Conveying Modified Source Versions\"), and because they are not combined with LibreNMS to form a larger program, the GPLv3 does not apply to them. This is not a legal ruling - it is simply a statement of our intent and current interpretation.","title":"Integrating other code"},{"location":"Developing/Merging-Pull-Requests/","text":"Merging Pull Requests GitHub We will now build the monthly change log from our GitHub commits. When merging a commit, please ensure you: Click the Merge pull request button Give the merge a descriptive but short title For the commit message prepend it with one of the following tags for the pull request to appear in the changelog: devices: or newdevice: For new device support. feature: or feat: To indicate this is a new or updated feature webui: or web: To indicate this is an update to the WebUI fix: or bugfix: To show this is a bug fix. refactoring: or refactor: When the changes are refactoring a large portion of code You can reference an issue number with #xyz , i.e #1234 Use the Confirm squash and merge button to merge. Example commits Feature feature: Added new availability map #4401 New device newdevice: Added support for Cisco ASA #4402","title":"Merging Pull Requests"},{"location":"Developing/Merging-Pull-Requests/#merging-pull-requests","text":"","title":"Merging Pull Requests"},{"location":"Developing/Merging-Pull-Requests/#github","text":"We will now build the monthly change log from our GitHub commits. When merging a commit, please ensure you: Click the Merge pull request button Give the merge a descriptive but short title For the commit message prepend it with one of the following tags for the pull request to appear in the changelog: devices: or newdevice: For new device support. feature: or feat: To indicate this is a new or updated feature webui: or web: To indicate this is an update to the WebUI fix: or bugfix: To show this is a bug fix. refactoring: or refactor: When the changes are refactoring a large portion of code You can reference an issue number with #xyz , i.e #1234 Use the Confirm squash and merge button to merge.","title":"GitHub"},{"location":"Developing/Merging-Pull-Requests/#example-commits","text":"","title":"Example commits"},{"location":"Developing/Merging-Pull-Requests/#feature","text":"feature: Added new availability map #4401","title":"Feature"},{"location":"Developing/Merging-Pull-Requests/#new-device","text":"newdevice: Added support for Cisco ASA #4402","title":"New device"},{"location":"Developing/SNMP-Traps/","text":"Creating snmp trap handlers You must have a working snmptrapd. See SNMP TRAP HANDLER Make sure the MIB is loaded from the trap you are adding. Edit /etc/systemd/system/snmptrapd.service.d/mibs.conf to add it then restart snmptrapd. MIBDIRS option is not recursive, so you need to specify each directory individually. Create a new class in LibreNMS\\Snmptrap\\Handlers that implements the LibreNMS\\Interfaces\\SnmptrapHandler interface. For example: <? php /** * ColdBoot.php * * Handles the SNMPv2-MIB::coldStart trap * * This program is free software: you can redistribute it and/or modify * it under the terms of the GNU General Public License as published by * the Free Software Foundation, either version 3 of the License, or * (at your option) any later version. * * This program is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the * GNU General Public License for more details. * * You should have received a copy of the GNU General Public License * along with this program. If not, see <http://www.gnu.org/licenses/>. * * @package LibreNMS * @link http://librenms.org */ namespace LibreNMS\\Snmptrap\\Handlers ; use App\\Models\\Device ; use LibreNMS\\Interfaces\\SnmptrapHandler ; use LibreNMS\\Snmptrap\\Trap ; use Log ; class ColdBoot implements SnmptrapHandler { /** * Handle snmptrap. * Data is pre-parsed and delivered as a Trap. * * @param Device $device * @param Trap $trap * @return void */ public function handle ( Device $device , Trap $trap ) { Log :: event ( 'SNMP Trap: Device ' . $device -> displayName () . ' cold booted' , $device -> device_id , 'reboot' , 4 ); } } where number on the end of the row Log::event means color of the eventlog: 1 green 2 cyan 3 blue 4 yellow 5 red Register the mapping in the config/snmptraps.php file. Make sure to use the full trap OID and correct class. 'SNMPv2-MIB::coldStart' => \\LibreNMS\\Snmptrap\\Handlers\\ColdBoot :: class , The handle function inside your new class will receive a LibreNMS/Snmptrap/Trap object containing the parsed trap. It is common to update the database and create event log entries within the handle function. Getting information from the Trap Source information $trap -> getDevice (); // gets Device model for the device associated with this trap $trap -> getHostname (); // gets hostname sent with the trap $trap -> getIp (); // gets source IP of this trap $trap -> getTrapOid (); // returns the string you registered your class with Retrieving data from the Trap $trap -> getOidData ( 'IF-MIB::ifDescr.114' ); getOidData() requires the full name including any additional index. You can use these functions to search the OID keys. $trap -> findOid ( 'ifDescr' ); // returns the first oid key that contains the string $trap -> findOids ( 'ifDescr' ); // returns all oid keys containing the string Advanced If the above isn't adequate, you can get the entire trap text: $trap -> getRaw ();","title":"SNMP Traps"},{"location":"Developing/SNMP-Traps/#creating-snmp-trap-handlers","text":"You must have a working snmptrapd. See SNMP TRAP HANDLER Make sure the MIB is loaded from the trap you are adding. Edit /etc/systemd/system/snmptrapd.service.d/mibs.conf to add it then restart snmptrapd. MIBDIRS option is not recursive, so you need to specify each directory individually. Create a new class in LibreNMS\\Snmptrap\\Handlers that implements the LibreNMS\\Interfaces\\SnmptrapHandler interface. For example: <? php /** * ColdBoot.php * * Handles the SNMPv2-MIB::coldStart trap * * This program is free software: you can redistribute it and/or modify * it under the terms of the GNU General Public License as published by * the Free Software Foundation, either version 3 of the License, or * (at your option) any later version. * * This program is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the * GNU General Public License for more details. * * You should have received a copy of the GNU General Public License * along with this program. If not, see <http://www.gnu.org/licenses/>. * * @package LibreNMS * @link http://librenms.org */ namespace LibreNMS\\Snmptrap\\Handlers ; use App\\Models\\Device ; use LibreNMS\\Interfaces\\SnmptrapHandler ; use LibreNMS\\Snmptrap\\Trap ; use Log ; class ColdBoot implements SnmptrapHandler { /** * Handle snmptrap. * Data is pre-parsed and delivered as a Trap. * * @param Device $device * @param Trap $trap * @return void */ public function handle ( Device $device , Trap $trap ) { Log :: event ( 'SNMP Trap: Device ' . $device -> displayName () . ' cold booted' , $device -> device_id , 'reboot' , 4 ); } } where number on the end of the row Log::event means color of the eventlog: 1 green 2 cyan 3 blue 4 yellow 5 red Register the mapping in the config/snmptraps.php file. Make sure to use the full trap OID and correct class. 'SNMPv2-MIB::coldStart' => \\LibreNMS\\Snmptrap\\Handlers\\ColdBoot :: class , The handle function inside your new class will receive a LibreNMS/Snmptrap/Trap object containing the parsed trap. It is common to update the database and create event log entries within the handle function.","title":"Creating snmp trap handlers"},{"location":"Developing/SNMP-Traps/#getting-information-from-the-trap","text":"","title":"Getting information from the Trap"},{"location":"Developing/SNMP-Traps/#source-information","text":"$trap -> getDevice (); // gets Device model for the device associated with this trap $trap -> getHostname (); // gets hostname sent with the trap $trap -> getIp (); // gets source IP of this trap $trap -> getTrapOid (); // returns the string you registered your class with","title":"Source information"},{"location":"Developing/SNMP-Traps/#retrieving-data-from-the-trap","text":"$trap -> getOidData ( 'IF-MIB::ifDescr.114' ); getOidData() requires the full name including any additional index. You can use these functions to search the OID keys. $trap -> findOid ( 'ifDescr' ); // returns the first oid key that contains the string $trap -> findOids ( 'ifDescr' ); // returns all oid keys containing the string","title":"Retrieving data from the Trap"},{"location":"Developing/SNMP-Traps/#advanced","text":"If the above isn't adequate, you can get the entire trap text: $trap -> getRaw ();","title":"Advanced"},{"location":"Developing/Sensor-State-Support/","text":"Sensor State Support Introduction In this section we are briefly going to walk through, what it takes to write sensor state support. We will also briefly get around the concepts of the current sensor state monitoring. Logic For sensor state monitoring, we have 4 DB tables we need to concentrate about. sensors state_indexes state_translations sensors_to_state_indexes We will just briefly tie a comment to each one of them. Sensors Each time a sensor needs to be polled, the system needs to know which sensor is it that it need to poll, at what oid is this sensor located and what class the sensor is etc. This information is fetched from the sensors table. state_indexes Is where we keep track of which state sensors we monitor. state_translations Is where we map the possible returned state sensor values to a generic LibreNMS value, in order to make displaying and alerting more generic. We also map these values to the actual state sensor(state_index) where these values are actually returned from. The LibreNMS generic states are derived from Nagios: 0 = OK 1 = Warning 2 = Critical 3 = Unknown sensors_to_state_indexes Is as you might have guessed, where the sensor_id is mapped to a state_index_id. Example For YAML based state discovery: mib : NETBOTZV2-MIB modules : sensors : state : data : - oid : dryContactSensorTable value : dryContactSensorValue num_oid : '.1.3.6.1.4.1.5528.100.4.2.1.1.2.{{ $index }}' descr : dryContactSensorLabel group : Contact Sensors index : 'dryContactSensor.{{ $index }}' state_name : dryContactSensor states : - { value : -1 , generic : 3 , graph : 0 , descr : 'null' } - { value : 0 , generic : 0 , graph : 0 , descr : open } - { value : 1 , generic : 2 , graph : 0 , descr : closed } - oid : doorSwitchSensorTable value : doorSwitchSensorValue num_oid : '.1.3.6.1.4.1.5528.100.4.2.2.1.2.{{ $index }}' descr : doorSwitchSensorLabel group : Switch Sensors index : 'doorSwitchSensor.{{ $index }}' state_name : doorSwitchSensor states : - { value : -1 , generic : 3 , graph : 0 , descr : 'null' } - { value : 0 , generic : 0 , graph : 0 , descr : open } - { value : 1 , generic : 2 , graph : 0 , descr : closed } - oid : cameraMotionSensorTable value : cameraMotionSensorValue num_oid : '.1.3.6.1.4.1.5528.100.4.2.3.1.2.{{ $index }}' descr : cameraMotionSensorLabel group : Camera Motion Sensors index : 'cameraMotionSensor.{{ $index }}' state_name : cameraMotionSensor states : - { value : -1 , generic : 3 , graph : 0 , descr : 'null' } - { value : 0 , generic : 0 , graph : 0 , descr : noMotion } - { value : 1 , generic : 2 , graph : 0 , descr : motionDetected } - oid : otherStateSensorTable value : otherStateSensorErrorStatus num_oid : '.1.3.6.1.4.1.5528.100.4.2.10.1.3.{{ $index }}' descr : otherStateSensorLabel index : '{{ $index }}' state_name : otherStateSensorErrorStatus states : - { value : 0 , generic : 0 , graph : 0 , descr : normal } - { value : 1 , generic : 1 , graph : 0 , descr : info } - { value : 2 , generic : 1 , graph : 0 , descr : warning } - { value : 3 , generic : 2 , graph : 0 , descr : error } - { value : 4 , generic : 2 , graph : 0 , descr : critical } - { value : 5 , generic : 2 , graph : 0 , descr : failure } Advanced Example For advanced state discovery: This example will be based on a Cisco power supply sensor and is all it takes to have sensor state support for Cisco power supplys in Cisco switches. The file should be located in /includes/discovery/sensors/state/cisco.inc.php. <? php $oids = snmpwalk_group ( $device , 'ciscoEnvMonSupplyStatusTable' , 'CISCO-ENVMON-MIB' ); if ( ! empty ( $oids )) { //Create State Index $state_name = 'ciscoEnvMonSupplyState' ; $states = [ [ 'value' => 1 , 'generic' => 0 , 'graph' => 0 , 'descr' => 'normal' ], [ 'value' => 2 , 'generic' => 1 , 'graph' => 0 , 'descr' => 'warning' ], [ 'value' => 3 , 'generic' => 2 , 'graph' => 0 , 'descr' => 'critical' ], [ 'value' => 4 , 'generic' => 3 , 'graph' => 0 , 'descr' => 'shutdown' ], [ 'value' => 5 , 'generic' => 3 , 'graph' => 0 , 'descr' => 'notPresent' ], [ 'value' => 6 , 'generic' => 2 , 'graph' => 0 , 'descr' => 'notFunctioning' ], ]; create_state_index ( $state_name , $states ); $num_oid = '.1.3.6.1.4.1.9.9.13.1.5.1.3.' ; foreach ( $oids as $index => $entry ) { //Discover Sensors discover_sensor ( $valid [ 'sensor' ], 'state' , $device , $num_oid . $index , $index , $state_name , $entry [ 'ciscoEnvMonSupplyStatusDescr' ], '1' , '1' , null , null , null , null , $entry [ 'ciscoEnvMonSupplyState' ], 'snmp' , $index ); //Create Sensor To State Index create_sensor_to_state_index ( $device , $state_name , $index ); } }","title":"Sensor State Support"},{"location":"Developing/Sensor-State-Support/#sensor-state-support","text":"","title":"Sensor State Support"},{"location":"Developing/Sensor-State-Support/#introduction","text":"In this section we are briefly going to walk through, what it takes to write sensor state support. We will also briefly get around the concepts of the current sensor state monitoring.","title":"Introduction"},{"location":"Developing/Sensor-State-Support/#logic","text":"For sensor state monitoring, we have 4 DB tables we need to concentrate about. sensors state_indexes state_translations sensors_to_state_indexes We will just briefly tie a comment to each one of them.","title":"Logic"},{"location":"Developing/Sensor-State-Support/#sensors","text":"Each time a sensor needs to be polled, the system needs to know which sensor is it that it need to poll, at what oid is this sensor located and what class the sensor is etc. This information is fetched from the sensors table.","title":"Sensors"},{"location":"Developing/Sensor-State-Support/#state_indexes","text":"Is where we keep track of which state sensors we monitor.","title":"state_indexes"},{"location":"Developing/Sensor-State-Support/#state_translations","text":"Is where we map the possible returned state sensor values to a generic LibreNMS value, in order to make displaying and alerting more generic. We also map these values to the actual state sensor(state_index) where these values are actually returned from. The LibreNMS generic states are derived from Nagios: 0 = OK 1 = Warning 2 = Critical 3 = Unknown","title":"state_translations"},{"location":"Developing/Sensor-State-Support/#sensors_to_state_indexes","text":"Is as you might have guessed, where the sensor_id is mapped to a state_index_id.","title":"sensors_to_state_indexes"},{"location":"Developing/Sensor-State-Support/#example","text":"For YAML based state discovery: mib : NETBOTZV2-MIB modules : sensors : state : data : - oid : dryContactSensorTable value : dryContactSensorValue num_oid : '.1.3.6.1.4.1.5528.100.4.2.1.1.2.{{ $index }}' descr : dryContactSensorLabel group : Contact Sensors index : 'dryContactSensor.{{ $index }}' state_name : dryContactSensor states : - { value : -1 , generic : 3 , graph : 0 , descr : 'null' } - { value : 0 , generic : 0 , graph : 0 , descr : open } - { value : 1 , generic : 2 , graph : 0 , descr : closed } - oid : doorSwitchSensorTable value : doorSwitchSensorValue num_oid : '.1.3.6.1.4.1.5528.100.4.2.2.1.2.{{ $index }}' descr : doorSwitchSensorLabel group : Switch Sensors index : 'doorSwitchSensor.{{ $index }}' state_name : doorSwitchSensor states : - { value : -1 , generic : 3 , graph : 0 , descr : 'null' } - { value : 0 , generic : 0 , graph : 0 , descr : open } - { value : 1 , generic : 2 , graph : 0 , descr : closed } - oid : cameraMotionSensorTable value : cameraMotionSensorValue num_oid : '.1.3.6.1.4.1.5528.100.4.2.3.1.2.{{ $index }}' descr : cameraMotionSensorLabel group : Camera Motion Sensors index : 'cameraMotionSensor.{{ $index }}' state_name : cameraMotionSensor states : - { value : -1 , generic : 3 , graph : 0 , descr : 'null' } - { value : 0 , generic : 0 , graph : 0 , descr : noMotion } - { value : 1 , generic : 2 , graph : 0 , descr : motionDetected } - oid : otherStateSensorTable value : otherStateSensorErrorStatus num_oid : '.1.3.6.1.4.1.5528.100.4.2.10.1.3.{{ $index }}' descr : otherStateSensorLabel index : '{{ $index }}' state_name : otherStateSensorErrorStatus states : - { value : 0 , generic : 0 , graph : 0 , descr : normal } - { value : 1 , generic : 1 , graph : 0 , descr : info } - { value : 2 , generic : 1 , graph : 0 , descr : warning } - { value : 3 , generic : 2 , graph : 0 , descr : error } - { value : 4 , generic : 2 , graph : 0 , descr : critical } - { value : 5 , generic : 2 , graph : 0 , descr : failure }","title":"Example"},{"location":"Developing/Sensor-State-Support/#advanced-example","text":"For advanced state discovery: This example will be based on a Cisco power supply sensor and is all it takes to have sensor state support for Cisco power supplys in Cisco switches. The file should be located in /includes/discovery/sensors/state/cisco.inc.php. <? php $oids = snmpwalk_group ( $device , 'ciscoEnvMonSupplyStatusTable' , 'CISCO-ENVMON-MIB' ); if ( ! empty ( $oids )) { //Create State Index $state_name = 'ciscoEnvMonSupplyState' ; $states = [ [ 'value' => 1 , 'generic' => 0 , 'graph' => 0 , 'descr' => 'normal' ], [ 'value' => 2 , 'generic' => 1 , 'graph' => 0 , 'descr' => 'warning' ], [ 'value' => 3 , 'generic' => 2 , 'graph' => 0 , 'descr' => 'critical' ], [ 'value' => 4 , 'generic' => 3 , 'graph' => 0 , 'descr' => 'shutdown' ], [ 'value' => 5 , 'generic' => 3 , 'graph' => 0 , 'descr' => 'notPresent' ], [ 'value' => 6 , 'generic' => 2 , 'graph' => 0 , 'descr' => 'notFunctioning' ], ]; create_state_index ( $state_name , $states ); $num_oid = '.1.3.6.1.4.1.9.9.13.1.5.1.3.' ; foreach ( $oids as $index => $entry ) { //Discover Sensors discover_sensor ( $valid [ 'sensor' ], 'state' , $device , $num_oid . $index , $index , $state_name , $entry [ 'ciscoEnvMonSupplyStatusDescr' ], '1' , '1' , null , null , null , null , $entry [ 'ciscoEnvMonSupplyState' ], 'snmp' , $index ); //Create Sensor To State Index create_sensor_to_state_index ( $device , $state_name , $index ); } }","title":"Advanced Example"},{"location":"Developing/Style-Guidelines/","text":"Style guidelines This document is here to help style standards for contributions towards LibreNMS. These aren't strict rules but it is in the users interest that a consistent well thought out Web UI is available. Responsiveness The Web UI is designed to be mobile friendly and for the most part is and works well. It's worth spending sometime to read through the Bootstrap website to learn more about how to keep things responsive. Navigation bar Always pick the best location for new links to go, think about where users would expect the link to be located and name it so that it's obvious what it does. Ensure sub sections within the Navigation are separated correctly using <li role=\"presentation\" class=\"divider\"></li> . Only use Font Awesome icons within the Navigation. It speeds up page load times quite considerably. Buttons Try to keep buttons colored to reflect the action they will take. Buttons are set using Bootstrap classes. The size of the buttons will depend on the area of the website being used but btn-sm is probably the most common. Delete / Remove buttons: btn btn-danger Edit / Update buttons: btn btn-primary Add / Create buttons: btn btn-success Tables Unless the table being used will only ever display a handful of items - yeah that's what we all said, then you need to write your table using JQuery Bootgrid . This shouldn't take that much more code to do this but provides so much flexibility along with stopping the need for retrieving all the data from SQL in the first place. As an example pull request, see PR 706 to get an idea of what it's like to convert an existing pure html table to Bootgrid. Datetime format When displaying datetimes, please ensure you use the format YYYY-MM-DD mm:hh:ss where possible, you shouldn't change the order of this as it will be confusing to users. Cutting it short to just display YYYY-MM-DD mm:hh is fine :). To keep things consistent we have the following variables which should be used rather than to format dates yourself. This has the added benefit that users can customise the format: # Date format for PHP date()s $config [ 'dateformat' ][ 'long' ] = \"r\" ; # RFC2822 style $config [ 'dateformat' ][ 'compact' ] = \"Y-m-d H:i:s\" ; $config [ 'dateformat' ][ 'byminute' ] = \"Y-m-d H:i\" ; $config [ 'dateformat' ][ 'time' ] = \"H:i:s\" ; # Date format for MySQL DATE_FORMAT $config [ 'dateformat' ][ 'mysql' ][ 'compact' ] = \"%Y-%m-%d %H:%i:%s\" ; $config [ 'dateformat' ][ 'mysql' ][ 'date' ] = \"%Y-%m-%d\" ; $config [ 'dateformat' ][ 'mysql' ][ 'time' ] = \"%H:%i:%s\" ;","title":"Style Guidelines"},{"location":"Developing/Style-Guidelines/#style-guidelines","text":"This document is here to help style standards for contributions towards LibreNMS. These aren't strict rules but it is in the users interest that a consistent well thought out Web UI is available.","title":"Style guidelines"},{"location":"Developing/Style-Guidelines/#responsiveness","text":"The Web UI is designed to be mobile friendly and for the most part is and works well. It's worth spending sometime to read through the Bootstrap website to learn more about how to keep things responsive.","title":"Responsiveness"},{"location":"Developing/Style-Guidelines/#navigation-bar","text":"Always pick the best location for new links to go, think about where users would expect the link to be located and name it so that it's obvious what it does. Ensure sub sections within the Navigation are separated correctly using <li role=\"presentation\" class=\"divider\"></li> . Only use Font Awesome icons within the Navigation. It speeds up page load times quite considerably.","title":"Navigation bar"},{"location":"Developing/Style-Guidelines/#buttons","text":"Try to keep buttons colored to reflect the action they will take. Buttons are set using Bootstrap classes. The size of the buttons will depend on the area of the website being used but btn-sm is probably the most common. Delete / Remove buttons: btn btn-danger Edit / Update buttons: btn btn-primary Add / Create buttons: btn btn-success","title":"Buttons"},{"location":"Developing/Style-Guidelines/#tables","text":"Unless the table being used will only ever display a handful of items - yeah that's what we all said, then you need to write your table using JQuery Bootgrid . This shouldn't take that much more code to do this but provides so much flexibility along with stopping the need for retrieving all the data from SQL in the first place. As an example pull request, see PR 706 to get an idea of what it's like to convert an existing pure html table to Bootgrid.","title":"Tables"},{"location":"Developing/Style-Guidelines/#datetime-format","text":"When displaying datetimes, please ensure you use the format YYYY-MM-DD mm:hh:ss where possible, you shouldn't change the order of this as it will be confusing to users. Cutting it short to just display YYYY-MM-DD mm:hh is fine :). To keep things consistent we have the following variables which should be used rather than to format dates yourself. This has the added benefit that users can customise the format: # Date format for PHP date()s $config [ 'dateformat' ][ 'long' ] = \"r\" ; # RFC2822 style $config [ 'dateformat' ][ 'compact' ] = \"Y-m-d H:i:s\" ; $config [ 'dateformat' ][ 'byminute' ] = \"Y-m-d H:i\" ; $config [ 'dateformat' ][ 'time' ] = \"H:i:s\" ; # Date format for MySQL DATE_FORMAT $config [ 'dateformat' ][ 'mysql' ][ 'compact' ] = \"%Y-%m-%d %H:%i:%s\" ; $config [ 'dateformat' ][ 'mysql' ][ 'date' ] = \"%Y-%m-%d\" ; $config [ 'dateformat' ][ 'mysql' ][ 'time' ] = \"%H:%i:%s\" ;","title":"Datetime format"},{"location":"Developing/Support-New-OS/","text":"This document is broken down into the relevant sections depending on what support you are adding. During all of these examples we will be using the OS of pulse as the example OS we will add. Adding the initial detection. Adding Memory and CPU information. Adding Health / Sensor information. Adding Wireless Sensor information. Adding custom graphs. Adding Unit tests (required). Optional Settings We currently have a script in pre-beta stages that can help speed up the process of deploying a new OS. It has support for add sensors in a basic form (except state sensors). In this example, we will add a new OS called test-os using the device ID 101 that has already been added. It will be of the type network and belongs to the vendor, Cisco: ./scripts/new-os.php -h 101 -o test-os -t network -v cisco The process will then step you through the process with some more questions. Please be warned, this is currently pre-beta and may cause some issues. Please let us know of any on Discord .","title":"Intro"},{"location":"Developing/Using-Git/","text":"Git can have a bit of a steep learning curve, stick with it as it is worth learning the basics 2 at least. If you want to help develop LibreNMS and haven't really used Git before then this quick primer will help you get started. Some assumptions: Work is being done on a Linux box. LibreNMS is to be installed in /opt/librenms You have git installed. You have a GitHub Account . You are using ssh to connect to GitHub (If not, replace git@github.com:/yourusername/librenms.git with https://github.com/yourusername/librenms.git . Replace yourusername with your GitHub username. Fork LibreNMS repo You do this directly within GitHub , click the 'Fork' button near the top right. If you are associated with multiple organisations within GitHub then you might need to select which account you want to push the fork to. Prepare your git environment These are the defaults that are recommended. git config branch.autosetupmerge true git config --global user.name \"John Doe\" git config --global user.email johndoe@example.com Clone the repo Ok so now that you have forked the repo, you now need to clone it to your local install where you can then make the changes you need and submit them back. cd /opt/ git clone git@github.com:/yourusername/librenms.git Add Upstream repo To be able to pull in changes from the master LibreNMS repo you need to have it setup on your system. git remote add upstream https://github.com/librenms/librenms.git Now you have two configured remotes: origin: This is your repository, you can push and pull changes here. upstream: This is the main LibreNMS repository and you can only pull changes. Workflow guide As you become more familiar you may find a better workflow that fits your needs, until then this should be a safe workflow for you to follow. Before you start work on a new branch / feature. Make sure you are up to date. cd /opt/librenms git checkout master git pull upstream master git push origin master At this stage it's worth pointing out that we have some standard checks that are performed when you submit a pull request, you can run these checks yourself to be sure no issues are present in your pull request. Now, create a new branch to do you work on. It's important that you do this as you are then able to work on more than one feature at a time and submit them as pull requests individually. If you did all your work in the master branch then it gets a bit messy! You need to give your branch a name. If an issue is open (or closed on GitHub) then you can use that, in this example if the issue number is 123 then we will use issue-123. If a post exists on the community forum then you can use the post id like community-123. You're also welcome to use any arbitrary name for your branch but try and make it relevant to what the branch is. git checkout -b issue-123 Now, code away. Make the changes you need, test, change and test again :) When you are ready to submit the updates as a pull request then commit away. git add path/to/new/files/or/folders git commit -a -m 'Added feature to do X, Y and Z' git push origin issue-123 If you need to rebase against master then you can do this with: git pull upstream master git push origin issue-123 If after do this you get some merge conflicts then you need to resolve these before carrying on. Please try to squash all commits into one, this isn't essential as we can do this when we merge but it would be helpful to do this before you submit your pull request. Now you will be ready to submit a pull request from within GitHub. To do this, go to your GitHub page for the LibreNMS repo. Now select the branch you have just been working on (issue-123) from the drop down to the left and then click 'Pull Request'. Fill in the details to describe the work you have done and click 'Create pull request'. Thanks for your first pull request :) Ok, that should get you started on the contributing path. If you have any other questions then stop by our Discord Server Hints and tips Undo last commit git reset --soft 'HEAD^' Remove specific commit git revert <HASH> Restore deleted file git checkout $(git rev-list -n 1 HEAD -- \"$file\")^ -- \"$file\" Merge last two commits git rebase --interactive HEAD~2 In the text file that opens, change the last commit to squash from pick then save an exit. For more tips take a look at Oh shit, git!","title":"Using Git"},{"location":"Developing/Using-Git/#fork-librenms-repo","text":"You do this directly within GitHub , click the 'Fork' button near the top right. If you are associated with multiple organisations within GitHub then you might need to select which account you want to push the fork to.","title":"Fork LibreNMS repo"},{"location":"Developing/Using-Git/#prepare-your-git-environment","text":"These are the defaults that are recommended. git config branch.autosetupmerge true git config --global user.name \"John Doe\" git config --global user.email johndoe@example.com","title":"Prepare your git environment"},{"location":"Developing/Using-Git/#clone-the-repo","text":"Ok so now that you have forked the repo, you now need to clone it to your local install where you can then make the changes you need and submit them back. cd /opt/ git clone git@github.com:/yourusername/librenms.git","title":"Clone the repo"},{"location":"Developing/Using-Git/#add-upstream-repo","text":"To be able to pull in changes from the master LibreNMS repo you need to have it setup on your system. git remote add upstream https://github.com/librenms/librenms.git Now you have two configured remotes: origin: This is your repository, you can push and pull changes here. upstream: This is the main LibreNMS repository and you can only pull changes.","title":"Add Upstream repo"},{"location":"Developing/Using-Git/#workflow-guide","text":"As you become more familiar you may find a better workflow that fits your needs, until then this should be a safe workflow for you to follow. Before you start work on a new branch / feature. Make sure you are up to date. cd /opt/librenms git checkout master git pull upstream master git push origin master At this stage it's worth pointing out that we have some standard checks that are performed when you submit a pull request, you can run these checks yourself to be sure no issues are present in your pull request. Now, create a new branch to do you work on. It's important that you do this as you are then able to work on more than one feature at a time and submit them as pull requests individually. If you did all your work in the master branch then it gets a bit messy! You need to give your branch a name. If an issue is open (or closed on GitHub) then you can use that, in this example if the issue number is 123 then we will use issue-123. If a post exists on the community forum then you can use the post id like community-123. You're also welcome to use any arbitrary name for your branch but try and make it relevant to what the branch is. git checkout -b issue-123 Now, code away. Make the changes you need, test, change and test again :) When you are ready to submit the updates as a pull request then commit away. git add path/to/new/files/or/folders git commit -a -m 'Added feature to do X, Y and Z' git push origin issue-123 If you need to rebase against master then you can do this with: git pull upstream master git push origin issue-123 If after do this you get some merge conflicts then you need to resolve these before carrying on. Please try to squash all commits into one, this isn't essential as we can do this when we merge but it would be helpful to do this before you submit your pull request. Now you will be ready to submit a pull request from within GitHub. To do this, go to your GitHub page for the LibreNMS repo. Now select the branch you have just been working on (issue-123) from the drop down to the left and then click 'Pull Request'. Fill in the details to describe the work you have done and click 'Create pull request'. Thanks for your first pull request :) Ok, that should get you started on the contributing path. If you have any other questions then stop by our Discord Server","title":"Workflow guide"},{"location":"Developing/Using-Git/#hints-and-tips","text":"Undo last commit git reset --soft 'HEAD^' Remove specific commit git revert <HASH> Restore deleted file git checkout $(git rev-list -n 1 HEAD -- \"$file\")^ -- \"$file\" Merge last two commits git rebase --interactive HEAD~2 In the text file that opens, change the last commit to squash from pick then save an exit. For more tips take a look at Oh shit, git!","title":"Hints and tips"},{"location":"Developing/Validating-Code/","text":"Validating Code As part of the pull request process with GitHub we run some automated build tests to ensure that the code is error free, standards compliant and our test suite builds successfully. Rather than submit a pull request and wait for the results, you can run these checks yourself to ensure a more seamless merge. All of these commands should be run from within the librenms directory and can be run as the librenms user unless otherwise noted. Install composer (you can skip this if composer is already installed). curl -sS https://getcomposer.org/installer | php Composer will now be installed into /opt/librenms/composer.phar. Now install the dependencies we require: ./composer.phar install Once composer is installed you can now run the code validation script: ./lnms dev:check If you see Tests ok, submit away :) then all is well. If you see other output then it should contain what you need to resolve the issues and re-test. Git Hooks Git has a hook system which you can use to trigger checks at various stages. Utilising the ./lnms dev:check you can make this part of your commit process. Add ./lnms dev:check to your .git/hooks/pre-commit : echo \"/opt/librenms/lnms dev:check\" >> /opt/librenms/.git/hooks/pre-commit chmod +x /opt/librenms/.git/hooks/pre-commit","title":"Validating Code"},{"location":"Developing/Validating-Code/#validating-code","text":"As part of the pull request process with GitHub we run some automated build tests to ensure that the code is error free, standards compliant and our test suite builds successfully. Rather than submit a pull request and wait for the results, you can run these checks yourself to ensure a more seamless merge. All of these commands should be run from within the librenms directory and can be run as the librenms user unless otherwise noted. Install composer (you can skip this if composer is already installed). curl -sS https://getcomposer.org/installer | php Composer will now be installed into /opt/librenms/composer.phar. Now install the dependencies we require: ./composer.phar install Once composer is installed you can now run the code validation script: ./lnms dev:check If you see Tests ok, submit away :) then all is well. If you see other output then it should contain what you need to resolve the issues and re-test.","title":"Validating Code"},{"location":"Developing/Validating-Code/#git-hooks","text":"Git has a hook system which you can use to trigger checks at various stages. Utilising the ./lnms dev:check you can make this part of your commit process. Add ./lnms dev:check to your .git/hooks/pre-commit : echo \"/opt/librenms/lnms dev:check\" >> /opt/librenms/.git/hooks/pre-commit chmod +x /opt/librenms/.git/hooks/pre-commit","title":"Git Hooks"},{"location":"Developing/os/Custom-Graphs/","text":"First we define our graphs in includes/definitions.inc.php to share our work and contribute in the development of LibreNMS. :-) (or place in config.php if you don't plan to contribute) // Pulse Secure Graphs $config [ 'graph_types' ][ 'device' ][ 'pulse_sessions' ] = [ 'section' => 'firewall' , 'order' => 0 , 'descr' => 'Active Sessions' ]; $config [ 'graph_types' ][ 'device' ][ 'pulse_users' ] = [ 'section' => 'firewall' , 'order' => 0 , 'descr' => 'Active Users' ]; Polling OS OS polling is not necessarily where custom polling should be done, please speak to one of the core devs in Discord for guidance. Let's update our example file to add additional polling: includes/polling/os/pulse.inc.php We declare two specific graphs for users and sessions numbers. Theses two graphs will be displayed on the firewall section of the graphs tab as it was written in the definition include file. <? php use LibreNMS\\RRD\\RrdDefinition ; $users = snmp_get ( $device , 'iveConcurrentUsers.0' , '-OQv' , 'PULSESECURE-PSG-MIB' ); if ( is_numeric ( $users )) { $rrd_def = RrdDefinition :: make () -> addDataset ( 'users' , 'GAUGE' , 0 ); $fields = array ( 'users' => $users , ); $tags = compact ( 'rrd_def' ); data_update ( $device , 'pulse_users' , $tags , $fields ); $os -> enableGraph ( 'pulse_users' ); } $sessions = snmp_get ( $device , 'iveConcurrentUsers.0' , '-OQv' , 'PULSESECURE-PSG-MIB' ); if ( is_numeric ( $sessions )) { $rrd_def = RrdDefinition :: make () -> addDataset ( 'sessions' , 'GAUGE' , 0 ); $fields = array ( 'sessions' => $sessions , ); $tags = compact ( 'rrd_def' ); data_update ( $device , 'pulse_sessions' , $tags , $fields ); $os -> enableGraph ( 'pulse_sessions' ); } Displaying The specific graphs are not displayed automatically so we need to write the following PHP code: Pulse Sessions includes/html/graphs/device/pulse_sessions.inc.php <? php $rrd_filename = rrd_name ( $device [ 'hostname' ], 'pulse_sessions' ); require 'includes/graphs/common.inc.php' ; $ds = 'sessions' ; $colour_area = '9999cc' ; $colour_line = '0000cc' ; $colour_area_max = '9999cc' ; $graph_max = 1 ; $graph_min = 0 ; $unit_text = 'Sessions' ; require 'includes/graphs/generic_simplex.inc.php' ; Pulse Users includes/html/graphs/device/pulse_users.inc.php <? php $rrd_filename = rrd_name ( $device [ 'hostname' ], 'pulse_users' ); require 'includes/html/graphs/common.inc.php' ; $ds = 'users' ; $colour_area = '9999cc' ; $colour_line = '0000cc' ; $colour_area_max = '9999cc' ; $graph_max = 1 ; $unit_text = 'Users' ; require 'includes/html/graphs/generic_simplex.inc.php' ; That should be it, after data has started to be collected graphs should appear in the WebUI.","title":"Custom Graphs"},{"location":"Developing/os/Custom-Graphs/#polling-os","text":"OS polling is not necessarily where custom polling should be done, please speak to one of the core devs in Discord for guidance. Let's update our example file to add additional polling: includes/polling/os/pulse.inc.php We declare two specific graphs for users and sessions numbers. Theses two graphs will be displayed on the firewall section of the graphs tab as it was written in the definition include file. <? php use LibreNMS\\RRD\\RrdDefinition ; $users = snmp_get ( $device , 'iveConcurrentUsers.0' , '-OQv' , 'PULSESECURE-PSG-MIB' ); if ( is_numeric ( $users )) { $rrd_def = RrdDefinition :: make () -> addDataset ( 'users' , 'GAUGE' , 0 ); $fields = array ( 'users' => $users , ); $tags = compact ( 'rrd_def' ); data_update ( $device , 'pulse_users' , $tags , $fields ); $os -> enableGraph ( 'pulse_users' ); } $sessions = snmp_get ( $device , 'iveConcurrentUsers.0' , '-OQv' , 'PULSESECURE-PSG-MIB' ); if ( is_numeric ( $sessions )) { $rrd_def = RrdDefinition :: make () -> addDataset ( 'sessions' , 'GAUGE' , 0 ); $fields = array ( 'sessions' => $sessions , ); $tags = compact ( 'rrd_def' ); data_update ( $device , 'pulse_sessions' , $tags , $fields ); $os -> enableGraph ( 'pulse_sessions' ); }","title":"Polling OS"},{"location":"Developing/os/Custom-Graphs/#displaying","text":"The specific graphs are not displayed automatically so we need to write the following PHP code: Pulse Sessions includes/html/graphs/device/pulse_sessions.inc.php <? php $rrd_filename = rrd_name ( $device [ 'hostname' ], 'pulse_sessions' ); require 'includes/graphs/common.inc.php' ; $ds = 'sessions' ; $colour_area = '9999cc' ; $colour_line = '0000cc' ; $colour_area_max = '9999cc' ; $graph_max = 1 ; $graph_min = 0 ; $unit_text = 'Sessions' ; require 'includes/graphs/generic_simplex.inc.php' ; Pulse Users includes/html/graphs/device/pulse_users.inc.php <? php $rrd_filename = rrd_name ( $device [ 'hostname' ], 'pulse_users' ); require 'includes/html/graphs/common.inc.php' ; $ds = 'users' ; $colour_area = '9999cc' ; $colour_line = '0000cc' ; $colour_area_max = '9999cc' ; $graph_max = 1 ; $unit_text = 'Users' ; require 'includes/html/graphs/generic_simplex.inc.php' ; That should be it, after data has started to be collected graphs should appear in the WebUI.","title":"Displaying"},{"location":"Developing/os/Health-Information/","text":"Sensors This document will guide you through adding health / sensor information for your new device. Currently we have support for the following health metrics along with the values we expect to see the data in: Class Measurement airflow cfm ber ratio charge % chromatic_dispersion ps/nm cooling W count # current A dbm dBm delay s eer eer fanspeed rpm frequency Hz humidity % load % loss % power W power_consumed kWh power_factor ratio pressure kPa quality_factor dB runtime Min signal dBm snr SNR state # temperature C voltage V waterflow l/m percent % Simple health discovery We have support for defining health / sensor discovery using YAML files so that you don't need to know how to write PHP. Please note that DISPLAY-HINTS are disabled so ensure you use the correct divisor / multiplier if applicable. All yaml files are located in includes/definitions/discovery/$os.yaml . Defining the information here is not always possible and is heavily reliant on vendors being sensible with the MIBs they generate. Only snmp walks are supported and you must provide a sane table that can be traversed and contains all of the data you need. We will use netbotz as an example here. includes/definitions/discovery/netbotz.yaml mib : NETBOTZV2-MIB modules : sensors : airflow : options : skip_value_lt : 0 data : - oid : airFlowSensorTable value : airFlowSensorValue divisor : 10 num_oid : '.1.3.6.1.4.1.5528.100.4.1.5.1.2.{{ $index }}' descr : '{{ $airFlowSensorLabel }}' index : 'airFlowSensorValue.{{ $index }}' At the top you can define one or more mibs to be used in the lookup of data: mib: NETBOTZV2-MIB For use of multiple MIB files separate them with a colon: mib: NETBOTZV2-MIB:SECOND-MIB For data: you have the following options: The only sensor we have defined here is airflow. The available options are as follows: oid (required): This is the name of the table you want to do the snmp walk on. value (optional): This is the key within the table that contains the value. If not provided willuse oid num_oid (required): This is the numerical OID that contains value . This should always include {{ $index }} . snmptranslate -On can help figure out the number. In case the index is a string, {{ $index_string }} can be used instead. divisor (optional): This is the divisor to use against the returned value . multiplier (optional): This is the multiplier to use against the returned value . low_limit (optional): This is the critical low threshold that value should be (used in alerting). If an OID is specified then divisor / multiplier are used. low_warn_limit (optional): This is the warning low threshold that value should be (used in alerting). If an OID is specified then divisor / multiplier are used. warn_limit (optional): This is the warning high threshold that value should be (used in alerting). If an OID is specified then divisor / multiplier are used. high_limit (optional): This is the critical high threshold that value should be (used in alerting). If an OID is specified then divisor / multiplier are used. descr (required): The visible label for this sensor. It can be a key with in the table or a static string, optionally using {{ index }} . group (optional): Groups sensors together under in the webui, displaying this text. Not specifying this will put the sensors in the default group. index (optional): This is the index value we use to uniquely identify this sensor. {{ $index }} will be replaced by the index from the snmp walk. skip_values (optional): This is an array of values we should skip over (see note below). skip_value_lt (optional): If sensor value is less than this, skip the discovery. skip_value_gt (optional): If sensor value is greater than this, skip the discovery. entPhysicalIndex (optional): If the sensor belongs to a physical entity then you can specify the index here. entPhysicalIndex_measured (optional): If the sensor belongs to a physical entity then you can specify the entity type here. user_func (optional): You can provide a function name for the sensors value to be processed through (i.e. Convert fahrenheit to celsius use fahrenheit_to_celsius ) For options: you have the following available: divisor : This is the divisor to use against the returned value . multiplier : This is the multiplier to use against the returned value . skip_values : This is an array of values we should skip over (see note below). skip_value_lt : If sensor value is less than this, skip the discovery. skip_value_gt : If sensor value is greater than this, skip the discovery. Multiple variables can be used in the sensors definition. The syntax is {{ $variable }} . Any oid in the current table can be used, as well as pre_cached data. The index ($index) and the sub_indexes (in case the oid is indexed multiple times) are also available: if $index=\"1.20\", then $subindex0=\"1\" and $subindex1=\"20\". skip_values can also compare items within the OID table against values. The index of the sensor is used to retrieve the value from the OID, unless a target index is appended to the OID. Comparisons behave on a logical OR basis when chained, so only one of them needs to be matched for that particular sensor to be skipped during discovery. An example of this is below: skip_values : - oid : sensUnit op : '!=' value : 4 - oid : sensConfig.0 op : '!=' value : 1 op can be any of the following operators : =, !=, ==, !==, <=, >=, <, >, starts, ends, contains, regex, in_array, not_starts, not_ends, not_contains, not_regex, not_in_array, exists Example: skip_values : - oid : sensorName op : 'not_in_array' value : [ 'sensor1' , 'sensor2' ] skip_values : - oid : sensorOptionalOID op : 'exists' value : false If you aren't able to use yaml to perform the sensor discovery, you will most likely need to use Advanced health discovery. Advanced health discovery If you can't use the yaml files as above, then you will need to create the discovery code in php. The directory structure for sensor information is includes/discovery/sensors/$class/$os.inc.php . The format of all of the sensors follows the same code format which is to collect sensor information via SNMP and then call the discover_sensor() function; with the exception of state sensors which requires additional code. Sensor information is commonly found in an ENTITY mib supplied by device's vendor in the form of a table. Other mib tables may be used as well. Sensor information is first collected by includes/discovery/sensors/pre_cache/$os.inc.php . This program will pull in data from mib tables into a $pre_cache array that can then be used in includes/discovery/sensors/$class/$os.inc.php to extract specific values which are then passed to discover_sensor() . discover_sensor() Accepts the following arguments: &$valid = This is always $valid['sensor'], do not pass any other values. $class = Required. This is the sensor class from the table above (i.e humidity). $device = Required. This is the $device array. $oid = Required. This must be the numerical OID for where the data can be found, i.e .1.2.3.4.5.6.7.0 $index = Required. This must be unique for this sensor class, device and type. Typically it's the index from the table being walked or it could be the name of the OID if it's a single value. $type = Required. This should be the OS name, i.e pulse. $descr = Required. This is a descriptive value for the sensor. Some devices will provide names to use. $divisor = Defaults to 1. This is used to divided the returned value. $multiplier = Defaults to 1. This is used to multiply the returned value. $low_limit = Defaults to null. Sets the low threshold limit for the sensor, used in alerting to report out range sensors. $low_warn_limit = Defaults to null. Sets the low warning limit for the sensor, used in alerting to report near out of range sensors. $warn_limit = Defaults to null. Sets the high warning limit for the sensor, used in alerting to report near out of range sensors. $high_limit = Defaults to null. Sets the high limit for the sensor, used in alerting to report out range sensors. $current = Defaults to null. Can be used to set the current value on discovery. Poller will update this on the next poll cycle anyway. $poller_type = Defaults to snmp. Things like the unix-agent can set different values but for the most part this should be left as snmp. $entPhysicalIndex = Defaults to null. Sets the entPhysicalIndex to be used to look up further hardware if available. $entPhysicalIndex_measured = Defaults to null. Sets the type of entPhysicalIndex used, i.e ports. $user_func = Defaults to null. You can provide a function name for the sensors value to be processed through (i.e. Convert fahrenheit to celsius use fahrenheit_to_celsius ) $group = Defaults to null. Groups sensors together under in the webui, displaying this text. For the majority of devices, this is all that's required to add support for a sensor. Polling is done based on the data gathered using discover_sensor() . If custom polling is needed then the file format is similar to discovery: includes/polling/sensors/$class/$os.inc.php . Whilst it's possible to perform additional snmp queries within polling this should be avoided where possible. The value for the OID is already available as $sensor_value . Graphing is performed automatically for sensors, no custom graphing is required or supported. Adding a new sensor class You will need to add code for your new sensor class in the following existing files: app/Models/Sensor.php : add a free icon from Font Awesome in the $icons array. doc/Developing/os/Health-Information.md : documentation for every sensor class is mandatory. includes/discovery/sensors.inc.php : add the sensor class to the $run_sensors array. includes/discovery/functions.inc.php : optional - if sensible low_limit and high_limit values are guessable when a SNMP-retrievable threshold is not available, add a case for the sensor class to the sensor_limit() and/or sensor_low_limit() functions. LibreNMS/Util/ObjectCache.php : optional - choose menu grouping for the sensor class. includes/html/pages/device/health.inc.php : add a dbFetchCell(), $datas[], and $type_text[] entry for the sensor class. includes/html/pages/device/overview.inc.php : add require 'overview/sensors/$class.inc.php' in the desired order for the device overview page. includes/html/pages/health.inc.php : add a $type_text[] entry for the sensor class. resources/lang/en/sensors.php : add human-readable names and units for the sensor class in English, feel free to do so for other languages as well. Create and populate new files for the sensor class in the following places: includes/discovery/sensors/$class/ : create the folder where advanced php-based discovery files are stored. Not used for yaml discovery. ======= includes/html/pages/device/health.inc.php : add a dbFetchCell(), $datas[], and $type_text[] entry for the sensor class. includes/html/pages/device/overview.inc.php : add require 'overview/sensors/$class.inc.php' in the desired order for the device overview page. includes/html/pages/health.inc.php : add a $type_text[] entry for the sensor class. resources/lang/en/sensors.php : add human-readable names and units for the sensor class in English, feel free to do so for other languages as well. Create and populate new files for the sensor class in the following places: includes/discovery/sensors/$class/ : create the folder where advanced php-based discovery files are stored. Not used for yaml discovery. includes/html/graphs/device/$class.inc.php : define unit names used in RRDtool graphs. includes/html/graphs/sensor/$class.inc.php : define various parameters for RRDtool graphs. includes/html/pages/device/health/$class.inc.php includes/html/pages/device/overview/sensors/$class.inc.php includes/html/pages/health/$class.inc.php Advanced health sensor example This example shows how to build sensors using the advanced method. In this example we will be collecting optical power level (dBm) from Adva FSP150CC family MetroE devices. This example will assume an understanding of SNMP and MIBs. First we setup includes/discovery/sensors/pre_cache/adva_fsp150.inc as shown below. The first line walks the cmEntityObject table to get information about the chassis and line cards. From this information we extract the model type which will identify which tables in the CM-Facility-Mib the ports are populated in. The program then reads the appropriate table into the $pre_cache array adva_fsp150_ports . This array will have OID indexies for each port, which we will use later to identify our sensor OIDs. $pre_cache['adva_fsp150'] = snmpwalk_cache_multi_oid($device, 'cmEntityObjects', [], 'CM-ENTITY-MIB', null, '-OQUbs'); $neType = $pre_cache['adva_fsp150'][1]['neType']; if ($neType == 'ccxg116pro') { $pre_cache['adva_fsp150_ports'] = snmpwalk_cache_multi_oid($device, 'cmEthernetTrafficPortTable', $pre_cache['adva_fsp150_ports'], 'CM-FACILITY-MIB', null, '-OQUbs'); } else { $pre_cache['adva_fsp150_ports'] = snmpwalk_cache_multi_oid($device, 'cmEthernetNetPortTable', $pre_cache['adva_fsp150_ports'], 'CM-FACILITY-MIB', null, '-OQUbs'); $pre_cache['adva_fsp150_ports'] = snmpwalk_cache_multi_oid($device, 'cmEthernetAccPortTable', $pre_cache['adva_fsp150_ports'], 'CM-FACILITY-MIB', null, '-OQUbs'); } Next we are going to build our sensor discovery code. These are optical readings, so the file will be created as the dBm sensor type in includes/discover/sensors/dbm/adva_fsp150.inc.php . Below is a snippet of the code: foreach ($pre_cache['adva_fsp150_ports'] as $index => $entry) { if ($entry['cmEthernetTrafficPortMediaType'] == 'fiber') { //Discover received power level $oidRx = '.1.3.6.1.4.1.2544.1.12.5.1.21.1.34.' . $index . '.3'; $oidTx = '.1.3.6.1.4.1.2544.1.12.5.1.21.1.33.' . $index . '.3'; $currentRx = snmp_get($device, $oidRx, '-Oqv', 'CM-PERFORMANCE-MIB', '/opt/librenms/mibs/adva'); $currentTx = snmp_get($device, $oidTx, '-Oqv', 'CM-PERFORMANCE-MIB', '/opt/librenms/mibs/adva'); if ($currentRx != 0 || $currentTx != 0) { $entPhysicalIndex = $entry['cmEthernetTrafficPortIfIndex']; $entPhysicalIndex_measured = 'ports'; $descrRx = dbFetchCell('SELECT `ifName` FROM `ports` WHERE `ifIndex`= ? AND `device_id` = ?', [$entry['cmEthernetTrafficPortIfIndex'], $device['device_id']]) . ' Rx Power'; discover_sensor( $valid['sensor'], 'dbm', $device, $oidRx, 'cmEthernetTrafficPortStatsOPR.' . $index, 'adva_fsp150', $descrRx, $divisor, $multiplier, null, null, null, null, $currentRx, 'snmp', $entPhysicalIndex, $entPhysicalIndex_measured ); $descrTx = dbFetchCell('SELECT `ifName` FROM `ports` WHERE `ifIndex`= ? AND `device_id` = ?', [$entry['cmEthernetTrafficPortIfIndex'], $device['device_id']]) . ' Tx Power'; discover_sensor( $valid['sensor'], 'dbm', $device, $oidTx, 'cmEthernetTrafficPortStatsOPT.' . $index, 'adva_fsp150', $descrTx, $divisor, $multiplier, null, null, null, null, $currentTx, 'snmp', $entPhysicalIndex, $entPhysicalIndex_measured ); } } } First the program will loop through each port's index value. In the case of Advas, the ports are names Ethernet 1-1-1-1, 1-1-1-2, etc, and they are indexed as oid.1.1.1.1, oid.1.1.1.2, etc in the mib. Next the program checks which table the port exists in and that the connector type is 'fiber'. There are other port tables in the full code that were ommitted from the example for brevity. Copper media won't have optical readings, so if the media type isn't fiber we skip discovery for that port. The next two lines build the OIDs for getting the optical receive and transmit values using the $index for the port. Using the OIDs the program gets the current receive and transmit values ($currentRx and $currentTx repectively) to verify the values are not 0. Not all SFPs collect digital optical monitoring (DOM) data, in the case of Adva the value of both transmit and recieve will be 0 if DOM is not available. While 0 is a valid value for optical power, its extremely unlikely that both will be 0 if DOM is present. If DOM is not available, then the program stops discovery for that port. Note that while this is the case with Adva, other vendors may differ in how they handle optics that do not supply DOM. Please check your vendor's mibs. Next the program assigns the values of $entPhysicalIndex and $entPhysicalIndex_measured. In this case $entPhysicalIndex is set to the value of the cmEthernetTrafficPortIfIndex so that it is associated with port. This will also allow the sensor graphs to show up on the associated port's page in the GUI in addition to the Health page. Following that the program uses a database call to get the description of the port which will be used as the title for the graph in the GUI. Lastly the program calls discover_sensor() and passes the information collected in the previous steps. The null values are for low, low warning, high, and high warning values, which are not collected in the Adva's MIB. You can manually run discovery to verify the code works by running ./discovery.php -h $device_id -m sensors . You can use -v to see what calls are being used during discovery and -d to see debug output. In the output under #### Load disco module sensors #### you can see a list of sensors types. If there is a + a sensor is added, if there is a - one was deleted, and a . means no change. If there is nothing next to the sensor type then the sensor was not discovered. There is is also information about changes to the database and RRD files at the bottom. [librenms@nms-test ~]$ ./discovery.php -h 2 -m sensors LibreNMS Discovery 164.113.194.250 2 adva_fsp150 #### Load disco module core #### >> Runtime for discovery module 'core': 0.0240 seconds with 66536 bytes >> SNMP: [2/0.06s] MySQL: [3/0.00s] RRD: [0/0.00s] #### Unload disco module core #### #### Load disco module sensors #### Pre-cache adva_fsp150: ENTITY-SENSOR: Caching OIDs: entPhysicalDescr entPhysicalName entPhySensorType entPhySensorScale entPhySensorPrecision entPhySensorValue entPhySensorOperStatus Airflow: Current: . Charge: Dbm: Adva FSP-150 dBm.. Fanspeed: Frequency: Humidity: Load: Power: Power_consumed: Power_factor: Runtime: Signal: State: Count: Temperature: .. Voltage: . Snr: Pressure: Cooling: Delay: Quality_factor: Chromatic_dispersion: Ber: Eer: Waterflow: Percent: >> Runtime for discovery module 'sensors': 3.9340 seconds with 190024 bytes >> SNMP: [16/3.89s] MySQL: [36/0.03s] RRD: [0/0.00s] #### Unload disco module sensors #### Discovered in 5.521 seconds SNMP [18/3.96s]: Get[8/0.81s] Getnext[0/0.00s] Walk[10/3.15s] MySQL [41/0.03s]: Cell[10/0.01s] Row[-4/-0.00s] Rows[31/0.02s] Column[0/0.00s] Update[2/0.00s] Insert[2/0.00s] Delete[0/0.00s] RRD [0/0.00s]: Update[0/0.00s] Create [0/0.00s] Other[0/0.00s]","title":"Health Information"},{"location":"Developing/os/Health-Information/#sensors","text":"This document will guide you through adding health / sensor information for your new device. Currently we have support for the following health metrics along with the values we expect to see the data in: Class Measurement airflow cfm ber ratio charge % chromatic_dispersion ps/nm cooling W count # current A dbm dBm delay s eer eer fanspeed rpm frequency Hz humidity % load % loss % power W power_consumed kWh power_factor ratio pressure kPa quality_factor dB runtime Min signal dBm snr SNR state # temperature C voltage V waterflow l/m percent %","title":"Sensors"},{"location":"Developing/os/Health-Information/#simple-health-discovery","text":"We have support for defining health / sensor discovery using YAML files so that you don't need to know how to write PHP. Please note that DISPLAY-HINTS are disabled so ensure you use the correct divisor / multiplier if applicable. All yaml files are located in includes/definitions/discovery/$os.yaml . Defining the information here is not always possible and is heavily reliant on vendors being sensible with the MIBs they generate. Only snmp walks are supported and you must provide a sane table that can be traversed and contains all of the data you need. We will use netbotz as an example here. includes/definitions/discovery/netbotz.yaml mib : NETBOTZV2-MIB modules : sensors : airflow : options : skip_value_lt : 0 data : - oid : airFlowSensorTable value : airFlowSensorValue divisor : 10 num_oid : '.1.3.6.1.4.1.5528.100.4.1.5.1.2.{{ $index }}' descr : '{{ $airFlowSensorLabel }}' index : 'airFlowSensorValue.{{ $index }}' At the top you can define one or more mibs to be used in the lookup of data: mib: NETBOTZV2-MIB For use of multiple MIB files separate them with a colon: mib: NETBOTZV2-MIB:SECOND-MIB For data: you have the following options: The only sensor we have defined here is airflow. The available options are as follows: oid (required): This is the name of the table you want to do the snmp walk on. value (optional): This is the key within the table that contains the value. If not provided willuse oid num_oid (required): This is the numerical OID that contains value . This should always include {{ $index }} . snmptranslate -On can help figure out the number. In case the index is a string, {{ $index_string }} can be used instead. divisor (optional): This is the divisor to use against the returned value . multiplier (optional): This is the multiplier to use against the returned value . low_limit (optional): This is the critical low threshold that value should be (used in alerting). If an OID is specified then divisor / multiplier are used. low_warn_limit (optional): This is the warning low threshold that value should be (used in alerting). If an OID is specified then divisor / multiplier are used. warn_limit (optional): This is the warning high threshold that value should be (used in alerting). If an OID is specified then divisor / multiplier are used. high_limit (optional): This is the critical high threshold that value should be (used in alerting). If an OID is specified then divisor / multiplier are used. descr (required): The visible label for this sensor. It can be a key with in the table or a static string, optionally using {{ index }} . group (optional): Groups sensors together under in the webui, displaying this text. Not specifying this will put the sensors in the default group. index (optional): This is the index value we use to uniquely identify this sensor. {{ $index }} will be replaced by the index from the snmp walk. skip_values (optional): This is an array of values we should skip over (see note below). skip_value_lt (optional): If sensor value is less than this, skip the discovery. skip_value_gt (optional): If sensor value is greater than this, skip the discovery. entPhysicalIndex (optional): If the sensor belongs to a physical entity then you can specify the index here. entPhysicalIndex_measured (optional): If the sensor belongs to a physical entity then you can specify the entity type here. user_func (optional): You can provide a function name for the sensors value to be processed through (i.e. Convert fahrenheit to celsius use fahrenheit_to_celsius ) For options: you have the following available: divisor : This is the divisor to use against the returned value . multiplier : This is the multiplier to use against the returned value . skip_values : This is an array of values we should skip over (see note below). skip_value_lt : If sensor value is less than this, skip the discovery. skip_value_gt : If sensor value is greater than this, skip the discovery. Multiple variables can be used in the sensors definition. The syntax is {{ $variable }} . Any oid in the current table can be used, as well as pre_cached data. The index ($index) and the sub_indexes (in case the oid is indexed multiple times) are also available: if $index=\"1.20\", then $subindex0=\"1\" and $subindex1=\"20\". skip_values can also compare items within the OID table against values. The index of the sensor is used to retrieve the value from the OID, unless a target index is appended to the OID. Comparisons behave on a logical OR basis when chained, so only one of them needs to be matched for that particular sensor to be skipped during discovery. An example of this is below: skip_values : - oid : sensUnit op : '!=' value : 4 - oid : sensConfig.0 op : '!=' value : 1 op can be any of the following operators : =, !=, ==, !==, <=, >=, <, >, starts, ends, contains, regex, in_array, not_starts, not_ends, not_contains, not_regex, not_in_array, exists Example: skip_values : - oid : sensorName op : 'not_in_array' value : [ 'sensor1' , 'sensor2' ] skip_values : - oid : sensorOptionalOID op : 'exists' value : false If you aren't able to use yaml to perform the sensor discovery, you will most likely need to use Advanced health discovery.","title":"Simple health discovery"},{"location":"Developing/os/Health-Information/#advanced-health-discovery","text":"If you can't use the yaml files as above, then you will need to create the discovery code in php. The directory structure for sensor information is includes/discovery/sensors/$class/$os.inc.php . The format of all of the sensors follows the same code format which is to collect sensor information via SNMP and then call the discover_sensor() function; with the exception of state sensors which requires additional code. Sensor information is commonly found in an ENTITY mib supplied by device's vendor in the form of a table. Other mib tables may be used as well. Sensor information is first collected by includes/discovery/sensors/pre_cache/$os.inc.php . This program will pull in data from mib tables into a $pre_cache array that can then be used in includes/discovery/sensors/$class/$os.inc.php to extract specific values which are then passed to discover_sensor() . discover_sensor() Accepts the following arguments: &$valid = This is always $valid['sensor'], do not pass any other values. $class = Required. This is the sensor class from the table above (i.e humidity). $device = Required. This is the $device array. $oid = Required. This must be the numerical OID for where the data can be found, i.e .1.2.3.4.5.6.7.0 $index = Required. This must be unique for this sensor class, device and type. Typically it's the index from the table being walked or it could be the name of the OID if it's a single value. $type = Required. This should be the OS name, i.e pulse. $descr = Required. This is a descriptive value for the sensor. Some devices will provide names to use. $divisor = Defaults to 1. This is used to divided the returned value. $multiplier = Defaults to 1. This is used to multiply the returned value. $low_limit = Defaults to null. Sets the low threshold limit for the sensor, used in alerting to report out range sensors. $low_warn_limit = Defaults to null. Sets the low warning limit for the sensor, used in alerting to report near out of range sensors. $warn_limit = Defaults to null. Sets the high warning limit for the sensor, used in alerting to report near out of range sensors. $high_limit = Defaults to null. Sets the high limit for the sensor, used in alerting to report out range sensors. $current = Defaults to null. Can be used to set the current value on discovery. Poller will update this on the next poll cycle anyway. $poller_type = Defaults to snmp. Things like the unix-agent can set different values but for the most part this should be left as snmp. $entPhysicalIndex = Defaults to null. Sets the entPhysicalIndex to be used to look up further hardware if available. $entPhysicalIndex_measured = Defaults to null. Sets the type of entPhysicalIndex used, i.e ports. $user_func = Defaults to null. You can provide a function name for the sensors value to be processed through (i.e. Convert fahrenheit to celsius use fahrenheit_to_celsius ) $group = Defaults to null. Groups sensors together under in the webui, displaying this text. For the majority of devices, this is all that's required to add support for a sensor. Polling is done based on the data gathered using discover_sensor() . If custom polling is needed then the file format is similar to discovery: includes/polling/sensors/$class/$os.inc.php . Whilst it's possible to perform additional snmp queries within polling this should be avoided where possible. The value for the OID is already available as $sensor_value . Graphing is performed automatically for sensors, no custom graphing is required or supported.","title":"Advanced health discovery"},{"location":"Developing/os/Health-Information/#adding-a-new-sensor-class","text":"You will need to add code for your new sensor class in the following existing files: app/Models/Sensor.php : add a free icon from Font Awesome in the $icons array. doc/Developing/os/Health-Information.md : documentation for every sensor class is mandatory. includes/discovery/sensors.inc.php : add the sensor class to the $run_sensors array. includes/discovery/functions.inc.php : optional - if sensible low_limit and high_limit values are guessable when a SNMP-retrievable threshold is not available, add a case for the sensor class to the sensor_limit() and/or sensor_low_limit() functions. LibreNMS/Util/ObjectCache.php : optional - choose menu grouping for the sensor class. includes/html/pages/device/health.inc.php : add a dbFetchCell(), $datas[], and $type_text[] entry for the sensor class. includes/html/pages/device/overview.inc.php : add require 'overview/sensors/$class.inc.php' in the desired order for the device overview page. includes/html/pages/health.inc.php : add a $type_text[] entry for the sensor class. resources/lang/en/sensors.php : add human-readable names and units for the sensor class in English, feel free to do so for other languages as well. Create and populate new files for the sensor class in the following places: includes/discovery/sensors/$class/ : create the folder where advanced php-based discovery files are stored. Not used for yaml discovery. ======= includes/html/pages/device/health.inc.php : add a dbFetchCell(), $datas[], and $type_text[] entry for the sensor class. includes/html/pages/device/overview.inc.php : add require 'overview/sensors/$class.inc.php' in the desired order for the device overview page. includes/html/pages/health.inc.php : add a $type_text[] entry for the sensor class. resources/lang/en/sensors.php : add human-readable names and units for the sensor class in English, feel free to do so for other languages as well. Create and populate new files for the sensor class in the following places: includes/discovery/sensors/$class/ : create the folder where advanced php-based discovery files are stored. Not used for yaml discovery. includes/html/graphs/device/$class.inc.php : define unit names used in RRDtool graphs. includes/html/graphs/sensor/$class.inc.php : define various parameters for RRDtool graphs. includes/html/pages/device/health/$class.inc.php includes/html/pages/device/overview/sensors/$class.inc.php includes/html/pages/health/$class.inc.php","title":"Adding a new sensor class"},{"location":"Developing/os/Health-Information/#advanced-health-sensor-example","text":"This example shows how to build sensors using the advanced method. In this example we will be collecting optical power level (dBm) from Adva FSP150CC family MetroE devices. This example will assume an understanding of SNMP and MIBs. First we setup includes/discovery/sensors/pre_cache/adva_fsp150.inc as shown below. The first line walks the cmEntityObject table to get information about the chassis and line cards. From this information we extract the model type which will identify which tables in the CM-Facility-Mib the ports are populated in. The program then reads the appropriate table into the $pre_cache array adva_fsp150_ports . This array will have OID indexies for each port, which we will use later to identify our sensor OIDs. $pre_cache['adva_fsp150'] = snmpwalk_cache_multi_oid($device, 'cmEntityObjects', [], 'CM-ENTITY-MIB', null, '-OQUbs'); $neType = $pre_cache['adva_fsp150'][1]['neType']; if ($neType == 'ccxg116pro') { $pre_cache['adva_fsp150_ports'] = snmpwalk_cache_multi_oid($device, 'cmEthernetTrafficPortTable', $pre_cache['adva_fsp150_ports'], 'CM-FACILITY-MIB', null, '-OQUbs'); } else { $pre_cache['adva_fsp150_ports'] = snmpwalk_cache_multi_oid($device, 'cmEthernetNetPortTable', $pre_cache['adva_fsp150_ports'], 'CM-FACILITY-MIB', null, '-OQUbs'); $pre_cache['adva_fsp150_ports'] = snmpwalk_cache_multi_oid($device, 'cmEthernetAccPortTable', $pre_cache['adva_fsp150_ports'], 'CM-FACILITY-MIB', null, '-OQUbs'); } Next we are going to build our sensor discovery code. These are optical readings, so the file will be created as the dBm sensor type in includes/discover/sensors/dbm/adva_fsp150.inc.php . Below is a snippet of the code: foreach ($pre_cache['adva_fsp150_ports'] as $index => $entry) { if ($entry['cmEthernetTrafficPortMediaType'] == 'fiber') { //Discover received power level $oidRx = '.1.3.6.1.4.1.2544.1.12.5.1.21.1.34.' . $index . '.3'; $oidTx = '.1.3.6.1.4.1.2544.1.12.5.1.21.1.33.' . $index . '.3'; $currentRx = snmp_get($device, $oidRx, '-Oqv', 'CM-PERFORMANCE-MIB', '/opt/librenms/mibs/adva'); $currentTx = snmp_get($device, $oidTx, '-Oqv', 'CM-PERFORMANCE-MIB', '/opt/librenms/mibs/adva'); if ($currentRx != 0 || $currentTx != 0) { $entPhysicalIndex = $entry['cmEthernetTrafficPortIfIndex']; $entPhysicalIndex_measured = 'ports'; $descrRx = dbFetchCell('SELECT `ifName` FROM `ports` WHERE `ifIndex`= ? AND `device_id` = ?', [$entry['cmEthernetTrafficPortIfIndex'], $device['device_id']]) . ' Rx Power'; discover_sensor( $valid['sensor'], 'dbm', $device, $oidRx, 'cmEthernetTrafficPortStatsOPR.' . $index, 'adva_fsp150', $descrRx, $divisor, $multiplier, null, null, null, null, $currentRx, 'snmp', $entPhysicalIndex, $entPhysicalIndex_measured ); $descrTx = dbFetchCell('SELECT `ifName` FROM `ports` WHERE `ifIndex`= ? AND `device_id` = ?', [$entry['cmEthernetTrafficPortIfIndex'], $device['device_id']]) . ' Tx Power'; discover_sensor( $valid['sensor'], 'dbm', $device, $oidTx, 'cmEthernetTrafficPortStatsOPT.' . $index, 'adva_fsp150', $descrTx, $divisor, $multiplier, null, null, null, null, $currentTx, 'snmp', $entPhysicalIndex, $entPhysicalIndex_measured ); } } } First the program will loop through each port's index value. In the case of Advas, the ports are names Ethernet 1-1-1-1, 1-1-1-2, etc, and they are indexed as oid.1.1.1.1, oid.1.1.1.2, etc in the mib. Next the program checks which table the port exists in and that the connector type is 'fiber'. There are other port tables in the full code that were ommitted from the example for brevity. Copper media won't have optical readings, so if the media type isn't fiber we skip discovery for that port. The next two lines build the OIDs for getting the optical receive and transmit values using the $index for the port. Using the OIDs the program gets the current receive and transmit values ($currentRx and $currentTx repectively) to verify the values are not 0. Not all SFPs collect digital optical monitoring (DOM) data, in the case of Adva the value of both transmit and recieve will be 0 if DOM is not available. While 0 is a valid value for optical power, its extremely unlikely that both will be 0 if DOM is present. If DOM is not available, then the program stops discovery for that port. Note that while this is the case with Adva, other vendors may differ in how they handle optics that do not supply DOM. Please check your vendor's mibs. Next the program assigns the values of $entPhysicalIndex and $entPhysicalIndex_measured. In this case $entPhysicalIndex is set to the value of the cmEthernetTrafficPortIfIndex so that it is associated with port. This will also allow the sensor graphs to show up on the associated port's page in the GUI in addition to the Health page. Following that the program uses a database call to get the description of the port which will be used as the title for the graph in the GUI. Lastly the program calls discover_sensor() and passes the information collected in the previous steps. The null values are for low, low warning, high, and high warning values, which are not collected in the Adva's MIB. You can manually run discovery to verify the code works by running ./discovery.php -h $device_id -m sensors . You can use -v to see what calls are being used during discovery and -d to see debug output. In the output under #### Load disco module sensors #### you can see a list of sensors types. If there is a + a sensor is added, if there is a - one was deleted, and a . means no change. If there is nothing next to the sensor type then the sensor was not discovered. There is is also information about changes to the database and RRD files at the bottom. [librenms@nms-test ~]$ ./discovery.php -h 2 -m sensors LibreNMS Discovery 164.113.194.250 2 adva_fsp150 #### Load disco module core #### >> Runtime for discovery module 'core': 0.0240 seconds with 66536 bytes >> SNMP: [2/0.06s] MySQL: [3/0.00s] RRD: [0/0.00s] #### Unload disco module core #### #### Load disco module sensors #### Pre-cache adva_fsp150: ENTITY-SENSOR: Caching OIDs: entPhysicalDescr entPhysicalName entPhySensorType entPhySensorScale entPhySensorPrecision entPhySensorValue entPhySensorOperStatus Airflow: Current: . Charge: Dbm: Adva FSP-150 dBm.. Fanspeed: Frequency: Humidity: Load: Power: Power_consumed: Power_factor: Runtime: Signal: State: Count: Temperature: .. Voltage: . Snr: Pressure: Cooling: Delay: Quality_factor: Chromatic_dispersion: Ber: Eer: Waterflow: Percent: >> Runtime for discovery module 'sensors': 3.9340 seconds with 190024 bytes >> SNMP: [16/3.89s] MySQL: [36/0.03s] RRD: [0/0.00s] #### Unload disco module sensors #### Discovered in 5.521 seconds SNMP [18/3.96s]: Get[8/0.81s] Getnext[0/0.00s] Walk[10/3.15s] MySQL [41/0.03s]: Cell[10/0.01s] Row[-4/-0.00s] Rows[31/0.02s] Column[0/0.00s] Update[2/0.00s] Insert[2/0.00s] Delete[0/0.00s] RRD [0/0.00s]: Update[0/0.00s] Create [0/0.00s] Other[0/0.00s]","title":"Advanced health sensor example"},{"location":"Developing/os/Initial-Detection/","text":"This document will provide the information you should need to add basic detection for a new OS. Discovery Discovery is now all done by yaml files, you do not and should not create a php file for discovery. Create the new OS file which should be called includes/definitions/pulse.yaml . Here is a working example: os : pulse text : 'Pulse Secure' type : firewall icon : pulse over : - { graph : device_bits , text : 'Device Traffic' } - { graph : device_processor , text : 'CPU Usage' } - { graph : device_mempool , text : 'Memory Usage' } discovery : - sysObjectID : - .1.3.6.1.4.1.12532. over : This is a list of the graphs which will be shown within the device header bar (mini graphs top right). discovery : Here we are detecting this new OS using sysObjectID, this is the preferred method for detection. Other options are available: sysObjectID The preferred operator. Checks if the sysObjectID starts with one of the strings under this item sysDescr Use this in addition to sysObjectID if required. Check that the sysDescr contains one of the strings under this item sysObjectID_regex Please avoid use of this. Checks if the sysObjectID matches one of the regex statements under this item sysDescr_regex Please avoid use of this. Checks if the sysDescr matches one of the regex statements under this item snmpget Do not use this unless none of the other methods work. Fetch an oid and compare it against a value. _except You can add this to any of the above to exclude that element. As an example: discovery : - sysObjectID : - .1.3.6.1.4.1.12532. sysDescr_except : - 'Not some pulse' group : You can group certain OS' together by using group, for instance ios, nx-os, iosxr are all within a group called cisco. bad_ifXEntry : This is a list of models for which to tell LibreNMS that the device doesn't support ifXEntry and to ignore it: bad_ifXEntry : - cisco1941 - cisco886Va - cisco2811 mib_dir : You can use this to specify an additional directory to look in for MIBs. An array is not accepted, only one directory may be specified. mib_dir : juniper poller_modules : This is a list of poller modules to either enable (1) or disable (0). Check misc/config_definitions.json to see which modules are enabled/disabled by default. poller_modules : cisco-ace-serverfarms : false cisco-ace-loadbalancer : false discovery_modules : This is the list of discovery modules to either enable (1) or disable (0). Check misc/config_definitions.json to see which modules are enabled/disabled by default. discovery_modules : cisco-cef : true cisco-sla : true cisco-mac-accounting : false Discovery Logic YAML is converted to an array in PHP. Consider the following YAML: discovery : - sysObjectID : foo - sysDescr : [ snafu , exodar ] sysObjectID : bar This is how the discovery array would look in PHP: [ [ \"sysObjectID\" => \"foo\" , ], [ \"sysDescr\" => [ \"snafu\" , \"exodar\" , ], \"sysObjectID\" => \"bar\" , ] ] The logic for the discovery is as follows: One of the first level items must match ALL of the second level items must match (sysObjectID, sysDescr) One of the third level items (foo, [snafu,exodar], bar) must match So, considering the example: sysObjectID: foo, sysDescr: ANYTHING matches sysObjectID: bar, sysDescr: ANYTHING does not match sysObjectID: bar, sysDescr: exodar matches sysObjectID: bar, sysDescr: snafu matches OS discovery OS discovery collects additional standardized data about the OS. These are specified in the discovery yaml includes/definitions/discovery/<os>.yaml or LibreNMS/OS/<os>.php if more complex collection is required. version The version of the OS running on the device. hardware The hardware version for the device. For example: 'WS-C3560X-24T-S' features Features for the device, for example a list of enabled software features. serial The main serial number of the device. Yaml based OS discovery sysDescr_regex apply a regex or list of regexes to the sysDescr to extract named groups, this data has the lowest precedence <field> specify an oid or list of oids to attempt to pull the data from, the first non-empty response will be used <field>_regex parse the value out of the returned oid data, must use a named group <field>_template combine multiple oid results together to create a final string value. The result is trimmed. hardware_mib MIB used to translate sysObjectID to get hardware. hardware_regex can process the result. modules : os : sysDescr_regex : '/(?<hardware>MSM\\S+) .* Serial number (?<serial>\\S+) - Firmware version (?<version>\\S+)/' features : UPS-MIB::upsIdentAttachedDevices.0 hardware : - ENTITY-MIB::entPhysicalName.1 - ENTITY-MIB::entPhysicalHardwareRev.1 hardware_template : '{{ ENTITY-MIB::entPhysicalName.1 }} {{ ENTITY-MIB::entPhysicalHardwareRev.1 }}' serial : ENTITY-MIB::entPhysicalSerialNum.1 version : ENTITY-MIB::entPhysicalSoftwareRev.1 version_regex : '/V(?<version>.*)/' PHP based OS discovery public function discoverOS ( \\App\\Models\\Device $device ) : void { $info = snmp_getnext_multi ( $this -> getDeviceArray (), [ 'enclosureModel' , 'enclosureSerialNum' , 'entPhysicalFirmwareRev' ], '-OQUs' , 'NAS-MIB:ENTITY-MIB' ); $device -> version = $info [ 'entPhysicalFirmwareRev' ]; $device -> hardware = $info [ 'enclosureModel' ]; $device -> serial = $info [ 'enclosureSerialNum' ]; } MIBs If the device has MIBs available and you use it in the detection then you can add these in. It is highly recommended that you add mibs to a vendor specific directory. For instance HP mibs are in mibs/hp . Please ensure that these directories are specified in the yaml detection file, see mib_dir above. Icon and Logo It is highly recommended to use SVG images where possible, these scale and provide a nice visual image for users with HiDPI screens. If you can't find SVG images then please use png. Create an SVG image of the icon and logo. Legacy PNG bitmaps are also supported but look bad on HiDPI. A vector image should not contain padding. The file should not be larger than 20 Kb. Simplify paths to reduce large files. Use plain SVG without gzip compression. The SVG root element must not contain length and width attributes, only viewBox. Icon Save the icon SVG to html/images/os/$os.svg . Icons should look good when viewed at 32x32 px. Square icons are preferred to full logos with text. Remove small ornaments that are almost not visible when displayed with 32px width (e.g. \u00ae or \u2122). Logo Save the logo SVG to html/images/logos/$os.svg . Logos can be any dimension, but often are wide and contain the company name. If a logo is not present, the icon will be used. Hints Hints for Inkscape : You can open a PDF or EPS to extract the logo. Ungroup elements to isolate the logo. Use Path -> Simplify to simplify paths of large files. Use File -> Document Properties\u2026 -> Resize page to content\u2026 to remove padding. Use File -> Clean up document to remove unused gradients, patterns, or markers. Use File -> Save As -> Plain SVG to save the final image. By optimizing the SVG you can shrink the file size in some cases to less than 20 %. SVG Optimizer does a great job. There is also an online version . The final check Discovery ./discovery.php -d -h HOSTNAME Polling ./poller.php -h HOSTNAME At this step we should see all the values retrieved in LibreNMS. Note: If you have made a number of changes to either the OS's Discovery files, it's possible earlier edits have been cached. As such, if you do not get expected behaviour when completing the final check above, try removing the cache file first: rm -f cache/os_defs.cache","title":"Initial Detection"},{"location":"Developing/os/Initial-Detection/#discovery","text":"Discovery is now all done by yaml files, you do not and should not create a php file for discovery. Create the new OS file which should be called includes/definitions/pulse.yaml . Here is a working example: os : pulse text : 'Pulse Secure' type : firewall icon : pulse over : - { graph : device_bits , text : 'Device Traffic' } - { graph : device_processor , text : 'CPU Usage' } - { graph : device_mempool , text : 'Memory Usage' } discovery : - sysObjectID : - .1.3.6.1.4.1.12532. over : This is a list of the graphs which will be shown within the device header bar (mini graphs top right). discovery : Here we are detecting this new OS using sysObjectID, this is the preferred method for detection. Other options are available: sysObjectID The preferred operator. Checks if the sysObjectID starts with one of the strings under this item sysDescr Use this in addition to sysObjectID if required. Check that the sysDescr contains one of the strings under this item sysObjectID_regex Please avoid use of this. Checks if the sysObjectID matches one of the regex statements under this item sysDescr_regex Please avoid use of this. Checks if the sysDescr matches one of the regex statements under this item snmpget Do not use this unless none of the other methods work. Fetch an oid and compare it against a value. _except You can add this to any of the above to exclude that element. As an example: discovery : - sysObjectID : - .1.3.6.1.4.1.12532. sysDescr_except : - 'Not some pulse' group : You can group certain OS' together by using group, for instance ios, nx-os, iosxr are all within a group called cisco. bad_ifXEntry : This is a list of models for which to tell LibreNMS that the device doesn't support ifXEntry and to ignore it: bad_ifXEntry : - cisco1941 - cisco886Va - cisco2811 mib_dir : You can use this to specify an additional directory to look in for MIBs. An array is not accepted, only one directory may be specified. mib_dir : juniper poller_modules : This is a list of poller modules to either enable (1) or disable (0). Check misc/config_definitions.json to see which modules are enabled/disabled by default. poller_modules : cisco-ace-serverfarms : false cisco-ace-loadbalancer : false discovery_modules : This is the list of discovery modules to either enable (1) or disable (0). Check misc/config_definitions.json to see which modules are enabled/disabled by default. discovery_modules : cisco-cef : true cisco-sla : true cisco-mac-accounting : false","title":"Discovery"},{"location":"Developing/os/Initial-Detection/#discovery-logic","text":"YAML is converted to an array in PHP. Consider the following YAML: discovery : - sysObjectID : foo - sysDescr : [ snafu , exodar ] sysObjectID : bar This is how the discovery array would look in PHP: [ [ \"sysObjectID\" => \"foo\" , ], [ \"sysDescr\" => [ \"snafu\" , \"exodar\" , ], \"sysObjectID\" => \"bar\" , ] ] The logic for the discovery is as follows: One of the first level items must match ALL of the second level items must match (sysObjectID, sysDescr) One of the third level items (foo, [snafu,exodar], bar) must match So, considering the example: sysObjectID: foo, sysDescr: ANYTHING matches sysObjectID: bar, sysDescr: ANYTHING does not match sysObjectID: bar, sysDescr: exodar matches sysObjectID: bar, sysDescr: snafu matches","title":"Discovery Logic"},{"location":"Developing/os/Initial-Detection/#os-discovery","text":"OS discovery collects additional standardized data about the OS. These are specified in the discovery yaml includes/definitions/discovery/<os>.yaml or LibreNMS/OS/<os>.php if more complex collection is required. version The version of the OS running on the device. hardware The hardware version for the device. For example: 'WS-C3560X-24T-S' features Features for the device, for example a list of enabled software features. serial The main serial number of the device.","title":"OS discovery"},{"location":"Developing/os/Initial-Detection/#yaml-based-os-discovery","text":"sysDescr_regex apply a regex or list of regexes to the sysDescr to extract named groups, this data has the lowest precedence <field> specify an oid or list of oids to attempt to pull the data from, the first non-empty response will be used <field>_regex parse the value out of the returned oid data, must use a named group <field>_template combine multiple oid results together to create a final string value. The result is trimmed. hardware_mib MIB used to translate sysObjectID to get hardware. hardware_regex can process the result. modules : os : sysDescr_regex : '/(?<hardware>MSM\\S+) .* Serial number (?<serial>\\S+) - Firmware version (?<version>\\S+)/' features : UPS-MIB::upsIdentAttachedDevices.0 hardware : - ENTITY-MIB::entPhysicalName.1 - ENTITY-MIB::entPhysicalHardwareRev.1 hardware_template : '{{ ENTITY-MIB::entPhysicalName.1 }} {{ ENTITY-MIB::entPhysicalHardwareRev.1 }}' serial : ENTITY-MIB::entPhysicalSerialNum.1 version : ENTITY-MIB::entPhysicalSoftwareRev.1 version_regex : '/V(?<version>.*)/'","title":"Yaml based OS discovery"},{"location":"Developing/os/Initial-Detection/#php-based-os-discovery","text":"public function discoverOS ( \\App\\Models\\Device $device ) : void { $info = snmp_getnext_multi ( $this -> getDeviceArray (), [ 'enclosureModel' , 'enclosureSerialNum' , 'entPhysicalFirmwareRev' ], '-OQUs' , 'NAS-MIB:ENTITY-MIB' ); $device -> version = $info [ 'entPhysicalFirmwareRev' ]; $device -> hardware = $info [ 'enclosureModel' ]; $device -> serial = $info [ 'enclosureSerialNum' ]; }","title":"PHP based OS discovery"},{"location":"Developing/os/Initial-Detection/#mibs","text":"If the device has MIBs available and you use it in the detection then you can add these in. It is highly recommended that you add mibs to a vendor specific directory. For instance HP mibs are in mibs/hp . Please ensure that these directories are specified in the yaml detection file, see mib_dir above.","title":"MIBs"},{"location":"Developing/os/Initial-Detection/#icon-and-logo","text":"It is highly recommended to use SVG images where possible, these scale and provide a nice visual image for users with HiDPI screens. If you can't find SVG images then please use png. Create an SVG image of the icon and logo. Legacy PNG bitmaps are also supported but look bad on HiDPI. A vector image should not contain padding. The file should not be larger than 20 Kb. Simplify paths to reduce large files. Use plain SVG without gzip compression. The SVG root element must not contain length and width attributes, only viewBox.","title":"Icon and Logo"},{"location":"Developing/os/Initial-Detection/#icon","text":"Save the icon SVG to html/images/os/$os.svg . Icons should look good when viewed at 32x32 px. Square icons are preferred to full logos with text. Remove small ornaments that are almost not visible when displayed with 32px width (e.g. \u00ae or \u2122).","title":"Icon"},{"location":"Developing/os/Initial-Detection/#logo","text":"Save the logo SVG to html/images/logos/$os.svg . Logos can be any dimension, but often are wide and contain the company name. If a logo is not present, the icon will be used.","title":"Logo"},{"location":"Developing/os/Initial-Detection/#hints","text":"Hints for Inkscape : You can open a PDF or EPS to extract the logo. Ungroup elements to isolate the logo. Use Path -> Simplify to simplify paths of large files. Use File -> Document Properties\u2026 -> Resize page to content\u2026 to remove padding. Use File -> Clean up document to remove unused gradients, patterns, or markers. Use File -> Save As -> Plain SVG to save the final image. By optimizing the SVG you can shrink the file size in some cases to less than 20 %. SVG Optimizer does a great job. There is also an online version .","title":"Hints"},{"location":"Developing/os/Initial-Detection/#the-final-check","text":"Discovery ./discovery.php -d -h HOSTNAME Polling ./poller.php -h HOSTNAME At this step we should see all the values retrieved in LibreNMS. Note: If you have made a number of changes to either the OS's Discovery files, it's possible earlier edits have been cached. As such, if you do not get expected behaviour when completing the final check above, try removing the cache file first: rm -f cache/os_defs.cache","title":"The final check"},{"location":"Developing/os/Mem-CPU-Information/","text":"This document will guide you through adding detection for Memory / Processor for your new device. Memory LibreNMS will attempt to detect memory statistics using the standard HOST-RESOURCES-MIB and UCD-SNMP-MIB MIBs. To detect non-standard MIBs, they can be defined via Yaml. YAML In order to successfully detect memory amount and usage, two of the for keys below are required. Some OS only provide a usage percentage, which will work, but a total RAM amount will not be displayed. total used free percent_used includes/definitions/discovery/mempools/arubaos.yaml mempools : data : - total : WLSX-SWITCH-MIB::sysXMemorySize used : WLSX-SWITCH-MIB::sysXMemoryUsed precision : 1024 The code can also interpret table based OIDs and supports many of the same features as Health Sensors including {{ }} parsing, skip_values, and precache. Valid data entry keys: oid oid to walk to collect processor data total oid or integer total memory size in bytes (or precision), used oid memory used in bytes (or precision) free oid memory free in bytes (or precision) percent_used oid of percentage of used memory descr A visible description of the memory measurement defaults to \"Memory\" warn_percent Usage percentage to used for alert purposes precision precision for all byte values, typically a power of 2 (1024 for example) class used to generate rrd filename, defaults to system. If system, buffers, and cached exist they will be combined to calculate available memory. type used to generate rrd filename, defaults to the os name index used to generate rrd filename, defaults to the oid index skip_values skip values see Health Sensors for specification snmp_flags additional net-snmp flags Custom Processor Discovery and Polling If you need to implement custom discovery or polling you can implement the MempoolsDiscovery interface and the MempoolsPolling interface in the OS class. MempoolsPolling is optional, standard polling will be used based on OIDs stored in the database. OS Class files reside under LibreNMS\\OS <? php namespace LibreNMS\\OS ; use LibreNMS\\Interfaces\\Discovery\\MempoolsDiscovery ; use LibreNMS\\Interfaces\\Polling\\MempoolsPolling ; class Example extends \\LibreNMS\\OS implements MempoolsDiscovery , MempoolsPolling { /** * Discover a Collection of Mempool models. * Will be keyed by mempool_type and mempool_index * * @return \\Illuminate\\Support\\Collection \\App\\Models\\Mempool */ public function discoverMempools () { // TODO: Implement discoverMempools() method. } /** * @param \\Illuminate\\Support\\Collection $mempools \\App\\Models\\Mempool * @return \\Illuminate\\Support\\Collection \\App\\Models\\Mempool */ public function pollMempools ( $mempools ) { // TODO: Implement pollMempools() method. } } Processor Detection for processors is done via a yaml file unless custom processing of data is required. YAML includes/definitions/discovery/pulse.yaml mib : PULSESECURE-PSG-MIB modules : processors : data : - oid : iveCpuUtil num_oid : '.1.3.6.1.4.1.12532.10.{{ $index }}' type : pulse Available yaml data keys: Key Default Description oid required The string based oid to fetch data, could be a table or a single value num_oid required the numerical oid to fetch data from when polling, usually should be appended by {{ $index }} value optional Oid to retrieve data from, primarily used for tables precision 1 The multiplier to multiply the data by. If this is negative, the data will be multiplied then subtracted from 100. descr Processor Description of this processor, may be an oid or plain string. Helpful values {{ $index }} and {{$count}} type Name of this sensor. This is used with the index to generate a unique id for this sensor. index {{ $index }} The index of this sensor, defaults to the index of the oid. skip_values optional Do not detect this sensor if the value matches Accessing values within yaml: {{ $index }} The index after the given oid {{ $count }} The count of entries (starting with 1) {{ $ oid }} Any oid in the table or pre-fetched Custom Processor Discovery and Polling If you need to implement custom discovery or polling you can implement the ProcessorDiscovery interface and the ProcessorPolling interface in the OS class. OS Class files reside under LibreNMS\\OS <? php namespace LibreNMS\\OS ; use LibreNMS\\Device\\Processor ; use LibreNMS\\Interfaces\\Discovery\\ProcessorDiscovery ; use LibreNMS\\Interfaces\\Polling\\ProcessorPolling ; use LibreNMS\\OS ; class ExampleOS extends OS implements ProcessorDiscovery , ProcessorPolling { /** * Discover processors. * Returns an array of LibreNMS\\Device\\Processor objects that have been discovered * * @return array Processors */ public function discoverProcessors () { // discovery code here } /** * Poll processor data. This can be implemented if custom polling is needed. * * @param array $processors Array of processor entries from the database that need to be polled * @return array of polled data */ public function pollProcessors ( array $processors ) { // polling code here } }","title":"Mem/CPU Information"},{"location":"Developing/os/Mem-CPU-Information/#memory","text":"LibreNMS will attempt to detect memory statistics using the standard HOST-RESOURCES-MIB and UCD-SNMP-MIB MIBs. To detect non-standard MIBs, they can be defined via Yaml.","title":"Memory"},{"location":"Developing/os/Mem-CPU-Information/#yaml","text":"In order to successfully detect memory amount and usage, two of the for keys below are required. Some OS only provide a usage percentage, which will work, but a total RAM amount will not be displayed. total used free percent_used includes/definitions/discovery/mempools/arubaos.yaml mempools : data : - total : WLSX-SWITCH-MIB::sysXMemorySize used : WLSX-SWITCH-MIB::sysXMemoryUsed precision : 1024 The code can also interpret table based OIDs and supports many of the same features as Health Sensors including {{ }} parsing, skip_values, and precache. Valid data entry keys: oid oid to walk to collect processor data total oid or integer total memory size in bytes (or precision), used oid memory used in bytes (or precision) free oid memory free in bytes (or precision) percent_used oid of percentage of used memory descr A visible description of the memory measurement defaults to \"Memory\" warn_percent Usage percentage to used for alert purposes precision precision for all byte values, typically a power of 2 (1024 for example) class used to generate rrd filename, defaults to system. If system, buffers, and cached exist they will be combined to calculate available memory. type used to generate rrd filename, defaults to the os name index used to generate rrd filename, defaults to the oid index skip_values skip values see Health Sensors for specification snmp_flags additional net-snmp flags","title":"YAML"},{"location":"Developing/os/Mem-CPU-Information/#custom-processor-discovery-and-polling","text":"If you need to implement custom discovery or polling you can implement the MempoolsDiscovery interface and the MempoolsPolling interface in the OS class. MempoolsPolling is optional, standard polling will be used based on OIDs stored in the database. OS Class files reside under LibreNMS\\OS <? php namespace LibreNMS\\OS ; use LibreNMS\\Interfaces\\Discovery\\MempoolsDiscovery ; use LibreNMS\\Interfaces\\Polling\\MempoolsPolling ; class Example extends \\LibreNMS\\OS implements MempoolsDiscovery , MempoolsPolling { /** * Discover a Collection of Mempool models. * Will be keyed by mempool_type and mempool_index * * @return \\Illuminate\\Support\\Collection \\App\\Models\\Mempool */ public function discoverMempools () { // TODO: Implement discoverMempools() method. } /** * @param \\Illuminate\\Support\\Collection $mempools \\App\\Models\\Mempool * @return \\Illuminate\\Support\\Collection \\App\\Models\\Mempool */ public function pollMempools ( $mempools ) { // TODO: Implement pollMempools() method. } }","title":"Custom Processor Discovery and Polling"},{"location":"Developing/os/Mem-CPU-Information/#processor","text":"Detection for processors is done via a yaml file unless custom processing of data is required.","title":"Processor"},{"location":"Developing/os/Mem-CPU-Information/#yaml_1","text":"includes/definitions/discovery/pulse.yaml mib : PULSESECURE-PSG-MIB modules : processors : data : - oid : iveCpuUtil num_oid : '.1.3.6.1.4.1.12532.10.{{ $index }}' type : pulse Available yaml data keys: Key Default Description oid required The string based oid to fetch data, could be a table or a single value num_oid required the numerical oid to fetch data from when polling, usually should be appended by {{ $index }} value optional Oid to retrieve data from, primarily used for tables precision 1 The multiplier to multiply the data by. If this is negative, the data will be multiplied then subtracted from 100. descr Processor Description of this processor, may be an oid or plain string. Helpful values {{ $index }} and {{$count}} type Name of this sensor. This is used with the index to generate a unique id for this sensor. index {{ $index }} The index of this sensor, defaults to the index of the oid. skip_values optional Do not detect this sensor if the value matches Accessing values within yaml: {{ $index }} The index after the given oid {{ $count }} The count of entries (starting with 1) {{ $ oid }} Any oid in the table or pre-fetched","title":"YAML"},{"location":"Developing/os/Mem-CPU-Information/#custom-processor-discovery-and-polling_1","text":"If you need to implement custom discovery or polling you can implement the ProcessorDiscovery interface and the ProcessorPolling interface in the OS class. OS Class files reside under LibreNMS\\OS <? php namespace LibreNMS\\OS ; use LibreNMS\\Device\\Processor ; use LibreNMS\\Interfaces\\Discovery\\ProcessorDiscovery ; use LibreNMS\\Interfaces\\Polling\\ProcessorPolling ; use LibreNMS\\OS ; class ExampleOS extends OS implements ProcessorDiscovery , ProcessorPolling { /** * Discover processors. * Returns an array of LibreNMS\\Device\\Processor objects that have been discovered * * @return array Processors */ public function discoverProcessors () { // discovery code here } /** * Poll processor data. This can be implemented if custom polling is needed. * * @param array $processors Array of processor entries from the database that need to be polled * @return array of polled data */ public function pollProcessors ( array $processors ) { // polling code here } }","title":"Custom Processor Discovery and Polling"},{"location":"Developing/os/Settings/","text":"Optional OS Settings This page documents settings that can be set in the os yaml files or in config.php. All settings listed here are optional. If they are not set, the global default will be used. User override in config.php Users can override these settings in their config.php. For example, to set an alternate icon for ios: $config [ 'os' ][ 'ios' ][ 'icon' ] = 'fuzzybunny' ; Ignoring Sensors It is possible to filter some sensors from the configuration: Filter all 'current' sensors for Operating System 'vrp'. $config [ 'os' ][ 'vrp' ][ 'disabled_sensors' ][ 'current' ] = true ; Filter all sensors with description matching regexp '/PEM Iout/' for Operating System iosxe. $config [ 'os' ][ 'iosxe' ][ 'disabled_sensors_regex' ][] = '/PEM Iout/' ; Ignore all temperature sensors $config [ 'disabled_sensors' ][ 'temperature' ] = true ; Filter all sensors matching with description regexp '/PEM Iout/' . $config [ 'disabled_sensors_regex' ][] = '/PEM Iout/' ; Ignoring Interfaces See also: Global Ignoring Interfaces Config These settings are merged with the global settings, so you can only undo global ones with good_if empty_ifdescr : false # allow empty ifDescr bad_if : # ifDescr (substring, case insensitive) - lp0 bad_if_regexp : # ifDescr (regex, case insensitive) - \"/^ng[0-9]+$/\" bad_ifname_regexp : # ifName (regex, case insensitive) - \"/^xdsl_channel /\" bad_ifalias_regexp : # ifAlias (regex, case insensitive) - \"/^vlan/\" bad_iftype : # ifType (substring) - sonet good_if : # ignore all other bad_if settings ifDescr (substring, case insensitive) - virtual bad_ifoperstatus # IfOperStatus (substring, case insensitive) - notPresent Controlling interface labels By default we use ifDescr to label ports/interfaces. Setting either ifname or ifalias will override that. Only set one of these. ifAlias is user supplied. ifindex will append the ifindex to the port label. ifname : true ifalias : true ifindex : true Poller and Discovery Modules The various discovery and poller modules can be enabled or disabled per OS. The defaults are usually reasonable, so likely you won't want to change more than a few. These modules can be enabled or disabled per-device in the webui and per os or globally in config.php. Usually, a poller module will not work if it's corresponding discovery module is not enabled. poller_modules : bgp-peers : true discovery_modules : arp-table : false SNMP Settings Disable snmpbulkwalk Some devices have buggy snmp implementations and don't respond well to the more efficient snmpbulkwalk. To disable snmpbulkwalk and only use snmpwalk for an os set the following. nobulk : true Limit the oids per snmpget snmp_max_oid : 8 Storage Settings See also: Global Storage Config ignore_mount_array : # exact match - /var/run ignore_mount_string : # substring - run ignore_mount_regexp : # regex - \"/^ \\ /var/\"","title":"Settings"},{"location":"Developing/os/Settings/#optional-os-settings","text":"This page documents settings that can be set in the os yaml files or in config.php. All settings listed here are optional. If they are not set, the global default will be used.","title":"Optional OS Settings"},{"location":"Developing/os/Settings/#user-override-in-configphp","text":"Users can override these settings in their config.php. For example, to set an alternate icon for ios: $config [ 'os' ][ 'ios' ][ 'icon' ] = 'fuzzybunny' ;","title":"User override in config.php"},{"location":"Developing/os/Settings/#ignoring-sensors","text":"It is possible to filter some sensors from the configuration: Filter all 'current' sensors for Operating System 'vrp'. $config [ 'os' ][ 'vrp' ][ 'disabled_sensors' ][ 'current' ] = true ; Filter all sensors with description matching regexp '/PEM Iout/' for Operating System iosxe. $config [ 'os' ][ 'iosxe' ][ 'disabled_sensors_regex' ][] = '/PEM Iout/' ; Ignore all temperature sensors $config [ 'disabled_sensors' ][ 'temperature' ] = true ; Filter all sensors matching with description regexp '/PEM Iout/' . $config [ 'disabled_sensors_regex' ][] = '/PEM Iout/' ;","title":"Ignoring Sensors"},{"location":"Developing/os/Settings/#ignoring-interfaces","text":"See also: Global Ignoring Interfaces Config These settings are merged with the global settings, so you can only undo global ones with good_if empty_ifdescr : false # allow empty ifDescr bad_if : # ifDescr (substring, case insensitive) - lp0 bad_if_regexp : # ifDescr (regex, case insensitive) - \"/^ng[0-9]+$/\" bad_ifname_regexp : # ifName (regex, case insensitive) - \"/^xdsl_channel /\" bad_ifalias_regexp : # ifAlias (regex, case insensitive) - \"/^vlan/\" bad_iftype : # ifType (substring) - sonet good_if : # ignore all other bad_if settings ifDescr (substring, case insensitive) - virtual bad_ifoperstatus # IfOperStatus (substring, case insensitive) - notPresent","title":"Ignoring Interfaces"},{"location":"Developing/os/Settings/#controlling-interface-labels","text":"By default we use ifDescr to label ports/interfaces. Setting either ifname or ifalias will override that. Only set one of these. ifAlias is user supplied. ifindex will append the ifindex to the port label. ifname : true ifalias : true ifindex : true","title":"Controlling interface labels"},{"location":"Developing/os/Settings/#poller-and-discovery-modules","text":"The various discovery and poller modules can be enabled or disabled per OS. The defaults are usually reasonable, so likely you won't want to change more than a few. These modules can be enabled or disabled per-device in the webui and per os or globally in config.php. Usually, a poller module will not work if it's corresponding discovery module is not enabled. poller_modules : bgp-peers : true discovery_modules : arp-table : false","title":"Poller and Discovery Modules"},{"location":"Developing/os/Settings/#snmp-settings","text":"","title":"SNMP Settings"},{"location":"Developing/os/Settings/#disable-snmpbulkwalk","text":"Some devices have buggy snmp implementations and don't respond well to the more efficient snmpbulkwalk. To disable snmpbulkwalk and only use snmpwalk for an os set the following. nobulk : true","title":"Disable snmpbulkwalk"},{"location":"Developing/os/Settings/#limit-the-oids-per-snmpget","text":"snmp_max_oid : 8","title":"Limit the oids per snmpget"},{"location":"Developing/os/Settings/#storage-settings","text":"See also: Global Storage Config ignore_mount_array : # exact match - /var/run ignore_mount_string : # substring - run ignore_mount_regexp : # regex - \"/^ \\ /var/\"","title":"Storage Settings"},{"location":"Developing/os/Test-Units/","text":"Tests Tests ensure LibreNMS works as expected, now and in the future. New OS should provide as much test data as needed and added test data for existing OS is welcome. Saved snmp data can be found in tests/snmpsim/*.snmprec and saved database data can be found in tests/data/*.json . Please review this for any sensitive data before submitting. When replacing data, make sure it is modified in a consistent manner. We utilise snmpsim to do unit testing. For OS discovery, we can mock snmpsim, but for other tests you will need it installed and functioning. We run snmpsim during our integration tests, but not by default when running ./lnms dev:check . You can install snmpsim with the command pip3 install snmpsim . Capturing test data If test data already exists If test data already exists, but is for a different device/configuration with the same OS. Then you should use the --variant (-v) option to specify a different variant of the OS, this will be tested completely separate from other variants. If there is only one variant, please do not specify one. 1. Collect SNMP data ./scripts/collect-snmp-data.php is provided to make it easy to collect data for tests. Running collect-snmp-data.php with the --hostname (-h) allows you to capture all data used to discover and poll a device already added to LibreNMS. Make sure to re-run the script if you add additional support. Check the command-line help for more options. 2. Save test data After you have collected snmp data, run ./scripts/save-test-data.php with the --os (-o) option to dump the post discovery and post poll database entries to json files. This step requires snmpsim, if you are having issues, the maintainers may help you generate it from the snmprec you created in the previous step. Generally, you will only need to collect data once. After you have the data you need in the snmprec file, you can just use save-test-data.php to update the database dump (json) after that. Running tests Note: To run tests, ensure you have executed ./scripts/composer_wrapper.php install from your LibreNMS root directory. This will read composer.json and install any dependencies required. After you have saved your test data, you should run ./lnms dev:check verify they pass. To run the full suite of tests enable database and snmpsim reliant tests: ./lnms dev:check unit --db --snmpsim Specific OS ./lnms dev:check unit -o osname Specific Module ./lnms dev:check unit -m modulename Using snmpsim for testing You can run snmpsim to access test data by running ./scripts/collect-snmp-data.php --snmpsim You may then run snmp queries against it using the os (and variant) as the community and 127.1.6.1:1161 as the host. snmpget -v 2c -c ios_c3560e 127 .1.6.1:1161 sysDescr.0 Snmprec format Snmprec files are simple files that store the snmp data. The data format is simple with three columns: numeric oid, type code, and data. Here is an example snippet. 1.3.6.1.2.1.1.1.0|4|Pulse Secure,LLC,MAG-2600,8.0R14 (build 41869) 1.3.6.1.2.1.1.2.0|6|1.3.6.1.4.1.12532.254.1.1 During testing LibreNMS will use any info in the snmprec file for snmp calls. This one provides sysDescr ( .1.3.6.1.2.1.1.1.0 , 4 = Octet String) and sysObjectID ( .1.3.6.1.2.1.1.2.0 , 6 = Object Identifier), which is the minimum that should be provided for new snmprec files. To look up the numeric OID and type of an string OID with snmptranslate: snmptranslate -On -Td SNMPv2-MIB::sysDescr.0 List of SNMP data types: Type Value OCTET STRING 4 HEX STRING 4x Integer32 2 NULL 5 OBJECT IDENTIFIER 6 IpAddress 64 Counter32 65 Gauge32 66 TimeTicks 67 Opaque 68 Counter64 70 Hex encoded strings (4x) should be used for any strings that contain line returns. New discovery/poller modules New discovery or poller modules should define database capture parameters in /tests/module_tables.yaml . Example workflow If the base os ( .snmprec) already contains test data for the module you are testing or that data conflicts with your new data, you must use a variant to store your test data (-v). Add initial detection Add device to LibreNMS. It is generic and device_id = 42 Run ./scripts/collect-snmp-data.php -h 42 , initial snmprec will be created Add initial detection for example-os Run discovery to make sure it detects properly ./discovery.php -h 42 Add any additional os items like version, hardware, features, or serial. If there is additional snmp data required, run ./scripts/collect-snmp-data.php -h 42 Run ./scripts/save-test-data.php -o example-os to update the dumped database data. Review data. If you modified the snmprec or code (don't modify json manually) run ./scripts/save-test-data.php -o example-os -m os Run ./lnms dev:check unit --db --snmpsim If the tests succeed submit a pull request Additional module support or test data Add code to support module or support already exists. ./scripts/collect-snmp-data.php -h 42 -m <module> , this will add more data to the snmprec file Review data. If you modified the snmprec (don't modify json manually) run ./scripts/save-test-data.php -o example-os -m <module> Run ./lnms dev:check unit --db --snmpsim If the tests succeed submit a pull request","title":"Test Units"},{"location":"Developing/os/Test-Units/#tests","text":"Tests ensure LibreNMS works as expected, now and in the future. New OS should provide as much test data as needed and added test data for existing OS is welcome. Saved snmp data can be found in tests/snmpsim/*.snmprec and saved database data can be found in tests/data/*.json . Please review this for any sensitive data before submitting. When replacing data, make sure it is modified in a consistent manner. We utilise snmpsim to do unit testing. For OS discovery, we can mock snmpsim, but for other tests you will need it installed and functioning. We run snmpsim during our integration tests, but not by default when running ./lnms dev:check . You can install snmpsim with the command pip3 install snmpsim .","title":"Tests"},{"location":"Developing/os/Test-Units/#capturing-test-data","text":"If test data already exists If test data already exists, but is for a different device/configuration with the same OS. Then you should use the --variant (-v) option to specify a different variant of the OS, this will be tested completely separate from other variants. If there is only one variant, please do not specify one.","title":"Capturing test data"},{"location":"Developing/os/Test-Units/#1-collect-snmp-data","text":"./scripts/collect-snmp-data.php is provided to make it easy to collect data for tests. Running collect-snmp-data.php with the --hostname (-h) allows you to capture all data used to discover and poll a device already added to LibreNMS. Make sure to re-run the script if you add additional support. Check the command-line help for more options.","title":"1. Collect SNMP data"},{"location":"Developing/os/Test-Units/#2-save-test-data","text":"After you have collected snmp data, run ./scripts/save-test-data.php with the --os (-o) option to dump the post discovery and post poll database entries to json files. This step requires snmpsim, if you are having issues, the maintainers may help you generate it from the snmprec you created in the previous step. Generally, you will only need to collect data once. After you have the data you need in the snmprec file, you can just use save-test-data.php to update the database dump (json) after that.","title":"2. Save test data"},{"location":"Developing/os/Test-Units/#running-tests","text":"Note: To run tests, ensure you have executed ./scripts/composer_wrapper.php install from your LibreNMS root directory. This will read composer.json and install any dependencies required. After you have saved your test data, you should run ./lnms dev:check verify they pass. To run the full suite of tests enable database and snmpsim reliant tests: ./lnms dev:check unit --db --snmpsim","title":"Running tests"},{"location":"Developing/os/Test-Units/#specific-os","text":"./lnms dev:check unit -o osname","title":"Specific OS"},{"location":"Developing/os/Test-Units/#specific-module","text":"./lnms dev:check unit -m modulename","title":"Specific Module"},{"location":"Developing/os/Test-Units/#using-snmpsim-for-testing","text":"You can run snmpsim to access test data by running ./scripts/collect-snmp-data.php --snmpsim You may then run snmp queries against it using the os (and variant) as the community and 127.1.6.1:1161 as the host. snmpget -v 2c -c ios_c3560e 127 .1.6.1:1161 sysDescr.0","title":"Using snmpsim for testing"},{"location":"Developing/os/Test-Units/#snmprec-format","text":"Snmprec files are simple files that store the snmp data. The data format is simple with three columns: numeric oid, type code, and data. Here is an example snippet. 1.3.6.1.2.1.1.1.0|4|Pulse Secure,LLC,MAG-2600,8.0R14 (build 41869) 1.3.6.1.2.1.1.2.0|6|1.3.6.1.4.1.12532.254.1.1 During testing LibreNMS will use any info in the snmprec file for snmp calls. This one provides sysDescr ( .1.3.6.1.2.1.1.1.0 , 4 = Octet String) and sysObjectID ( .1.3.6.1.2.1.1.2.0 , 6 = Object Identifier), which is the minimum that should be provided for new snmprec files. To look up the numeric OID and type of an string OID with snmptranslate: snmptranslate -On -Td SNMPv2-MIB::sysDescr.0 List of SNMP data types: Type Value OCTET STRING 4 HEX STRING 4x Integer32 2 NULL 5 OBJECT IDENTIFIER 6 IpAddress 64 Counter32 65 Gauge32 66 TimeTicks 67 Opaque 68 Counter64 70 Hex encoded strings (4x) should be used for any strings that contain line returns.","title":"Snmprec format"},{"location":"Developing/os/Test-Units/#new-discoverypoller-modules","text":"New discovery or poller modules should define database capture parameters in /tests/module_tables.yaml .","title":"New discovery/poller modules"},{"location":"Developing/os/Test-Units/#example-workflow","text":"If the base os ( .snmprec) already contains test data for the module you are testing or that data conflicts with your new data, you must use a variant to store your test data (-v).","title":"Example workflow"},{"location":"Developing/os/Test-Units/#add-initial-detection","text":"Add device to LibreNMS. It is generic and device_id = 42 Run ./scripts/collect-snmp-data.php -h 42 , initial snmprec will be created Add initial detection for example-os Run discovery to make sure it detects properly ./discovery.php -h 42 Add any additional os items like version, hardware, features, or serial. If there is additional snmp data required, run ./scripts/collect-snmp-data.php -h 42 Run ./scripts/save-test-data.php -o example-os to update the dumped database data. Review data. If you modified the snmprec or code (don't modify json manually) run ./scripts/save-test-data.php -o example-os -m os Run ./lnms dev:check unit --db --snmpsim If the tests succeed submit a pull request","title":"Add initial detection"},{"location":"Developing/os/Test-Units/#additional-module-support-or-test-data","text":"Add code to support module or support already exists. ./scripts/collect-snmp-data.php -h 42 -m <module> , this will add more data to the snmprec file Review data. If you modified the snmprec (don't modify json manually) run ./scripts/save-test-data.php -o example-os -m <module> Run ./lnms dev:check unit --db --snmpsim If the tests succeed submit a pull request","title":"Additional module support or test data"},{"location":"Developing/os/Wireless-Sensors/","text":"This document will guide you through adding wireless sensors for your new wireless device. Currently we have support for the following wireless metrics along with the values we expect to see the data in: Type Measurement Interface Description ap-count % WirelessApCountDiscovery The number of APs attached to this controller capacity % WirelessCapacityDiscovery The % of operating rate vs theoretical max ccq % WirelessCcqDiscovery The Client Connection Quality clients count WirelessClientsDiscovery The number of clients connected to/managed by this device distance km WirelessDistanceDiscovery The distance of a radio link in Kilometers error-rate bps WirelessErrorRateDiscovery The rate of errored packets or bits, etc error-ratio % WirelessErrorRatioDiscovery The percent of errored packets or bits, etc errors count WirelessErrorsDiscovery The total bits of errored packets or bits, etc frequency MHz WirelessFrequencyDiscovery The frequency of the radio in MHz, channels can be converted mse dB WirelessMseDiscovery The Mean Square Error noise-floor dBm WirelessNoiseFloorDiscovery The amount of noise received by the radio power dBm WirelessPowerDiscovery The power of transmit or receive, including signal level quality % WirelessQualityDiscovery The % of quality of the link, 100% = perfect link rate bps WirelessRateDiscovery The negotiated rate of the connection (not data transfer) rssi dBm WirelessRssiDiscovery The Received Signal Strength Indicator snr dB WirelessSnrDiscovery The Signal to Noise ratio, which is signal - noise floor sinr dB WirelessSinrDiscovery The Signal-to-Interference-plus-Noise Ratio rsrq dB WirelessRsrqDiscovery The Reference Signal Received Quality rsrp dBm WirelessRsrpDiscovery The Reference Signals Received Power xpi dBm WirelessXpiDiscovery The Cross Polar Interference values ssr dB WirelessSsrDiscovery The Signal strength ratio, the ratio(or difference) of Vertical rx power to Horizontal rx power utilization % WirelessUtilizationDiscovery The % of utilization compared to the current rate You will need to create a new OS class for your os if one doen't exist under LibreNMS/OS . The name of this file should be the os name in camel case for example airos -> Airos , ios-wlc -> IosWlc . Your new OS class should extend LibreNMS\\OS and implement the interfaces for the sensors your os supports. namespace LibreNMS\\OS ; use LibreNMS\\Device\\WirelessSensor ; use LibreNMS\\Interfaces\\Discovery\\Sensors\\WirelessClientsDiscovery ; use LibreNMS\\OS ; class Airos extends OS implements WirelessClientsDiscovery { public function discoverWirelessClients () { $oid = '.1.3.6.1.4.1.41112.1.4.5.1.15.1' ; //UBNT-AirMAX-MIB::ubntWlStatStaCount.1 return array ( new WirelessSensor ( 'clients' , $this -> getDeviceId (), $oid , 'airos' , 1 , 'Clients' ) ); } } All discovery interfaces will require you to return an array of WirelessSensor objects. new WirelessSensor() Accepts the following arguments: $type = Required. This is the sensor class from the table above (i.e humidity). $device_id = Required. You can get this value with $this->getDeviceId() $oids = Required. This must be the numerical OID for where the data can be found, i.e .1.2.3.4.5.6.7.0. If this is an array of oids, you should probably specify an $aggregator. $subtype = Required. This should be the OS name, i.e airos. $index = Required. This must be unique for this sensor type, device and subtype. Typically it's the index from the table being walked or it could be the name of the OID if it's a single value. $description = Required. This is a descriptive value for the sensor. Shown to the user, if this is a per-ssid statistic, using SSID: $ssid here is appropriate $current = Defaults to null. Can be used to set the current value on discovery. If this is null the values will be polled right away and if they do not return valid value(s), the sensor will not be discovered. Supplying a value here implies you have already verified this sensor is valid. $multiplier = Defaults to 1. This is used to multiply the returned value. $divisor = Defaults to 1. This is used to divided the returned value. $aggregator = Defaults to sum. Valid values: sum, avg. This will combine multiple values from multiple oids into one. $access_point_id = Defaults to null. If this is a wireless controller, you can link sensors to entries in the access_points table. $high_limit = Defaults to null. Sets the high limit for the sensor, used in alerting to report out range sensors. $low_limit = Defaults to null. Sets the low threshold limit for the sensor, used in alerting to report out range sensors. $high_warn = Defaults to null. Sets the high warning limit for the sensor, used in alerting to report near out of range sensors. $low_warn = Defaults to null. Sets the low warning limit for the sensor, used in alerting to report near out of range sensors. $entPhysicalIndex = Defaults to null. Sets the entPhysicalIndex to be used to look up further hardware if available. $entPhysicalIndexMeasured = Defaults to null. Sets the type of entPhysicalIndex used, i.e ports. Polling is done automatically based on the discovered data. If for some reason you need to override polling, you can implement the required polling interface in LibreNMS/Interfaces/Polling/Sensors . Using the polling interfaces should be avoided if possible. Graphing is performed automatically for wireless sensors, no custom graphing is required or supported.","title":"Wireless Sensors"},{"location":"Extensions/Agent-Setup/","text":"The agent can be used to gather data from remote systems you can use LibreNMS in combination with check_mk (found here ). The agent can be extended to include data about applications on the remote system. Installation Linux / BSD Make sure that systemd or xinetd is installed on the host you want to run the agent on. The agent uses TCP-Port 6556, please allow access from the LibreNMS host and poller nodes if you're using the Distributed Polling setup. On each of the hosts you would like to use the agent on, you need to do the following: 1: Clone the librenms-agent repository: cd /opt/ git clone https://github.com/librenms/librenms-agent.git cd librenms-agent 2: Copy the relevant check_mk_agent to /usr/bin : linux freebsd cp check_mk_agent /usr/bin/check_mk_agent cp check_mk_agent_freebsd /usr/bin/check_mk_agent chmod +x /usr/bin/check_mk_agent 3: Copy the service file(s) into place. xinetd systemd cp check_mk_xinetd /etc/xinetd.d/check_mk cp check_mk@.service check_mk.socket /etc/systemd/system 4: Create the relevant directories. mkdir -p /usr/lib/check_mk_agent/plugins /usr/lib/check_mk_agent/local 5: Copy each of the scripts from agent-local/ into /usr/lib/check_mk_agent/local that you require to be graphed. You can find detail setup instructions for specific applications above. 6: Make each one executable that you want to use with chmod +x /usr/lib/check_mk_agent/local/$script 7: Enable the check_mk service xinetd systemd /etc/init.d/xinetd restart systemctl enable check_mk.socket && systemctl start check_mk.socket 8: Login to the LibreNMS web interface and edit the device you want to monitor. Under the modules section, ensure that unix-agent is enabled. 9: Then under Applications, enable the apps that you plan to monitor. 10: Wait for around 10 minutes and you should start seeing data in your graphs under Apps for the device. Windows Grab version 1.2.6b5 of the check_mk agent from the check_mk github repo (exe/msi or compile it yourself depending on your usage): https://github.com/tribe29/checkmk/tree/v1.2.6b5/agents/windows Run the msi / exe Make sure your LibreNMS instance can reach TCP port 6556 on your target.","title":"Check_MK Setup"},{"location":"Extensions/Agent-Setup/#installation","text":"","title":"Installation"},{"location":"Extensions/Agent-Setup/#linux-bsd","text":"Make sure that systemd or xinetd is installed on the host you want to run the agent on. The agent uses TCP-Port 6556, please allow access from the LibreNMS host and poller nodes if you're using the Distributed Polling setup. On each of the hosts you would like to use the agent on, you need to do the following: 1: Clone the librenms-agent repository: cd /opt/ git clone https://github.com/librenms/librenms-agent.git cd librenms-agent 2: Copy the relevant check_mk_agent to /usr/bin : linux freebsd cp check_mk_agent /usr/bin/check_mk_agent cp check_mk_agent_freebsd /usr/bin/check_mk_agent chmod +x /usr/bin/check_mk_agent 3: Copy the service file(s) into place. xinetd systemd cp check_mk_xinetd /etc/xinetd.d/check_mk cp check_mk@.service check_mk.socket /etc/systemd/system 4: Create the relevant directories. mkdir -p /usr/lib/check_mk_agent/plugins /usr/lib/check_mk_agent/local 5: Copy each of the scripts from agent-local/ into /usr/lib/check_mk_agent/local that you require to be graphed. You can find detail setup instructions for specific applications above. 6: Make each one executable that you want to use with chmod +x /usr/lib/check_mk_agent/local/$script 7: Enable the check_mk service xinetd systemd /etc/init.d/xinetd restart systemctl enable check_mk.socket && systemctl start check_mk.socket 8: Login to the LibreNMS web interface and edit the device you want to monitor. Under the modules section, ensure that unix-agent is enabled. 9: Then under Applications, enable the apps that you plan to monitor. 10: Wait for around 10 minutes and you should start seeing data in your graphs under Apps for the device.","title":"Linux / BSD"},{"location":"Extensions/Agent-Setup/#windows","text":"Grab version 1.2.6b5 of the check_mk agent from the check_mk github repo (exe/msi or compile it yourself depending on your usage): https://github.com/tribe29/checkmk/tree/v1.2.6b5/agents/windows Run the msi / exe Make sure your LibreNMS instance can reach TCP port 6556 on your target.","title":"Windows"},{"location":"Extensions/Alerting/","text":"","title":"Alerting"},{"location":"Extensions/Applications/","text":"Introduction You can use Application support to graph performance statistics of many applications. Different applications support a variety of ways to collect data: 1) by direct connection to the application, 2) snmpd extend, or 3) the agent . The monitoring of applications could be added before or after the hosts have been added to LibreNMS. If multiple methods of collection are listed you only need to enable one. SNMP Extend When using the snmp extend method, the application discovery module will pick up which applications you have set up for monitoring automatically, even if the device is already in LibreNMS. The application discovery module is enabled by default for most *nix operating systems, but in some cases you will need to manually enable the application discovery module. SUDO One major thing to keep in mind when using SNMP extend is these run as the snmpd user that can be an unprivileged user. In these situations you need to use sudo. To test if you need sudo, first check the user snmpd is running as. Then test if you can run the extend script as that user without issue. For example if snmpd is running as 'Debian-snmp' and we want to run the extend for proxmox, we check that the following run without error: sudo -u Debian-snmp /usr/local/bin/proxmox If it doesn't work, then you will need to use sudo with the extend command. For the example above, that would mean adding the line below to the sudoers file: Debian-snmp ALL = NOPASSWD: /usr/local/bin/proxmox Finally we would need to add sudo to the extend command, which would look like that for proxmox: extend proxmox /usr/bin/sudo /usr/local/bin/proxmox Enable the application discovery module Edit the device for which you want to add this support Click on the Modules tab and enable the applications module. This will be automatically saved, and you should get a green confirmation pop-up message. After you have enabled the application module, it would be wise to then also enable which applications you want to monitor, in the rare case where LibreNMS does not automatically detect it. Note : Only do this if an application was not auto-discovered by LibreNMS during discovery and polling. Enable the application(s) to be discovered Go to the device you have just enabled the application module for. Click on the Applications tab and select the applications you want to monitor. This will also be automatically saved, and you should get a green confirmation pop-up message. Agent The unix-agent does not have a discovery module, only a poller module. That poller module is always disabled by default. It needs to be manually enabled if using the agent. Some applications will be automatically enabled by the unix-agent poller module. It is better to ensure that your application is enabled for monitoring. You can check by following the steps under the SNMP Extend heading. Apache - SNMP extend, Agent Asterisk - SNMP extend backupninja - SNMP extend BIND9/named - SNMP extend, Agent Certificate - Certificate extend C.H.I.P. - SNMP extend DHCP Stats - SNMP extend Entropy - SNMP extend EXIM Stats - SNMP extend Fail2ban - SNMP extend FreeBSD NFS Client - SNMP extend FreeBSD NFS Server - SNMP extend FreeRADIUS - SNMP extend, Agent Freeswitch - SNMP extend, Agent GPSD - SNMP extend, Agent Icecast - SNMP extend, Agent Mailcow-dockerized postfix - SNMP extend Mailscanner - SNMP extend Mdadm - SNMP extend Memcached - SNMP extend Munin - Agent MySQL - SNMP extend, Agent NGINX - SNMP extend, Agent NFS Server - SNMP extend NTP Client - SNMP extend NTP Server/NTPD - SNMP extend Nvidia GPU - SNMP extend Open Grid Scheduler - SNMP extend Opensips - SNMP extend OS Updates - SNMP extend PHP-FPM - SNMP extend Pi-hole - SNMP extend Portactivity - SNMP extend Postfix - SNMP extend Postgres - SNMP extend PowerDNS - Agent PowerDNS Recursor - Direct, SNMP extend, Agent PowerDNS dnsdist - SNMP extend Proxmox - SNMP extend Puppet Agent - SNMP extend PureFTPd - SNMP extend Raspberry PI - SNMP extend Redis - SNMP extend SDFS info - SNMP extend Seafile - SNMP extend SMART - SNMP extend Squid - SNMP proxy TinyDNS/djbdns - Agent Unbound - SNMP extend, Agent UPS-nut - SNMP extend UPS-apcups - SNMP extend Voip-monitor - SNMP extend ZFS - SNMP extend Apache Either use SNMP extend or use the agent. Note that you need to install and configure the Apache mod_status module before trying the script. SNMP Extend 1: Download the script onto the desired host (the host must be added to LibreNMS devices) wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/apache-stats.py -O /etc/snmp/apache-stats.py 2: Make the script executable (chmod +x /etc/snmp/apache-stats.py) 3: Create the cache directory, '/var/cache/librenms/' and make sure that it is owned by the user running the SNMP daemon. mkdir -p /var/cache/librenms/ 4: Verify it is working by running /etc/snmp/apache-stats.py Package urllib3 for python3 needs to be installed. In Debian-based systems for example you can achieve this by issuing: apt-get install python3-urllib3 5: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend apache /etc/snmp/apache-stats.py 6: Restart snmpd on your host 7: Test by running snmpwalk <various options depending on your setup> localhost NET-SNMP-EXTEND-MIB::nsExtendOutput2Table Agent Install the agent on this device if it isn't already and copy the apache script to /usr/lib/check_mk_agent/local/ 1: Verify it is working by running /usr/lib/check_mk_agent/local/apache (If you get error like \"Can't locate LWP/Simple.pm\". libwww-perl needs to be installed: apt-get install libwww-perl) 2: Create the cache directory, '/var/cache/librenms/' and make sure that it is owned by the user running the SNMP daemon. mkdir -p /var/cache/librenms/ 3: On the device page in Librenms, edit your host and check the Apache under the Applications tab. Asterisk A small shell script that reports various Asterisk call status. SNMP Extend 1: Download the asterisk script to /etc/snmp/ on your asterisk server. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/asterisk -O /etc/snmp/asterisk 2: Run chmod +x /etc/snmp/asterisk 3: Configure ASCLI in the script. 4: Verify it is working by running /etc/snmp/asterisk 5: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf ) and add: extend asterisk /etc/snmp/asterisk 6: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. backupninja A small shell script that reports status of last backupninja backup. SNMP Extend 1: Download the backupninja script to /etc/snmp/backupninja.py on your backuped server. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/backupninja.py -O /etc/snmp/backupninja.py` 2: Make the script executable: chmod +x /etc/snmp/backupninja.py 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf ) and add: extend backupninja /etc/snmp/backupninja.py 4: Restart snmpd on your host BIND9 aka named 1: Create stats file with appropriate permissions: ~$ touch /var/cache/bind/stats ~$ chown bind:bind /var/cache/bind/stats Change user:group to the user and group that's running bind/named. 2: Bind/named configuration: options { ... statistics-file \"/var/cache/bind/stats\"; zone-statistics yes; ... }; 3: Restart your bind9/named after changing the configuration. 4: Verify that everything works by executing rndc stats && cat /var/cache/bind/stats . In case you get a Permission Denied error, make sure you changed the ownership correctly. 5: Also be aware that this file is appended to each time rndc stats is called. Given this it is suggested you setup file rotation for it. Alternatively you can also set zero_stats to 1 in the config. 6: The script for this also requires the Perl module File::ReadBackwards . FreeBSD => p5-File-ReadBackwards CentOS/RedHat => perl-File-ReadBackwards Debian/Ubuntu => libfile-readbackwards-perl If it is not available, it can be installed by cpan -i File::ReadBackwards . 7: You may possibly need to configure the agent/extend script as well. The config file's path defaults to the same path as the script, but with .config appended. So if the script is located at /etc/snmp/bind , the config file will be /etc/snmp/bind.config . Alternatively you can also specify a config via -c $file . Anything starting with a # is comment. The format for variables are $variable=$value. Empty lines are ignored. Spaces and tabs at either the start or end of a line are ignored. Content of an example /etc/snmp/bind.config . Please edit with your own settings. rndc = The path to rndc. Default: /usr/bin/env rndc call_rndc = A 0/1 boolean on whether or not to call rndc stats. Suggest to set to 0 if using netdata. Default: 1 stats_file = The path to the named stats file. Default: /var/cache/bind/stats agent = A 0/1 boolean for if this is being used as a LibreNMS agent or not. Default: 0 zero_stats = A 0/1 boolean for if the stats file should be zeroed first. Default: 0 (1 if guessed) If you want to guess at the configuration, call the script with -g and it will print out what it thinks it should be. SNMP Extend 1: Copy the bind shell script, to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/bind -O /etc/snmp/bind 2: Make the script executable chmod +x /etc/snmp/bind 3: Edit your snmpd.conf file and add: extend bind /etc/snmp/bind 4: Restart snmpd on the host in question. The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. Agent 1: Install the agent on this device if it isn't already and copy the script to /usr/lib/check_mk_agent/local/bind via wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/bind -O /usr/lib/check_mk_agent/local/bind 2: Run chmod +x /usr/lib/check_mk_agent/local/bind 3: Set the variable 'agent' to '1' in the config. Certificate A small python3 script that checks age and remaining validity of certificates This script needs following packages on Debian/Ubuntu Systems: * python3 * python3-openssl Content of an example /etc/snmp/certificate.json . Please edit with your own settings. {\"domains\": [ {\"fqdn\": \"www.mydomain.com\"}, {\"fqdn\": \"some.otherdomain.org\", \"port\": 8443}, {\"fqdn\": \"personal.domain.net\"} ] } Key 'domains' contains a list of domains to check. Optional you can define a port. By default it checks on port 443. SNMP Extend Copy the shell script to the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/certificate.py -O /etc/snmp/certificate.py Run chmod +x /etc/snmp/certificate.py Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend certificate /etc/snmp/certificate.py Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. C.H.I.P C.H.I.P. is a $9 R8 based tiny computer ideal for small projects. Further details: https://getchip.com/pages/chip 1: Copy the shell script to the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/chip.sh -O /etc/snmp/power-stat.sh 2: Run chmod +x /etc/snmp/power-stat.sh 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend power-stat /etc/snmp/power-stat.sh 4: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. DHCP Stats A small python3 script that reports current DHCP leases stats and pool usage. Also you have to install the dhcpd-pools Package. Under Ubuntu/Debian just run apt install dhcpd-pools SNMP Extend 1: Copy the shell script to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/dhcp.py -O /etc/snmp/dhcp.py 2: Run chmod +x /etc/snmp/dhcp.py 3: edit a config file: Content of an example /etc/snmp/dhcp.json . Please edit with your own settings. {\"leasefile\": \"/var/lib/dhcp/dhcpd.leases\" } Key 'leasefile' specifies the path to your lease file. 4: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend dhcpstats /etc/snmp/dhcp.py 5: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. Entropy A small shell script that checks your system's available random entropy. SNMP Extend 1: Download the script onto the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/entropy.sh -O /etc/snmp/entropy.sh 2: Run chmod +x /etc/snmp/entropy.sh 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend entropy /etc/snmp/entropy.sh 4: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. EXIM Stats SNMP extend script to get your exim stats data into your host. SNMP Extend 1: Download the script onto the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/exim-stats.sh -O /etc/snmp/exim-stats.sh 2: Run chmod +x /etc/snmp/exim-stats.sh 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf ) and add: extend exim-stats /etc/snmp/exim-stats.sh 4: If you are using sudo edit your sudo users (usually visudo ) and add at the bottom: snmp ALL=(ALL) NOPASSWD: /etc/snmp/exim-stats.sh, /usr/bin/exim* 5: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. Fail2ban SNMP Extend 1: Copy the shell script, fail2ban, to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/fail2ban -O /etc/snmp/fail2ban 2: Run chmod +x /etc/snmp/fail2ban 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend fail2ban /etc/snmp/fail2ban If you want to use the cache, it is as below, by using the -c switch. extend fail2ban /etc/snmp/fail2ban -c If you want to use the cache and update it if needed, this can by using the -c and -U switches. extend fail2ban /etc/snmp/fail2ban -c -U If you need to specify a custom location for the fail2ban-client, that can be done via the -f switch. If not specified, \"/usr/bin/env fail2ban-client\" is used. extend fail2ban /etc/snmp/fail2ban -f /foo/bin/fail2ban-client 5: Restart snmpd on your host 6: If you wish to use caching, add the following to /etc/crontab and restart cron. */3 * * * * root /etc/snmp/fail2ban -u 7: Restart or reload cron on your system. If you have more than a few jails configured, you may need to use caching as each jail needs to be polled and fail2ban-client can't do so in a timely manner for than a few. This can result in failure of other SNMP information being polled. For additional details of the switches, please see the POD in the script it self at the top. FreeBSD NFS Client SNMP Extend 1: Copy the shell script, fbsdnfsserver, to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/fbsdnfsclient -O /etc/snmp/fbsdnfsclient 2: Run chmod +x /etc/snmp/fbsdnfsclient 3: Edit your snmpd.conf file and add: extend fbsdnfsclient /etc/snmp/fbsdnfsclient 4: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. FreeBSD NFS Server SNMP Extend 1: Copy the shell script, fbsdnfsserver, to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/fbsdnfsserver -O /etc/snmp/fbsdnfsserver 2: Run chmod +x /etc/snmp/fbsdnfsserver 3: Edit your snmpd.conf file and add: extend fbsdnfsserver /etc/snmp/fbsdnfsserver 4: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. FreeRADIUS The FreeRADIUS application extension requires that status_server be enabled in your FreeRADIUS config. For more information see: https://wiki.freeradius.org/config/Status You should note that status requests increment the FreeRADIUS request stats. So LibreNMS polls will ultimately be reflected in your stats/charts. 1: Go to your FreeRADIUS configuration directory (usually /etc/raddb or /etc/freeradius). 2: cd sites-enabled 3: ln -s ../sites-available/status status 4: Restart FreeRADIUS. 5: You should be able to test with the radclient as follows... echo \"Message-Authenticator = 0x00, FreeRADIUS-Statistics-Type = 31, Response-Packet-Type = Access-Accept\" | \\ radclient -x localhost:18121 status adminsecret Note that adminsecret is the default secret key in status_server. Change if you've modified this. SNMP Extend 1: Copy the freeradius shell script, to the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/freeradius.sh -O /etc/snmp/freeradius.sh 2: Run chmod +x /etc/snmp/freeradius.sh 3: If you've made any changes to the FreeRADIUS status_server config (secret key, port, etc.) edit freeradius.sh and adjust the config variable accordingly. 4: Edit your snmpd.conf file and add: extend freeradius /etc/snmp/freeradius.sh 5: Restart snmpd on the host in question. The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. Agent 1: Install the agent on this device if it isn't already and copy the script to /usr/lib/check_mk_agent/local/freeradius.sh via wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/freeradius.sh -O /usr/lib/check_mk_agent/local/freeradius.sh 2: Run chmod +x /usr/lib/check_mk_agent/local/freeradius.sh 3: If you've made any changes to the FreeRADIUS status_server config (secret key, port, etc.) edit freeradius.sh and adjust the config variable accordingly. 4: Edit the freeradius.sh script and set the variable 'AGENT' to '1' in the config. Freeswitch A small shell script that reports various Freeswitch call status. Agent 1: Install the agent on your Freeswitch server if it isn't already 2: Copy the freeswitch script to /usr/lib/check_mk_agent/local/ 3: Configure FSCLI in the script. You may also have to create an /etc/fs_cli.conf file if your fs_cli command requires authentication. 4: Verify it is working by running /usr/lib/check_mk_agent/local/freeswitch SNMP Extend 1: Copy the freeswitch script to /etc/snmp/ on your Freeswitch server. 2: Run chmod +x /etc/snmp/freeswitch 3: Configure FSCLI in the script. You may also have to create an /etc/fs_cli.conf file if your fs_cli command requires authentication. 4: Verify it is working by running /etc/snmp/freeswitch 5: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf ) and add: extend freeswitch /etc/snmp/freeswitch 6: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. GPSD SNMP Extend 1: Download the script onto the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/gpsd -O /etc/snmp/gpsd 2: Run chmod +x /etc/snmp/gpsd 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf ) and add: extend gpsd /etc/snmp/gpsd 4: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading at the top of the page. Agent Install the agent on this device if it isn't already and copy the gpsd script to /usr/lib/check_mk_agent/local/ You may need to configure $server or $port . Verify it is working by running /usr/lib/check_mk_agent/local/gpsd Icecast Shell script that reports load average/memory/open-files stats of Icecast SNMP Extend Copy the shell script, icecast-stats.sh, to the desired host (the host must be added to LibreNMS devices) wget https://github.com/librenms/librenms-agent/raw/master/snmp/icecast-stats.sh -O /etc/snmp/icecast-stats.sh 2: Make the script executable chmod +x /etc/snmp/icecast-stats.sh Verify it is working by running /etc/snmp/icecast-stats.sh 4: Edit your snmpd.conf file (usually /etc/snmp/icecast-stats.sh ) and add: extend icecast /etc/snmp/icecast-stats.sh mailcow-dockerized postfix SNMP Extend 1: Download the script into the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/mailcow-dockerized-postfix -O /etc/snmp/mailcow-dockerized-postfix 2: Run chmod +x /etc/snmp/mailcow-dockerized-postfix Maybe you will be neeed to install pflogsumm on debian based OS. Please check if you have package installed. 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend mailcow-postfix /etc/snmp/mailcow-dockerized-postfix 4: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. Mailscanner SNMP Extend 1: Download the script onto the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/mailscanner.php -O /etc/snmp/mailscanner.php 2: Run chmod +x /etc/snmp/mailscanner.php 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend mailscanner /etc/snmp/mailscanner.php 4: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. Mdadm This shell script checks mdadm health and array data SNMP Extend 1: Download the script onto the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/mdadm -O /etc/snmp/mdadm 2: Run chmod +x /etc/snmp/mdadm 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend mdadm /etc/snmp/mdadm 4: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. Memcached SNMP Extend 1: Copy the memcached script to /etc/snmp/ on your remote server. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/agent-local/memcached -O /etc/snmp/memcached 2: Make the script executable: chmod +x /etc/snmp/memcached 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf ) and add: extend memcached /etc/snmp/memcached 4: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. Munin Agent Install the script to your agent: wget https://raw.githubusercontent.com/librenms/librenms-agent/master/agent-local/munin -O /usr/lib/check_mk_agent/local/munin Make the script executable ( chmod +x /usr/lib/check_mk_agent/local/munin ) Create the munin scripts dir: mkdir -p /usr/share/munin/munin-scripts Install your munin scripts into the above directory. To create your own custom munin scripts, please see this example: #!/bin/bash if [ \"$1\" = \"config\" ]; then echo 'graph_title Some title' echo 'graph_args --base 1000 -l 0' #not required echo 'graph_vlabel Some label' echo 'graph_scale no' #not required, can be yes/no echo 'graph_category system' #Choose something meaningful, can be anything echo 'graph_info This graph shows something awesome.' #Short desc echo 'foobar.label Label for your unit' # Repeat these two lines as much as you like echo 'foobar.info Desc for your unit.' exit 0 fi echo -n \"foobar.value \" $(date +%s) #Populate a value, here unix-timestamp MySQL Create the cache directory, '/var/cache/librenms/' and make sure that it is owned by the user running the SNMP daemon. mkdir -p /var/cache/librenms/ The MySQL script requires PHP-CLI and the PHP MySQL extension, so please verify those are installed. CentOS (May vary based on PHP version) yum install php-cli php-mysql Debian (May vary based on PHP version) apt-get install php-cli php-mysql Unlike most other scripts, the MySQL script requires a configuration file mysql.cnf in the same directory as the extend or agent script with following content: <? php $mysql_user = 'root' ; $mysql_pass = 'toor' ; $mysql_host = 'localhost' ; $mysql_port = 3306 ; Note that depending on your MySQL installation (chrooted install for example), you may have to specify 127.0.0.1 instead of localhost. Localhost make a MySQL connection via the mysql socket, while 127.0.0.1 make a standard IP connection to mysql. Agent Install the agent on this device if it isn't already and copy the mysql script to /usr/lib/check_mk_agent/local/ Verify it is working by running /usr/lib/check_mk_agent/local/mysql SNMP extend 1: Copy the mysql script to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/mysql -O /etc/snmp/mysql 2: Run chmod +x /etc/snmp/mysql 3: Edit your snmpd.conf file and add: extend mysql /etc/snmp/mysql 4: Restart snmpd. The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. NGINX NGINX is a free, open-source, high-performance HTTP server: https://www.nginx.org/ It's required to have the following directive in your nginx configuration responsible for the localhost server: location /nginx-status { stub_status on; access_log off; allow 127.0.0.1; allow ::1; deny all; } SNMP Extend 1: Download the script onto the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/nginx -O /etc/snmp/nginx 2: Run chmod +x /etc/snmp/nginx 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend nginx /etc/snmp/nginx 4: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. Agent Install the agent on this device if it isn't already and copy the nginx script to /usr/lib/check_mk_agent/local/ NFS Server Export the NFS stats from as server. SNMP Extend 1: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add : extend nfs-server /bin/cat /proc/net/rpc/nfsd note : find out where cat is located using : which cat 2: reload snmpd service to activate the configuration NTP Client A shell script that gets stats from ntp client. SNMP Extend 1: Download the script onto the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/ntp-client -O /etc/snmp/ntp-client 2: Run chmod +x /etc/snmp/ntp-client 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend ntp-client /etc/snmp/ntp-client 4: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. NTP Server aka NTPD A shell script that gets stats from ntp server (ntpd). SNMP Extend Download the script onto the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/ntp-server.sh -O /etc/snmp/ntp-server.sh 2: Run chmod +x /etc/snmp/ntp-server.sh 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend ntp-server /etc/snmp/ntp-server.sh 4: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. Nvidia GPU SNMP Extend 1: Copy the shell script, nvidia, to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/nvidia -O /etc/snmp/nvidia 2: Run chmod +x /etc/snmp/nvidia 3: Edit your snmpd.conf file and add: extend nvidia /etc/snmp/nvidia 5: Restart snmpd on your host. 6: Verify you have nvidia-smi installed, which it generally should be if you have the driver from Nvida installed. The GPU numbering on the graphs will correspond to how the nvidia-smi sees them as being. For questions about what the various values are/mean, please see the nvidia-smi man file under the section covering dmon. Open Grid Scheduler Shell script to track the OGS/GE jobs running on clusters. SNMP Extend 1: Download the script onto the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/agent-local/rocks.sh -O /etc/snmp/rocks.sh 2: Run chmod +x /etc/snmp/rocks.sh 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend ogs /etc/snmp/rocks.sh 4: Restart snmpd. The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. Opensips Script that reports load-average/memory/open-files stats of Opensips SNMP Extend 1: Download the script onto the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/opensips-stats.sh -O /etc/snmp/opensips-stats.sh 2: Make the script executable: chmod +x /etc/snmp/opensips-stats.sh Verify it is working by running /etc/snmp/opensips-stats.sh 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf ) and add: extend opensips /etc/snmp/opensips-stats.sh OS Updates A small shell script that checks your system package manager for any available updates. Supports apt-get/pacman/yum/zypper package managers. For pacman users automatically refreshing the database, it is recommended you use an alternative database location --dbpath=/var/lib/pacman/checkupdate SNMP Extend 1: Download the script onto the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/osupdate -O /etc/snmp/osupdate 2: Run chmod +x /etc/snmp/osupdate 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend osupdate /etc/snmp/osupdate 4: Restart snmpd on your host Note : apt-get depends on an updated package index. There are several ways to have your system run apt-get update automatically. The easiest is to create /etc/apt/apt.conf.d/10periodic and pasting the following in it: APT::Periodic::Update-Package-Lists \"1\"; . If you have apticron, cron-apt or apt-listchanges installed and configured, chances are that packages are already updated periodically . The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. PHP-FPM SNMP Extend 1: Copy the shell script, phpfpmsp, to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/phpfpmsp -O /etc/snmp/phpfpmsp 2: Run chmod +x /etc/snmp/phpfpmsp 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend phpfpmsp /etc/snmp/phpfpmsp 5: Edit /etc/snmp/phpfpmsp to include the status URL for the PHP-FPM pool you are monitoring. 6: Restart snmpd on your host It is worth noting that this only monitors a single pool. If you want to monitor multiple pools, this won't do it. The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. Pi-hole SNMP Extend 1: Copy the shell script, pi-hole, to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/pi-hole -O /etc/snmp/pi-hole 2: Run chmod +x /etc/snmp/pi-hole 3: Edit your snmpd.conf file and add: extend pi-hole /etc/snmp/pi-hole 4: To get all data you must get your API auth token from Pi-hole server and change the API_AUTH_KEY entry inside the snmp script. 5: Restard snmpd. The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. Portactivity SNMP Extend Ubuntu is shown below. apt install libparse-netstat-perl apt install libjson-perl 2: Copy the Perl script to the desired host (the host must be added to LibreNMS devices) wget https://github.com/librenms/librenms-agent/raw/master/snmp/portactivity -O /etc/snmp/portactivity 3: Make the script executable. (chmod +x /etc/snmp/portactivity) 4: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend portactivity /etc/snmp/portactivity -p http,ldap,imap Will monitor HTTP, LDAP, and IMAP. The -p switch specifies what ports to use. This is a comma seperated list. These must be found in '/etc/services' or where ever NSS is set to fetch it from. If not, it will throw an error. If you want to JSON returned by it to be printed in a pretty format use the -P flag. 5: Restart snmpd on your host. Please note that for only TCP[46] services are supported. Postfix SNMP Extend 1: Copy the shell script, postfix-queues, to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/postfix-queues -O /etc/snmp/postfix-queues 2: Copy the Perl script, postfixdetailed, to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/postfixdetailed -O /etc/snmp/postfixdetailed 3: Make both scripts executable. Run chmod +x /etc/snmp/postfixdetailed /etc/snmp/postfix-queues 4: Edit your snmpd.conf file and add: extend mailq /etc/snmp/postfix-queues extend postfixdetailed /etc/snmp/postfixdetailed 5: Restart snmpd. 6: Install pflogsumm for your OS. 7: Make sure the cache file in /etc/snmp/postfixdetailed is some place that snmpd can write too. This file is used for tracking changes between various values between each time it is called by snmpd. Also make sure the path for pflogsumm is correct. 8: Run /etc/snmp/postfixdetailed to create the initial cache file so you don't end up with some crazy initial starting value. Please note that each time /etc/snmp/postfixdetailed is ran, the cache file is updated, so if this happens in between LibreNMS doing it then the values will be thrown off for that polling period. The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. NOTE: If using RHEL for your postfix server, qshape must be installed manually as it is not officially supported. CentOs 6 rpms seem to work without issues. Postgres SNMP Extend 1: Copy the shell script, postgres, to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/postgres -O /etc/snmp/postgres 2: Run chmod +x /etc/snmp/postgres 3: Edit your snmpd.conf file and add: extend postgres /etc/snmp/postgres 4: Restart snmpd on your host 5: Install the Nagios check check_postgres.pl on your system: https://github.com/bucardo/check_postgres 6: Verify the path to check_postgres.pl in /etc/snmp/postgres is correct. 7: If you wish it to ignore the database postgres for totalling up the stats, set ignorePG to 1(the default) in /etc/snmp/postgres. If you are using netdata or the like, you may wish to set this or otherwise that total will be very skewed on systems with light or moderate usage. The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. PowerDNS An authoritative DNS server: https://www.powerdns.com/auth.html SNMP Extend 1: Copy the shell script, powerdns.py, to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/powerdns.py -O /etc/snmp/powerdns.py 2: Run chmod +x /etc/snmp/powerdns.py 3: Edit your snmpd.conf file and add: extend powerdns /etc/snmp/powerdns.py 4: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. Agent Install the agent on this device if it isn't already and copy the powerdns script to /usr/lib/check_mk_agent/local/ PowerDNS Recursor A recursive DNS server: https://www.powerdns.com/recursor.html Direct The LibreNMS polling host must be able to connect to port 8082 on the monitored device. The web-server must be enabled, see the Recursor docs: https://doc.powerdns.com/md/recursor/settings/#webserver Variables $config['apps']['powerdns-recursor']['api-key'] required, this is defined in the Recursor config $config['apps']['powerdns-recursor']['port'] numeric, defines the port to connect to PowerDNS Recursor on. The default is 8082 $config['apps']['powerdns-recursor']['https'] true or false, defaults to use http. SNMP Extend 1: Copy the shell script, powerdns-recursor, to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/powerdns-recursor -O /etc/snmp/powerdns-recursor 2: Run chmod +x /etc/snmp/powerdns-recursor 3: Edit your snmpd.conf file and add: extend powerdns-recursor /etc/snmp/powerdns-recursor 4: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. Agent Install the agent on this device if it isn't already and copy the powerdns-recursor script to /usr/lib/check_mk_agent/local/ This script uses rec_control get-all to collect stats. PowerDNS-dnsdist SNMP Extend 1: Copy the BASH script to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/powerdns-dnsdist -O /etc/snmp/powerdns-dnsdist 2: Make the script executable (chmod +x /etc/snmp/powerdns-dnsdist) 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend powerdns-dnsdist /etc/snmp/powerdns-dnsdist 4: Restart snmpd on your host. The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. Proxmox 1: For Proxmox 4.4+ install the libpve-apiclient-perl package apt install libpve-apiclient-perl 2: Download the script onto the desired host (the host must be added to LibreNMS devices) wget https://raw.githubusercontent.com/librenms/librenms-agent/master/agent-local/proxmox -O /usr/local/bin/proxmox 3: Run chmod +x /usr/local/bin/proxmox 4: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf ) and add: extend proxmox /usr/local/bin/proxmox 5: Note: if your snmpd doesn't run as root, you might have to invoke the script using sudo and modify the \"extend\" line extend proxmox /usr/bin/sudo /usr/local/bin/proxmox after, edit your sudo users (usually visudo ) and add at the bottom: Debian-snmp ALL=(ALL) NOPASSWD: /usr/local/bin/proxmox 6: Restart snmpd on your host Puppet Agent SNMP extend script to get your Puppet Agent data into your host. SNMP Extend 1: Download the script onto the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/puppet_agent.py -O /etc/snmp/puppet_agent.py 2: Make the script executable: chmod +x /etc/snmp/puppet_agent.py 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf ) and add: extend puppet-agent /etc/snmp/puppet_agent.py The Script needs python3-yaml package to be installed. Per default script searches for on of this files: /var/cache/puppet/state/last_run_summary.yaml /opt/puppetlabs/puppet/cache/state/last_run_summary.yaml optionally you can add a specific summary file with creating /etc/snmp/puppet.json { \"agent\": { \"summary_file\": \"/my/custom/path/to/summary_file\" } } custom summary file has highest priority 4: Restart snmpd on the host PureFTPd SNMP extend script to monitor PureFTPd. SNMP Extend 1: Download the script onto the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/pureftpd.py -O /etc/snmp/pureftpd.py 2: Make the script executable: chmod +x /etc/snmp/pureftpd.py 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf ) and add: extend pureftpd sudo /etc/snmp/pureftpd.py 4: Edit your sudo users (usually visudo ) and add at the bottom: snmp ALL=(ALL) NOPASSWD: /etc/snmp/pureftpd.py or the path where your pure-ftpwho is located 5: If pure-ftpwho is not located in /usr/sbin you will also need to create a config file, which is named pureftpd.json. The file has to be located in /etc/snmp/. {\"pureftpwho_cmd\": \"/usr/sbin/pure-ftpwho\" } 5: Restart snmpd on your host Raspberry PI SNMP extend script to get your PI data into your host. SNMP Extend 1: Download the script onto the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/raspberry.sh -O /etc/snmp/raspberry.sh 2: Make the script executable: chmod +x /etc/snmp/raspberry.sh 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf ) and add: extend raspberry sudo /etc/snmp/raspberry.sh 4: Edit your sudo users (usually visudo ) and add at the bottom: snmp ALL=(ALL) NOPASSWD: /etc/snmp/raspberry.sh, /usr/bin/vcgencmd Note: If you are using Raspian, the default user is Debian-snmp . Change snmp above to Debian-snmp . You can verify the user snmpd is using with ps aux | grep snmpd 5: Restart snmpd on PI host Redis SNMP extend script to monitor your Redis Server SNMP Extend 1: Download the script onto the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/redis.py -O /etc/snmp/redis.py 2: Make the script executable: chmod +x /etc/snmp/redis.py 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf ) and add: extend redis /etc/snmp/redis.py Seafile SNMP extend script to monitor your Seafile Server SNMP Extend 1: Copy the Python script, seafile.py, to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/seafile.py -O /etc/snmp/seafile.py Also you have to install the requests Package for Python3. Under Ubuntu/Debian just run apt install python3-requests 2: Run chmod +x /etc/snmp/seafile.py 3: Edit your snmpd.conf file and add: extend seafile /etc/snmp/seafile.py 4: You will also need to create the config file, which is named seafile.json . The script has to be located at /etc/snmp/. {\"url\": \"https://seafile.mydomain.org\", \"username\": \"some_admin_login@mail.address\", \"password\": \"password\", \"account_identifier\": \"name\" \"hide_monitoring_account\": true } The variables are as below. url = Url how to get access to Seafile Server username = Login to Seafile Server. It is important that used Login has admin privileges. Otherwise most API calls will be denied. password = Password to the configured login. account_identifier = Defines how user accounts are listed in RRD Graph. Options are: name, email hide_monitoring_account = With this Boolean you can hide the Account which you use to access Seafile API Note: It is recommended to use a dedicated Administrator account for monitoring. SMART SNMP Extend Copy the Perl script, smart, to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/smart -O /etc/snmp/smart Run chmod +x /etc/snmp/smart Edit your snmpd.conf file and add: extend smart /etc/snmp/smart You will also need to create the config file, which defaults to the same path as the script, but with .config appended. So if the script is located at /etc/snmp/smart, the config file will be /etc/snmp/smart.config . Alternatively you can also specific a config via -c . Anything starting with a # is comment. The format for variables is $variable=$value. Empty lines are ignored. Spaces and tabes at either the start or end of a line are ignored. Any line with out a matched variable or # are treated as a disk. #This is a comment cache=/var/cache/smart smartctl=/usr/bin/env smartctl useSN=1 ada0 ada1 da5 /dev/da5 -d sat twl0,0 /dev/twl0 -d 3ware,0 twl0,1 /dev/twl0 -d 3ware,1 twl0,2 /dev/twl0 -d 3ware,2 The variables are as below. cache = The path to the cache file to use. Default: /var/cache/smart smartctl = The path to use for smartctl. Default: /usr/bin/env smartctl useSN = If set to 1, it will use the disks SN for reporting instead of the device name. 1 is the default. 0 will use the device name. A disk line is can be as simple as just a disk name under /dev/. Such as in the config above The line \"ada0\" would resolve to \"/dev/ada0\" and would be called with no special argument. If a line has a space in it, everything before the space is treated as the disk name and is what used for reporting and everything after that is used as the argument to be passed to smartctl. If you want to guess at the configuration, call it with -g and it will print out what it thinks it should be. Restart snmpd on your host If you have a large number of more than one or two disks on a system, you should consider adding this to cron. Also make sure the cache file is some place it can be written to. */3 * * * * /etc/snmp/smart -u If your snmp agent runs as user \"snmp\", edit your sudo users (usually visudo ) and add at the bottom: snmp ALL=(ALL) NOPASSWD: /etc/snmp/smart, /usr/bin/env smartctl and modify your snmpd.conf file accordingly: extend smart /usr/bin/sudo /etc/snmp/smart The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. If you set useSN to 1, it is worth noting that you will loose history(not able to access it from the web interface) for that device each time you change it. You will also need to run camcontrol or the like on said server to figure out what device actually corresponds with that serial number. Also if the system you are using uses non-static device naming based on bus information, it may be worthwhile just using the SN as the device ID is going to be irrelevant in that case. Squid SNMP Proxy 1: Enable SNMP for Squid like below, if you have not already, and restart it. acl snmppublic snmp_community public snmp_port 3401 snmp_access allow snmppublic localhost snmp_access deny all 2: Restart squid on your host. 3: Edit your snmpd.conf file and add, making sure you have the same community, host, and port as above: proxy -v 2c -c public 127.0.0.1:3401 1.3.6.1.4.1.3495 For more advanced information on Squid and SNMP or setting up proxying for net-snmp, please see the links below. http://wiki.squid-cache.org/Features/Snmp http://www.net-snmp.org/wiki/index.php/Snmpd_proxy TinyDNS aka djbdns Agent Install the agent on this device if it isn't already and copy the tinydns script to /usr/lib/check_mk_agent/local/ Note : We assume that you use DJB's Daemontools to start/stop tinydns. And that your tinydns instance is located in /service/dns , adjust this path if necessary. 1: Replace your log 's run file, typically located in /service/dns/log/run with: #!/bin/sh exec setuidgid dnslog tinystats ./main/tinystats/ multilog t n3 s250000 ./main/ 2: Create tinystats directory and chown: mkdir /service/dns/log/main/tinystats chown dnslog:nofiles /service/dns/log/main/tinystats 3: Restart TinyDNS and Daemontools: /etc/init.d/svscan restart Note : Some say svc -t /service/dns is enough, on my install (Gentoo) it doesn't rehook the logging and I'm forced to restart it entirely. Unbound Unbound configuration: # Enable extended statistics. server: extended-statistics: yes statistics-cumulative: yes remote-control: control-enable: yes control-interface: 127.0.0.1 Restart your unbound after changing the configuration, verify it is working by running unbound-control stats . Option 1: SNMP Extend (Preferred and easiest method) 1: Copy the shell script, unbound, to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/unbound -O /etc/snmp/unbound 2: Run chmod +x /etc/snmp/unbound 3: Edit your snmpd.conf file and add: extend unbound /usr/bin/sudo /etc/snmp/unbound 4: Restart snmpd. The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. Option 2: Agent Install the agent on this device if it isn't already and copy the unbound.sh script to /usr/lib/check_mk_agent/local/ UPS-nut A small shell script that exports nut ups status. SNMP Extend 1: Copy the ups nut to /etc/snmp/ on your host. 2: Make the script executable (chmod +x /etc/snmp/ups-nut.sh) 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend ups-nut /etc/snmp/ups-nut.sh 4: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. UPS-apcups A small shell script that exports apcacess ups status. SNMP Extend 1: Copy the ups apcups to /etc/snmp/ on your host. 2: Run chmod +x /etc/snmp/ups-apcups 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend ups-apcups /etc/snmp/ups-apcups If 'apcaccess' is not in the PATH enviromental variable snmpd is using, you may need to do something like below. extend ups-apcups/usr/bin/env PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin /etc/snmp/ups-apcups 4: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. SDFS info A small shell script that exportfs SDFS volume info. SNMP Extend 1: Download the script onto the desired host (the host must be added to LibreNMS devices) wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/sdfsinfo -O /etc/snmp/sdfsinfo 2: Make the script executable (chmod +x /etc/snmp/sdfsinfo) 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend sdfsinfo /etc/snmp/sdfsinfo 4: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. Voip-monitor Shell script that reports cpu-load/memory/open-files files stats of Voip Monitor SNMP Extend 1: Download the script onto the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/voipmon-stats.sh -O /etc/snmp/voipmon-stats.sh 2: Make the script executable: chmod +x /etc/snmp/voipmon-stats.sh 3: Edit your snmpd.conf file (usually /etc/snmp/voipmon-stats.sh ) and add: extend voipmon /etc/snmp/voipmon-stats.sh ZFS SNMP Extend zfs-linux requires python3 >=python3.5. The installation steps are: Copy the polling script to the desired host (the host must be added to LibreNMS devices) Make the script executable Edit snmpd.conf to include ZFS stats FreeBSD wget https://github.com/librenms/librenms-agent/raw/master/snmp/zfs-freebsd -O /etc/snmp/zfs-freebsd chmod +x /etc/snmp/zfs-freebsd echo \"extend zfs /etc/snmp/zfs-freebsd\" >> /etc/snmp/snmpd.conf Linux wget https://github.com/librenms/librenms-agent/raw/master/snmp/zfs-linux -O /etc/snmp/zfs-linux chmod +x /etc/snmp/zfs-linux echo \"extend zfs sudo /etc/snmp/zfs-linux\" >> /etc/snmp/snmpd.conf Edit your sudo users (usually visudo ) and add at the bottom: snmp ALL=(ALL) NOPASSWD: /etc/snmp/zfs-linux Now restart snmpd and you're all set.","title":"Applications"},{"location":"Extensions/Applications/#introduction","text":"You can use Application support to graph performance statistics of many applications. Different applications support a variety of ways to collect data: 1) by direct connection to the application, 2) snmpd extend, or 3) the agent . The monitoring of applications could be added before or after the hosts have been added to LibreNMS. If multiple methods of collection are listed you only need to enable one.","title":"Introduction"},{"location":"Extensions/Applications/#snmp-extend","text":"When using the snmp extend method, the application discovery module will pick up which applications you have set up for monitoring automatically, even if the device is already in LibreNMS. The application discovery module is enabled by default for most *nix operating systems, but in some cases you will need to manually enable the application discovery module.","title":"SNMP Extend"},{"location":"Extensions/Applications/#sudo","text":"One major thing to keep in mind when using SNMP extend is these run as the snmpd user that can be an unprivileged user. In these situations you need to use sudo. To test if you need sudo, first check the user snmpd is running as. Then test if you can run the extend script as that user without issue. For example if snmpd is running as 'Debian-snmp' and we want to run the extend for proxmox, we check that the following run without error: sudo -u Debian-snmp /usr/local/bin/proxmox If it doesn't work, then you will need to use sudo with the extend command. For the example above, that would mean adding the line below to the sudoers file: Debian-snmp ALL = NOPASSWD: /usr/local/bin/proxmox Finally we would need to add sudo to the extend command, which would look like that for proxmox: extend proxmox /usr/bin/sudo /usr/local/bin/proxmox","title":"SUDO"},{"location":"Extensions/Applications/#enable-the-application-discovery-module","text":"Edit the device for which you want to add this support Click on the Modules tab and enable the applications module. This will be automatically saved, and you should get a green confirmation pop-up message. After you have enabled the application module, it would be wise to then also enable which applications you want to monitor, in the rare case where LibreNMS does not automatically detect it. Note : Only do this if an application was not auto-discovered by LibreNMS during discovery and polling.","title":"Enable the application discovery module"},{"location":"Extensions/Applications/#enable-the-applications-to-be-discovered","text":"Go to the device you have just enabled the application module for. Click on the Applications tab and select the applications you want to monitor. This will also be automatically saved, and you should get a green confirmation pop-up message.","title":"Enable the application(s) to be discovered"},{"location":"Extensions/Applications/#agent","text":"The unix-agent does not have a discovery module, only a poller module. That poller module is always disabled by default. It needs to be manually enabled if using the agent. Some applications will be automatically enabled by the unix-agent poller module. It is better to ensure that your application is enabled for monitoring. You can check by following the steps under the SNMP Extend heading. Apache - SNMP extend, Agent Asterisk - SNMP extend backupninja - SNMP extend BIND9/named - SNMP extend, Agent Certificate - Certificate extend C.H.I.P. - SNMP extend DHCP Stats - SNMP extend Entropy - SNMP extend EXIM Stats - SNMP extend Fail2ban - SNMP extend FreeBSD NFS Client - SNMP extend FreeBSD NFS Server - SNMP extend FreeRADIUS - SNMP extend, Agent Freeswitch - SNMP extend, Agent GPSD - SNMP extend, Agent Icecast - SNMP extend, Agent Mailcow-dockerized postfix - SNMP extend Mailscanner - SNMP extend Mdadm - SNMP extend Memcached - SNMP extend Munin - Agent MySQL - SNMP extend, Agent NGINX - SNMP extend, Agent NFS Server - SNMP extend NTP Client - SNMP extend NTP Server/NTPD - SNMP extend Nvidia GPU - SNMP extend Open Grid Scheduler - SNMP extend Opensips - SNMP extend OS Updates - SNMP extend PHP-FPM - SNMP extend Pi-hole - SNMP extend Portactivity - SNMP extend Postfix - SNMP extend Postgres - SNMP extend PowerDNS - Agent PowerDNS Recursor - Direct, SNMP extend, Agent PowerDNS dnsdist - SNMP extend Proxmox - SNMP extend Puppet Agent - SNMP extend PureFTPd - SNMP extend Raspberry PI - SNMP extend Redis - SNMP extend SDFS info - SNMP extend Seafile - SNMP extend SMART - SNMP extend Squid - SNMP proxy TinyDNS/djbdns - Agent Unbound - SNMP extend, Agent UPS-nut - SNMP extend UPS-apcups - SNMP extend Voip-monitor - SNMP extend ZFS - SNMP extend","title":"Agent"},{"location":"Extensions/Applications/#apache","text":"Either use SNMP extend or use the agent. Note that you need to install and configure the Apache mod_status module before trying the script.","title":"Apache"},{"location":"Extensions/Applications/#snmp-extend_1","text":"1: Download the script onto the desired host (the host must be added to LibreNMS devices) wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/apache-stats.py -O /etc/snmp/apache-stats.py 2: Make the script executable (chmod +x /etc/snmp/apache-stats.py) 3: Create the cache directory, '/var/cache/librenms/' and make sure that it is owned by the user running the SNMP daemon. mkdir -p /var/cache/librenms/ 4: Verify it is working by running /etc/snmp/apache-stats.py Package urllib3 for python3 needs to be installed. In Debian-based systems for example you can achieve this by issuing: apt-get install python3-urllib3 5: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend apache /etc/snmp/apache-stats.py 6: Restart snmpd on your host 7: Test by running snmpwalk <various options depending on your setup> localhost NET-SNMP-EXTEND-MIB::nsExtendOutput2Table","title":"SNMP Extend"},{"location":"Extensions/Applications/#agent_1","text":"Install the agent on this device if it isn't already and copy the apache script to /usr/lib/check_mk_agent/local/ 1: Verify it is working by running /usr/lib/check_mk_agent/local/apache (If you get error like \"Can't locate LWP/Simple.pm\". libwww-perl needs to be installed: apt-get install libwww-perl) 2: Create the cache directory, '/var/cache/librenms/' and make sure that it is owned by the user running the SNMP daemon. mkdir -p /var/cache/librenms/ 3: On the device page in Librenms, edit your host and check the Apache under the Applications tab.","title":"Agent"},{"location":"Extensions/Applications/#asterisk","text":"A small shell script that reports various Asterisk call status.","title":"Asterisk"},{"location":"Extensions/Applications/#snmp-extend_2","text":"1: Download the asterisk script to /etc/snmp/ on your asterisk server. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/asterisk -O /etc/snmp/asterisk 2: Run chmod +x /etc/snmp/asterisk 3: Configure ASCLI in the script. 4: Verify it is working by running /etc/snmp/asterisk 5: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf ) and add: extend asterisk /etc/snmp/asterisk 6: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page.","title":"SNMP Extend"},{"location":"Extensions/Applications/#backupninja","text":"A small shell script that reports status of last backupninja backup.","title":"backupninja"},{"location":"Extensions/Applications/#snmp-extend_3","text":"1: Download the backupninja script to /etc/snmp/backupninja.py on your backuped server. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/backupninja.py -O /etc/snmp/backupninja.py` 2: Make the script executable: chmod +x /etc/snmp/backupninja.py 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf ) and add: extend backupninja /etc/snmp/backupninja.py 4: Restart snmpd on your host","title":"SNMP Extend"},{"location":"Extensions/Applications/#bind9-aka-named","text":"1: Create stats file with appropriate permissions: ~$ touch /var/cache/bind/stats ~$ chown bind:bind /var/cache/bind/stats Change user:group to the user and group that's running bind/named. 2: Bind/named configuration: options { ... statistics-file \"/var/cache/bind/stats\"; zone-statistics yes; ... }; 3: Restart your bind9/named after changing the configuration. 4: Verify that everything works by executing rndc stats && cat /var/cache/bind/stats . In case you get a Permission Denied error, make sure you changed the ownership correctly. 5: Also be aware that this file is appended to each time rndc stats is called. Given this it is suggested you setup file rotation for it. Alternatively you can also set zero_stats to 1 in the config. 6: The script for this also requires the Perl module File::ReadBackwards . FreeBSD => p5-File-ReadBackwards CentOS/RedHat => perl-File-ReadBackwards Debian/Ubuntu => libfile-readbackwards-perl If it is not available, it can be installed by cpan -i File::ReadBackwards . 7: You may possibly need to configure the agent/extend script as well. The config file's path defaults to the same path as the script, but with .config appended. So if the script is located at /etc/snmp/bind , the config file will be /etc/snmp/bind.config . Alternatively you can also specify a config via -c $file . Anything starting with a # is comment. The format for variables are $variable=$value. Empty lines are ignored. Spaces and tabs at either the start or end of a line are ignored. Content of an example /etc/snmp/bind.config . Please edit with your own settings. rndc = The path to rndc. Default: /usr/bin/env rndc call_rndc = A 0/1 boolean on whether or not to call rndc stats. Suggest to set to 0 if using netdata. Default: 1 stats_file = The path to the named stats file. Default: /var/cache/bind/stats agent = A 0/1 boolean for if this is being used as a LibreNMS agent or not. Default: 0 zero_stats = A 0/1 boolean for if the stats file should be zeroed first. Default: 0 (1 if guessed) If you want to guess at the configuration, call the script with -g and it will print out what it thinks it should be.","title":"BIND9 aka named"},{"location":"Extensions/Applications/#snmp-extend_4","text":"1: Copy the bind shell script, to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/bind -O /etc/snmp/bind 2: Make the script executable chmod +x /etc/snmp/bind 3: Edit your snmpd.conf file and add: extend bind /etc/snmp/bind 4: Restart snmpd on the host in question. The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page.","title":"SNMP Extend"},{"location":"Extensions/Applications/#agent_2","text":"1: Install the agent on this device if it isn't already and copy the script to /usr/lib/check_mk_agent/local/bind via wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/bind -O /usr/lib/check_mk_agent/local/bind 2: Run chmod +x /usr/lib/check_mk_agent/local/bind 3: Set the variable 'agent' to '1' in the config.","title":"Agent"},{"location":"Extensions/Applications/#certificate","text":"A small python3 script that checks age and remaining validity of certificates This script needs following packages on Debian/Ubuntu Systems: * python3 * python3-openssl Content of an example /etc/snmp/certificate.json . Please edit with your own settings. {\"domains\": [ {\"fqdn\": \"www.mydomain.com\"}, {\"fqdn\": \"some.otherdomain.org\", \"port\": 8443}, {\"fqdn\": \"personal.domain.net\"} ] } Key 'domains' contains a list of domains to check. Optional you can define a port. By default it checks on port 443.","title":"Certificate"},{"location":"Extensions/Applications/#snmp-extend_5","text":"Copy the shell script to the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/certificate.py -O /etc/snmp/certificate.py Run chmod +x /etc/snmp/certificate.py Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend certificate /etc/snmp/certificate.py Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page.","title":"SNMP Extend"},{"location":"Extensions/Applications/#chip","text":"C.H.I.P. is a $9 R8 based tiny computer ideal for small projects. Further details: https://getchip.com/pages/chip 1: Copy the shell script to the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/chip.sh -O /etc/snmp/power-stat.sh 2: Run chmod +x /etc/snmp/power-stat.sh 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend power-stat /etc/snmp/power-stat.sh 4: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page.","title":"C.H.I.P"},{"location":"Extensions/Applications/#dhcp-stats","text":"A small python3 script that reports current DHCP leases stats and pool usage. Also you have to install the dhcpd-pools Package. Under Ubuntu/Debian just run apt install dhcpd-pools","title":"DHCP Stats"},{"location":"Extensions/Applications/#snmp-extend_6","text":"1: Copy the shell script to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/dhcp.py -O /etc/snmp/dhcp.py 2: Run chmod +x /etc/snmp/dhcp.py 3: edit a config file: Content of an example /etc/snmp/dhcp.json . Please edit with your own settings. {\"leasefile\": \"/var/lib/dhcp/dhcpd.leases\" } Key 'leasefile' specifies the path to your lease file. 4: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend dhcpstats /etc/snmp/dhcp.py 5: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page.","title":"SNMP Extend"},{"location":"Extensions/Applications/#entropy","text":"A small shell script that checks your system's available random entropy.","title":"Entropy"},{"location":"Extensions/Applications/#snmp-extend_7","text":"1: Download the script onto the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/entropy.sh -O /etc/snmp/entropy.sh 2: Run chmod +x /etc/snmp/entropy.sh 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend entropy /etc/snmp/entropy.sh 4: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page.","title":"SNMP Extend"},{"location":"Extensions/Applications/#exim-stats","text":"SNMP extend script to get your exim stats data into your host.","title":"EXIM Stats"},{"location":"Extensions/Applications/#snmp-extend_8","text":"1: Download the script onto the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/exim-stats.sh -O /etc/snmp/exim-stats.sh 2: Run chmod +x /etc/snmp/exim-stats.sh 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf ) and add: extend exim-stats /etc/snmp/exim-stats.sh 4: If you are using sudo edit your sudo users (usually visudo ) and add at the bottom: snmp ALL=(ALL) NOPASSWD: /etc/snmp/exim-stats.sh, /usr/bin/exim* 5: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page.","title":"SNMP Extend"},{"location":"Extensions/Applications/#fail2ban","text":"","title":"Fail2ban"},{"location":"Extensions/Applications/#snmp-extend_9","text":"1: Copy the shell script, fail2ban, to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/fail2ban -O /etc/snmp/fail2ban 2: Run chmod +x /etc/snmp/fail2ban 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend fail2ban /etc/snmp/fail2ban If you want to use the cache, it is as below, by using the -c switch. extend fail2ban /etc/snmp/fail2ban -c If you want to use the cache and update it if needed, this can by using the -c and -U switches. extend fail2ban /etc/snmp/fail2ban -c -U If you need to specify a custom location for the fail2ban-client, that can be done via the -f switch. If not specified, \"/usr/bin/env fail2ban-client\" is used. extend fail2ban /etc/snmp/fail2ban -f /foo/bin/fail2ban-client 5: Restart snmpd on your host 6: If you wish to use caching, add the following to /etc/crontab and restart cron. */3 * * * * root /etc/snmp/fail2ban -u 7: Restart or reload cron on your system. If you have more than a few jails configured, you may need to use caching as each jail needs to be polled and fail2ban-client can't do so in a timely manner for than a few. This can result in failure of other SNMP information being polled. For additional details of the switches, please see the POD in the script it self at the top.","title":"SNMP Extend"},{"location":"Extensions/Applications/#freebsd-nfs-client","text":"","title":"FreeBSD NFS Client"},{"location":"Extensions/Applications/#snmp-extend_10","text":"1: Copy the shell script, fbsdnfsserver, to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/fbsdnfsclient -O /etc/snmp/fbsdnfsclient 2: Run chmod +x /etc/snmp/fbsdnfsclient 3: Edit your snmpd.conf file and add: extend fbsdnfsclient /etc/snmp/fbsdnfsclient 4: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page.","title":"SNMP Extend"},{"location":"Extensions/Applications/#freebsd-nfs-server","text":"","title":"FreeBSD NFS Server"},{"location":"Extensions/Applications/#snmp-extend_11","text":"1: Copy the shell script, fbsdnfsserver, to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/fbsdnfsserver -O /etc/snmp/fbsdnfsserver 2: Run chmod +x /etc/snmp/fbsdnfsserver 3: Edit your snmpd.conf file and add: extend fbsdnfsserver /etc/snmp/fbsdnfsserver 4: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page.","title":"SNMP Extend"},{"location":"Extensions/Applications/#freeradius","text":"The FreeRADIUS application extension requires that status_server be enabled in your FreeRADIUS config. For more information see: https://wiki.freeradius.org/config/Status You should note that status requests increment the FreeRADIUS request stats. So LibreNMS polls will ultimately be reflected in your stats/charts. 1: Go to your FreeRADIUS configuration directory (usually /etc/raddb or /etc/freeradius). 2: cd sites-enabled 3: ln -s ../sites-available/status status 4: Restart FreeRADIUS. 5: You should be able to test with the radclient as follows... echo \"Message-Authenticator = 0x00, FreeRADIUS-Statistics-Type = 31, Response-Packet-Type = Access-Accept\" | \\ radclient -x localhost:18121 status adminsecret Note that adminsecret is the default secret key in status_server. Change if you've modified this.","title":"FreeRADIUS"},{"location":"Extensions/Applications/#snmp-extend_12","text":"1: Copy the freeradius shell script, to the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/freeradius.sh -O /etc/snmp/freeradius.sh 2: Run chmod +x /etc/snmp/freeradius.sh 3: If you've made any changes to the FreeRADIUS status_server config (secret key, port, etc.) edit freeradius.sh and adjust the config variable accordingly. 4: Edit your snmpd.conf file and add: extend freeradius /etc/snmp/freeradius.sh 5: Restart snmpd on the host in question. The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page.","title":"SNMP Extend"},{"location":"Extensions/Applications/#agent_3","text":"1: Install the agent on this device if it isn't already and copy the script to /usr/lib/check_mk_agent/local/freeradius.sh via wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/freeradius.sh -O /usr/lib/check_mk_agent/local/freeradius.sh 2: Run chmod +x /usr/lib/check_mk_agent/local/freeradius.sh 3: If you've made any changes to the FreeRADIUS status_server config (secret key, port, etc.) edit freeradius.sh and adjust the config variable accordingly. 4: Edit the freeradius.sh script and set the variable 'AGENT' to '1' in the config.","title":"Agent"},{"location":"Extensions/Applications/#freeswitch","text":"A small shell script that reports various Freeswitch call status.","title":"Freeswitch"},{"location":"Extensions/Applications/#agent_4","text":"1: Install the agent on your Freeswitch server if it isn't already 2: Copy the freeswitch script to /usr/lib/check_mk_agent/local/ 3: Configure FSCLI in the script. You may also have to create an /etc/fs_cli.conf file if your fs_cli command requires authentication. 4: Verify it is working by running /usr/lib/check_mk_agent/local/freeswitch","title":"Agent"},{"location":"Extensions/Applications/#snmp-extend_13","text":"1: Copy the freeswitch script to /etc/snmp/ on your Freeswitch server. 2: Run chmod +x /etc/snmp/freeswitch 3: Configure FSCLI in the script. You may also have to create an /etc/fs_cli.conf file if your fs_cli command requires authentication. 4: Verify it is working by running /etc/snmp/freeswitch 5: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf ) and add: extend freeswitch /etc/snmp/freeswitch 6: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page.","title":"SNMP Extend"},{"location":"Extensions/Applications/#gpsd","text":"","title":"GPSD"},{"location":"Extensions/Applications/#snmp-extend_14","text":"1: Download the script onto the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/gpsd -O /etc/snmp/gpsd 2: Run chmod +x /etc/snmp/gpsd 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf ) and add: extend gpsd /etc/snmp/gpsd 4: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading at the top of the page.","title":"SNMP Extend"},{"location":"Extensions/Applications/#agent_5","text":"Install the agent on this device if it isn't already and copy the gpsd script to /usr/lib/check_mk_agent/local/ You may need to configure $server or $port . Verify it is working by running /usr/lib/check_mk_agent/local/gpsd","title":"Agent"},{"location":"Extensions/Applications/#icecast","text":"Shell script that reports load average/memory/open-files stats of Icecast","title":"Icecast"},{"location":"Extensions/Applications/#snmp-extend_15","text":"Copy the shell script, icecast-stats.sh, to the desired host (the host must be added to LibreNMS devices) wget https://github.com/librenms/librenms-agent/raw/master/snmp/icecast-stats.sh -O /etc/snmp/icecast-stats.sh 2: Make the script executable chmod +x /etc/snmp/icecast-stats.sh Verify it is working by running /etc/snmp/icecast-stats.sh 4: Edit your snmpd.conf file (usually /etc/snmp/icecast-stats.sh ) and add: extend icecast /etc/snmp/icecast-stats.sh","title":"SNMP Extend"},{"location":"Extensions/Applications/#mailcow-dockerized-postfix","text":"","title":"mailcow-dockerized postfix"},{"location":"Extensions/Applications/#snmp-extend_16","text":"1: Download the script into the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/mailcow-dockerized-postfix -O /etc/snmp/mailcow-dockerized-postfix 2: Run chmod +x /etc/snmp/mailcow-dockerized-postfix Maybe you will be neeed to install pflogsumm on debian based OS. Please check if you have package installed. 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend mailcow-postfix /etc/snmp/mailcow-dockerized-postfix 4: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page.","title":"SNMP Extend"},{"location":"Extensions/Applications/#mailscanner","text":"","title":"Mailscanner"},{"location":"Extensions/Applications/#snmp-extend_17","text":"1: Download the script onto the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/mailscanner.php -O /etc/snmp/mailscanner.php 2: Run chmod +x /etc/snmp/mailscanner.php 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend mailscanner /etc/snmp/mailscanner.php 4: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page.","title":"SNMP Extend"},{"location":"Extensions/Applications/#mdadm","text":"This shell script checks mdadm health and array data","title":"Mdadm"},{"location":"Extensions/Applications/#snmp-extend_18","text":"1: Download the script onto the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/mdadm -O /etc/snmp/mdadm 2: Run chmod +x /etc/snmp/mdadm 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend mdadm /etc/snmp/mdadm 4: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page.","title":"SNMP Extend"},{"location":"Extensions/Applications/#memcached","text":"","title":"Memcached"},{"location":"Extensions/Applications/#snmp-extend_19","text":"1: Copy the memcached script to /etc/snmp/ on your remote server. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/agent-local/memcached -O /etc/snmp/memcached 2: Make the script executable: chmod +x /etc/snmp/memcached 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf ) and add: extend memcached /etc/snmp/memcached 4: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page.","title":"SNMP Extend"},{"location":"Extensions/Applications/#munin","text":"","title":"Munin"},{"location":"Extensions/Applications/#agent_6","text":"Install the script to your agent: wget https://raw.githubusercontent.com/librenms/librenms-agent/master/agent-local/munin -O /usr/lib/check_mk_agent/local/munin Make the script executable ( chmod +x /usr/lib/check_mk_agent/local/munin ) Create the munin scripts dir: mkdir -p /usr/share/munin/munin-scripts Install your munin scripts into the above directory. To create your own custom munin scripts, please see this example: #!/bin/bash if [ \"$1\" = \"config\" ]; then echo 'graph_title Some title' echo 'graph_args --base 1000 -l 0' #not required echo 'graph_vlabel Some label' echo 'graph_scale no' #not required, can be yes/no echo 'graph_category system' #Choose something meaningful, can be anything echo 'graph_info This graph shows something awesome.' #Short desc echo 'foobar.label Label for your unit' # Repeat these two lines as much as you like echo 'foobar.info Desc for your unit.' exit 0 fi echo -n \"foobar.value \" $(date +%s) #Populate a value, here unix-timestamp","title":"Agent"},{"location":"Extensions/Applications/#mysql","text":"Create the cache directory, '/var/cache/librenms/' and make sure that it is owned by the user running the SNMP daemon. mkdir -p /var/cache/librenms/ The MySQL script requires PHP-CLI and the PHP MySQL extension, so please verify those are installed. CentOS (May vary based on PHP version) yum install php-cli php-mysql Debian (May vary based on PHP version) apt-get install php-cli php-mysql Unlike most other scripts, the MySQL script requires a configuration file mysql.cnf in the same directory as the extend or agent script with following content: <? php $mysql_user = 'root' ; $mysql_pass = 'toor' ; $mysql_host = 'localhost' ; $mysql_port = 3306 ; Note that depending on your MySQL installation (chrooted install for example), you may have to specify 127.0.0.1 instead of localhost. Localhost make a MySQL connection via the mysql socket, while 127.0.0.1 make a standard IP connection to mysql.","title":"MySQL"},{"location":"Extensions/Applications/#agent_7","text":"Install the agent on this device if it isn't already and copy the mysql script to /usr/lib/check_mk_agent/local/ Verify it is working by running /usr/lib/check_mk_agent/local/mysql","title":"Agent"},{"location":"Extensions/Applications/#snmp-extend_20","text":"1: Copy the mysql script to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/mysql -O /etc/snmp/mysql 2: Run chmod +x /etc/snmp/mysql 3: Edit your snmpd.conf file and add: extend mysql /etc/snmp/mysql 4: Restart snmpd. The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page.","title":"SNMP extend"},{"location":"Extensions/Applications/#nginx","text":"NGINX is a free, open-source, high-performance HTTP server: https://www.nginx.org/ It's required to have the following directive in your nginx configuration responsible for the localhost server: location /nginx-status { stub_status on; access_log off; allow 127.0.0.1; allow ::1; deny all; }","title":"NGINX"},{"location":"Extensions/Applications/#snmp-extend_21","text":"1: Download the script onto the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/nginx -O /etc/snmp/nginx 2: Run chmod +x /etc/snmp/nginx 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend nginx /etc/snmp/nginx 4: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page.","title":"SNMP Extend"},{"location":"Extensions/Applications/#agent_8","text":"Install the agent on this device if it isn't already and copy the nginx script to /usr/lib/check_mk_agent/local/","title":"Agent"},{"location":"Extensions/Applications/#nfs-server","text":"Export the NFS stats from as server.","title":"NFS Server"},{"location":"Extensions/Applications/#snmp-extend_22","text":"1: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add : extend nfs-server /bin/cat /proc/net/rpc/nfsd note : find out where cat is located using : which cat 2: reload snmpd service to activate the configuration","title":"SNMP Extend"},{"location":"Extensions/Applications/#ntp-client","text":"A shell script that gets stats from ntp client.","title":"NTP Client"},{"location":"Extensions/Applications/#snmp-extend_23","text":"1: Download the script onto the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/ntp-client -O /etc/snmp/ntp-client 2: Run chmod +x /etc/snmp/ntp-client 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend ntp-client /etc/snmp/ntp-client 4: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page.","title":"SNMP Extend"},{"location":"Extensions/Applications/#ntp-server-aka-ntpd","text":"A shell script that gets stats from ntp server (ntpd).","title":"NTP Server aka NTPD"},{"location":"Extensions/Applications/#snmp-extend_24","text":"Download the script onto the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/ntp-server.sh -O /etc/snmp/ntp-server.sh 2: Run chmod +x /etc/snmp/ntp-server.sh 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend ntp-server /etc/snmp/ntp-server.sh 4: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page.","title":"SNMP Extend"},{"location":"Extensions/Applications/#nvidia-gpu","text":"","title":"Nvidia GPU"},{"location":"Extensions/Applications/#snmp-extend_25","text":"1: Copy the shell script, nvidia, to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/nvidia -O /etc/snmp/nvidia 2: Run chmod +x /etc/snmp/nvidia 3: Edit your snmpd.conf file and add: extend nvidia /etc/snmp/nvidia 5: Restart snmpd on your host. 6: Verify you have nvidia-smi installed, which it generally should be if you have the driver from Nvida installed. The GPU numbering on the graphs will correspond to how the nvidia-smi sees them as being. For questions about what the various values are/mean, please see the nvidia-smi man file under the section covering dmon.","title":"SNMP Extend"},{"location":"Extensions/Applications/#open-grid-scheduler","text":"Shell script to track the OGS/GE jobs running on clusters.","title":"Open Grid Scheduler"},{"location":"Extensions/Applications/#snmp-extend_26","text":"1: Download the script onto the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/agent-local/rocks.sh -O /etc/snmp/rocks.sh 2: Run chmod +x /etc/snmp/rocks.sh 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend ogs /etc/snmp/rocks.sh 4: Restart snmpd. The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page.","title":"SNMP Extend"},{"location":"Extensions/Applications/#opensips","text":"Script that reports load-average/memory/open-files stats of Opensips","title":"Opensips"},{"location":"Extensions/Applications/#snmp-extend_27","text":"1: Download the script onto the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/opensips-stats.sh -O /etc/snmp/opensips-stats.sh 2: Make the script executable: chmod +x /etc/snmp/opensips-stats.sh Verify it is working by running /etc/snmp/opensips-stats.sh 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf ) and add: extend opensips /etc/snmp/opensips-stats.sh","title":"SNMP Extend"},{"location":"Extensions/Applications/#os-updates","text":"A small shell script that checks your system package manager for any available updates. Supports apt-get/pacman/yum/zypper package managers. For pacman users automatically refreshing the database, it is recommended you use an alternative database location --dbpath=/var/lib/pacman/checkupdate","title":"OS Updates"},{"location":"Extensions/Applications/#snmp-extend_28","text":"1: Download the script onto the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/osupdate -O /etc/snmp/osupdate 2: Run chmod +x /etc/snmp/osupdate 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend osupdate /etc/snmp/osupdate 4: Restart snmpd on your host Note : apt-get depends on an updated package index. There are several ways to have your system run apt-get update automatically. The easiest is to create /etc/apt/apt.conf.d/10periodic and pasting the following in it: APT::Periodic::Update-Package-Lists \"1\"; . If you have apticron, cron-apt or apt-listchanges installed and configured, chances are that packages are already updated periodically . The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page.","title":"SNMP Extend"},{"location":"Extensions/Applications/#php-fpm","text":"","title":"PHP-FPM"},{"location":"Extensions/Applications/#snmp-extend_29","text":"1: Copy the shell script, phpfpmsp, to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/phpfpmsp -O /etc/snmp/phpfpmsp 2: Run chmod +x /etc/snmp/phpfpmsp 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend phpfpmsp /etc/snmp/phpfpmsp 5: Edit /etc/snmp/phpfpmsp to include the status URL for the PHP-FPM pool you are monitoring. 6: Restart snmpd on your host It is worth noting that this only monitors a single pool. If you want to monitor multiple pools, this won't do it. The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page.","title":"SNMP Extend"},{"location":"Extensions/Applications/#pi-hole","text":"","title":"Pi-hole"},{"location":"Extensions/Applications/#snmp-extend_30","text":"1: Copy the shell script, pi-hole, to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/pi-hole -O /etc/snmp/pi-hole 2: Run chmod +x /etc/snmp/pi-hole 3: Edit your snmpd.conf file and add: extend pi-hole /etc/snmp/pi-hole 4: To get all data you must get your API auth token from Pi-hole server and change the API_AUTH_KEY entry inside the snmp script. 5: Restard snmpd. The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page.","title":"SNMP Extend"},{"location":"Extensions/Applications/#portactivity","text":"","title":"Portactivity"},{"location":"Extensions/Applications/#snmp-extend_31","text":"Ubuntu is shown below. apt install libparse-netstat-perl apt install libjson-perl 2: Copy the Perl script to the desired host (the host must be added to LibreNMS devices) wget https://github.com/librenms/librenms-agent/raw/master/snmp/portactivity -O /etc/snmp/portactivity 3: Make the script executable. (chmod +x /etc/snmp/portactivity) 4: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend portactivity /etc/snmp/portactivity -p http,ldap,imap Will monitor HTTP, LDAP, and IMAP. The -p switch specifies what ports to use. This is a comma seperated list. These must be found in '/etc/services' or where ever NSS is set to fetch it from. If not, it will throw an error. If you want to JSON returned by it to be printed in a pretty format use the -P flag. 5: Restart snmpd on your host. Please note that for only TCP[46] services are supported.","title":"SNMP Extend"},{"location":"Extensions/Applications/#postfix","text":"","title":"Postfix"},{"location":"Extensions/Applications/#snmp-extend_32","text":"1: Copy the shell script, postfix-queues, to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/postfix-queues -O /etc/snmp/postfix-queues 2: Copy the Perl script, postfixdetailed, to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/postfixdetailed -O /etc/snmp/postfixdetailed 3: Make both scripts executable. Run chmod +x /etc/snmp/postfixdetailed /etc/snmp/postfix-queues 4: Edit your snmpd.conf file and add: extend mailq /etc/snmp/postfix-queues extend postfixdetailed /etc/snmp/postfixdetailed 5: Restart snmpd. 6: Install pflogsumm for your OS. 7: Make sure the cache file in /etc/snmp/postfixdetailed is some place that snmpd can write too. This file is used for tracking changes between various values between each time it is called by snmpd. Also make sure the path for pflogsumm is correct. 8: Run /etc/snmp/postfixdetailed to create the initial cache file so you don't end up with some crazy initial starting value. Please note that each time /etc/snmp/postfixdetailed is ran, the cache file is updated, so if this happens in between LibreNMS doing it then the values will be thrown off for that polling period. The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. NOTE: If using RHEL for your postfix server, qshape must be installed manually as it is not officially supported. CentOs 6 rpms seem to work without issues.","title":"SNMP Extend"},{"location":"Extensions/Applications/#postgres","text":"","title":"Postgres"},{"location":"Extensions/Applications/#snmp-extend_33","text":"1: Copy the shell script, postgres, to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/postgres -O /etc/snmp/postgres 2: Run chmod +x /etc/snmp/postgres 3: Edit your snmpd.conf file and add: extend postgres /etc/snmp/postgres 4: Restart snmpd on your host 5: Install the Nagios check check_postgres.pl on your system: https://github.com/bucardo/check_postgres 6: Verify the path to check_postgres.pl in /etc/snmp/postgres is correct. 7: If you wish it to ignore the database postgres for totalling up the stats, set ignorePG to 1(the default) in /etc/snmp/postgres. If you are using netdata or the like, you may wish to set this or otherwise that total will be very skewed on systems with light or moderate usage. The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page.","title":"SNMP Extend"},{"location":"Extensions/Applications/#powerdns","text":"An authoritative DNS server: https://www.powerdns.com/auth.html","title":"PowerDNS"},{"location":"Extensions/Applications/#snmp-extend_34","text":"1: Copy the shell script, powerdns.py, to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/powerdns.py -O /etc/snmp/powerdns.py 2: Run chmod +x /etc/snmp/powerdns.py 3: Edit your snmpd.conf file and add: extend powerdns /etc/snmp/powerdns.py 4: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page.","title":"SNMP Extend"},{"location":"Extensions/Applications/#agent_9","text":"Install the agent on this device if it isn't already and copy the powerdns script to /usr/lib/check_mk_agent/local/","title":"Agent"},{"location":"Extensions/Applications/#powerdns-recursor","text":"A recursive DNS server: https://www.powerdns.com/recursor.html","title":"PowerDNS Recursor"},{"location":"Extensions/Applications/#direct","text":"The LibreNMS polling host must be able to connect to port 8082 on the monitored device. The web-server must be enabled, see the Recursor docs: https://doc.powerdns.com/md/recursor/settings/#webserver","title":"Direct"},{"location":"Extensions/Applications/#variables","text":"$config['apps']['powerdns-recursor']['api-key'] required, this is defined in the Recursor config $config['apps']['powerdns-recursor']['port'] numeric, defines the port to connect to PowerDNS Recursor on. The default is 8082 $config['apps']['powerdns-recursor']['https'] true or false, defaults to use http.","title":"Variables"},{"location":"Extensions/Applications/#snmp-extend_35","text":"1: Copy the shell script, powerdns-recursor, to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/powerdns-recursor -O /etc/snmp/powerdns-recursor 2: Run chmod +x /etc/snmp/powerdns-recursor 3: Edit your snmpd.conf file and add: extend powerdns-recursor /etc/snmp/powerdns-recursor 4: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page.","title":"SNMP Extend"},{"location":"Extensions/Applications/#agent_10","text":"Install the agent on this device if it isn't already and copy the powerdns-recursor script to /usr/lib/check_mk_agent/local/ This script uses rec_control get-all to collect stats.","title":"Agent"},{"location":"Extensions/Applications/#powerdns-dnsdist","text":"","title":"PowerDNS-dnsdist"},{"location":"Extensions/Applications/#snmp-extend_36","text":"1: Copy the BASH script to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/powerdns-dnsdist -O /etc/snmp/powerdns-dnsdist 2: Make the script executable (chmod +x /etc/snmp/powerdns-dnsdist) 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend powerdns-dnsdist /etc/snmp/powerdns-dnsdist 4: Restart snmpd on your host. The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page.","title":"SNMP Extend"},{"location":"Extensions/Applications/#proxmox","text":"1: For Proxmox 4.4+ install the libpve-apiclient-perl package apt install libpve-apiclient-perl 2: Download the script onto the desired host (the host must be added to LibreNMS devices) wget https://raw.githubusercontent.com/librenms/librenms-agent/master/agent-local/proxmox -O /usr/local/bin/proxmox 3: Run chmod +x /usr/local/bin/proxmox 4: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf ) and add: extend proxmox /usr/local/bin/proxmox 5: Note: if your snmpd doesn't run as root, you might have to invoke the script using sudo and modify the \"extend\" line extend proxmox /usr/bin/sudo /usr/local/bin/proxmox after, edit your sudo users (usually visudo ) and add at the bottom: Debian-snmp ALL=(ALL) NOPASSWD: /usr/local/bin/proxmox 6: Restart snmpd on your host","title":"Proxmox"},{"location":"Extensions/Applications/#puppet-agent","text":"SNMP extend script to get your Puppet Agent data into your host.","title":"Puppet Agent"},{"location":"Extensions/Applications/#snmp-extend_37","text":"1: Download the script onto the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/puppet_agent.py -O /etc/snmp/puppet_agent.py 2: Make the script executable: chmod +x /etc/snmp/puppet_agent.py 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf ) and add: extend puppet-agent /etc/snmp/puppet_agent.py The Script needs python3-yaml package to be installed. Per default script searches for on of this files: /var/cache/puppet/state/last_run_summary.yaml /opt/puppetlabs/puppet/cache/state/last_run_summary.yaml optionally you can add a specific summary file with creating /etc/snmp/puppet.json { \"agent\": { \"summary_file\": \"/my/custom/path/to/summary_file\" } } custom summary file has highest priority 4: Restart snmpd on the host","title":"SNMP Extend"},{"location":"Extensions/Applications/#pureftpd","text":"SNMP extend script to monitor PureFTPd.","title":"PureFTPd"},{"location":"Extensions/Applications/#snmp-extend_38","text":"1: Download the script onto the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/pureftpd.py -O /etc/snmp/pureftpd.py 2: Make the script executable: chmod +x /etc/snmp/pureftpd.py 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf ) and add: extend pureftpd sudo /etc/snmp/pureftpd.py 4: Edit your sudo users (usually visudo ) and add at the bottom: snmp ALL=(ALL) NOPASSWD: /etc/snmp/pureftpd.py or the path where your pure-ftpwho is located 5: If pure-ftpwho is not located in /usr/sbin you will also need to create a config file, which is named pureftpd.json. The file has to be located in /etc/snmp/. {\"pureftpwho_cmd\": \"/usr/sbin/pure-ftpwho\" } 5: Restart snmpd on your host","title":"SNMP Extend"},{"location":"Extensions/Applications/#raspberry-pi","text":"SNMP extend script to get your PI data into your host.","title":"Raspberry PI"},{"location":"Extensions/Applications/#snmp-extend_39","text":"1: Download the script onto the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/raspberry.sh -O /etc/snmp/raspberry.sh 2: Make the script executable: chmod +x /etc/snmp/raspberry.sh 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf ) and add: extend raspberry sudo /etc/snmp/raspberry.sh 4: Edit your sudo users (usually visudo ) and add at the bottom: snmp ALL=(ALL) NOPASSWD: /etc/snmp/raspberry.sh, /usr/bin/vcgencmd Note: If you are using Raspian, the default user is Debian-snmp . Change snmp above to Debian-snmp . You can verify the user snmpd is using with ps aux | grep snmpd 5: Restart snmpd on PI host","title":"SNMP Extend"},{"location":"Extensions/Applications/#redis","text":"SNMP extend script to monitor your Redis Server","title":"Redis"},{"location":"Extensions/Applications/#snmp-extend_40","text":"1: Download the script onto the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/redis.py -O /etc/snmp/redis.py 2: Make the script executable: chmod +x /etc/snmp/redis.py 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf ) and add: extend redis /etc/snmp/redis.py","title":"SNMP Extend"},{"location":"Extensions/Applications/#seafile","text":"SNMP extend script to monitor your Seafile Server","title":"Seafile"},{"location":"Extensions/Applications/#snmp-extend_41","text":"1: Copy the Python script, seafile.py, to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/seafile.py -O /etc/snmp/seafile.py Also you have to install the requests Package for Python3. Under Ubuntu/Debian just run apt install python3-requests 2: Run chmod +x /etc/snmp/seafile.py 3: Edit your snmpd.conf file and add: extend seafile /etc/snmp/seafile.py 4: You will also need to create the config file, which is named seafile.json . The script has to be located at /etc/snmp/. {\"url\": \"https://seafile.mydomain.org\", \"username\": \"some_admin_login@mail.address\", \"password\": \"password\", \"account_identifier\": \"name\" \"hide_monitoring_account\": true } The variables are as below. url = Url how to get access to Seafile Server username = Login to Seafile Server. It is important that used Login has admin privileges. Otherwise most API calls will be denied. password = Password to the configured login. account_identifier = Defines how user accounts are listed in RRD Graph. Options are: name, email hide_monitoring_account = With this Boolean you can hide the Account which you use to access Seafile API Note: It is recommended to use a dedicated Administrator account for monitoring.","title":"SNMP Extend"},{"location":"Extensions/Applications/#smart","text":"","title":"SMART"},{"location":"Extensions/Applications/#snmp-extend_42","text":"Copy the Perl script, smart, to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/smart -O /etc/snmp/smart Run chmod +x /etc/snmp/smart Edit your snmpd.conf file and add: extend smart /etc/snmp/smart You will also need to create the config file, which defaults to the same path as the script, but with .config appended. So if the script is located at /etc/snmp/smart, the config file will be /etc/snmp/smart.config . Alternatively you can also specific a config via -c . Anything starting with a # is comment. The format for variables is $variable=$value. Empty lines are ignored. Spaces and tabes at either the start or end of a line are ignored. Any line with out a matched variable or # are treated as a disk. #This is a comment cache=/var/cache/smart smartctl=/usr/bin/env smartctl useSN=1 ada0 ada1 da5 /dev/da5 -d sat twl0,0 /dev/twl0 -d 3ware,0 twl0,1 /dev/twl0 -d 3ware,1 twl0,2 /dev/twl0 -d 3ware,2 The variables are as below. cache = The path to the cache file to use. Default: /var/cache/smart smartctl = The path to use for smartctl. Default: /usr/bin/env smartctl useSN = If set to 1, it will use the disks SN for reporting instead of the device name. 1 is the default. 0 will use the device name. A disk line is can be as simple as just a disk name under /dev/. Such as in the config above The line \"ada0\" would resolve to \"/dev/ada0\" and would be called with no special argument. If a line has a space in it, everything before the space is treated as the disk name and is what used for reporting and everything after that is used as the argument to be passed to smartctl. If you want to guess at the configuration, call it with -g and it will print out what it thinks it should be. Restart snmpd on your host If you have a large number of more than one or two disks on a system, you should consider adding this to cron. Also make sure the cache file is some place it can be written to. */3 * * * * /etc/snmp/smart -u If your snmp agent runs as user \"snmp\", edit your sudo users (usually visudo ) and add at the bottom: snmp ALL=(ALL) NOPASSWD: /etc/snmp/smart, /usr/bin/env smartctl and modify your snmpd.conf file accordingly: extend smart /usr/bin/sudo /etc/snmp/smart The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page. If you set useSN to 1, it is worth noting that you will loose history(not able to access it from the web interface) for that device each time you change it. You will also need to run camcontrol or the like on said server to figure out what device actually corresponds with that serial number. Also if the system you are using uses non-static device naming based on bus information, it may be worthwhile just using the SN as the device ID is going to be irrelevant in that case.","title":"SNMP Extend"},{"location":"Extensions/Applications/#squid","text":"","title":"Squid"},{"location":"Extensions/Applications/#snmp-proxy","text":"1: Enable SNMP for Squid like below, if you have not already, and restart it. acl snmppublic snmp_community public snmp_port 3401 snmp_access allow snmppublic localhost snmp_access deny all 2: Restart squid on your host. 3: Edit your snmpd.conf file and add, making sure you have the same community, host, and port as above: proxy -v 2c -c public 127.0.0.1:3401 1.3.6.1.4.1.3495 For more advanced information on Squid and SNMP or setting up proxying for net-snmp, please see the links below. http://wiki.squid-cache.org/Features/Snmp http://www.net-snmp.org/wiki/index.php/Snmpd_proxy","title":"SNMP Proxy"},{"location":"Extensions/Applications/#tinydns-aka-djbdns","text":"","title":"TinyDNS aka djbdns"},{"location":"Extensions/Applications/#agent_11","text":"Install the agent on this device if it isn't already and copy the tinydns script to /usr/lib/check_mk_agent/local/ Note : We assume that you use DJB's Daemontools to start/stop tinydns. And that your tinydns instance is located in /service/dns , adjust this path if necessary. 1: Replace your log 's run file, typically located in /service/dns/log/run with: #!/bin/sh exec setuidgid dnslog tinystats ./main/tinystats/ multilog t n3 s250000 ./main/ 2: Create tinystats directory and chown: mkdir /service/dns/log/main/tinystats chown dnslog:nofiles /service/dns/log/main/tinystats 3: Restart TinyDNS and Daemontools: /etc/init.d/svscan restart Note : Some say svc -t /service/dns is enough, on my install (Gentoo) it doesn't rehook the logging and I'm forced to restart it entirely.","title":"Agent"},{"location":"Extensions/Applications/#unbound","text":"Unbound configuration: # Enable extended statistics. server: extended-statistics: yes statistics-cumulative: yes remote-control: control-enable: yes control-interface: 127.0.0.1 Restart your unbound after changing the configuration, verify it is working by running unbound-control stats .","title":"Unbound"},{"location":"Extensions/Applications/#option-1-snmp-extend-preferred-and-easiest-method","text":"1: Copy the shell script, unbound, to the desired host. wget https://github.com/librenms/librenms-agent/raw/master/snmp/unbound -O /etc/snmp/unbound 2: Run chmod +x /etc/snmp/unbound 3: Edit your snmpd.conf file and add: extend unbound /usr/bin/sudo /etc/snmp/unbound 4: Restart snmpd. The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page.","title":"Option 1: SNMP Extend (Preferred and easiest method)"},{"location":"Extensions/Applications/#option-2-agent","text":"Install the agent on this device if it isn't already and copy the unbound.sh script to /usr/lib/check_mk_agent/local/","title":"Option 2: Agent"},{"location":"Extensions/Applications/#ups-nut","text":"A small shell script that exports nut ups status.","title":"UPS-nut"},{"location":"Extensions/Applications/#snmp-extend_43","text":"1: Copy the ups nut to /etc/snmp/ on your host. 2: Make the script executable (chmod +x /etc/snmp/ups-nut.sh) 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend ups-nut /etc/snmp/ups-nut.sh 4: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page.","title":"SNMP Extend"},{"location":"Extensions/Applications/#ups-apcups","text":"A small shell script that exports apcacess ups status.","title":"UPS-apcups"},{"location":"Extensions/Applications/#snmp-extend_44","text":"1: Copy the ups apcups to /etc/snmp/ on your host. 2: Run chmod +x /etc/snmp/ups-apcups 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend ups-apcups /etc/snmp/ups-apcups If 'apcaccess' is not in the PATH enviromental variable snmpd is using, you may need to do something like below. extend ups-apcups/usr/bin/env PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin /etc/snmp/ups-apcups 4: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page.","title":"SNMP Extend"},{"location":"Extensions/Applications/#sdfs-info","text":"A small shell script that exportfs SDFS volume info.","title":"SDFS info"},{"location":"Extensions/Applications/#snmp-extend_45","text":"1: Download the script onto the desired host (the host must be added to LibreNMS devices) wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/sdfsinfo -O /etc/snmp/sdfsinfo 2: Make the script executable (chmod +x /etc/snmp/sdfsinfo) 3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add: extend sdfsinfo /etc/snmp/sdfsinfo 4: Restart snmpd on your host The application should be auto-discovered as described at the top of the page. If it is not, please follow the steps set out under SNMP Extend heading top of page.","title":"SNMP Extend"},{"location":"Extensions/Applications/#voip-monitor","text":"Shell script that reports cpu-load/memory/open-files files stats of Voip Monitor","title":"Voip-monitor"},{"location":"Extensions/Applications/#snmp-extend_46","text":"1: Download the script onto the desired host. wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/voipmon-stats.sh -O /etc/snmp/voipmon-stats.sh 2: Make the script executable: chmod +x /etc/snmp/voipmon-stats.sh 3: Edit your snmpd.conf file (usually /etc/snmp/voipmon-stats.sh ) and add: extend voipmon /etc/snmp/voipmon-stats.sh","title":"SNMP Extend"},{"location":"Extensions/Applications/#zfs","text":"","title":"ZFS"},{"location":"Extensions/Applications/#snmp-extend_47","text":"zfs-linux requires python3 >=python3.5. The installation steps are: Copy the polling script to the desired host (the host must be added to LibreNMS devices) Make the script executable Edit snmpd.conf to include ZFS stats","title":"SNMP Extend"},{"location":"Extensions/Applications/#freebsd","text":"wget https://github.com/librenms/librenms-agent/raw/master/snmp/zfs-freebsd -O /etc/snmp/zfs-freebsd chmod +x /etc/snmp/zfs-freebsd echo \"extend zfs /etc/snmp/zfs-freebsd\" >> /etc/snmp/snmpd.conf","title":"FreeBSD"},{"location":"Extensions/Applications/#linux","text":"wget https://github.com/librenms/librenms-agent/raw/master/snmp/zfs-linux -O /etc/snmp/zfs-linux chmod +x /etc/snmp/zfs-linux echo \"extend zfs sudo /etc/snmp/zfs-linux\" >> /etc/snmp/snmpd.conf Edit your sudo users (usually visudo ) and add at the bottom: snmp ALL=(ALL) NOPASSWD: /etc/snmp/zfs-linux Now restart snmpd and you're all set.","title":"Linux"},{"location":"Extensions/Authentication/","text":"Authentication modules LibreNMS supports multiple authentication modules along with Two Factor Auth . Here we will provide configuration details for these modules. Available authentication modules MySQL: mysql Active Directory: active_directory LDAP: ldap Radius: radius HTTP Auth: http-auth , ad_authorization , ldap_authorization Single Sign-on: sso \u26a0\ufe0f When enabling a new authentication module, the local users will no longer be available to log in. Enable authentication module To enable a particular authentication module you need to set this up in config.php. Please note that only ONE module can be enabled. LibreNMS doesn't support multiple authentication mechanism at the same time. $config [ 'auth_mechanism' ] = \"mysql\" ; User levels and User account type 1: Normal User : You will need to assign device / port permissions for users at this level. 5: Global Read : Read only Administrator. 10: Administrator : This is a global read/write admin account. 11: Demo Account : Provides full read/write with certain restrictions (i.e can't delete devices). Note Oxidized configs can often contain sensitive data. Because of that only Administrator account type can see configs. Note for SELinux users When using SELinux on the LibreNMS server, you need to allow Apache (httpd) to connect LDAP/Active Directory server, this is disabled by default. You can use SELinux Booleans to allow network access to LDAP resources with this command: setsebool -P httpd_can_connect_ldap = 1 Testing authentication You can test authentication with this script: ./scripts/auth_test.php Enable debug output to troubleshoot issues MySQL Authentication Config option: mysql This is default option with LibreNMS so you should have already have the configuration setup in your environment file (.env). DB_HOST=HOSTNAME DB_DATABASE=DBNAME DB_USERNAME=DBUSER DB_PASSWORD=\"DBPASS\" Active Directory Authentication Config option: active_directory Install php_ldap or php7.0-ldap , making sure to install the same version as PHP. If you have issues with secure LDAP try setting $config['auth_ad_check_certificates'] to 0 , this will ignore certificate errors. Require actual membership of the configured groups If you set $config['auth_ad_require_groupmembership'] to 1, the authenticated user has to be a member of the specific group. Otherwise all users can authenticate, and will be either level 0 or you may set $config['auth_ad_global_read'] to 1 and all users will have read only access unless otherwise specified. Old account cleanup Cleanup of old accounts is done by checking the authlog. You will need to set the number of days when old accounts will be purged AUTOMATICALLY by daily.sh. Please ensure that you set the $config['authlog_purge'] value to be greater than $config['active_directory']['users_purge'] otherwise old users won't be removed. Sample configuration $config [ 'auth_mechanism' ] = 'active_directory' ; $config [ 'auth_ad_url' ] = 'ldaps://server.example.com' ; // Set server(s), space separated. Prefix with ldaps:// for ssl $config [ 'auth_ad_domain' ] = 'example.com' ; $config [ 'auth_ad_base_dn' ] = 'dc=example,dc=com' ; // groups and users must be under this dn $config [ 'auth_ad_check_certificates' ] = true ; // require a valid ssl certificate $config [ 'auth_ad_binduser' ] = 'examplebinduser' ; // bind user (non-admin) $config [ 'auth_ad_bindpassword' ] = 'examplepassword' ; // bind password $config [ 'auth_ad_timeout' ] = 5 ; // time to wait before giving up (or trying the next server) $config [ 'auth_ad_debug' ] = false ; // enable for verbose debug messages $config [ 'active_directory' ][ 'users_purge' ] = 30 ; // purge users who haven't logged in for 30 days. $config [ 'auth_ad_require_groupmembership' ] = true ; // false: allow all users to auth level 0 $config [ 'auth_ad_groups' ][ 'ad-admingroup' ][ 'level' ] = 10 ; // set the \"AD AdminGroup\" group to admin level $config [ 'auth_ad_groups' ][ 'ad-usergroup' ][ 'level' ] = 5 ; // set the \"AD UserGroup\" group to global read only level Replace ad-admingroup with your Active Directory admin-user group and ad-usergroup with your standard user group. It is highly suggested to create a bind user, otherwise \"remember me\", alerting users, and the API will not work. Active Directory redundancy You can set two Active Directory servers by editing the $config['auth_ad_url'] like this example: $config['auth_ad_url'] = \"ldaps://dc1.example.com ldaps://dc2.example.com\"; Active Directory LDAP filters You can add an LDAP filter to be ANDed with the builtin user filter ( (sAMAccountName=$username) ). The defaults are: $config['auth_ad_user_filter'] = \"(objectclass=user)\"; $config['auth_ad_group_filter'] = \"(objectclass=group)\"; This yields (&(objectclass=user)(sAMAccountName=$username)) for the user filter and (&(objectclass=group)(sAMAccountName=$group)) for the group filter. LDAP Authentication Config option: ldap Install php_ldap or php7.0-ldap , making sure to install the same version as PHP. Standard config $config [ 'auth_mechanism' ] = 'ldap' ; $config [ 'auth_ldap_server' ] = 'ldap.example.com' ; // Set server(s), space separated. Prefix with ldaps:// for ssl $config [ 'auth_ldap_suffix' ] = ',ou=People,dc=example,dc=com' ; // appended to usernames $config [ 'auth_ldap_groupbase' ] = 'ou=groups,dc=example,dc=com' ; // all groups must be inside this $config [ 'auth_ldap_groups' ][ 'admin' ][ 'level' ] = 10 ; // set admin group to admin level $config [ 'auth_ldap_groups' ][ 'pfy' ][ 'level' ] = 5 ; // set pfy group to global read only level $config [ 'auth_ldap_groups' ][ 'support' ][ 'level' ] = 1 ; // set support group as a normal user Additional options (usually not needed) $config [ 'auth_ldap_version' ] = 3 ; # v2 or v3 $config [ 'auth_ldap_port' ] = 389 ; // 389 or 636 for ssl $config [ 'auth_ldap_starttls' ] = True ; // Enable TLS on port 389 $config [ 'auth_ldap_prefix' ] = 'uid=' ; // prepended to usernames $config [ 'auth_ldap_group' ] = 'cn=groupname,ou=groups,dc=example,dc=com' ; // generic group with level 0 $config [ 'auth_ldap_groupmemberattr' ] = 'memberUid' ; // attribute to use to see if a user is a member of a group $config [ 'auth_ldap_uid_attribute' ] = 'uidnumber' ; // attribute for unique id $config [ 'auth_ldap_debug' ] = false ; // enable for verbose debug messages $config [ 'auth_ldap_userdn' ] = true ; // Uses a users full DN as the value of the member attribute in a group instead of member: username. (it\u2019s member: uid=username,ou=groups,dc=domain,dc=com) $config [ 'auth_ldap_userlist_filter' ] = 'service=informatique' ; // Replace 'service=informatique' by your ldap filter to limit the number of responses if you have an ldap directory with thousand of users $config [ 'auth_ldap_wildcard_ou' ] = false ; // Search for user matching user name independently of OU set in auth_ldap_suffix. Useful if your users are in different OU. Bind username, if set, still user auth_ldap_suffix LDAP bind user (optional) If your ldap server does not allow anonymous bind, it is highly suggested to create a bind user, otherwise \"remember me\", alerting users, and the API will not work. $config [ 'auth_ldap_binduser' ] = 'ldapbind' ; // will use auth_ldap_prefix and auth_ldap_suffix #$config['auth_ldap_binddn'] = 'CN=John.Smith,CN=Users,DC=MyDomain,DC=com'; // overrides binduser $config [ 'auth_ldap_bindpassword' ] = 'password' ; LDAP server redundancy You can set two LDAP servers by editing the $config['auth_ldap_server'] like this example: $config['auth_ldap_server'] = \"ldaps://dir1.example.com ldaps://dir2.example.com\"; An example config setup for use with Jumpcloud LDAP as a service is: $config [ 'auth_mechanism' ] = \"ldap\" ; $config [ 'auth_ldap_version' ] = 3 ; $config [ 'auth_ldap_server' ] = \"ldap.jumpcloud.com\" ; #Set to ldaps://ldap.jumpcloud.com to enable LDAPS $config [ 'auth_ldap_port' ] = 389 ; #Set to 636 if using LDAPS $config [ 'auth_ldap_prefix' ] = \"uid=\" ; $config [ 'auth_ldap_suffix' ] = \",ou=Users,o={id},dc=jumpcloud,dc=com\" ; $config [ 'auth_ldap_groupbase' ] = \"ou=Users,o={id},dc=jumpcloud,dc=com\" ; $config [ 'auth_ldap_groupmemberattr' ] = \"member\" ; $config [ 'auth_ldap_groups' ] = [ '{group}' => [ 'level' => 10 ],]; $config [ 'auth_ldap_userdn' ] = true ; Replace {id} with the unique ID provided by Jumpcloud. Replace {group} with the unique group name created in Jumpcloud. This field is case sensitive. Note: If you have multiple user groups to define individual access levels replace the $config['auth_ldap_groups'] line with the following: $config [ 'auth_ldap_groups' ] = [ '{admin_group}' => [ 'level' => 10 ], '{global_readonly_group}' => [ 'level' => 5 ], ]; Radius Authentication Please note that a mysql user is created for each user the logs in successfully. User level 1 is assigned to those accounts so you will then need to assign the relevant permissions unless you set $config['radius']['userlevel'] to be something other than 1. $config [ 'radius' ][ 'hostname' ] = 'localhost' ; $config [ 'radius' ][ 'port' ] = '1812' ; $config [ 'radius' ][ 'secret' ] = 'testing123' ; $config [ 'radius' ][ 'timeout' ] = 3 ; $config [ 'radius' ][ 'users_purge' ] = 14 ; //Purge users who haven't logged in for 14 days. $config [ 'radius' ][ 'default_level' ] = 1 ; //Set the default user level when automatically creating a user. Old account cleanup Cleanup of old accounts is done by checking the authlog. You will need to set the number of days when old accounts will be purged AUTOMATICALLY by daily.sh. Please ensure that you set the $config['authlog_purge'] value to be greater than $config['radius']['users_purge'] otherwise old users won't be removed. HTTP Authentication Config option: http-auth LibreNMS will expect the user to have authenticated via your webservice already. At this stage it will need to assign a userlevel for that user which is done in one of two ways: A user exists in MySQL still where the usernames match up. A global guest user (which still needs to be added into MySQL: $config [ 'http_auth_guest' ] = \"guest\" ; This will then assign the userlevel for guest to all authenticated users. HTTP Authentication / AD Authorization Config option: ad-authorization This module is a combination of http-auth and active directory _ LibreNMS will expect the user to have authenticated via your webservice already (e.g. using Kerberos Authentication in Apache) but will use Active Directory lookups to determine and assign the userlevel of a user. The userlevel will be calculated by using AD group membership information as the active directory _ module does. The configuration is the same as for the active directory _ module with two extra, optional options: auth_ad_binduser and auth_ad_bindpassword. These should be set to a AD user with read capabilities in your AD Domain in order to be able to perform searches. If these options are omitted, the module will attempt an anonymous bind (which then of course must be allowed by your Active Directory server(s)). There is also one extra option for controlling user information caching: auth_ldap_cache_ttl. This option allows to control how long user information (user_exists, userid, userlevel) are cached within the PHP Session. The default value is 300 seconds. To disable this caching (highly discourage) set this option to 0. $config [ 'auth_ad_binduser' ] = \"ad_binduser\" ; $config [ 'auth_ad_bindpassword' ] = \"ad_bindpassword\" ; $config [ 'auth_ldap_cache_ttl' ] = 300 ; HTTP Authentication / LDAP Authorization Config option: ldap-authorization This module is a combination of http-auth and ldap LibreNMS will expect the user to have authenticated via your webservice already (e.g. using Kerberos Authentication in Apache) but will use LDAP to determine and assign the userlevel of a user. The userlevel will be calculated by using LDAP group membership information as the ldap module does. The configuration is the same as for the ldap module with one extra option: auth_ldap_cache_ttl. This option allows to control how long user information (user_exists, userid, userlevel) are cached within the PHP Session. The default value is 300 seconds. To disabled this caching (highly discourage) set this option to 0. $config [ 'auth_ldap_cache_ttl' ] = 300 ; View/embedded graphs without being logged into LibreNMS $config [ 'allow_unauth_graphs_cidr' ] = array ( '127.0.0.1/32' ); $config [ 'allow_unauth_graphs' ] = true ; Single Sign-on The single sign-on mechanism is used to integrate with third party authentication providers that are managed outside of LibreNMS - such as ADFS, Shibboleth, EZProxy, BeyondCorp, and others. A large number of these methods use SAML the module has been written assuming the use of SAML, and therefore these instructions contain some SAML terminology, but it should be possible to use any software that works in a similar way. In order to make use of the single sign-on module, you need to have an Identity Provider up and running, and know how to configure your Relying Party to pass attributes to LibreNMS via header injection or environment variables. Setting these up is outside of the scope of this documentation. As this module deals with authentication, it is extremely careful about validating the configuration - if it finds that certain values in the configuration are not set, it will reject access rather than try and guess. Basic Configuration To get up and running, all you need to do is configure the following values: $config [ 'auth_mechanism' ] = \"sso\" ; $config [ 'sso' ][ 'mode' ] = \"env\" ; $config [ 'sso' ][ 'group_strategy' ] = \"static\" ; $config [ 'sso' ][ 'static_level' ] = 10 ; This, along with the defaults, sets up a basic Single Sign-on setup that: Reads values from environment variables Automatically creates users when they're first seen Authomatically updates users with new values Gives everyone privilege level 10 This happens to mimic the behaviour of http-auth , so if this is the kind of setup you want, you're probably better of just going and using that mechanism. Security If there is a proxy involved (e.g. EZProxy, Azure AD Application Proxy, NGINX, mod_proxy) it's essential that you have some means in place to prevent headers being injected between the proxy and the end user, and also prevent end users from contacting LibreNMS directly. This should also apply to user connections to the proxy itself - the proxy must not be allowed to blindly pass through HTTP headers. mod security _ should be considered a minimum, with a full WAF being strongly recommended. This advice applies to the IDP too. The mechanism includes very basic protection, in the form of an IP whitelist with should contain the source addresses of your proxies: $config [ 'sso' ][ 'trusted_proxies' ] = [ '127.0.0.1/8' , '::1/128' , '192.0.2.0' , '2001:DB8::' ]; This configuration item should contain an array with a list of IP addresses or CIDR prefixes that are allowed to connect to LibreNMS and supply environment variables or headers. Advanced Configuration Options User Attribute If for some reason your relying party doesn't store the username in REMOTE USER _, you can override this choice. $config [ 'sso' ][ 'user_attr' ] = 'HTTP_UID' ; Note that the user lookup is a little special - normally headers are prefixed with HTTP_ , however this is not the case for remote user - it's a special case. If you're using something different you need to figure out of the HTTP_ prefix is required or not yourself. Automatic User Create/Update These are enabled by default: $config [ 'sso' ][ 'create_users' ] = true ; $config [ 'sso' ][ 'update_users' ] = true ; If these are not enabled, user logins will be (somewhat silently) rejected unless an administrator has created the account in advance. Note that in the case of SAML federations, unless release of the users true identity has been negotiated with the IDP, the username (probably ePTID) is not likely to be predicable. Personalisation If the attributes are being populated, you can instruct the mechanism to add additional information to the user's database entry: $config [ 'sso' ][ 'email_attr' ] = \"mail\" ; $config [ 'sso' ][ 'realname_attr' ] = \"displayName\" ; $config [ 'sso' ][ 'descr_attr' ] = \"unscoped-affiliation Group Strategies Static As used above, static gives every single user the same privilege level. If you're working with a small team, or don't need access control, this is probably suitable. Attribute $config [ 'sso' ][ 'group_strategy' ] = \"attribute\" ; $config [ 'sso' ][ 'level_attr' ] = \"entitlement\" ; If your Relying Party is capable of calculating the necessary privilege level, you can configure the module to read the privilege number straight from an attribute. sso level_attr should contain the name of the attribute that the Relying Party exposes to LibreNMS - as long as sso mode is correctly set, the mechanism should find the value. Group Map This is the most flexible (and complex) way of assigning privileges. $config [ 'sso' ][ 'group_strategy' ] = \"map\" ; $config [ 'sso' ][ 'group_attr' ] = \"member\" ; $config [ 'sso' ][ 'group_level_map' ] = [ 'librenms-admins' => 10 , 'librenms-readers' => 1 , 'librenms-billingcontacts' => 5 ]; $config [ 'sso' ][ 'group_delimiter' ] = ';' ; The mechanism expects to find a delimited list of groups within the attribute that sso group_attr _ points to. This should be an associative array of group name keys, with privilege levels as values. The mechanism will scan the list and find the highest privilege level that the user is entitled to, and assign that value to the user. This format may be specific to Shibboleth; other relying party software may need changes to the mechanism (e.g. mod auth_mellon _ may create pseudo arrays). There is an optional value for sites with large numbers of groups: $config [ 'sso' ][ 'group_filter' ] = \"/librenms-(.*)/i\" ; This filter causes the mechanism to only consider groups matching a regular expression. Logout Behaviour LibreNMS has no capability to log out a user authenticated via Single Sign-On - that responsability falls to the Relying Party. If your Relying Party has a magic URL that needs to be called to end a session, you can configure LibreNMS to direct the user to it: $config [ 'post_logout_action' ] = '/Shibboleth.sso/Logout' ; This option functions independantly of the Single Sign-on mechanism. Complete Configuration This configuration works on my deployment with a Shibboleth relying party, injecting environment variables, with the IDP supplying a list of groups. $config [ 'auth_mechanism' ] = 'sso' ; $config [ 'auth_logout_handler' ] = '/Shibboleth.sso/Logout' ; $config [ 'sso' ][ 'mode' ] = 'env' ; $config [ 'sso' ][ 'create_users' ] = true ; $config [ 'sso' ][ 'update_users' ] = true ; $config [ 'sso' ][ 'realname_attr' ] = 'displayName' ; $config [ 'sso' ][ 'email_attr' ] = 'mail' ; $config [ 'sso' ][ 'group_strategy' ] = 'map' ; $config [ 'sso' ][ 'group_attr' ] = 'member' ; $config [ 'sso' ][ 'group_filter' ] = '/(librenms-.*)/i' ; $config [ 'sso' ][ 'group_delimiter' ] = ';' ; $config [ 'sso' ][ 'group_level_map' ] = [ 'librenms-demo' => 11 , 'librenms-globaladmin' => 10 , 'librenms-globalread' => 5 , 'librenms-lowpriv' => 1 ];","title":"Authentication Options"},{"location":"Extensions/Authentication/#authentication-modules","text":"LibreNMS supports multiple authentication modules along with Two Factor Auth . Here we will provide configuration details for these modules.","title":"Authentication modules"},{"location":"Extensions/Authentication/#available-authentication-modules","text":"MySQL: mysql Active Directory: active_directory LDAP: ldap Radius: radius HTTP Auth: http-auth , ad_authorization , ldap_authorization Single Sign-on: sso \u26a0\ufe0f When enabling a new authentication module, the local users will no longer be available to log in.","title":"Available authentication modules"},{"location":"Extensions/Authentication/#enable-authentication-module","text":"To enable a particular authentication module you need to set this up in config.php. Please note that only ONE module can be enabled. LibreNMS doesn't support multiple authentication mechanism at the same time. $config [ 'auth_mechanism' ] = \"mysql\" ;","title":"Enable authentication module"},{"location":"Extensions/Authentication/#user-levels-and-user-account-type","text":"1: Normal User : You will need to assign device / port permissions for users at this level. 5: Global Read : Read only Administrator. 10: Administrator : This is a global read/write admin account. 11: Demo Account : Provides full read/write with certain restrictions (i.e can't delete devices). Note Oxidized configs can often contain sensitive data. Because of that only Administrator account type can see configs.","title":"User levels and User account type"},{"location":"Extensions/Authentication/#note-for-selinux-users","text":"When using SELinux on the LibreNMS server, you need to allow Apache (httpd) to connect LDAP/Active Directory server, this is disabled by default. You can use SELinux Booleans to allow network access to LDAP resources with this command: setsebool -P httpd_can_connect_ldap = 1","title":"Note for SELinux users"},{"location":"Extensions/Authentication/#testing-authentication","text":"You can test authentication with this script: ./scripts/auth_test.php Enable debug output to troubleshoot issues","title":"Testing authentication"},{"location":"Extensions/Authentication/#mysql-authentication","text":"Config option: mysql This is default option with LibreNMS so you should have already have the configuration setup in your environment file (.env). DB_HOST=HOSTNAME DB_DATABASE=DBNAME DB_USERNAME=DBUSER DB_PASSWORD=\"DBPASS\"","title":"MySQL Authentication"},{"location":"Extensions/Authentication/#active-directory-authentication","text":"Config option: active_directory Install php_ldap or php7.0-ldap , making sure to install the same version as PHP. If you have issues with secure LDAP try setting $config['auth_ad_check_certificates'] to 0 , this will ignore certificate errors.","title":"Active Directory Authentication"},{"location":"Extensions/Authentication/#require-actual-membership-of-the-configured-groups","text":"If you set $config['auth_ad_require_groupmembership'] to 1, the authenticated user has to be a member of the specific group. Otherwise all users can authenticate, and will be either level 0 or you may set $config['auth_ad_global_read'] to 1 and all users will have read only access unless otherwise specified.","title":"Require actual membership of the configured groups"},{"location":"Extensions/Authentication/#old-account-cleanup","text":"Cleanup of old accounts is done by checking the authlog. You will need to set the number of days when old accounts will be purged AUTOMATICALLY by daily.sh. Please ensure that you set the $config['authlog_purge'] value to be greater than $config['active_directory']['users_purge'] otherwise old users won't be removed.","title":"Old account cleanup"},{"location":"Extensions/Authentication/#sample-configuration","text":"$config [ 'auth_mechanism' ] = 'active_directory' ; $config [ 'auth_ad_url' ] = 'ldaps://server.example.com' ; // Set server(s), space separated. Prefix with ldaps:// for ssl $config [ 'auth_ad_domain' ] = 'example.com' ; $config [ 'auth_ad_base_dn' ] = 'dc=example,dc=com' ; // groups and users must be under this dn $config [ 'auth_ad_check_certificates' ] = true ; // require a valid ssl certificate $config [ 'auth_ad_binduser' ] = 'examplebinduser' ; // bind user (non-admin) $config [ 'auth_ad_bindpassword' ] = 'examplepassword' ; // bind password $config [ 'auth_ad_timeout' ] = 5 ; // time to wait before giving up (or trying the next server) $config [ 'auth_ad_debug' ] = false ; // enable for verbose debug messages $config [ 'active_directory' ][ 'users_purge' ] = 30 ; // purge users who haven't logged in for 30 days. $config [ 'auth_ad_require_groupmembership' ] = true ; // false: allow all users to auth level 0 $config [ 'auth_ad_groups' ][ 'ad-admingroup' ][ 'level' ] = 10 ; // set the \"AD AdminGroup\" group to admin level $config [ 'auth_ad_groups' ][ 'ad-usergroup' ][ 'level' ] = 5 ; // set the \"AD UserGroup\" group to global read only level Replace ad-admingroup with your Active Directory admin-user group and ad-usergroup with your standard user group. It is highly suggested to create a bind user, otherwise \"remember me\", alerting users, and the API will not work.","title":"Sample configuration"},{"location":"Extensions/Authentication/#active-directory-redundancy","text":"You can set two Active Directory servers by editing the $config['auth_ad_url'] like this example: $config['auth_ad_url'] = \"ldaps://dc1.example.com ldaps://dc2.example.com\";","title":"Active Directory redundancy"},{"location":"Extensions/Authentication/#active-directory-ldap-filters","text":"You can add an LDAP filter to be ANDed with the builtin user filter ( (sAMAccountName=$username) ). The defaults are: $config['auth_ad_user_filter'] = \"(objectclass=user)\"; $config['auth_ad_group_filter'] = \"(objectclass=group)\"; This yields (&(objectclass=user)(sAMAccountName=$username)) for the user filter and (&(objectclass=group)(sAMAccountName=$group)) for the group filter.","title":"Active Directory LDAP filters"},{"location":"Extensions/Authentication/#ldap-authentication","text":"Config option: ldap Install php_ldap or php7.0-ldap , making sure to install the same version as PHP.","title":"LDAP Authentication"},{"location":"Extensions/Authentication/#standard-config","text":"$config [ 'auth_mechanism' ] = 'ldap' ; $config [ 'auth_ldap_server' ] = 'ldap.example.com' ; // Set server(s), space separated. Prefix with ldaps:// for ssl $config [ 'auth_ldap_suffix' ] = ',ou=People,dc=example,dc=com' ; // appended to usernames $config [ 'auth_ldap_groupbase' ] = 'ou=groups,dc=example,dc=com' ; // all groups must be inside this $config [ 'auth_ldap_groups' ][ 'admin' ][ 'level' ] = 10 ; // set admin group to admin level $config [ 'auth_ldap_groups' ][ 'pfy' ][ 'level' ] = 5 ; // set pfy group to global read only level $config [ 'auth_ldap_groups' ][ 'support' ][ 'level' ] = 1 ; // set support group as a normal user","title":"Standard config"},{"location":"Extensions/Authentication/#additional-options-usually-not-needed","text":"$config [ 'auth_ldap_version' ] = 3 ; # v2 or v3 $config [ 'auth_ldap_port' ] = 389 ; // 389 or 636 for ssl $config [ 'auth_ldap_starttls' ] = True ; // Enable TLS on port 389 $config [ 'auth_ldap_prefix' ] = 'uid=' ; // prepended to usernames $config [ 'auth_ldap_group' ] = 'cn=groupname,ou=groups,dc=example,dc=com' ; // generic group with level 0 $config [ 'auth_ldap_groupmemberattr' ] = 'memberUid' ; // attribute to use to see if a user is a member of a group $config [ 'auth_ldap_uid_attribute' ] = 'uidnumber' ; // attribute for unique id $config [ 'auth_ldap_debug' ] = false ; // enable for verbose debug messages $config [ 'auth_ldap_userdn' ] = true ; // Uses a users full DN as the value of the member attribute in a group instead of member: username. (it\u2019s member: uid=username,ou=groups,dc=domain,dc=com) $config [ 'auth_ldap_userlist_filter' ] = 'service=informatique' ; // Replace 'service=informatique' by your ldap filter to limit the number of responses if you have an ldap directory with thousand of users $config [ 'auth_ldap_wildcard_ou' ] = false ; // Search for user matching user name independently of OU set in auth_ldap_suffix. Useful if your users are in different OU. Bind username, if set, still user auth_ldap_suffix","title":"Additional options (usually not needed)"},{"location":"Extensions/Authentication/#ldap-bind-user-optional","text":"If your ldap server does not allow anonymous bind, it is highly suggested to create a bind user, otherwise \"remember me\", alerting users, and the API will not work. $config [ 'auth_ldap_binduser' ] = 'ldapbind' ; // will use auth_ldap_prefix and auth_ldap_suffix #$config['auth_ldap_binddn'] = 'CN=John.Smith,CN=Users,DC=MyDomain,DC=com'; // overrides binduser $config [ 'auth_ldap_bindpassword' ] = 'password' ;","title":"LDAP bind user (optional)"},{"location":"Extensions/Authentication/#ldap-server-redundancy","text":"You can set two LDAP servers by editing the $config['auth_ldap_server'] like this example: $config['auth_ldap_server'] = \"ldaps://dir1.example.com ldaps://dir2.example.com\"; An example config setup for use with Jumpcloud LDAP as a service is: $config [ 'auth_mechanism' ] = \"ldap\" ; $config [ 'auth_ldap_version' ] = 3 ; $config [ 'auth_ldap_server' ] = \"ldap.jumpcloud.com\" ; #Set to ldaps://ldap.jumpcloud.com to enable LDAPS $config [ 'auth_ldap_port' ] = 389 ; #Set to 636 if using LDAPS $config [ 'auth_ldap_prefix' ] = \"uid=\" ; $config [ 'auth_ldap_suffix' ] = \",ou=Users,o={id},dc=jumpcloud,dc=com\" ; $config [ 'auth_ldap_groupbase' ] = \"ou=Users,o={id},dc=jumpcloud,dc=com\" ; $config [ 'auth_ldap_groupmemberattr' ] = \"member\" ; $config [ 'auth_ldap_groups' ] = [ '{group}' => [ 'level' => 10 ],]; $config [ 'auth_ldap_userdn' ] = true ; Replace {id} with the unique ID provided by Jumpcloud. Replace {group} with the unique group name created in Jumpcloud. This field is case sensitive. Note: If you have multiple user groups to define individual access levels replace the $config['auth_ldap_groups'] line with the following: $config [ 'auth_ldap_groups' ] = [ '{admin_group}' => [ 'level' => 10 ], '{global_readonly_group}' => [ 'level' => 5 ], ];","title":"LDAP server redundancy"},{"location":"Extensions/Authentication/#radius-authentication","text":"Please note that a mysql user is created for each user the logs in successfully. User level 1 is assigned to those accounts so you will then need to assign the relevant permissions unless you set $config['radius']['userlevel'] to be something other than 1. $config [ 'radius' ][ 'hostname' ] = 'localhost' ; $config [ 'radius' ][ 'port' ] = '1812' ; $config [ 'radius' ][ 'secret' ] = 'testing123' ; $config [ 'radius' ][ 'timeout' ] = 3 ; $config [ 'radius' ][ 'users_purge' ] = 14 ; //Purge users who haven't logged in for 14 days. $config [ 'radius' ][ 'default_level' ] = 1 ; //Set the default user level when automatically creating a user.","title":"Radius Authentication"},{"location":"Extensions/Authentication/#old-account-cleanup_1","text":"Cleanup of old accounts is done by checking the authlog. You will need to set the number of days when old accounts will be purged AUTOMATICALLY by daily.sh. Please ensure that you set the $config['authlog_purge'] value to be greater than $config['radius']['users_purge'] otherwise old users won't be removed.","title":"Old account cleanup"},{"location":"Extensions/Authentication/#http-authentication","text":"Config option: http-auth LibreNMS will expect the user to have authenticated via your webservice already. At this stage it will need to assign a userlevel for that user which is done in one of two ways: A user exists in MySQL still where the usernames match up. A global guest user (which still needs to be added into MySQL: $config [ 'http_auth_guest' ] = \"guest\" ; This will then assign the userlevel for guest to all authenticated users.","title":"HTTP Authentication"},{"location":"Extensions/Authentication/#http-authentication-ad-authorization","text":"Config option: ad-authorization This module is a combination of http-auth and active directory _ LibreNMS will expect the user to have authenticated via your webservice already (e.g. using Kerberos Authentication in Apache) but will use Active Directory lookups to determine and assign the userlevel of a user. The userlevel will be calculated by using AD group membership information as the active directory _ module does. The configuration is the same as for the active directory _ module with two extra, optional options: auth_ad_binduser and auth_ad_bindpassword. These should be set to a AD user with read capabilities in your AD Domain in order to be able to perform searches. If these options are omitted, the module will attempt an anonymous bind (which then of course must be allowed by your Active Directory server(s)). There is also one extra option for controlling user information caching: auth_ldap_cache_ttl. This option allows to control how long user information (user_exists, userid, userlevel) are cached within the PHP Session. The default value is 300 seconds. To disable this caching (highly discourage) set this option to 0. $config [ 'auth_ad_binduser' ] = \"ad_binduser\" ; $config [ 'auth_ad_bindpassword' ] = \"ad_bindpassword\" ; $config [ 'auth_ldap_cache_ttl' ] = 300 ;","title":"HTTP Authentication / AD Authorization"},{"location":"Extensions/Authentication/#http-authentication-ldap-authorization","text":"Config option: ldap-authorization This module is a combination of http-auth and ldap LibreNMS will expect the user to have authenticated via your webservice already (e.g. using Kerberos Authentication in Apache) but will use LDAP to determine and assign the userlevel of a user. The userlevel will be calculated by using LDAP group membership information as the ldap module does. The configuration is the same as for the ldap module with one extra option: auth_ldap_cache_ttl. This option allows to control how long user information (user_exists, userid, userlevel) are cached within the PHP Session. The default value is 300 seconds. To disabled this caching (highly discourage) set this option to 0. $config [ 'auth_ldap_cache_ttl' ] = 300 ;","title":"HTTP Authentication / LDAP Authorization"},{"location":"Extensions/Authentication/#viewembedded-graphs-without-being-logged-into-librenms","text":"$config [ 'allow_unauth_graphs_cidr' ] = array ( '127.0.0.1/32' ); $config [ 'allow_unauth_graphs' ] = true ;","title":"View/embedded graphs without being logged into LibreNMS"},{"location":"Extensions/Authentication/#single-sign-on","text":"The single sign-on mechanism is used to integrate with third party authentication providers that are managed outside of LibreNMS - such as ADFS, Shibboleth, EZProxy, BeyondCorp, and others. A large number of these methods use SAML the module has been written assuming the use of SAML, and therefore these instructions contain some SAML terminology, but it should be possible to use any software that works in a similar way. In order to make use of the single sign-on module, you need to have an Identity Provider up and running, and know how to configure your Relying Party to pass attributes to LibreNMS via header injection or environment variables. Setting these up is outside of the scope of this documentation. As this module deals with authentication, it is extremely careful about validating the configuration - if it finds that certain values in the configuration are not set, it will reject access rather than try and guess.","title":"Single Sign-on"},{"location":"Extensions/Authentication/#basic-configuration","text":"To get up and running, all you need to do is configure the following values: $config [ 'auth_mechanism' ] = \"sso\" ; $config [ 'sso' ][ 'mode' ] = \"env\" ; $config [ 'sso' ][ 'group_strategy' ] = \"static\" ; $config [ 'sso' ][ 'static_level' ] = 10 ; This, along with the defaults, sets up a basic Single Sign-on setup that: Reads values from environment variables Automatically creates users when they're first seen Authomatically updates users with new values Gives everyone privilege level 10 This happens to mimic the behaviour of http-auth , so if this is the kind of setup you want, you're probably better of just going and using that mechanism.","title":"Basic Configuration"},{"location":"Extensions/Authentication/#security","text":"If there is a proxy involved (e.g. EZProxy, Azure AD Application Proxy, NGINX, mod_proxy) it's essential that you have some means in place to prevent headers being injected between the proxy and the end user, and also prevent end users from contacting LibreNMS directly. This should also apply to user connections to the proxy itself - the proxy must not be allowed to blindly pass through HTTP headers. mod security _ should be considered a minimum, with a full WAF being strongly recommended. This advice applies to the IDP too. The mechanism includes very basic protection, in the form of an IP whitelist with should contain the source addresses of your proxies: $config [ 'sso' ][ 'trusted_proxies' ] = [ '127.0.0.1/8' , '::1/128' , '192.0.2.0' , '2001:DB8::' ]; This configuration item should contain an array with a list of IP addresses or CIDR prefixes that are allowed to connect to LibreNMS and supply environment variables or headers.","title":"Security"},{"location":"Extensions/Authentication/#advanced-configuration-options","text":"","title":"Advanced Configuration Options"},{"location":"Extensions/Authentication/#user-attribute","text":"If for some reason your relying party doesn't store the username in REMOTE USER _, you can override this choice. $config [ 'sso' ][ 'user_attr' ] = 'HTTP_UID' ; Note that the user lookup is a little special - normally headers are prefixed with HTTP_ , however this is not the case for remote user - it's a special case. If you're using something different you need to figure out of the HTTP_ prefix is required or not yourself.","title":"User Attribute"},{"location":"Extensions/Authentication/#automatic-user-createupdate","text":"These are enabled by default: $config [ 'sso' ][ 'create_users' ] = true ; $config [ 'sso' ][ 'update_users' ] = true ; If these are not enabled, user logins will be (somewhat silently) rejected unless an administrator has created the account in advance. Note that in the case of SAML federations, unless release of the users true identity has been negotiated with the IDP, the username (probably ePTID) is not likely to be predicable.","title":"Automatic User Create/Update"},{"location":"Extensions/Authentication/#personalisation","text":"If the attributes are being populated, you can instruct the mechanism to add additional information to the user's database entry: $config [ 'sso' ][ 'email_attr' ] = \"mail\" ; $config [ 'sso' ][ 'realname_attr' ] = \"displayName\" ; $config [ 'sso' ][ 'descr_attr' ] = \"unscoped-affiliation","title":"Personalisation"},{"location":"Extensions/Authentication/#group-strategies","text":"","title":"Group Strategies"},{"location":"Extensions/Authentication/#static","text":"As used above, static gives every single user the same privilege level. If you're working with a small team, or don't need access control, this is probably suitable.","title":"Static"},{"location":"Extensions/Authentication/#attribute","text":"$config [ 'sso' ][ 'group_strategy' ] = \"attribute\" ; $config [ 'sso' ][ 'level_attr' ] = \"entitlement\" ; If your Relying Party is capable of calculating the necessary privilege level, you can configure the module to read the privilege number straight from an attribute. sso level_attr should contain the name of the attribute that the Relying Party exposes to LibreNMS - as long as sso mode is correctly set, the mechanism should find the value.","title":"Attribute"},{"location":"Extensions/Authentication/#group-map","text":"This is the most flexible (and complex) way of assigning privileges. $config [ 'sso' ][ 'group_strategy' ] = \"map\" ; $config [ 'sso' ][ 'group_attr' ] = \"member\" ; $config [ 'sso' ][ 'group_level_map' ] = [ 'librenms-admins' => 10 , 'librenms-readers' => 1 , 'librenms-billingcontacts' => 5 ]; $config [ 'sso' ][ 'group_delimiter' ] = ';' ; The mechanism expects to find a delimited list of groups within the attribute that sso group_attr _ points to. This should be an associative array of group name keys, with privilege levels as values. The mechanism will scan the list and find the highest privilege level that the user is entitled to, and assign that value to the user. This format may be specific to Shibboleth; other relying party software may need changes to the mechanism (e.g. mod auth_mellon _ may create pseudo arrays). There is an optional value for sites with large numbers of groups: $config [ 'sso' ][ 'group_filter' ] = \"/librenms-(.*)/i\" ; This filter causes the mechanism to only consider groups matching a regular expression.","title":"Group Map"},{"location":"Extensions/Authentication/#logout-behaviour","text":"LibreNMS has no capability to log out a user authenticated via Single Sign-On - that responsability falls to the Relying Party. If your Relying Party has a magic URL that needs to be called to end a session, you can configure LibreNMS to direct the user to it: $config [ 'post_logout_action' ] = '/Shibboleth.sso/Logout' ; This option functions independantly of the Single Sign-on mechanism.","title":"Logout Behaviour"},{"location":"Extensions/Authentication/#complete-configuration","text":"This configuration works on my deployment with a Shibboleth relying party, injecting environment variables, with the IDP supplying a list of groups. $config [ 'auth_mechanism' ] = 'sso' ; $config [ 'auth_logout_handler' ] = '/Shibboleth.sso/Logout' ; $config [ 'sso' ][ 'mode' ] = 'env' ; $config [ 'sso' ][ 'create_users' ] = true ; $config [ 'sso' ][ 'update_users' ] = true ; $config [ 'sso' ][ 'realname_attr' ] = 'displayName' ; $config [ 'sso' ][ 'email_attr' ] = 'mail' ; $config [ 'sso' ][ 'group_strategy' ] = 'map' ; $config [ 'sso' ][ 'group_attr' ] = 'member' ; $config [ 'sso' ][ 'group_filter' ] = '/(librenms-.*)/i' ; $config [ 'sso' ][ 'group_delimiter' ] = ';' ; $config [ 'sso' ][ 'group_level_map' ] = [ 'librenms-demo' => 11 , 'librenms-globaladmin' => 10 , 'librenms-globalread' => 5 , 'librenms-lowpriv' => 1 ];","title":"Complete Configuration"},{"location":"Extensions/Auto-Discovery/","text":"Auto Discovery Support Getting Started LibreNMS provides the ability to automatically add devices on your network, we can do this via a few methods which will be explained below and also indicate if they are enabled by default. All discovery methods run when discovery runs (every 6 hours by default and within 5 minutes for new devices). Please note that you need at least ONE device added before auto-discovery will work. The first thing to do though is add the required configuration options to config.php . SNMP Details To add devices automatically we need to know your snmp details, examples of SNMP v1, v2c and v3 are below: // v1 or v2c $config [ 'snmp' ][ 'community' ][] = \"my_custom_community\" ; $config [ 'snmp' ][ 'community' ][] = \"another_community\" ; // v3 $config [ 'snmp' ][ 'v3' ][ 0 ][ 'authlevel' ] = 'authPriv' ; $config [ 'snmp' ][ 'v3' ][ 0 ][ 'authname' ] = 'my_username' ; $config [ 'snmp' ][ 'v3' ][ 0 ][ 'authpass' ] = 'my_password' ; $config [ 'snmp' ][ 'v3' ][ 0 ][ 'authalgo' ] = 'SHA' ; $config [ 'snmp' ][ 'v3' ][ 0 ][ 'cryptopass' ] = 'my_crypto' ; $config [ 'snmp' ][ 'v3' ][ 0 ][ 'cryptoalgo' ] = 'AES' ; These details will be attempted when adding devices, you can specify any mixture of these. Allowed Networks Your Networks To add devices, we need to know what are your subnets so we don't go blindly attempting to add devices not under your control. $config [ 'nets' ][] = '192.168.0.0/24' ; $config [ 'nets' ][] = '172.2.4.0/22' ; Exclusions If you have added a network as above but a single device exists within it that you can't auto add, then you can exclude this with the following: $config [ 'autodiscovery' ][ 'nets-exclude' ][] = '192.168.0.1/32' ; Additional Options Discovering devices by IP By default we don't add devices by IP address, we look for a reverse dns name to be found and add with that. If this fails and you would like to still add devices automatically then you will need to set $config['discovery_by_ip'] = true; Short hostnames If your devices only return a short hostname such as lax-fa0-dc01 but the full name should be lax-fa0-dc01.example.com then you can set $config['mydomain'] = 'example.com'; Allow Duplicate sysName By default we require unique sysNames when adding devices (this is returned over snmp by your devices). If you would like to allow devices to be added with duplicate sysNames then please set $config['allow_duplicate_sysName'] = true; . Discovery Methods Below are the methods for auto discovering devices. Each one can be enabled or disabled and may have additional configuration options. ARP Disabled by default. Adds devices that are listed in another device's arp table. This module depends on the arp-table module being enabled and returning data. To enable, switch on globally the $config['discovery_modules']['discovery-arp'] = true; or per device within the Modules section. XDP Enabled by default. $config['autodiscovery']['xdp'] = false; to disable. This includes FDP, CDP and LLDP support based on the device type. The LLDP/xDP links with neighbours will always be discovered as soon as the discovery module is enabled. However, LibreNMS will only try to add the new devices discovered with LLDP/xDP if $config['autodiscovery']['xdp'] = true ; Devices may be excluded from xdp discovery by sysName and sysDescr. //Exclude devices by name $config [ 'autodiscovery' ][ 'xdp_exclude' ][ 'sysname_regexp' ][] = '/host1/' ; $config [ 'autodiscovery' ][ 'xdp_exclude' ][ 'sysname_regexp' ][] = '/^dev/' ; //Exclude devices by description $config [ 'autodiscovery' ][ 'xdp_exclude' ][ 'sysdesc_regexp' ][] = '/Vendor X/' ; $config [ 'autodiscovery' ][ 'xdp_exclude' ][ 'sysdesc_regexp' ][] = '/Vendor Y/' ; Devices may be excluded from cdp discovery by platform. //Exclude devices by platform(Cisco only) $config [ 'autodiscovery' ][ 'cdp_exclude' ][ 'platform_regexp' ][] = '/WS-C3750G/' ; These devices are excluded by default: $config [ 'autodiscovery' ][ 'xdp_exclude' ][ 'sysdesc_regexp' ][] = '/-K9W8-/' ; // Cisco Lightweight Access Point $config [ 'autodiscovery' ][ 'cdp_exclude' ][ 'platform_regexp' ][] = '/^Cisco IP Phone/' ; //Cisco IP Phone OSPF Enabled by default. $config['autodiscovery']['ospf'] = false; to disable. BGP Enabled by default. $config['autodiscovery']['bgp'] = false; to disable. This module is invoked from bgp-peers discovery module. SNMP Scan Apart from the aforementioned Auto-Discovery options, LibreNMS is also able to proactively scan a network for SNMP-enabled devices using the configured version/credentials. SNMP Scan will scan $config['nets'] by default and respects $config['autodiscovery']['nets-exclude'] . To run the SNMP-Scanner you need to execute the snmp-scan.py from within your LibreNMS installation directory. Here the script's help-page for reference: usage: snmp-scan.py [-h] [-r NETWORK] [-t THREADS] [-l] [-v] Scan network for snmp hosts and add them to LibreNMS. optional arguments: -h, --help show this help message and exit -r NETWORK CIDR noted IP-Range to scan. Can be specified multiple times This argument is only required if $config['nets'] is not set Example: 192.168.0.0/24 Example: 192.168.0.0/31 will be treated as an RFC3021 p-t-p network with two addresses, 192.168.0.0 and 192.168.0.1 Example: 192.168.0.1/32 will be treated as a single host address -t THREADS How many IPs to scan at a time. More will increase the scan speed, but could overload your system. Default: 32 -l, --legend Print the legend. -v, --verbose Show debug output. Specifying multiple times increases the verbosity.","title":"Auto-discovery Setup"},{"location":"Extensions/Auto-Discovery/#auto-discovery-support","text":"","title":"Auto Discovery Support"},{"location":"Extensions/Auto-Discovery/#getting-started","text":"LibreNMS provides the ability to automatically add devices on your network, we can do this via a few methods which will be explained below and also indicate if they are enabled by default. All discovery methods run when discovery runs (every 6 hours by default and within 5 minutes for new devices). Please note that you need at least ONE device added before auto-discovery will work. The first thing to do though is add the required configuration options to config.php .","title":"Getting Started"},{"location":"Extensions/Auto-Discovery/#snmp-details","text":"To add devices automatically we need to know your snmp details, examples of SNMP v1, v2c and v3 are below: // v1 or v2c $config [ 'snmp' ][ 'community' ][] = \"my_custom_community\" ; $config [ 'snmp' ][ 'community' ][] = \"another_community\" ; // v3 $config [ 'snmp' ][ 'v3' ][ 0 ][ 'authlevel' ] = 'authPriv' ; $config [ 'snmp' ][ 'v3' ][ 0 ][ 'authname' ] = 'my_username' ; $config [ 'snmp' ][ 'v3' ][ 0 ][ 'authpass' ] = 'my_password' ; $config [ 'snmp' ][ 'v3' ][ 0 ][ 'authalgo' ] = 'SHA' ; $config [ 'snmp' ][ 'v3' ][ 0 ][ 'cryptopass' ] = 'my_crypto' ; $config [ 'snmp' ][ 'v3' ][ 0 ][ 'cryptoalgo' ] = 'AES' ; These details will be attempted when adding devices, you can specify any mixture of these.","title":"SNMP Details"},{"location":"Extensions/Auto-Discovery/#allowed-networks","text":"","title":"Allowed Networks"},{"location":"Extensions/Auto-Discovery/#your-networks","text":"To add devices, we need to know what are your subnets so we don't go blindly attempting to add devices not under your control. $config [ 'nets' ][] = '192.168.0.0/24' ; $config [ 'nets' ][] = '172.2.4.0/22' ;","title":"Your Networks"},{"location":"Extensions/Auto-Discovery/#exclusions","text":"If you have added a network as above but a single device exists within it that you can't auto add, then you can exclude this with the following: $config [ 'autodiscovery' ][ 'nets-exclude' ][] = '192.168.0.1/32' ;","title":"Exclusions"},{"location":"Extensions/Auto-Discovery/#additional-options","text":"","title":"Additional Options"},{"location":"Extensions/Auto-Discovery/#discovering-devices-by-ip","text":"By default we don't add devices by IP address, we look for a reverse dns name to be found and add with that. If this fails and you would like to still add devices automatically then you will need to set $config['discovery_by_ip'] = true;","title":"Discovering devices by IP"},{"location":"Extensions/Auto-Discovery/#short-hostnames","text":"If your devices only return a short hostname such as lax-fa0-dc01 but the full name should be lax-fa0-dc01.example.com then you can set $config['mydomain'] = 'example.com';","title":"Short hostnames"},{"location":"Extensions/Auto-Discovery/#allow-duplicate-sysname","text":"By default we require unique sysNames when adding devices (this is returned over snmp by your devices). If you would like to allow devices to be added with duplicate sysNames then please set $config['allow_duplicate_sysName'] = true; .","title":"Allow Duplicate sysName"},{"location":"Extensions/Auto-Discovery/#discovery-methods","text":"Below are the methods for auto discovering devices. Each one can be enabled or disabled and may have additional configuration options.","title":"Discovery Methods"},{"location":"Extensions/Auto-Discovery/#arp","text":"Disabled by default. Adds devices that are listed in another device's arp table. This module depends on the arp-table module being enabled and returning data. To enable, switch on globally the $config['discovery_modules']['discovery-arp'] = true; or per device within the Modules section.","title":"ARP"},{"location":"Extensions/Auto-Discovery/#xdp","text":"Enabled by default. $config['autodiscovery']['xdp'] = false; to disable. This includes FDP, CDP and LLDP support based on the device type. The LLDP/xDP links with neighbours will always be discovered as soon as the discovery module is enabled. However, LibreNMS will only try to add the new devices discovered with LLDP/xDP if $config['autodiscovery']['xdp'] = true ; Devices may be excluded from xdp discovery by sysName and sysDescr. //Exclude devices by name $config [ 'autodiscovery' ][ 'xdp_exclude' ][ 'sysname_regexp' ][] = '/host1/' ; $config [ 'autodiscovery' ][ 'xdp_exclude' ][ 'sysname_regexp' ][] = '/^dev/' ; //Exclude devices by description $config [ 'autodiscovery' ][ 'xdp_exclude' ][ 'sysdesc_regexp' ][] = '/Vendor X/' ; $config [ 'autodiscovery' ][ 'xdp_exclude' ][ 'sysdesc_regexp' ][] = '/Vendor Y/' ; Devices may be excluded from cdp discovery by platform. //Exclude devices by platform(Cisco only) $config [ 'autodiscovery' ][ 'cdp_exclude' ][ 'platform_regexp' ][] = '/WS-C3750G/' ; These devices are excluded by default: $config [ 'autodiscovery' ][ 'xdp_exclude' ][ 'sysdesc_regexp' ][] = '/-K9W8-/' ; // Cisco Lightweight Access Point $config [ 'autodiscovery' ][ 'cdp_exclude' ][ 'platform_regexp' ][] = '/^Cisco IP Phone/' ; //Cisco IP Phone","title":"XDP"},{"location":"Extensions/Auto-Discovery/#ospf","text":"Enabled by default. $config['autodiscovery']['ospf'] = false; to disable.","title":"OSPF"},{"location":"Extensions/Auto-Discovery/#bgp","text":"Enabled by default. $config['autodiscovery']['bgp'] = false; to disable. This module is invoked from bgp-peers discovery module.","title":"BGP"},{"location":"Extensions/Auto-Discovery/#snmp-scan","text":"Apart from the aforementioned Auto-Discovery options, LibreNMS is also able to proactively scan a network for SNMP-enabled devices using the configured version/credentials. SNMP Scan will scan $config['nets'] by default and respects $config['autodiscovery']['nets-exclude'] . To run the SNMP-Scanner you need to execute the snmp-scan.py from within your LibreNMS installation directory. Here the script's help-page for reference: usage: snmp-scan.py [-h] [-r NETWORK] [-t THREADS] [-l] [-v] Scan network for snmp hosts and add them to LibreNMS. optional arguments: -h, --help show this help message and exit -r NETWORK CIDR noted IP-Range to scan. Can be specified multiple times This argument is only required if $config['nets'] is not set Example: 192.168.0.0/24 Example: 192.168.0.0/31 will be treated as an RFC3021 p-t-p network with two addresses, 192.168.0.0 and 192.168.0.1 Example: 192.168.0.1/32 will be treated as a single host address -t THREADS How many IPs to scan at a time. More will increase the scan speed, but could overload your system. Default: 32 -l, --legend Print the legend. -v, --verbose Show debug output. Specifying multiple times increases the verbosity.","title":"SNMP Scan"},{"location":"Extensions/Billing-Module/","text":"Billing Module With the billing module you can create a bill, assign a quota to it and add ports to it. It then tracks the ports usage and shows you the usage in the bill, including any overage. Accounting by both total transferred data and 95th percentile is supported. To enable and use the billing module you need to perform the following steps: Edit config.php and add (or enable) the following line near the end of the config $config [ 'enable_billing' ] = 1 ; # Enable Billing Edit /etc/cron.d/librenms and add the following: */5 * * * * librenms /opt/librenms/poll-billing.php >> /dev/null 2 > & 1 01 * * * * librenms /opt/librenms/billing-calculate.php >> /dev/null 2 > & 1 Create billing graphs as required. Data Retention Billing data is stored in the MySQL database, and you may wish to purge the detailed stats for old data (per-month totals will always be kept). To enable this, add the following to config.php : $config [ 'billing_data_purge' ] = 12 ; // Number of months to retain Data for the last complete billing cycle will always be retained - only data older than this by the configured number of months will be removed. This task is performed in the daily cleanup tasks. 95th Percentile Calculation For 95th Percentile billing, the default behavior is to use the highest of the input or output 95th Percentile calculation. To instead use the combined total of inout + output to derive the 95th percentile, This can be changed on a per bill basis by setting 95th Calculation to \"Aggregate\". To change the default option to Aggregate, add the following the config.php : $config [ 'billing' ][ '95th_default_agg' ] = 1 ; // Set aggregate 95th as default This configuration setting is cosmetic and only changes the default selected option when adding a new bill.","title":"Billing Module"},{"location":"Extensions/Billing-Module/#billing-module","text":"With the billing module you can create a bill, assign a quota to it and add ports to it. It then tracks the ports usage and shows you the usage in the bill, including any overage. Accounting by both total transferred data and 95th percentile is supported. To enable and use the billing module you need to perform the following steps: Edit config.php and add (or enable) the following line near the end of the config $config [ 'enable_billing' ] = 1 ; # Enable Billing Edit /etc/cron.d/librenms and add the following: */5 * * * * librenms /opt/librenms/poll-billing.php >> /dev/null 2 > & 1 01 * * * * librenms /opt/librenms/billing-calculate.php >> /dev/null 2 > & 1 Create billing graphs as required.","title":"Billing Module"},{"location":"Extensions/Billing-Module/#data-retention","text":"Billing data is stored in the MySQL database, and you may wish to purge the detailed stats for old data (per-month totals will always be kept). To enable this, add the following to config.php : $config [ 'billing_data_purge' ] = 12 ; // Number of months to retain Data for the last complete billing cycle will always be retained - only data older than this by the configured number of months will be removed. This task is performed in the daily cleanup tasks.","title":"Data Retention"},{"location":"Extensions/Billing-Module/#95th-percentile-calculation","text":"For 95th Percentile billing, the default behavior is to use the highest of the input or output 95th Percentile calculation. To instead use the combined total of inout + output to derive the 95th percentile, This can be changed on a per bill basis by setting 95th Calculation to \"Aggregate\". To change the default option to Aggregate, add the following the config.php : $config [ 'billing' ][ '95th_default_agg' ] = 1 ; // Set aggregate 95th as default This configuration setting is cosmetic and only changes the default selected option when adding a new bill.","title":"95th Percentile Calculation"},{"location":"Extensions/Component/","text":"About The Component extension provides a generic database storage mechanism for discovery and poller modules. The Driver behind this extension was to provide the features of ports, in a generic manner to discovery/poller modules. It provides a status (Nagios convention), the ability to Disable (do not poll), or Ignore (do not Alert). Database Structure The database structure contains the component table: mysql > select * from component limit 1 ; + ----+-----------+------+------------+--------+----------+--------+-------+ | id | device_id | type | label | status | disabled | ignore | error | + ----+-----------+------+------------+--------+----------+--------+-------+ | 9 | 1 | TEST | TEST LABEL | 0 | 1 | 1 | | + ----+-----------+------+------------+--------+----------+--------+-------+ 1 row in set ( 0 . 00 sec ) These fields are described below: id - ID for each component, unique index device_id - device_id from the devices table type - name from the component_type table label - Display label for the component status - The status of the component, retrieved from the device disabled - Should this component be polled? ignore - Should this component be alerted on error - Error message if in Alert state The component_prefs table holds custom data in an Attribute/Value format: mysql > select * from component_prefs limit 1 ; + ----+-----------+-----------+-----------+ | id | component | attribute | value | + ----+-----------+-----------+-----------+ | 4 | 9 | TEST_ATTR | TEST_ATTR | + ----+-----------+-----------+-----------+ 2 rows in set ( 0 . 00 sec ) Reserved Fields When this data from both the component and component_prefs tables is returned in one single consolidated array, there is the potential for someone to attempt to set an attribute (in the component_prefs ) table that is used in the component table. Because of this all fields of the component table are reserved, they cannot be used as custom attributes, if you update these the module will attempt to write them to the component table, not the component_prefs table. Using Components Create an instance of the component class: $COMPONENT = new LibreNMS\\Component (); Retrieving Components Now you can retrieve an array of the available components: $ARRAY = $COMPONENT -> getComponents ( $DEVICE_ID , $OPTIONS ); getComponents takes 2 arguments: DEVICE_ID or null for all devices. OPTIONS - an array of various options. getComponents will return an array containing components in the following format: Array ( [ X ] => Array ( [ Y1 ] => Array ( [ device_id ] => 1 [ TEST_ATTR ] => TEST_ATTR [ type ] => TEST [ label ] => TEST LABEL [ status ] => 0 [ ignore ] => 1 [ disabled ] => 1 [ error ] => ), [ Y2 ] => Array ( [ device_id ] => 1 [ TEST_ATTR ] => TEST_ATTR [ type ] => TESTING [ label ] => TEST LABEL [ status ] => 0 [ ignore ] => 1 [ disabled ] => 0 [ error ] => ), ) ) Where X is the Device ID and Y1/Y2 is the Component ID. In the example above, TEST_ATTR is a custom field, the rest are reserved fields. Options Options can be supplied to getComponents to influence which and how components are returned. Filtering You can filter on any of the reserved fields. Filters are created in the following format: $options [ 'filter' ][ 'FIELD' ] = array ( 'OPERATOR' , 'CRITERIA' ); Where: FIELD - The reserved field to filter on OPERATOR - 'LIKE' or '=', are we checking if the FIELD equals or contains the CRITERIA. CRITERIA - The criteria to search on There are 2 filtering shortcuts: $DEVICE_ID is a synonym for: $OPTIONS [ 'filter' ][ 'device_id' ] = array ( '=' , $DEVICE_ID ); $OPTIONS['type'] = $TYPE is a synonym for: $OPTIONS [ 'filter' ][ 'type' ] = array ( '=' , $TYPE ); Sorting You can sort the records that are returned by specifying the following option: $OPTIONS [ 'sort' ][ FIELD ] = 'DIRECTION' ; Where Direction is one of: ASC - Ascending, from Low to High DESC - Descending, from High to Low Creating Components To create a new component, run the createComponent function. $ARRAY = $COMPONENT -> createComponent ( $DEVICE_ID , $TYPE ); createComponent takes 2 arguments: DEVICE_ID - The ID of the device to attach the component to. TYPE - The unique type for your module. This will return a new, empty array with a component ID and Type set, all other fields will be set to defaults. Array ( [ 1 ] => Array ( [ type ] => TESTING [ label ] => [ status ] => 1 [ ignore ] => 0 [ disabled ] => 0 [ error ] => ) ) Deleting Components When a component is no longer needed, it can be deleted. $COMPONENT -> deleteComponent ( $COMPONENT_ID ) This will return True on success or False on failure. Editing Components To edit a component, the procedure is: Get the Current Components Edit the array Write the components Edit the Array Once you have a component array from getComponents the first thing to do is extract the components for only the single device you are editing. This is required because the setComponentPrefs function only saves a single device at a time. $ARRAY = $COMPONENT -> getComponents ( $DEVICE_ID , $OPTIONS ); $ARRAY = $ARRAY [ $DEVICE_ID ]; Then simply edit this array to suit your needs. If you need to add a new Attribute/Value pair you can: $ARRAY [ COMPONENT_ID ][ 'New Attribute' ] = \"Value\" ; If you need to delete a previously set Attribute/Value pair you can: unset ( $ARRAY [ COMPONENT_ID ][ 'New Attribute' ]); If you need to edit a previously set Attribute/Value pair you can: $ARRAY [ COMPONENT_ID ][ 'Existing Attribute' ] = \"New Value\" ; Write the components To write component changes back to the database simply: $COMPONENT -> setComponentPrefs ( $DEVICE_ID , $ARRAY ) When writing the component array there are several caveats to be aware of, these are: $ARRAY must be in the format of a single device ID - $ARRAY[$COMPONENT_ID][Attribute] = 'Value'; NOT in the multi device format returned by getComponents - $ARRAY[$DEVICE_ID][$COMPONENT_ID][Attribute] = 'Value'; You cannot edit the Component ID or the Device ID reserved fields can not be removed if a change is found an entry will be written to the eventlog. API Component details are available via the API. Please see the API-Docs for details. Alerting It is intended that discovery/poller modules will detect the status of a component during the polling cycle. Status is logged using the Nagios convention for status codes, where: 0 = Ok, 1 = Warning, 2 = Critical If you are creating a poller module which can detect a fault condition simply set STATUS to something other than 0 and ERROR to a message that indicates the problem. To actually raise an alert, the user will need to create an alert rule. To assist with this several Alerting Macro's have been created: %macro.component_normal - A component that is not disabled or ignored and in a Normal state. %macro.component_warning - A component that is not disabled or ignored and NOT in a Warning state. %macro.component_critical - A component that is not disabled or ignored and NOT in a Critical state. To raise alerts for components, the following rules could be created: %macros.component_critical = \"1\" - To alert on all Critical components %macros.component_critical = \"1\" && %component.type = \"<Type of Component>\" - To alert on all Critical components of a particular type. If there is a particular component you would like excluded from alerting, simply set the ignore field to 1. The data that is written to each alert when it is raised is in the following format: COMPONENT_TYPE - LABEL - ERROR Example Code To see an example of how the component module can used, please see the following modules: Cisco CBQoS includes/discovery/cisco-cbqos.inc.php includes/polling/cisco-cbqos.inc.php html/includes/graphs/device/cbqos_traffic.inc.php Cisco OTV includes/discovery/cisco-otv.inc.php includes/polling/cisco-otv.inc.php html/includes/graphs/device/cisco-otv-mac.inc.php html/pages/routing/cisco-otv.inc.php","title":"Component"},{"location":"Extensions/Component/#about","text":"The Component extension provides a generic database storage mechanism for discovery and poller modules. The Driver behind this extension was to provide the features of ports, in a generic manner to discovery/poller modules. It provides a status (Nagios convention), the ability to Disable (do not poll), or Ignore (do not Alert).","title":"About"},{"location":"Extensions/Component/#database-structure","text":"The database structure contains the component table: mysql > select * from component limit 1 ; + ----+-----------+------+------------+--------+----------+--------+-------+ | id | device_id | type | label | status | disabled | ignore | error | + ----+-----------+------+------------+--------+----------+--------+-------+ | 9 | 1 | TEST | TEST LABEL | 0 | 1 | 1 | | + ----+-----------+------+------------+--------+----------+--------+-------+ 1 row in set ( 0 . 00 sec ) These fields are described below: id - ID for each component, unique index device_id - device_id from the devices table type - name from the component_type table label - Display label for the component status - The status of the component, retrieved from the device disabled - Should this component be polled? ignore - Should this component be alerted on error - Error message if in Alert state The component_prefs table holds custom data in an Attribute/Value format: mysql > select * from component_prefs limit 1 ; + ----+-----------+-----------+-----------+ | id | component | attribute | value | + ----+-----------+-----------+-----------+ | 4 | 9 | TEST_ATTR | TEST_ATTR | + ----+-----------+-----------+-----------+ 2 rows in set ( 0 . 00 sec )","title":"Database Structure"},{"location":"Extensions/Component/#reserved-fields","text":"When this data from both the component and component_prefs tables is returned in one single consolidated array, there is the potential for someone to attempt to set an attribute (in the component_prefs ) table that is used in the component table. Because of this all fields of the component table are reserved, they cannot be used as custom attributes, if you update these the module will attempt to write them to the component table, not the component_prefs table.","title":"Reserved Fields"},{"location":"Extensions/Component/#using-components","text":"Create an instance of the component class: $COMPONENT = new LibreNMS\\Component ();","title":"Using Components"},{"location":"Extensions/Component/#retrieving-components","text":"Now you can retrieve an array of the available components: $ARRAY = $COMPONENT -> getComponents ( $DEVICE_ID , $OPTIONS ); getComponents takes 2 arguments: DEVICE_ID or null for all devices. OPTIONS - an array of various options. getComponents will return an array containing components in the following format: Array ( [ X ] => Array ( [ Y1 ] => Array ( [ device_id ] => 1 [ TEST_ATTR ] => TEST_ATTR [ type ] => TEST [ label ] => TEST LABEL [ status ] => 0 [ ignore ] => 1 [ disabled ] => 1 [ error ] => ), [ Y2 ] => Array ( [ device_id ] => 1 [ TEST_ATTR ] => TEST_ATTR [ type ] => TESTING [ label ] => TEST LABEL [ status ] => 0 [ ignore ] => 1 [ disabled ] => 0 [ error ] => ), ) ) Where X is the Device ID and Y1/Y2 is the Component ID. In the example above, TEST_ATTR is a custom field, the rest are reserved fields.","title":"Retrieving Components"},{"location":"Extensions/Component/#options","text":"Options can be supplied to getComponents to influence which and how components are returned.","title":"Options"},{"location":"Extensions/Component/#filtering","text":"You can filter on any of the reserved fields. Filters are created in the following format: $options [ 'filter' ][ 'FIELD' ] = array ( 'OPERATOR' , 'CRITERIA' ); Where: FIELD - The reserved field to filter on OPERATOR - 'LIKE' or '=', are we checking if the FIELD equals or contains the CRITERIA. CRITERIA - The criteria to search on There are 2 filtering shortcuts: $DEVICE_ID is a synonym for: $OPTIONS [ 'filter' ][ 'device_id' ] = array ( '=' , $DEVICE_ID ); $OPTIONS['type'] = $TYPE is a synonym for: $OPTIONS [ 'filter' ][ 'type' ] = array ( '=' , $TYPE );","title":"Filtering"},{"location":"Extensions/Component/#sorting","text":"You can sort the records that are returned by specifying the following option: $OPTIONS [ 'sort' ][ FIELD ] = 'DIRECTION' ; Where Direction is one of: ASC - Ascending, from Low to High DESC - Descending, from High to Low","title":"Sorting"},{"location":"Extensions/Component/#creating-components","text":"To create a new component, run the createComponent function. $ARRAY = $COMPONENT -> createComponent ( $DEVICE_ID , $TYPE ); createComponent takes 2 arguments: DEVICE_ID - The ID of the device to attach the component to. TYPE - The unique type for your module. This will return a new, empty array with a component ID and Type set, all other fields will be set to defaults. Array ( [ 1 ] => Array ( [ type ] => TESTING [ label ] => [ status ] => 1 [ ignore ] => 0 [ disabled ] => 0 [ error ] => ) )","title":"Creating Components"},{"location":"Extensions/Component/#deleting-components","text":"When a component is no longer needed, it can be deleted. $COMPONENT -> deleteComponent ( $COMPONENT_ID ) This will return True on success or False on failure.","title":"Deleting Components"},{"location":"Extensions/Component/#editing-components","text":"To edit a component, the procedure is: Get the Current Components Edit the array Write the components","title":"Editing Components"},{"location":"Extensions/Component/#edit-the-array","text":"Once you have a component array from getComponents the first thing to do is extract the components for only the single device you are editing. This is required because the setComponentPrefs function only saves a single device at a time. $ARRAY = $COMPONENT -> getComponents ( $DEVICE_ID , $OPTIONS ); $ARRAY = $ARRAY [ $DEVICE_ID ]; Then simply edit this array to suit your needs. If you need to add a new Attribute/Value pair you can: $ARRAY [ COMPONENT_ID ][ 'New Attribute' ] = \"Value\" ; If you need to delete a previously set Attribute/Value pair you can: unset ( $ARRAY [ COMPONENT_ID ][ 'New Attribute' ]); If you need to edit a previously set Attribute/Value pair you can: $ARRAY [ COMPONENT_ID ][ 'Existing Attribute' ] = \"New Value\" ;","title":"Edit the Array"},{"location":"Extensions/Component/#write-the-components","text":"To write component changes back to the database simply: $COMPONENT -> setComponentPrefs ( $DEVICE_ID , $ARRAY ) When writing the component array there are several caveats to be aware of, these are: $ARRAY must be in the format of a single device ID - $ARRAY[$COMPONENT_ID][Attribute] = 'Value'; NOT in the multi device format returned by getComponents - $ARRAY[$DEVICE_ID][$COMPONENT_ID][Attribute] = 'Value'; You cannot edit the Component ID or the Device ID reserved fields can not be removed if a change is found an entry will be written to the eventlog.","title":"Write the components"},{"location":"Extensions/Component/#api","text":"Component details are available via the API. Please see the API-Docs for details.","title":"API"},{"location":"Extensions/Component/#alerting","text":"It is intended that discovery/poller modules will detect the status of a component during the polling cycle. Status is logged using the Nagios convention for status codes, where: 0 = Ok, 1 = Warning, 2 = Critical If you are creating a poller module which can detect a fault condition simply set STATUS to something other than 0 and ERROR to a message that indicates the problem. To actually raise an alert, the user will need to create an alert rule. To assist with this several Alerting Macro's have been created: %macro.component_normal - A component that is not disabled or ignored and in a Normal state. %macro.component_warning - A component that is not disabled or ignored and NOT in a Warning state. %macro.component_critical - A component that is not disabled or ignored and NOT in a Critical state. To raise alerts for components, the following rules could be created: %macros.component_critical = \"1\" - To alert on all Critical components %macros.component_critical = \"1\" && %component.type = \"<Type of Component>\" - To alert on all Critical components of a particular type. If there is a particular component you would like excluded from alerting, simply set the ignore field to 1. The data that is written to each alert when it is raised is in the following format: COMPONENT_TYPE - LABEL - ERROR","title":"Alerting"},{"location":"Extensions/Component/#example-code","text":"To see an example of how the component module can used, please see the following modules: Cisco CBQoS includes/discovery/cisco-cbqos.inc.php includes/polling/cisco-cbqos.inc.php html/includes/graphs/device/cbqos_traffic.inc.php Cisco OTV includes/discovery/cisco-otv.inc.php includes/polling/cisco-otv.inc.php html/includes/graphs/device/cisco-otv-mac.inc.php html/pages/routing/cisco-otv.inc.php","title":"Example Code"},{"location":"Extensions/Customizing-the-Web-UI/","text":"Customizing the Web UI Custom menu entry Create the file resources/views/menu/custom.blade.php Example contents: <li class=\"dropdown\"> <a href=\"#\" class=\"dropdown-toggle\" data-hover=\"dropdown\" data-toggle=\"dropdown\"><i class=\"fa fa-star fa-fw fa-lg fa-nav-icons hidden-md\" aria-hidden=\"true\"></i> <span class=\"hidden-sm\">Custom Menu</span></a> <ul class=\"dropdown-menu\"> @admin <li><a href=\"plugins/Weathermap/output/history/index.html\"><i class=\"fa fa-film fa-fw fa-lg\" aria-hidden=\"true\"></i> Weathermap Animation</a></li> <li role=\"presentation\" class=\"divider\"></li> <li><a href=\"#\"><i class=\"fa fa-database fa-fw fa-lg\" aria-hidden=\"true\"></i> Item 1</a></li> <li><a href=\"#\"><i class=\"fa fa-smile-o fa-fw fa-lg\" aria-hidden=\"true\"></i> Item 2</a></li> <li><a href=\"#\"><i class=\"fa fa-anchor fa-fw fa-lg\" aria-hidden=\"true\"></i> Item 3</a></li> <li><a href=\"#\"><i class=\"fa fa-plug fa-fw fa-lg\" aria-hidden=\"true\"></i> Item 4</a></li> <li><a href=\"#\"><i class=\"fa fa-code-fork fa-fw fa-lg\" aria-hidden=\"true\"></i> Item 5</a></li> <li><a href=\"#\"><i class=\"fa fa-truck fa-fw fa-lg\" aria-hidden=\"true\"></i> Item 63</a></li> @else <li><a href=\"#\">You need admin rights to see this</a></li> @endadmin </ul> </li> Custom device menu entry You can add custom external links in the menu on the device page. This feature allows you to easily link applications to related systems, as shown in the example of Open-audIT. The Links value is parsed by Laravel Blade's templating engine so you can use Device variables such as hostname , sysName and more. config.php: $config [ 'html' ][ 'device' ][ 'links' ][] = [ 'url' => 'http://atssrv/open-audit/index/devices/{{ $device[\\'sysName\\'] }}' , 'title' => 'Open-AudIT' ];","title":"Customizing the Web UI"},{"location":"Extensions/Customizing-the-Web-UI/#customizing-the-web-ui","text":"","title":"Customizing the Web UI"},{"location":"Extensions/Customizing-the-Web-UI/#custom-menu-entry","text":"Create the file resources/views/menu/custom.blade.php Example contents: <li class=\"dropdown\"> <a href=\"#\" class=\"dropdown-toggle\" data-hover=\"dropdown\" data-toggle=\"dropdown\"><i class=\"fa fa-star fa-fw fa-lg fa-nav-icons hidden-md\" aria-hidden=\"true\"></i> <span class=\"hidden-sm\">Custom Menu</span></a> <ul class=\"dropdown-menu\"> @admin <li><a href=\"plugins/Weathermap/output/history/index.html\"><i class=\"fa fa-film fa-fw fa-lg\" aria-hidden=\"true\"></i> Weathermap Animation</a></li> <li role=\"presentation\" class=\"divider\"></li> <li><a href=\"#\"><i class=\"fa fa-database fa-fw fa-lg\" aria-hidden=\"true\"></i> Item 1</a></li> <li><a href=\"#\"><i class=\"fa fa-smile-o fa-fw fa-lg\" aria-hidden=\"true\"></i> Item 2</a></li> <li><a href=\"#\"><i class=\"fa fa-anchor fa-fw fa-lg\" aria-hidden=\"true\"></i> Item 3</a></li> <li><a href=\"#\"><i class=\"fa fa-plug fa-fw fa-lg\" aria-hidden=\"true\"></i> Item 4</a></li> <li><a href=\"#\"><i class=\"fa fa-code-fork fa-fw fa-lg\" aria-hidden=\"true\"></i> Item 5</a></li> <li><a href=\"#\"><i class=\"fa fa-truck fa-fw fa-lg\" aria-hidden=\"true\"></i> Item 63</a></li> @else <li><a href=\"#\">You need admin rights to see this</a></li> @endadmin </ul> </li>","title":"Custom menu entry"},{"location":"Extensions/Customizing-the-Web-UI/#custom-device-menu-entry","text":"You can add custom external links in the menu on the device page. This feature allows you to easily link applications to related systems, as shown in the example of Open-audIT. The Links value is parsed by Laravel Blade's templating engine so you can use Device variables such as hostname , sysName and more. config.php: $config [ 'html' ][ 'device' ][ 'links' ][] = [ 'url' => 'http://atssrv/open-audit/index/devices/{{ $device[\\'sysName\\'] }}' , 'title' => 'Open-AudIT' ];","title":"Custom device menu entry"},{"location":"Extensions/Dashboards/","text":"Dashboards Create customised dashboards in LibreNMS per user. You can share dashboards with other users. You can also make a custom dashboard and default it for all users in LibreNMS. Example Dashboard Widgets LibreNMS has a whole list of Widgets to select from. Alerts Widget: Displays all alert notifications. Availability Map: Displays all devices with colored tiles, green up, yellow for warning (device has been restarted in last 24 hours),red for down. You can also list all services and ignored/disabled devcies in this widget. Componet Status: List all componets Ok state, Warning state, Critical state. Device Summary horizontal: List device totals, up, down, ignored, disabled. Same for ports and services. Device Summary vertical: List device totals, up, down, ignored, disabled. Same for ports and services. Eventlog: Displays all events with your devices and LibreNMS. External Image: can be used to show external images on your dashboard. Or images from inside LibreNMS. Globe Map: Will display map of the globe. Graph: Can be used to display graphs from devices. Graylog: Displays all Graylog's syslog entries. Notes: use for html tags, embed links and external web pages. Or just notes in general. Server Stats: Will display gauges for CPU, Memory, Storage usage. Note the device type has to be listed as \"Server\". Syslog: Displays all syslog entries. Top Devices: By Traffic, or Uptime, or Response time, or Poller Duration, or Procssor load, or Memory Usage, or Storage Usage. Top Interfaces: Lists top interfaces by traffic utilization. Worldmap: displays all your devices locations. From syslocation or from override sysLocation. List of Widgets: Dashboard Permissions Private: Sets the dashabord to only the user that created the dashboard can view and edit. Shared Read: Sets the dashboard to allow other users to view the dashboard, but cant make changes to the dashboard. Shared: Allows all users to view the dashboard and make changes. Setting a global default dashboard Step 1: Set the dashboard to either shared read or shared, depending on what you want the users access to change. Step 2: Then go to Settings -> WebUI settings -> Dashboard Settings and set the global default dashboard. Setting embeded webpage Using the Notes Widget. < iframe src = \"your_url\" frameBorder = \"0\" width = \"100%\" height = \"100%\" > < p > Your browser does not support iframes. </ p > </ iframe > Note you may need to play with the width and height and also size your widget properly. src=\"url\" needs to be URL to webpage your linking to. Also some web pages may not support html embeded or iframe. How to create ports graph In the dashboard, you want to create an interface graph select the widget called 'Graph' then select \"Port\" \"Bits\" Note: you can map the port by description or the alias or by port id. You will need to know this in order to map the port to the graph. Dimension parameter replacement for Generic-image widget When using the Generic-image widget you can provide the width and height of the widget with your request. This will ensure that the image will fit nicely with the dimensions if the Generic-image widget. You can add @AUTO_HEIGHT@ and @AUTO_WIDTH@ to the Image URL as parameters. Examples: http://librenms.example.com/graph.php?id=333%2C444&type=multiport_bits_separate&legend=no&absolute=1&from=-14200&width=@AUTO_WIDTH@&height=@AUTO_HEIGHT@ http://example.com/myimage.php?size=@AUTO_WIDTH@x@AUTO_HEIGHT@","title":"Dashboards"},{"location":"Extensions/Dashboards/#dashboards","text":"Create customised dashboards in LibreNMS per user. You can share dashboards with other users. You can also make a custom dashboard and default it for all users in LibreNMS. Example Dashboard","title":"Dashboards"},{"location":"Extensions/Dashboards/#widgets","text":"LibreNMS has a whole list of Widgets to select from. Alerts Widget: Displays all alert notifications. Availability Map: Displays all devices with colored tiles, green up, yellow for warning (device has been restarted in last 24 hours),red for down. You can also list all services and ignored/disabled devcies in this widget. Componet Status: List all componets Ok state, Warning state, Critical state. Device Summary horizontal: List device totals, up, down, ignored, disabled. Same for ports and services. Device Summary vertical: List device totals, up, down, ignored, disabled. Same for ports and services. Eventlog: Displays all events with your devices and LibreNMS. External Image: can be used to show external images on your dashboard. Or images from inside LibreNMS. Globe Map: Will display map of the globe. Graph: Can be used to display graphs from devices. Graylog: Displays all Graylog's syslog entries. Notes: use for html tags, embed links and external web pages. Or just notes in general. Server Stats: Will display gauges for CPU, Memory, Storage usage. Note the device type has to be listed as \"Server\". Syslog: Displays all syslog entries. Top Devices: By Traffic, or Uptime, or Response time, or Poller Duration, or Procssor load, or Memory Usage, or Storage Usage. Top Interfaces: Lists top interfaces by traffic utilization. Worldmap: displays all your devices locations. From syslocation or from override sysLocation. List of Widgets:","title":"Widgets"},{"location":"Extensions/Dashboards/#dashboard-permissions","text":"Private: Sets the dashabord to only the user that created the dashboard can view and edit. Shared Read: Sets the dashboard to allow other users to view the dashboard, but cant make changes to the dashboard. Shared: Allows all users to view the dashboard and make changes.","title":"Dashboard Permissions"},{"location":"Extensions/Dashboards/#setting-a-global-default-dashboard","text":"Step 1: Set the dashboard to either shared read or shared, depending on what you want the users access to change. Step 2: Then go to Settings -> WebUI settings -> Dashboard Settings and set the global default dashboard.","title":"Setting a global default dashboard"},{"location":"Extensions/Dashboards/#setting-embeded-webpage","text":"Using the Notes Widget. < iframe src = \"your_url\" frameBorder = \"0\" width = \"100%\" height = \"100%\" > < p > Your browser does not support iframes. </ p > </ iframe > Note you may need to play with the width and height and also size your widget properly. src=\"url\" needs to be URL to webpage your linking to. Also some web pages may not support html embeded or iframe.","title":"Setting embeded webpage"},{"location":"Extensions/Dashboards/#how-to-create-ports-graph","text":"In the dashboard, you want to create an interface graph select the widget called 'Graph' then select \"Port\" \"Bits\" Note: you can map the port by description or the alias or by port id. You will need to know this in order to map the port to the graph.","title":"How to create ports graph"},{"location":"Extensions/Dashboards/#dimension-parameter-replacement-for-generic-image-widget","text":"When using the Generic-image widget you can provide the width and height of the widget with your request. This will ensure that the image will fit nicely with the dimensions if the Generic-image widget. You can add @AUTO_HEIGHT@ and @AUTO_WIDTH@ to the Image URL as parameters. Examples: http://librenms.example.com/graph.php?id=333%2C444&type=multiport_bits_separate&legend=no&absolute=1&from=-14200&width=@AUTO_WIDTH@&height=@AUTO_HEIGHT@ http://example.com/myimage.php?size=@AUTO_WIDTH@x@AUTO_HEIGHT@","title":"Dimension parameter replacement for Generic-image widget"},{"location":"Extensions/Dell-OpenManage/","text":"Dell OpenManage Support For Dell OpenManage support you will need to install Dell OpenManage (yeah - really :)) (minimum 5.1) onto the device you want to monitor. Ensure that net-snmp is using srvadmin, you should see something similar to: master agentx view all included .1 access notConfigGroup \"\" any noauth exact all none none smuxpeer .1.3.6.1.4.1.674.10892.1 Restart net-snmp: service snmpd restart Ensure that srvadmin is started, this is usually done by executing: /opt/dell/srvadmin/sbin/srvadmin-services.sh start Once this has been done, add the device to LibreNMS as normal and you will start to receive Temperatures and Fanspeed data. Windows Download OpenManage from Dell's support page Link and install OpenManage onyour windows server. Make sure you have SNMP setup and running on your windows server.","title":"Dell OpenManage"},{"location":"Extensions/Dell-OpenManage/#dell-openmanage-support","text":"For Dell OpenManage support you will need to install Dell OpenManage (yeah - really :)) (minimum 5.1) onto the device you want to monitor. Ensure that net-snmp is using srvadmin, you should see something similar to: master agentx view all included .1 access notConfigGroup \"\" any noauth exact all none none smuxpeer .1.3.6.1.4.1.674.10892.1 Restart net-snmp: service snmpd restart Ensure that srvadmin is started, this is usually done by executing: /opt/dell/srvadmin/sbin/srvadmin-services.sh start Once this has been done, add the device to LibreNMS as normal and you will start to receive Temperatures and Fanspeed data.","title":"Dell OpenManage Support"},{"location":"Extensions/Dell-OpenManage/#windows","text":"Download OpenManage from Dell's support page Link and install OpenManage onyour windows server. Make sure you have SNMP setup and running on your windows server.","title":"Windows"},{"location":"Extensions/Device-Groups/","text":"LibreNMS supports grouping your devices together in much the same way as you can configure alerts. This document will hopefully help you get started. Dynamic Groups Rule Editor The rule is based on the MySQL structure your data is in. Such as tablename.columnname . If you already know the entity you want, you can browse around inside MySQL using show tables and desc <tablename> . As a working example and a common question, let's assume you want to group devices by hostname. If your hostname format is dcX.[devicetype].example.com. You would use the field devices.hostname . If you want to group them by device type, you would add a rule for routers of devices.hostname endswith rtr.example.com . If you want to group them by DC, you could use the rule devices.hostname regex dc1\\..*\\.example\\.com (Don't forget to escape periods in the regex) Static Groups You can create static groups (and convert dynamic groups to static) to put specific devices in a group. Just select static as the type and select the devices you want in the group. You can now select this group from the Devices -> All Devices link in the navigation at the top. You can also use the group to map alert rules to by creating an alert mapping Overview -> Alerts -> Rule Mapping .","title":"Grouping Devices"},{"location":"Extensions/Device-Groups/#dynamic-groups","text":"","title":"Dynamic Groups"},{"location":"Extensions/Device-Groups/#rule-editor","text":"The rule is based on the MySQL structure your data is in. Such as tablename.columnname . If you already know the entity you want, you can browse around inside MySQL using show tables and desc <tablename> . As a working example and a common question, let's assume you want to group devices by hostname. If your hostname format is dcX.[devicetype].example.com. You would use the field devices.hostname . If you want to group them by device type, you would add a rule for routers of devices.hostname endswith rtr.example.com . If you want to group them by DC, you could use the rule devices.hostname regex dc1\\..*\\.example\\.com (Don't forget to escape periods in the regex)","title":"Rule Editor"},{"location":"Extensions/Device-Groups/#static-groups","text":"You can create static groups (and convert dynamic groups to static) to put specific devices in a group. Just select static as the type and select the devices you want in the group. You can now select this group from the Devices -> All Devices link in the navigation at the top. You can also use the group to map alert rules to by creating an alert mapping Overview -> Alerts -> Rule Mapping .","title":"Static Groups"},{"location":"Extensions/Dispatcher-Service/","text":"Dispatcher Service Status: Release Candidate The LibreNMS dispatcher service ( librenms-service.py ) is a new method of running the poller service at set times. It does not replace the php scripts, just the cron entries running them. External Requirements A recent version of Python The LibreNMS service requires Python 3 and some features require behaviour only found in Python3.4+. Python modules PyMySQL is recommended as it requires no C compiler to install. MySQLclient can also be used, but does require compilation. python-dotenv .env loader redis-py 3.0+ and Redis 5.0+ server (if using distributed polling) psutil These can be obtained from your OS package manager, or from PyPI with the below commands. pip3 install -r requirements.txt Redis (distributed polling) If you want to use distributed polling, you'll need a Redis instance to coordinate the nodes. It's recommended that you do not share the Redis database with any other system - by default, Redis supports up to 16 databases (numbered 0-15). You can also use Redis on a single host if you want It's strongly recommended that you deploy a resilient cluster of redis systems, and use redis-sentinel. You should not rely on the password for the security of your system. See https://redis.io/topics/security Memcached (distributed polling) LibreNMS still uses memcached for locking daily update processes when using distributed polling. So you will still need to configure memcached unless you have updates disabled. MySQL You should already have this, but the pollers do need access to the SQL database. The LibreNMS service runs faster and more aggressively than the standard poller, so keep an eye on the number of open connections and other important health metrics. Configuration Connection settings are required in .env . The .env file is generated after composer install and APP_KEY and NODE_ID are set. Remember that the APP_KEY value must be the same on all your pollers. #APP_KEY= #Required, generated by composer install #NODE_ID= #Required, generated by composer install DB_HOST=localhost DB_DATABASE=librenms DB_USERNAME=librenms DB_PASSWORD= Distributed Polling Configuration Once you have your Redis database set up, configure it in the .env file on each node. Configure the redis cache driver for distributed locking. REDIS_HOST=127.0.0.1 REDIS_PORT=6379 # OR REDIS_SENTINEL=192.0.2.1:26379 REDIS_SENTINEL_SERVICE=myservice REDIS_DB=0 #REDIS_PASSWORD= #REDIS_TIMEOUT=60 CACHE_DRIVER=redis Basic Configuration Additional configuration settings can be set in config.php or directly into the database. The defaults are shown here - it's recommended that you at least tune the number of workers. $config [ 'service_poller_workers' ] = 24 ; # Processes spawned for polling $config [ 'service_services_workers' ] = 8 ; # Processes spawned for service polling $config [ 'service_discovery_workers' ] = 16 ; # Processes spawned for discovery //Optional Settings $config [ 'service_poller_frequency' ] = 300 ; # Seconds between polling attempts $config [ 'service_services_frequency' ] = 300 ; # Seconds between service polling attempts $config [ 'service_discovery_frequency' ] = 21600 ; # Seconds between discovery runs $config [ 'service_billing_frequency' ] = 300 ; # Seconds between billing calculations $config [ 'service_billing_calculate_frequency' ] = 60 ; # Billing interval $config [ 'service_poller_down_retry' ] = 60 ; # Seconds between failed polling attempts $config [ 'service_loglevel' ] = 'INFO' ; # Must be one of 'DEBUG', 'INFO', 'WARNING', 'ERROR', 'CRITICAL' $config [ 'service_update_frequency' ] = 86400 ; # Seconds between LibreNMS update checks There are also some SQL options, but these should be inherited from your LibreNMS web UI configuration. Logs are sent to the system logging service (usually journald or rsyslog ) - see https://docs.python.org/3/library/logging.html#logging-levels for the options available. $config [ 'distributed_poller' ] = true ; # Set to true to enable distributed polling $config [ 'distributed_poller_name' ] = php_uname ( 'n' ); # Uniquely identifies the poller instance $config [ 'distributed_poller_group' ] = 0 ; # Which group to poll Tuning the number of workers See https://your_librenms_install/poller You want to keep Consumed Worker Seconds comfortably below Maximum Worker Seconds. The closer the values are to each other, the flatter the CPU graph of the poller machine. Meaning that you are utilizing your CPU resources well. As long as Consumed WS stays below Maximum WS and Devices Pending is 0, you should be ok. If Consumed WS is below Maximum WS and Devices Pending is > 0, your hardware is not up to the task. Maximum WS equals the number of workers multiplied with the number of seconds in the polling period. (default 300) Fast Ping The fast ping scheduler is disabled by default. You can enable it by setting the following: $config [ 'service_ping_enabled' ] = true ; Watchdog The watchdog scheduler is disabled by default. You can enable it by setting the following: $config [ 'service_watchdog_enabled' ] = true ; The watchdog scheduler will check that the poller log file has been written to within the last poll period. If there is no change to the log file since, the watchdog will restart the polling service. The poller log file is set by $config['log_file'] and defaults to ./logs/librenms.log Cron Scripts Once the LibreNMS service is installed, the cron scripts used by LibreNMS are no longer required and must be removed. Service Installation A systemd unit file is provided - the sysv and upstart init scripts could also be used with a little modification. systemd A systemd unit file can be found in misc/librenms.service . To install run cp /opt/librenms/misc/librenms.service /etc/systemd/system/librenms.service && systemctl enable --now librenms.service OS-Specific Instructions RHEL/CentOS To get the LibreNMS service running under python3.4+ on RHEL-derivatives with minimal fuss, you can use the software collections build: First, enable SCL's on your system: CentOS 7 # yum install centos-release-scl RHEL 7 # subscription-manager repos --enable rhel-server-rhscl-7-rpms Then install and configure the runtime and service: # yum install gcc rh-python36 rh-python36-python-devel epel-release # yum --enablerepo=remi install redis # vi /opt/librenms/config.php # vi /etc/redis.conf # systemctl enable --now redis.service # scl enable rh-python36 bash # change directory to librenms (default /opt/librenms) # pip3 install -r requirements.txt # cp /opt/librenms/misc/librenms.service.scl /etc/systemd/system/librenms.service # systemctl enable --now librenms.service If you want to use another version of python 3, change rh-python36 in the unit file and the commands above to match the name of the replacement scl. Debian/Ubuntu Debian 9 (stretch) install python3 and python-mysqldb. python-dotenv is not yet available, but the testing package is working fine, you can grab it on https://packages.debian.org/fr/buster/all/python3-dotenv/download (the package may be updated and have a new version number). apt install python3 python-mysqldb cd /tmp wget http://ftp.fr.debian.org/debian/pool/main/p/python-dotenv/python3-dotenv_0.9.1-1_all.deb dpkg -i python3-dotenv_0.9.1-1_all.deb","title":"Dispatcher Service (RC)"},{"location":"Extensions/Dispatcher-Service/#dispatcher-service","text":"Status: Release Candidate The LibreNMS dispatcher service ( librenms-service.py ) is a new method of running the poller service at set times. It does not replace the php scripts, just the cron entries running them.","title":"Dispatcher Service"},{"location":"Extensions/Dispatcher-Service/#external-requirements","text":"","title":"External Requirements"},{"location":"Extensions/Dispatcher-Service/#a-recent-version-of-python","text":"The LibreNMS service requires Python 3 and some features require behaviour only found in Python3.4+.","title":"A recent version of Python"},{"location":"Extensions/Dispatcher-Service/#python-modules","text":"PyMySQL is recommended as it requires no C compiler to install. MySQLclient can also be used, but does require compilation. python-dotenv .env loader redis-py 3.0+ and Redis 5.0+ server (if using distributed polling) psutil These can be obtained from your OS package manager, or from PyPI with the below commands. pip3 install -r requirements.txt","title":"Python modules"},{"location":"Extensions/Dispatcher-Service/#redis-distributed-polling","text":"If you want to use distributed polling, you'll need a Redis instance to coordinate the nodes. It's recommended that you do not share the Redis database with any other system - by default, Redis supports up to 16 databases (numbered 0-15). You can also use Redis on a single host if you want It's strongly recommended that you deploy a resilient cluster of redis systems, and use redis-sentinel. You should not rely on the password for the security of your system. See https://redis.io/topics/security","title":"Redis (distributed polling)"},{"location":"Extensions/Dispatcher-Service/#memcached-distributed-polling","text":"LibreNMS still uses memcached for locking daily update processes when using distributed polling. So you will still need to configure memcached unless you have updates disabled.","title":"Memcached (distributed polling)"},{"location":"Extensions/Dispatcher-Service/#mysql","text":"You should already have this, but the pollers do need access to the SQL database. The LibreNMS service runs faster and more aggressively than the standard poller, so keep an eye on the number of open connections and other important health metrics.","title":"MySQL"},{"location":"Extensions/Dispatcher-Service/#configuration","text":"Connection settings are required in .env . The .env file is generated after composer install and APP_KEY and NODE_ID are set. Remember that the APP_KEY value must be the same on all your pollers. #APP_KEY= #Required, generated by composer install #NODE_ID= #Required, generated by composer install DB_HOST=localhost DB_DATABASE=librenms DB_USERNAME=librenms DB_PASSWORD=","title":"Configuration"},{"location":"Extensions/Dispatcher-Service/#distributed-polling-configuration","text":"Once you have your Redis database set up, configure it in the .env file on each node. Configure the redis cache driver for distributed locking. REDIS_HOST=127.0.0.1 REDIS_PORT=6379 # OR REDIS_SENTINEL=192.0.2.1:26379 REDIS_SENTINEL_SERVICE=myservice REDIS_DB=0 #REDIS_PASSWORD= #REDIS_TIMEOUT=60 CACHE_DRIVER=redis","title":"Distributed Polling Configuration"},{"location":"Extensions/Dispatcher-Service/#basic-configuration","text":"Additional configuration settings can be set in config.php or directly into the database. The defaults are shown here - it's recommended that you at least tune the number of workers. $config [ 'service_poller_workers' ] = 24 ; # Processes spawned for polling $config [ 'service_services_workers' ] = 8 ; # Processes spawned for service polling $config [ 'service_discovery_workers' ] = 16 ; # Processes spawned for discovery //Optional Settings $config [ 'service_poller_frequency' ] = 300 ; # Seconds between polling attempts $config [ 'service_services_frequency' ] = 300 ; # Seconds between service polling attempts $config [ 'service_discovery_frequency' ] = 21600 ; # Seconds between discovery runs $config [ 'service_billing_frequency' ] = 300 ; # Seconds between billing calculations $config [ 'service_billing_calculate_frequency' ] = 60 ; # Billing interval $config [ 'service_poller_down_retry' ] = 60 ; # Seconds between failed polling attempts $config [ 'service_loglevel' ] = 'INFO' ; # Must be one of 'DEBUG', 'INFO', 'WARNING', 'ERROR', 'CRITICAL' $config [ 'service_update_frequency' ] = 86400 ; # Seconds between LibreNMS update checks There are also some SQL options, but these should be inherited from your LibreNMS web UI configuration. Logs are sent to the system logging service (usually journald or rsyslog ) - see https://docs.python.org/3/library/logging.html#logging-levels for the options available. $config [ 'distributed_poller' ] = true ; # Set to true to enable distributed polling $config [ 'distributed_poller_name' ] = php_uname ( 'n' ); # Uniquely identifies the poller instance $config [ 'distributed_poller_group' ] = 0 ; # Which group to poll","title":"Basic Configuration"},{"location":"Extensions/Dispatcher-Service/#tuning-the-number-of-workers","text":"See https://your_librenms_install/poller You want to keep Consumed Worker Seconds comfortably below Maximum Worker Seconds. The closer the values are to each other, the flatter the CPU graph of the poller machine. Meaning that you are utilizing your CPU resources well. As long as Consumed WS stays below Maximum WS and Devices Pending is 0, you should be ok. If Consumed WS is below Maximum WS and Devices Pending is > 0, your hardware is not up to the task. Maximum WS equals the number of workers multiplied with the number of seconds in the polling period. (default 300)","title":"Tuning the number of workers"},{"location":"Extensions/Dispatcher-Service/#fast-ping","text":"The fast ping scheduler is disabled by default. You can enable it by setting the following: $config [ 'service_ping_enabled' ] = true ;","title":"Fast Ping"},{"location":"Extensions/Dispatcher-Service/#watchdog","text":"The watchdog scheduler is disabled by default. You can enable it by setting the following: $config [ 'service_watchdog_enabled' ] = true ; The watchdog scheduler will check that the poller log file has been written to within the last poll period. If there is no change to the log file since, the watchdog will restart the polling service. The poller log file is set by $config['log_file'] and defaults to ./logs/librenms.log","title":"Watchdog"},{"location":"Extensions/Dispatcher-Service/#cron-scripts","text":"Once the LibreNMS service is installed, the cron scripts used by LibreNMS are no longer required and must be removed.","title":"Cron Scripts"},{"location":"Extensions/Dispatcher-Service/#service-installation","text":"A systemd unit file is provided - the sysv and upstart init scripts could also be used with a little modification.","title":"Service Installation"},{"location":"Extensions/Dispatcher-Service/#systemd","text":"A systemd unit file can be found in misc/librenms.service . To install run cp /opt/librenms/misc/librenms.service /etc/systemd/system/librenms.service && systemctl enable --now librenms.service","title":"systemd"},{"location":"Extensions/Dispatcher-Service/#os-specific-instructions","text":"","title":"OS-Specific Instructions"},{"location":"Extensions/Dispatcher-Service/#rhelcentos","text":"To get the LibreNMS service running under python3.4+ on RHEL-derivatives with minimal fuss, you can use the software collections build: First, enable SCL's on your system:","title":"RHEL/CentOS"},{"location":"Extensions/Dispatcher-Service/#centos-7","text":"# yum install centos-release-scl","title":"CentOS 7"},{"location":"Extensions/Dispatcher-Service/#rhel-7","text":"# subscription-manager repos --enable rhel-server-rhscl-7-rpms Then install and configure the runtime and service: # yum install gcc rh-python36 rh-python36-python-devel epel-release # yum --enablerepo=remi install redis # vi /opt/librenms/config.php # vi /etc/redis.conf # systemctl enable --now redis.service # scl enable rh-python36 bash # change directory to librenms (default /opt/librenms) # pip3 install -r requirements.txt # cp /opt/librenms/misc/librenms.service.scl /etc/systemd/system/librenms.service # systemctl enable --now librenms.service If you want to use another version of python 3, change rh-python36 in the unit file and the commands above to match the name of the replacement scl.","title":"RHEL 7"},{"location":"Extensions/Dispatcher-Service/#debianubuntu","text":"","title":"Debian/Ubuntu"},{"location":"Extensions/Dispatcher-Service/#debian-9-stretch","text":"install python3 and python-mysqldb. python-dotenv is not yet available, but the testing package is working fine, you can grab it on https://packages.debian.org/fr/buster/all/python3-dotenv/download (the package may be updated and have a new version number). apt install python3 python-mysqldb cd /tmp wget http://ftp.fr.debian.org/debian/pool/main/p/python-dotenv/python3-dotenv_0.9.1-1_all.deb dpkg -i python3-dotenv_0.9.1-1_all.deb","title":"Debian 9 (stretch)"},{"location":"Extensions/Distributed-Poller/","text":"Distributed Poller A normal install contains all parts of LibreNMS: - Poller/Discovery/etc workers - RRD (Time series data store) * - Database * - Webserver (Web UI/API) * * may only be installed on one server (however, some can be clustered) Distributed Polling allows the workers to be spread across additional servers for horizontal scaling. Distributed polling is not intended for remote polling. Devices can be grouped together into a poller_group to pin these devices to a single or a group of designated pollers. All pollers need to write to the same set of RRD files, preferably via RRDcached. It is also a requirement that at least one locking service is in place to which all pollers can connect. There are currently three locking mechanisms available - memcached - redis (preferred) - sql locks (default) All of the above locking mechanisms are natively supported in LibreNMS. If none are specified, it will default to using SQL. Requirements for distributed polling These requirements are above the normal requirements for a full LibreNMS install. rrdtool version 1.4 or above At least one locking mechanism configured a rrdcached install By default, all hosts are shared and have the poller_group = 0 . To pin a device to a poller, set it to a value greater than 0 and set the same value in the poller's config with $config['distributed_poller_group'] . One can also specify a comma separated string of poller groups in $config['distributed_poller_group']. The poller will then poll devices from any of the groups listed. If new devices get added from the poller they will be assigned to the first poller group in the list unless the group is specified when adding the device. The following is a standard config, combined with a locking mechanism below: // Distributed Poller-Settings $config [ 'distributed_poller' ] = true ; // optional: defaults to hostname #$config['distributed_poller_name'] = 'custom'; $config [ 'distributed_poller_group' ] = 0 ; Locking mechanisms Pick one of the following setups, do not use all of them at the same time. Using REDIS In your .env file you will need to specify a redis server, port and the driver. REDIS_HOST=HOSTNAME or IP REDIS_PORT=6379 CACHE_DRIVER=redis Using Memcached Preferably you should set the memcached server settings via the web UI. Under Settings > Global Settings > Distributed poller, you fill out the memcached host and port, and then in your .env file you will need to add: CACHE_DRIVER=memcached If you want to use memcached, you will also need to install an additional Python 3 python-memcached package. Example Setup Below is an example setup based on a real deployment which at the time of writing covers over 2,500 devices and 50,000 ports. The setup is running within an OpenStack environment with some commodity hardware for remote pollers. Here's a diagram of how you can scale LibreNMS out: Architecture How you setup the distribution is entirely up to you, you can choose to host the majority of the required services on a single virtual machine or server and then a poller to actually query the devices being monitored all the way through to having a dedicated server for each of the individual roles. Below are notes on what you need to consider both from the software layer but also connectivity. Web / API Layer This is typically Apache but we have setup guides for both Nginx and Lighttpd which should work perfectly fine. There is nothing unique about the role this service is providing except that if you are adding devices from this layer then the web service will need to be able to connect to the end device via SNMP and perform an ICMP test. It is advisable to run RRDCached within this setup so that you don't need to share the rrd folder via a remote file share such as NFS. The web service can then generate rrd graphs via RRDCached. If RRDCached isn't an option then you can mount the rrd directory to read the RRD files directly. Database Server MySQL / MariaDB - At the moment these are the only database servers that are supported. The pollers, web and API layers should all be able to access the database server directly. RRD Storage Central storage should be provided so all RRD files can be read from and written to in one location. As suggested above, it's recommended that RRD Cached is configured and used. For this example, we are running RRDCached to allow all pollers and web/api servers to read/write to the rrd files with the rrd directory also exported by NFS for simple access and maintenance. Pollers Pollers can be installed and run from anywhere, the only requirements are: They can access the Memcache instance They can create RRD files via some method such as a shared filesystem or RRDTool >=1.5.5 They can access the MySQL server You can either assign pollers into groups and set a poller group against certain devices, this will mean that those devices will only be processed by certain pollers (default poller group is 0) or you can assign all pollers to the default poller group for them to process any and all devices. This will provide the ability to have a single poller behind a NAT firewall monitor internal devices and report back to your central system. You will then be able to monitor those devices from the Web UI as normal. Another benefit to this is that you can provide N+x pollers, i.e if you know that you require three pollers to process all devices within 300 seconds then adding a 4th poller will mean that should any one single poller fail then the remaining three will complete polling in time. You could also use this to take a poller out of service for maintenance, i.e OS updates and software updates. It is extremely advisable to either run a central recursive dns server such as pdns-recursor and have all of your pollers use this or install a recursive dns server on each poller - the volume of DNS requests on large installs can be significant and will slow polling down enough to cause issues with a large number of devices. A last note to make sure of, is that all pollers writing to the same DB need to have the same APP_KEY value set in the .env file. Discovery It's not necessary to run discovery services on all pollers. In fact, you should only run one discovery process per poller group. Designate a single poller to run discovery (or a separate server if required). Configuration Settings in config.php should be copied to all servers as they only apply locally. One way around this is to set settings in the database via the web ui or ./lnms config:set Config sample The following config is taken from a live setup which consists of a Web server, DB server, RRDCached server and 3 pollers. Web Server: Running Apache and an install of LibreNMS in /opt/librenms config.php $config [ 'distributed_poller' ] = true ; $config [ 'rrdcached' ] = \"example.com:42217\" ; Database Server: Running Memcache and MariaDB Memcache Ubuntu (/etc/memcached.conf) -d -m 64 -p 11211 -u memcache -l ip.ip.ip.ip RRDCached Server: Running RRDCached RRDCached Ubuntu (/etc/default/rrdcached) OPTS=\"-l 0:42217\" OPTS=\"$OPTS -j /var/lib/rrdcached/journal/ -F\" OPTS=\"$OPTS -b /opt/librenms/rrd -B\" OPTS=\"$OPTS -w 1800 -z 900\" Ubuntu (/etc/default/rrdcached) - RRDCached 1.5.5 and above. BASE_OPTIONS=\"-l 0:42217\" BASE_OPTIONS=\"$BASE_OPTIONS -R -j /var/lib/rrdcached/journal/ -F\" BASE_OPTIONS=\"$BASE_OPTIONS -b /opt/librenms/rrd -B\" BASE_OPTIONS=\"$BASE_OPTIONS -w 1800 -z 900\" Poller 1: Running an install of LibreNMS in /opt/librenms config.php $config [ 'distributed_poller_name' ] = php_uname ( 'n' ); $config [ 'distributed_poller_group' ] = '0' ; $config [ 'distributed_poller_memcached_host' ] = \"example.com\" ; $config [ 'distributed_poller_memcached_port' ] = 11211 ; $config [ 'distributed_poller' ] = true ; $config [ 'rrdcached' ] = \"example.com:42217\" ; /etc/cron.d/librenms Runs discovery and polling for group 0, daily.sh to deal with notifications and DB cleanup and alerts. 33 */6 * * * librenms /opt/librenms/cronic /opt/librenms/discovery-wrapper.py 1 */5 * * * * librenms /opt/librenms/discovery.php -h new >> /dev/null 2>&1 */5 * * * * librenms /opt/librenms/cronic /opt/librenms/poller-wrapper.py 16 15 0 * * * librenms /opt/librenms/daily.sh >> /dev/null 2>&1 * * * * * librenms /opt/librenms/alerts.php >> /dev/null 2>&1 Poller 2: Running an install of LibreNMS in /opt/librenms config.php $config [ 'distributed_poller_name' ] = php_uname ( 'n' ); $config [ 'distributed_poller_group' ] = '0' ; $config [ 'distributed_poller_memcached_host' ] = \"example.com\" ; $config [ 'distributed_poller_memcached_port' ] = 11211 ; $config [ 'distributed_poller' ] = true ; $config [ 'rrdcached' ] = \"example.com:42217\" ; /etc/cron.d/librenms Runs billing as well as polling for group 0. */5 * * * * librenms /opt/librenms/poller-wrapper.py 16 >> /opt/librenms/logs/wrapper.log */5 * * * * librenms /opt/librenms/poll-billing.php >> /dev/null 2>&1 01 * * * * librenms /opt/librenms/billing-calculate.php >> /dev/null 2>&1 15 0 * * * librenms /opt/librenms/daily.sh >> /dev/null 2>&1 Poller 3: Running an install of LibreNMS in /opt/librenms config.php $config [ 'distributed_poller_name' ] = php_uname ( 'n' ); $config [ 'distributed_poller_group' ] = '2,3' ; $config [ 'distributed_poller_memcached_host' ] = \"example.com\" ; $config [ 'distributed_poller_memcached_port' ] = 11211 ; $config [ 'distributed_poller' ] = true ; $config [ 'rrdcached' ] = \"example.com:42217\" ; /etc/cron.d/librenms Runs discovery and polling for groups 2 and 3. 33 */6 * * * librenms /opt/librenms/cronic /opt/librenms/discovery-wrapper.py 1 */5 * * * * librenms /opt/librenms/discovery.php -h new >> /dev/null 2>&1 */5 * * * * librenms /opt/librenms/cronic /opt/librenms/poller-wrapper.py 16 15 0 * * * librenms /opt/librenms/daily.sh >> /dev/null 2>&1","title":"Scaling LibreNMS"},{"location":"Extensions/Distributed-Poller/#distributed-poller","text":"A normal install contains all parts of LibreNMS: - Poller/Discovery/etc workers - RRD (Time series data store) * - Database * - Webserver (Web UI/API) * * may only be installed on one server (however, some can be clustered) Distributed Polling allows the workers to be spread across additional servers for horizontal scaling. Distributed polling is not intended for remote polling. Devices can be grouped together into a poller_group to pin these devices to a single or a group of designated pollers. All pollers need to write to the same set of RRD files, preferably via RRDcached. It is also a requirement that at least one locking service is in place to which all pollers can connect. There are currently three locking mechanisms available - memcached - redis (preferred) - sql locks (default) All of the above locking mechanisms are natively supported in LibreNMS. If none are specified, it will default to using SQL.","title":"Distributed Poller"},{"location":"Extensions/Distributed-Poller/#requirements-for-distributed-polling","text":"These requirements are above the normal requirements for a full LibreNMS install. rrdtool version 1.4 or above At least one locking mechanism configured a rrdcached install By default, all hosts are shared and have the poller_group = 0 . To pin a device to a poller, set it to a value greater than 0 and set the same value in the poller's config with $config['distributed_poller_group'] . One can also specify a comma separated string of poller groups in $config['distributed_poller_group']. The poller will then poll devices from any of the groups listed. If new devices get added from the poller they will be assigned to the first poller group in the list unless the group is specified when adding the device. The following is a standard config, combined with a locking mechanism below: // Distributed Poller-Settings $config [ 'distributed_poller' ] = true ; // optional: defaults to hostname #$config['distributed_poller_name'] = 'custom'; $config [ 'distributed_poller_group' ] = 0 ;","title":"Requirements for distributed polling"},{"location":"Extensions/Distributed-Poller/#locking-mechanisms","text":"Pick one of the following setups, do not use all of them at the same time.","title":"Locking mechanisms"},{"location":"Extensions/Distributed-Poller/#using-redis","text":"In your .env file you will need to specify a redis server, port and the driver. REDIS_HOST=HOSTNAME or IP REDIS_PORT=6379 CACHE_DRIVER=redis","title":"Using REDIS"},{"location":"Extensions/Distributed-Poller/#using-memcached","text":"Preferably you should set the memcached server settings via the web UI. Under Settings > Global Settings > Distributed poller, you fill out the memcached host and port, and then in your .env file you will need to add: CACHE_DRIVER=memcached If you want to use memcached, you will also need to install an additional Python 3 python-memcached package.","title":"Using Memcached"},{"location":"Extensions/Distributed-Poller/#example-setup","text":"Below is an example setup based on a real deployment which at the time of writing covers over 2,500 devices and 50,000 ports. The setup is running within an OpenStack environment with some commodity hardware for remote pollers. Here's a diagram of how you can scale LibreNMS out:","title":"Example Setup"},{"location":"Extensions/Distributed-Poller/#architecture","text":"How you setup the distribution is entirely up to you, you can choose to host the majority of the required services on a single virtual machine or server and then a poller to actually query the devices being monitored all the way through to having a dedicated server for each of the individual roles. Below are notes on what you need to consider both from the software layer but also connectivity.","title":"Architecture"},{"location":"Extensions/Distributed-Poller/#web-api-layer","text":"This is typically Apache but we have setup guides for both Nginx and Lighttpd which should work perfectly fine. There is nothing unique about the role this service is providing except that if you are adding devices from this layer then the web service will need to be able to connect to the end device via SNMP and perform an ICMP test. It is advisable to run RRDCached within this setup so that you don't need to share the rrd folder via a remote file share such as NFS. The web service can then generate rrd graphs via RRDCached. If RRDCached isn't an option then you can mount the rrd directory to read the RRD files directly.","title":"Web / API Layer"},{"location":"Extensions/Distributed-Poller/#database-server","text":"MySQL / MariaDB - At the moment these are the only database servers that are supported. The pollers, web and API layers should all be able to access the database server directly.","title":"Database Server"},{"location":"Extensions/Distributed-Poller/#rrd-storage","text":"Central storage should be provided so all RRD files can be read from and written to in one location. As suggested above, it's recommended that RRD Cached is configured and used. For this example, we are running RRDCached to allow all pollers and web/api servers to read/write to the rrd files with the rrd directory also exported by NFS for simple access and maintenance.","title":"RRD Storage"},{"location":"Extensions/Distributed-Poller/#pollers","text":"Pollers can be installed and run from anywhere, the only requirements are: They can access the Memcache instance They can create RRD files via some method such as a shared filesystem or RRDTool >=1.5.5 They can access the MySQL server You can either assign pollers into groups and set a poller group against certain devices, this will mean that those devices will only be processed by certain pollers (default poller group is 0) or you can assign all pollers to the default poller group for them to process any and all devices. This will provide the ability to have a single poller behind a NAT firewall monitor internal devices and report back to your central system. You will then be able to monitor those devices from the Web UI as normal. Another benefit to this is that you can provide N+x pollers, i.e if you know that you require three pollers to process all devices within 300 seconds then adding a 4th poller will mean that should any one single poller fail then the remaining three will complete polling in time. You could also use this to take a poller out of service for maintenance, i.e OS updates and software updates. It is extremely advisable to either run a central recursive dns server such as pdns-recursor and have all of your pollers use this or install a recursive dns server on each poller - the volume of DNS requests on large installs can be significant and will slow polling down enough to cause issues with a large number of devices. A last note to make sure of, is that all pollers writing to the same DB need to have the same APP_KEY value set in the .env file.","title":"Pollers"},{"location":"Extensions/Distributed-Poller/#discovery","text":"It's not necessary to run discovery services on all pollers. In fact, you should only run one discovery process per poller group. Designate a single poller to run discovery (or a separate server if required).","title":"Discovery"},{"location":"Extensions/Distributed-Poller/#configuration","text":"Settings in config.php should be copied to all servers as they only apply locally. One way around this is to set settings in the database via the web ui or ./lnms config:set","title":"Configuration"},{"location":"Extensions/Distributed-Poller/#config-sample","text":"The following config is taken from a live setup which consists of a Web server, DB server, RRDCached server and 3 pollers. Web Server: Running Apache and an install of LibreNMS in /opt/librenms config.php $config [ 'distributed_poller' ] = true ; $config [ 'rrdcached' ] = \"example.com:42217\" ; Database Server: Running Memcache and MariaDB Memcache Ubuntu (/etc/memcached.conf) -d -m 64 -p 11211 -u memcache -l ip.ip.ip.ip RRDCached Server: Running RRDCached RRDCached Ubuntu (/etc/default/rrdcached) OPTS=\"-l 0:42217\" OPTS=\"$OPTS -j /var/lib/rrdcached/journal/ -F\" OPTS=\"$OPTS -b /opt/librenms/rrd -B\" OPTS=\"$OPTS -w 1800 -z 900\" Ubuntu (/etc/default/rrdcached) - RRDCached 1.5.5 and above. BASE_OPTIONS=\"-l 0:42217\" BASE_OPTIONS=\"$BASE_OPTIONS -R -j /var/lib/rrdcached/journal/ -F\" BASE_OPTIONS=\"$BASE_OPTIONS -b /opt/librenms/rrd -B\" BASE_OPTIONS=\"$BASE_OPTIONS -w 1800 -z 900\" Poller 1: Running an install of LibreNMS in /opt/librenms config.php $config [ 'distributed_poller_name' ] = php_uname ( 'n' ); $config [ 'distributed_poller_group' ] = '0' ; $config [ 'distributed_poller_memcached_host' ] = \"example.com\" ; $config [ 'distributed_poller_memcached_port' ] = 11211 ; $config [ 'distributed_poller' ] = true ; $config [ 'rrdcached' ] = \"example.com:42217\" ; /etc/cron.d/librenms Runs discovery and polling for group 0, daily.sh to deal with notifications and DB cleanup and alerts. 33 */6 * * * librenms /opt/librenms/cronic /opt/librenms/discovery-wrapper.py 1 */5 * * * * librenms /opt/librenms/discovery.php -h new >> /dev/null 2>&1 */5 * * * * librenms /opt/librenms/cronic /opt/librenms/poller-wrapper.py 16 15 0 * * * librenms /opt/librenms/daily.sh >> /dev/null 2>&1 * * * * * librenms /opt/librenms/alerts.php >> /dev/null 2>&1 Poller 2: Running an install of LibreNMS in /opt/librenms config.php $config [ 'distributed_poller_name' ] = php_uname ( 'n' ); $config [ 'distributed_poller_group' ] = '0' ; $config [ 'distributed_poller_memcached_host' ] = \"example.com\" ; $config [ 'distributed_poller_memcached_port' ] = 11211 ; $config [ 'distributed_poller' ] = true ; $config [ 'rrdcached' ] = \"example.com:42217\" ; /etc/cron.d/librenms Runs billing as well as polling for group 0. */5 * * * * librenms /opt/librenms/poller-wrapper.py 16 >> /opt/librenms/logs/wrapper.log */5 * * * * librenms /opt/librenms/poll-billing.php >> /dev/null 2>&1 01 * * * * librenms /opt/librenms/billing-calculate.php >> /dev/null 2>&1 15 0 * * * librenms /opt/librenms/daily.sh >> /dev/null 2>&1 Poller 3: Running an install of LibreNMS in /opt/librenms config.php $config [ 'distributed_poller_name' ] = php_uname ( 'n' ); $config [ 'distributed_poller_group' ] = '2,3' ; $config [ 'distributed_poller_memcached_host' ] = \"example.com\" ; $config [ 'distributed_poller_memcached_port' ] = 11211 ; $config [ 'distributed_poller' ] = true ; $config [ 'rrdcached' ] = \"example.com:42217\" ; /etc/cron.d/librenms Runs discovery and polling for groups 2 and 3. 33 */6 * * * librenms /opt/librenms/cronic /opt/librenms/discovery-wrapper.py 1 */5 * * * * librenms /opt/librenms/discovery.php -h new >> /dev/null 2>&1 */5 * * * * librenms /opt/librenms/cronic /opt/librenms/poller-wrapper.py 16 15 0 * * * librenms /opt/librenms/daily.sh >> /dev/null 2>&1","title":"Config sample"},{"location":"Extensions/Email-Alerting/","text":"","title":"Email Alerting"},{"location":"Extensions/Fast-Ping-Check/","text":"Fast up/down checking Normally, LibreNMS sends an ICMP ping to the device before polling to check if it is up or down. This check is tied to the poller frequency, which is normally 5 minutes. This means it may take up to 5 minutes to find out if a device is down. Some users may want to know if devices stop responding to ping more quickly than that. LibreNMS offers a ping.php script to run ping checks as quickly as possible without increasing snmp load on your devices by switching to 1 minute polling. WARNING : If you do not have an alert rule that alerts on device status, enabling this will be a waste of resources. You can find one in the Alert Rules Collection . Setting the ping check to 1 minute 1: If you are using RRDCached , stop the service. - This will flush all pending writes so that the rrdstep.php script can change the steps. 2: Change the ping_rrd_step setting in config.php $config['ping_rrd_step'] = 60; 3: Update the rrd files to change the step (step is hardcoded at file creation in rrd files) ./scripts/rrdstep.php -h all 4: Add the following line to /etc/cron.d/librenms to allow 1 minute ping checks * * * * * librenms /opt/librenms/ping.php >> /dev/null 2>&1 5: If applicable: Start the RRDCached service NOTE : If you are using distributed pollers you can restrict a poller to a group by appending -g to the cron entry. Alternatively, you should only run ping.php on a single node. Sub minute ping check Cron only has a resolution of one minute, so for sub-minute ping checks we need to adapt both ping and alerts entries. We add two entries per function, but add a delay before one of these entries. Remember, you need to remove the original ping.php and alerts.php entries in crontab before proceeding! 1: Set ping_rrd_step $config['ping_rrd_step'] = 30; 2: Update the rrd files ./scripts/rrdstep.php -h all 3: Update cron (removing any other ping.php or alert.php entries) * * * * * librenms /opt/librenms/ping.php >> /dev/null 2>&1 * * * * * librenms sleep 30 && /opt/librenms/ping.php >> /dev/null 2>&1 * * * * * librenms sleep 15 && /opt/librenms/alerts.php >> /dev/null 2>&1 * * * * * librenms sleep 45 && /opt/librenms/alerts.php >> /dev/null 2>&1 Device dependencies The ping.php script respects device dependencies, but the main poller does not (for technical reasons). However, using this script does not disable the icmp check in the poller and a child may be reported as down before the parent. Settings ping.php uses much the same settings as the poller fping with one exception: retries is used instead of count. ping.php does not measure loss and avg response time, only up/down, so once a device responds it stops pinging it. $config['fping_options']['retries'] = 2; $config['fping_options']['timeout'] = 500; $config['fping_options']['interval'] = 500;","title":"Fast Ping Checking"},{"location":"Extensions/Fast-Ping-Check/#fast-updown-checking","text":"Normally, LibreNMS sends an ICMP ping to the device before polling to check if it is up or down. This check is tied to the poller frequency, which is normally 5 minutes. This means it may take up to 5 minutes to find out if a device is down. Some users may want to know if devices stop responding to ping more quickly than that. LibreNMS offers a ping.php script to run ping checks as quickly as possible without increasing snmp load on your devices by switching to 1 minute polling. WARNING : If you do not have an alert rule that alerts on device status, enabling this will be a waste of resources. You can find one in the Alert Rules Collection .","title":"Fast up/down checking"},{"location":"Extensions/Fast-Ping-Check/#setting-the-ping-check-to-1-minute","text":"1: If you are using RRDCached , stop the service. - This will flush all pending writes so that the rrdstep.php script can change the steps. 2: Change the ping_rrd_step setting in config.php $config['ping_rrd_step'] = 60; 3: Update the rrd files to change the step (step is hardcoded at file creation in rrd files) ./scripts/rrdstep.php -h all 4: Add the following line to /etc/cron.d/librenms to allow 1 minute ping checks * * * * * librenms /opt/librenms/ping.php >> /dev/null 2>&1 5: If applicable: Start the RRDCached service NOTE : If you are using distributed pollers you can restrict a poller to a group by appending -g to the cron entry. Alternatively, you should only run ping.php on a single node.","title":"Setting the ping check to 1 minute"},{"location":"Extensions/Fast-Ping-Check/#sub-minute-ping-check","text":"Cron only has a resolution of one minute, so for sub-minute ping checks we need to adapt both ping and alerts entries. We add two entries per function, but add a delay before one of these entries. Remember, you need to remove the original ping.php and alerts.php entries in crontab before proceeding! 1: Set ping_rrd_step $config['ping_rrd_step'] = 30; 2: Update the rrd files ./scripts/rrdstep.php -h all 3: Update cron (removing any other ping.php or alert.php entries) * * * * * librenms /opt/librenms/ping.php >> /dev/null 2>&1 * * * * * librenms sleep 30 && /opt/librenms/ping.php >> /dev/null 2>&1 * * * * * librenms sleep 15 && /opt/librenms/alerts.php >> /dev/null 2>&1 * * * * * librenms sleep 45 && /opt/librenms/alerts.php >> /dev/null 2>&1","title":"Sub minute ping check"},{"location":"Extensions/Fast-Ping-Check/#device-dependencies","text":"The ping.php script respects device dependencies, but the main poller does not (for technical reasons). However, using this script does not disable the icmp check in the poller and a child may be reported as down before the parent.","title":"Device dependencies"},{"location":"Extensions/Fast-Ping-Check/#settings","text":"ping.php uses much the same settings as the poller fping with one exception: retries is used instead of count. ping.php does not measure loss and avg response time, only up/down, so once a device responds it stops pinging it. $config['fping_options']['retries'] = 2; $config['fping_options']['timeout'] = 500; $config['fping_options']['interval'] = 500;","title":"Settings"},{"location":"Extensions/Gateone/","text":"GateOne integration We have simple integration for GateOne , you will be redirected to your Gateone command line frontend to access your equipment. (Currently this only works with SSH) GateOne itself isn't included within LibreNMS, you will need to install this separately either on the same infrastructure as LibreNMS or as a totally standalone appliance. The installation is beyond the scope of this document. Config is simple, include the following in your config.php : $config [ 'gateone' ][ 'server' ] = 'http://<your_gateone_url/' ; Note: You must use the full url including the trailing / ! We also support prefixing the currently logged in Librenms user to the SSH connection URL that is created, eg. ssh://admin@localhost To enable this, put the following in your config.php : $config [ 'gateone' ][ 'use_librenms_user' ] = true ;","title":"Gateone"},{"location":"Extensions/Gateone/#gateone-integration","text":"We have simple integration for GateOne , you will be redirected to your Gateone command line frontend to access your equipment. (Currently this only works with SSH) GateOne itself isn't included within LibreNMS, you will need to install this separately either on the same infrastructure as LibreNMS or as a totally standalone appliance. The installation is beyond the scope of this document. Config is simple, include the following in your config.php : $config [ 'gateone' ][ 'server' ] = 'http://<your_gateone_url/' ; Note: You must use the full url including the trailing / ! We also support prefixing the currently logged in Librenms user to the SSH connection URL that is created, eg. ssh://admin@localhost To enable this, put the following in your config.php : $config [ 'gateone' ][ 'use_librenms_user' ] = true ;","title":"GateOne integration"},{"location":"Extensions/Graphite/","text":"","title":"Graphite"},{"location":"Extensions/Graylog/","text":"Graylog integration We have simple integration for Graylog, you will be able to view any logs from within LibreNMS that have been parsed by the syslog input from within Graylog itself. This includes logs from devices which aren't in LibreNMS still, you can also see logs for a specific device under the logs section for the device. Currently, LibreNMS does not associate shortnames from Graylog with full FQDNS. If you have your devices in LibreNMS using full FQDNs, such as hostname.example.com, be aware that rsyslogd, by default, sends the shortname only. To fix this, add $PreserveFQDN on to your rsyslog config to send the full FQDN so device logs will be associated correctly in LibreNMS. Also see near the bottom of this document for tips on how to enable/suppress the domain part of hostnames in syslog-messages for some platforms. Graylog itself isn't included within LibreNMS, you will need to install this separately either on the same infrastructure as LibreNMS or as a totally standalone appliance. Config is simple, here's an example based on Graylog 2.4: $config [ 'graylog' ][ 'server' ] = 'http://127.0.0.1' ; $config [ 'graylog' ][ 'port' ] = 9000 ; $config [ 'graylog' ][ 'username' ] = 'admin' ; $config [ 'graylog' ][ 'password' ] = 'admin' ; $config [ 'graylog' ][ 'version' ] = '2.4' ; Graylog messages are stored using GMT timezone. You can display graylog messages in LibreNMS webui using your desired timezone by setting following option in config.php: $config [ 'graylog' ][ 'timezone' ] = 'Europe/Bucharest' ; Timezone must be PHP supported timezones, available at: http://php.net/manual/en/timezones.php If you are running a version earlier than Graylog then please set $config['graylog']['version'] to the version number of your Graylog install. Earlier versions than 2.1 use the default port 12900 If you have altered the default uri for your Graylog setup then you can override the default of /api/ using $config['graylog']['base_uri'] = '/somepath/'; If you choose to use another user besides the admin user, please note that currently you must give the user \"admin\" permissions from within Graylog, \"read\" permissions alone are not sufficient. If you have enabled TLS for the Graylog API and you are using a self-signed certificate, please make sure that the certificate is trusted by your LibreNMS host, otherwise the connection will fail. Additionally, the certificate's Common Name (CN) has to match the FQDN or IP address specified in $config['graylog']['server'] . If you want to match the source address of the log entries against any IP address of a device instead of only against the primary address and the host name to assign the log entries to a device, you can activate this function using $config['graylog']['match-any-address'] = 'true'; There are 2 configuration parameters to influence the behaviour of the \"Recent Graylog\" table on the overview page of the devices. $config['graylog']['device-page']['rowCount'] sets the maximum number of rows to be displayed (default: 10) With $config['graylog']['device-page']['loglevel'] you can set which loglevels should be displayed on the overview page. (default: 7, min: 0, max: 7) $config['graylog']['device-page']['loglevel'] = 4 shows only entries with a log level less than or equal to 4 (Emergency, Alert, Critical, Error, Warning). You can set a default Log Level Filter with $config['graylog']['loglevel'] (applies to /graylog and /device/device=/tab=logs/section=graylog/ (min: 0, max: 7) Suppressing/enabling the domain part of a hostname for specific platforms You should see if what you get in syslog/Graylog matches up with your configured hosts first. If you need to modify the syslog messages from specific platforms, this may be of assistance: IOS (Cisco) router(config)# logging origin-id hostname or router(config)# logging origin-id string JunOS (Juniper Networks) set system syslog host yourlogserver.corp log-prefix YOUR_PREFERRED_STRING PanOS (Palo Alto Networks) set deviceconfig setting management hostname-type-in-syslog hostname or set deviceconfig setting management hostname-type-in-syslog FQDN","title":"Graylog"},{"location":"Extensions/Graylog/#graylog-integration","text":"We have simple integration for Graylog, you will be able to view any logs from within LibreNMS that have been parsed by the syslog input from within Graylog itself. This includes logs from devices which aren't in LibreNMS still, you can also see logs for a specific device under the logs section for the device. Currently, LibreNMS does not associate shortnames from Graylog with full FQDNS. If you have your devices in LibreNMS using full FQDNs, such as hostname.example.com, be aware that rsyslogd, by default, sends the shortname only. To fix this, add $PreserveFQDN on to your rsyslog config to send the full FQDN so device logs will be associated correctly in LibreNMS. Also see near the bottom of this document for tips on how to enable/suppress the domain part of hostnames in syslog-messages for some platforms. Graylog itself isn't included within LibreNMS, you will need to install this separately either on the same infrastructure as LibreNMS or as a totally standalone appliance. Config is simple, here's an example based on Graylog 2.4: $config [ 'graylog' ][ 'server' ] = 'http://127.0.0.1' ; $config [ 'graylog' ][ 'port' ] = 9000 ; $config [ 'graylog' ][ 'username' ] = 'admin' ; $config [ 'graylog' ][ 'password' ] = 'admin' ; $config [ 'graylog' ][ 'version' ] = '2.4' ; Graylog messages are stored using GMT timezone. You can display graylog messages in LibreNMS webui using your desired timezone by setting following option in config.php: $config [ 'graylog' ][ 'timezone' ] = 'Europe/Bucharest' ; Timezone must be PHP supported timezones, available at: http://php.net/manual/en/timezones.php If you are running a version earlier than Graylog then please set $config['graylog']['version'] to the version number of your Graylog install. Earlier versions than 2.1 use the default port 12900 If you have altered the default uri for your Graylog setup then you can override the default of /api/ using $config['graylog']['base_uri'] = '/somepath/'; If you choose to use another user besides the admin user, please note that currently you must give the user \"admin\" permissions from within Graylog, \"read\" permissions alone are not sufficient. If you have enabled TLS for the Graylog API and you are using a self-signed certificate, please make sure that the certificate is trusted by your LibreNMS host, otherwise the connection will fail. Additionally, the certificate's Common Name (CN) has to match the FQDN or IP address specified in $config['graylog']['server'] . If you want to match the source address of the log entries against any IP address of a device instead of only against the primary address and the host name to assign the log entries to a device, you can activate this function using $config['graylog']['match-any-address'] = 'true'; There are 2 configuration parameters to influence the behaviour of the \"Recent Graylog\" table on the overview page of the devices. $config['graylog']['device-page']['rowCount'] sets the maximum number of rows to be displayed (default: 10) With $config['graylog']['device-page']['loglevel'] you can set which loglevels should be displayed on the overview page. (default: 7, min: 0, max: 7) $config['graylog']['device-page']['loglevel'] = 4 shows only entries with a log level less than or equal to 4 (Emergency, Alert, Critical, Error, Warning). You can set a default Log Level Filter with $config['graylog']['loglevel'] (applies to /graylog and /device/device=/tab=logs/section=graylog/ (min: 0, max: 7)","title":"Graylog integration"},{"location":"Extensions/Graylog/#suppressingenabling-the-domain-part-of-a-hostname-for-specific-platforms","text":"You should see if what you get in syslog/Graylog matches up with your configured hosts first. If you need to modify the syslog messages from specific platforms, this may be of assistance:","title":"Suppressing/enabling the domain part of a hostname for specific platforms"},{"location":"Extensions/Graylog/#ios-cisco","text":"router(config)# logging origin-id hostname or router(config)# logging origin-id string","title":"IOS (Cisco)"},{"location":"Extensions/Graylog/#junos-juniper-networks","text":"set system syslog host yourlogserver.corp log-prefix YOUR_PREFERRED_STRING","title":"JunOS (Juniper Networks)"},{"location":"Extensions/Graylog/#panos-palo-alto-networks","text":"set deviceconfig setting management hostname-type-in-syslog hostname or set deviceconfig setting management hostname-type-in-syslog FQDN","title":"PanOS (Palo Alto Networks)"},{"location":"Extensions/IRC-Bot-Extensions/","text":"Quick Guide Okay this is a very quick walk-through in writing own commands for the IRC-Bot. First of all, create a file in includes/ircbot , the file-name should be in this format: command.inc.php . When editing the file, do not open nor close PHP-tags. Any variable you assign will be discarded as soon as your command returns. Some variables, specially all listed under $this-> , have special meanings or effects. Before a command is executed, the IRC-Bot ensures that the MySQL-Socket is working, that $this->user points to the right user and that the user is authenticated. Below you will find a table with related functions and attributes. You can chain-load any built-in command by calling $this->_command(\"My Parameters\") . You cannot chain-load external commands. To enable your command, edit your config.php and add something like this: ... $config [ 'irc_external' ][] = \"mycommand\" ; ... See: Example Functions and Attributes ... that are accessible from within an extension Functions Function( (Type) $Variable [= Default] [,...] ) Returns Description $this->getChan( ) String Returns channel of current event. $this->getData( (boolean) $Block = false ) String/Boolean Returns a line from the IRC-Buffer if it's not matched against any other command . If $Block is true , wait until a suitable line is returned. $this->getUser( ) String Returns nick of current user. Not to confuse with $this->user ! $this->get_user( ) Array See $this->user in Attributes. $this->irc_raw( (string) $Protocol ) Boolean Sends raw IRC-Protocol. $this->isAuthd( ) Boolean true if the user is authenticated. $this->joinChan( (string) $Channel ) Boolean Joins given $Channel . $this->log( (string) $Message ) Boolean Logs given $Message into STDOUT . $this->read( (string) $Buffer ) String/Boolean Returns a line from given $Buffer or false if there's nothing suitable inside the Buffer. Please use $this->getData() for handler-safe data retrieval. $this->respond( (string) $Message ) Boolean Responds to the request auto-detecting channel or private message. Attributes Attribute Type Description $params String Contains all arguments that are passed to the .command . $this->chan Array Channels that are configured. $this->commands Array Contains accessible commands . $this->config Array Contains $config from config.php . $this->data String Contains raw IRC-Protocol. $this->debug Boolean Debug-Flag. $this->external Array Contains loaded extra commands . $this->nick String Bot's nick on the IRC. $this->pass String IRC-Server's passphrase. $this->port Int IRC-Server's port-number. $this->server String IRC-Server's hostname. $this->ssl Boolean SSL-Flag. $this->tick Int Interval to check buffers in microseconds. $this->user Array Array containing details about the user that sent the request . Example includes/ircbot/join-ng.inc.php if ( $this -> user [ 'level' ] != 10 ) { return $this -> respond ( \"Sorry only admins can make me join.\" ); } if ( $this -> getChan () == \"#noc\" ) { $this -> respond ( \"Joining $params \" ); $this -> joinChan ( $params ); } else { $this -> respond ( \"Sorry, only people from #noc can make join.\" ); } config.php ... $config [ 'irc_external' ][] = \"join-ng\" ; ...","title":"IRC Bot Extensions"},{"location":"Extensions/IRC-Bot-Extensions/#quick-guide","text":"Okay this is a very quick walk-through in writing own commands for the IRC-Bot. First of all, create a file in includes/ircbot , the file-name should be in this format: command.inc.php . When editing the file, do not open nor close PHP-tags. Any variable you assign will be discarded as soon as your command returns. Some variables, specially all listed under $this-> , have special meanings or effects. Before a command is executed, the IRC-Bot ensures that the MySQL-Socket is working, that $this->user points to the right user and that the user is authenticated. Below you will find a table with related functions and attributes. You can chain-load any built-in command by calling $this->_command(\"My Parameters\") . You cannot chain-load external commands. To enable your command, edit your config.php and add something like this: ... $config [ 'irc_external' ][] = \"mycommand\" ; ... See: Example","title":"Quick Guide"},{"location":"Extensions/IRC-Bot-Extensions/#functions-and-attributes","text":"... that are accessible from within an extension","title":"Functions and Attributes"},{"location":"Extensions/IRC-Bot-Extensions/#functions","text":"Function( (Type) $Variable [= Default] [,...] ) Returns Description $this->getChan( ) String Returns channel of current event. $this->getData( (boolean) $Block = false ) String/Boolean Returns a line from the IRC-Buffer if it's not matched against any other command . If $Block is true , wait until a suitable line is returned. $this->getUser( ) String Returns nick of current user. Not to confuse with $this->user ! $this->get_user( ) Array See $this->user in Attributes. $this->irc_raw( (string) $Protocol ) Boolean Sends raw IRC-Protocol. $this->isAuthd( ) Boolean true if the user is authenticated. $this->joinChan( (string) $Channel ) Boolean Joins given $Channel . $this->log( (string) $Message ) Boolean Logs given $Message into STDOUT . $this->read( (string) $Buffer ) String/Boolean Returns a line from given $Buffer or false if there's nothing suitable inside the Buffer. Please use $this->getData() for handler-safe data retrieval. $this->respond( (string) $Message ) Boolean Responds to the request auto-detecting channel or private message.","title":"Functions"},{"location":"Extensions/IRC-Bot-Extensions/#attributes","text":"Attribute Type Description $params String Contains all arguments that are passed to the .command . $this->chan Array Channels that are configured. $this->commands Array Contains accessible commands . $this->config Array Contains $config from config.php . $this->data String Contains raw IRC-Protocol. $this->debug Boolean Debug-Flag. $this->external Array Contains loaded extra commands . $this->nick String Bot's nick on the IRC. $this->pass String IRC-Server's passphrase. $this->port Int IRC-Server's port-number. $this->server String IRC-Server's hostname. $this->ssl Boolean SSL-Flag. $this->tick Int Interval to check buffers in microseconds. $this->user Array Array containing details about the user that sent the request .","title":"Attributes"},{"location":"Extensions/IRC-Bot-Extensions/#example","text":"includes/ircbot/join-ng.inc.php if ( $this -> user [ 'level' ] != 10 ) { return $this -> respond ( \"Sorry only admins can make me join.\" ); } if ( $this -> getChan () == \"#noc\" ) { $this -> respond ( \"Joining $params \" ); $this -> joinChan ( $params ); } else { $this -> respond ( \"Sorry, only people from #noc can make join.\" ); } config.php ... $config [ 'irc_external' ][] = \"join-ng\" ; ...","title":"Example"},{"location":"Extensions/IRC-Bot/","text":"About Configuration & Defaults IRC-Commands Examples Server examples Channel notations Hostmask authentication Extensions?! Systemd start up script About LibreNMS has an easy to use IRC-Interface for basic tasks like viewing last log-entry, current device/port status and such. By default the IRC-Bot will not start when executed and will return an error until at least $config['irc_host'] and $config['irc_port'] has been specified inside config.php . (To start the IRC-Bot run ./irc.php ) If no channel has been specified with $config['irc_chan'] , ##librenms will be used. The default Nick for the bot is LibreNMS . The Bot will reply the same way it's being called. If you send it the commands via Query, it will respond in the Query. If you send the commands via a Channel, then it will respond in the Channel. Configuration & Defaults Option Default-Value Notes $config['irc_alert'] false Optional; Enables Alerting-Socket. EXPERIMENTAL $config['irc_alert_chan'] false Optional; Multiple channels can be defined as Array or delimited with , . EXPERIMENTAL $config['irc_alert_utf8'] false Optional; Enables use of strikethrough in alerts via UTF-8 encoded characters. Might cause trouble for some clients. $config['irc_alert_short'] false Optional; Send a one line alert summary instead of multi-line detailed alert. $config['irc_authtime'] 3 Optional; Defines how long in Hours an auth-session is valid. $config['irc_chan'] ##librenms Optional; Multiple channels can be defined as Array or delimited with , . Passwords are defined after a space-character . $config['irc_debug'] false Optional; Enables debug output (Wall of text) $config['irc_external'] Optional; Array or , delimited string with commands to include from includes/ircbot/*.inc.php $config['irc_host'] Required; Domain or IP to connect. If it's an IPv6 Address, embed it in [] . (Example: [::1] ) $config['irc_maxretry'] 5 Optional; How many connection attempts should be made before giving up $config['irc_nick'] LibreNMS Optional; $config['irc_pass'] Optional; This sends the IRC-PASS Sequence to IRC-Servers that require Password on Connect $config['irc_port'] 6667 Required; To enable SSL append a + before the Port. (Example: +6697 ) $config['irc_ctcp'] false Optional; Enable/disable ctcp-replies from the bot (currently VERSION, PING and TIME). $config['irc_ctcp_version'] LibreNMS IRCbot. https://www.librenms.org/ Optional: Reply-string to CTCP VERSION requests $config['irc_auth'] Optional: Array of hostmasks that are automatically authenticated. IRC-Commands Command Description .auth <User/Token> If <user> : Request an Auth-Token. If <token> : Authenticate session. .device <hostname> Prints basic information about given hostname . .down List hostnames that are down, if any. .help List available commands. .join <channel> Joins <channel> if user has admin-level. .listdevices Lists the hostnames of all known devices. .log [<N>] Prints N lines or last line of the eventlog. .port <hostname> <ifname> Prints Port-related information from ifname on given hostname . .quit Disconnect from IRC and exit. .reload Reload configuration. .status <type> Prints status information for given type . Type can be devices , services , ports . Shorthands are: dev , srv , prt .version Prints $this->config['project_name_version'] . ( __/!_ All commands are case-_insensitive but their arguments are case- sensitive ) Examples Server examples Unencrypted Connection to irc.freenode.org : ... $config [ 'irc_host' ] = \"irc.freenode.org\" ; $config [ 'irc_port' ] = 6667 ; ... SSL-Encrypted Connection to irc.freenode.org : ... $config [ 'irc_host' ] = \"irc.freenode.org\" ; $config [ 'irc_port' ] = \"+6697\" ; ... SSL-Encrypted Connection to irc.localdomain with Server-Password and odd port: ... $config [ 'irc_host' ] = \"irc.localdomain\" ; $config [ 'irc_port' ] = \"+12345\" ; $config [ 'irc_pass' ] = \"Super Secret Passphrase123\" ; ... Channel notations Channels can be defined using Array-Notation like: ... $config [ 'irc_chan' ][] = \"#librenms\" ; $config [ 'irc_chan' ][] = \"#otherchan\" ; $config [ 'irc_chan' ][] = \"#noc\" ; ... Or using a single string using , as delimiter between various channels: ... $config [ 'irc_chan' ] = \"#librenms,#otherchan,#noc\" ; ... Hostmask authentication ... $config [ 'irc_auth' ][ 'admin' ][] = \"*!root@nms.host.invalid\" ; $config [ 'irc_auth' ][ 'admin' ][] = \"*!*peter@peters.computer.invalid\" ; $config [ 'irc_auth' ][ ' john ][] = \"john!doe@login.server.invalid\" ; ... Any client matching one of the first two hostmasks will automatically be authenticated as the \"admin\" user in LibreNMS, and clients matching the last line will be authenticated as the user \"john\" in LibreNMS, without using .auth and a waiting for a valid token. Extensions?! The bot is coded in a unified way. This makes writing extensions by far less painful. Simply add your command to the $config['irc_external'] directive and create a file called includes/ircbot/command.inc.php containing your code. The string behind the call of .command is passed as $params . The user who requested something is accessible via $this->user . Send your reply/ies via $this->respond($string) . A more detailed documentation of the functions and variables available for extensions can be found at IRC-Bot Extensions ; Confused? Here an Echo-Example: File: config.php ... $config [ 'irc_external' ][] = \"echo\" ; ... File: includes/ircbot/echo.inc.php //Prefix everything with `You said: '...'` and return what was sent. if ( $this -> user [ 'name' ] != \"root\" ) { return $this -> respond ( \"You said: '\" . $params . \"'\" ); } else { return $this -> respond ( \"root shouldn't be online so late!\" ); } Systemd start up script Basic systemd start up script to be placed in /etc/systemd/system/ to start irc service at boot. librenms-irc.service script is located at /opt/librenms/misc/ Once copied to /etc/systemd/system/ you must run the following commands: a) chmod 664 /etc/systemd/system/librenms-irc.service b) systemctl daemon-reload c) systemctl enable librenms-irc.service d) systemctl start librenms-irc.service It can be stopped or started just like any other systemd script such as systemctl start librenms-irc.service","title":"IRC Bot"},{"location":"Extensions/IRC-Bot/#about","text":"LibreNMS has an easy to use IRC-Interface for basic tasks like viewing last log-entry, current device/port status and such. By default the IRC-Bot will not start when executed and will return an error until at least $config['irc_host'] and $config['irc_port'] has been specified inside config.php . (To start the IRC-Bot run ./irc.php ) If no channel has been specified with $config['irc_chan'] , ##librenms will be used. The default Nick for the bot is LibreNMS . The Bot will reply the same way it's being called. If you send it the commands via Query, it will respond in the Query. If you send the commands via a Channel, then it will respond in the Channel.","title":"About"},{"location":"Extensions/IRC-Bot/#configuration-defaults","text":"Option Default-Value Notes $config['irc_alert'] false Optional; Enables Alerting-Socket. EXPERIMENTAL $config['irc_alert_chan'] false Optional; Multiple channels can be defined as Array or delimited with , . EXPERIMENTAL $config['irc_alert_utf8'] false Optional; Enables use of strikethrough in alerts via UTF-8 encoded characters. Might cause trouble for some clients. $config['irc_alert_short'] false Optional; Send a one line alert summary instead of multi-line detailed alert. $config['irc_authtime'] 3 Optional; Defines how long in Hours an auth-session is valid. $config['irc_chan'] ##librenms Optional; Multiple channels can be defined as Array or delimited with , . Passwords are defined after a space-character . $config['irc_debug'] false Optional; Enables debug output (Wall of text) $config['irc_external'] Optional; Array or , delimited string with commands to include from includes/ircbot/*.inc.php $config['irc_host'] Required; Domain or IP to connect. If it's an IPv6 Address, embed it in [] . (Example: [::1] ) $config['irc_maxretry'] 5 Optional; How many connection attempts should be made before giving up $config['irc_nick'] LibreNMS Optional; $config['irc_pass'] Optional; This sends the IRC-PASS Sequence to IRC-Servers that require Password on Connect $config['irc_port'] 6667 Required; To enable SSL append a + before the Port. (Example: +6697 ) $config['irc_ctcp'] false Optional; Enable/disable ctcp-replies from the bot (currently VERSION, PING and TIME). $config['irc_ctcp_version'] LibreNMS IRCbot. https://www.librenms.org/ Optional: Reply-string to CTCP VERSION requests $config['irc_auth'] Optional: Array of hostmasks that are automatically authenticated.","title":"Configuration &amp; Defaults"},{"location":"Extensions/IRC-Bot/#irc-commands","text":"Command Description .auth <User/Token> If <user> : Request an Auth-Token. If <token> : Authenticate session. .device <hostname> Prints basic information about given hostname . .down List hostnames that are down, if any. .help List available commands. .join <channel> Joins <channel> if user has admin-level. .listdevices Lists the hostnames of all known devices. .log [<N>] Prints N lines or last line of the eventlog. .port <hostname> <ifname> Prints Port-related information from ifname on given hostname . .quit Disconnect from IRC and exit. .reload Reload configuration. .status <type> Prints status information for given type . Type can be devices , services , ports . Shorthands are: dev , srv , prt .version Prints $this->config['project_name_version'] . ( __/!_ All commands are case-_insensitive but their arguments are case- sensitive )","title":"IRC-Commands"},{"location":"Extensions/IRC-Bot/#examples","text":"","title":"Examples"},{"location":"Extensions/IRC-Bot/#server-examples","text":"Unencrypted Connection to irc.freenode.org : ... $config [ 'irc_host' ] = \"irc.freenode.org\" ; $config [ 'irc_port' ] = 6667 ; ... SSL-Encrypted Connection to irc.freenode.org : ... $config [ 'irc_host' ] = \"irc.freenode.org\" ; $config [ 'irc_port' ] = \"+6697\" ; ... SSL-Encrypted Connection to irc.localdomain with Server-Password and odd port: ... $config [ 'irc_host' ] = \"irc.localdomain\" ; $config [ 'irc_port' ] = \"+12345\" ; $config [ 'irc_pass' ] = \"Super Secret Passphrase123\" ; ...","title":"Server examples"},{"location":"Extensions/IRC-Bot/#channel-notations","text":"Channels can be defined using Array-Notation like: ... $config [ 'irc_chan' ][] = \"#librenms\" ; $config [ 'irc_chan' ][] = \"#otherchan\" ; $config [ 'irc_chan' ][] = \"#noc\" ; ... Or using a single string using , as delimiter between various channels: ... $config [ 'irc_chan' ] = \"#librenms,#otherchan,#noc\" ; ...","title":"Channel notations"},{"location":"Extensions/IRC-Bot/#hostmask-authentication","text":"... $config [ 'irc_auth' ][ 'admin' ][] = \"*!root@nms.host.invalid\" ; $config [ 'irc_auth' ][ 'admin' ][] = \"*!*peter@peters.computer.invalid\" ; $config [ 'irc_auth' ][ ' john ][] = \"john!doe@login.server.invalid\" ; ... Any client matching one of the first two hostmasks will automatically be authenticated as the \"admin\" user in LibreNMS, and clients matching the last line will be authenticated as the user \"john\" in LibreNMS, without using .auth and a waiting for a valid token.","title":"Hostmask authentication"},{"location":"Extensions/IRC-Bot/#extensions","text":"The bot is coded in a unified way. This makes writing extensions by far less painful. Simply add your command to the $config['irc_external'] directive and create a file called includes/ircbot/command.inc.php containing your code. The string behind the call of .command is passed as $params . The user who requested something is accessible via $this->user . Send your reply/ies via $this->respond($string) . A more detailed documentation of the functions and variables available for extensions can be found at IRC-Bot Extensions ; Confused? Here an Echo-Example: File: config.php ... $config [ 'irc_external' ][] = \"echo\" ; ... File: includes/ircbot/echo.inc.php //Prefix everything with `You said: '...'` and return what was sent. if ( $this -> user [ 'name' ] != \"root\" ) { return $this -> respond ( \"You said: '\" . $params . \"'\" ); } else { return $this -> respond ( \"root shouldn't be online so late!\" ); }","title":"Extensions?!"},{"location":"Extensions/IRC-Bot/#systemd-start-up-script","text":"Basic systemd start up script to be placed in /etc/systemd/system/ to start irc service at boot. librenms-irc.service script is located at /opt/librenms/misc/ Once copied to /etc/systemd/system/ you must run the following commands: a) chmod 664 /etc/systemd/system/librenms-irc.service b) systemctl daemon-reload c) systemctl enable librenms-irc.service d) systemctl start librenms-irc.service It can be stopped or started just like any other systemd script such as systemctl start librenms-irc.service","title":"Systemd start up script"},{"location":"Extensions/InfluxDB/","text":"","title":"InfluxDB"},{"location":"Extensions/Interface-Description-Parsing/","text":"About Librenms can interpret, display and group certain additional information on ports. This is done based on the format that the port description is written although it's possible to customise the parser to be specific for your setup. Keywords See examples for formats. Keywords Cust - Customer Transit - Transit link Peering - Peering link Core - Infrastructure link (non-customer) Info-keywords () contains a note {} contains your circuit id [] contains the service type or speed Examples Cisco IOS / NXOS / IOSXR: interface Gi0/1 descr Transit: Example Provider (AS65000) interface Gi0/2 descr Peering: Peering Exchange interface Gi0/3 descr Core: core.router01 FastEthernet0/0 (Telco X CCID023141) interface Gi0/4 descr Cust: Example Customer [10Mbit] (T1 Telco Y CCID129031) {EXAMP0001} Unix / Linux: This requires an additional script to be setup # eth3: Cust: Example Customer [10Mbit] (T1 Telco Y CCID129031) {EXAMP0001} # eth0: Transit: Example Provider (AS65000) # eth1: Core: core.router01 FastEthernet0/0 (Telco X CCID023141) # eth2: Peering: Peering Exchange Customisation The following config options can be set to enable more custom types: $config [ 'customers_descr' ][] = 'cust' ; $config [ 'transit_descr' ][] = \"transit\" ; $config [ 'peering_descr' ][] = \"peering\" ; $config [ 'core_descr' ][] = \"core\" ; $config [ 'custom_descr' ][] = \"something_made_up\" ; Custom interface parser It's also possible to write your own parser, the existing one is: includes/port-descr-parser.inc.php Once you've created your own then you can enable it with: $config [ 'port_descr_parser' ] = \"includes/custom/my-port-descr-parser.inc.php\" ; Setup For Unix / Linux based systems, you need to run an additional script to support the parsing of interface infor. Add ifAlias from /opt/librenms/scripts/ or download it from here to the Server and make it executable chmod +x /path/to/ifAlias Add to snmpd.conf something like: pass .1.3.6.1.2.1.31.1.1.1.18 /path/to/ifAlias Restart snmpd - service snmpd restart There are no changes to be made or additions to install for the polling librenms. Now you can set up your keywords in your /etc/network/interfaces //Add more distributions than just Debian based","title":"Interface Description Parsing"},{"location":"Extensions/Interface-Description-Parsing/#about","text":"Librenms can interpret, display and group certain additional information on ports. This is done based on the format that the port description is written although it's possible to customise the parser to be specific for your setup.","title":"About"},{"location":"Extensions/Interface-Description-Parsing/#keywords","text":"See examples for formats. Keywords Cust - Customer Transit - Transit link Peering - Peering link Core - Infrastructure link (non-customer) Info-keywords () contains a note {} contains your circuit id [] contains the service type or speed","title":"Keywords"},{"location":"Extensions/Interface-Description-Parsing/#examples","text":"Cisco IOS / NXOS / IOSXR: interface Gi0/1 descr Transit: Example Provider (AS65000) interface Gi0/2 descr Peering: Peering Exchange interface Gi0/3 descr Core: core.router01 FastEthernet0/0 (Telco X CCID023141) interface Gi0/4 descr Cust: Example Customer [10Mbit] (T1 Telco Y CCID129031) {EXAMP0001} Unix / Linux: This requires an additional script to be setup # eth3: Cust: Example Customer [10Mbit] (T1 Telco Y CCID129031) {EXAMP0001} # eth0: Transit: Example Provider (AS65000) # eth1: Core: core.router01 FastEthernet0/0 (Telco X CCID023141) # eth2: Peering: Peering Exchange","title":"Examples"},{"location":"Extensions/Interface-Description-Parsing/#customisation","text":"The following config options can be set to enable more custom types: $config [ 'customers_descr' ][] = 'cust' ; $config [ 'transit_descr' ][] = \"transit\" ; $config [ 'peering_descr' ][] = \"peering\" ; $config [ 'core_descr' ][] = \"core\" ; $config [ 'custom_descr' ][] = \"something_made_up\" ;","title":"Customisation"},{"location":"Extensions/Interface-Description-Parsing/#custom-interface-parser","text":"It's also possible to write your own parser, the existing one is: includes/port-descr-parser.inc.php Once you've created your own then you can enable it with: $config [ 'port_descr_parser' ] = \"includes/custom/my-port-descr-parser.inc.php\" ;","title":"Custom interface parser"},{"location":"Extensions/Interface-Description-Parsing/#setup","text":"For Unix / Linux based systems, you need to run an additional script to support the parsing of interface infor. Add ifAlias from /opt/librenms/scripts/ or download it from here to the Server and make it executable chmod +x /path/to/ifAlias Add to snmpd.conf something like: pass .1.3.6.1.2.1.31.1.1.1.18 /path/to/ifAlias Restart snmpd - service snmpd restart There are no changes to be made or additions to install for the polling librenms. Now you can set up your keywords in your /etc/network/interfaces //Add more distributions than just Debian based","title":"Setup"},{"location":"Extensions/Metric-Storage/","text":"Metric storage By default we ship all metrics to RRD files, either directly or via RRDCached . On top of this you can ship metrics to Graphite, InfluxDB, OpenTSDB or Prometheus. At present you can't use these backends to display graphs within LibreNMS and will need to use something like Grafana . For further information on configuring LibreNMS to ship data to one of the other backends then please see the documentation below. Graphite InfluxDB OpenTSDB Prometheus","title":"Intro"},{"location":"Extensions/Metric-Storage/#metric-storage","text":"By default we ship all metrics to RRD files, either directly or via RRDCached . On top of this you can ship metrics to Graphite, InfluxDB, OpenTSDB or Prometheus. At present you can't use these backends to display graphs within LibreNMS and will need to use something like Grafana . For further information on configuring LibreNMS to ship data to one of the other backends then please see the documentation below. Graphite InfluxDB OpenTSDB Prometheus","title":"Metric storage"},{"location":"Extensions/NFSen/","text":"NFSen The installation of NFSen is out of scope for this document / LibreNMS Configuration The following is the configuration that can be used: $config [ 'nfsen_enable' ] = 1 ; $config [ 'nfsen_split_char' ] = '_' ; $config [ 'nfsen_rrds' ][] = '/var/nfsen/profiles-stat/live/' ; $config [ 'nfsen_rrds' ][] = '/var/nfsen/profiles-stat' ; $config [ 'nfsen_base' ][] = '/var/nfsen/' ; $config [ 'nfsen_suffix' ] = \"_yourdomain_com\" ; Set $config['nfsen_enable'] = 1; to enable NFSen support. $config['nfsen_rrds'] This value tells us where your NFSen rrd files live. This can also be an array to specify more directories like: $config [ 'nfsen_rrds' ][] = '/var/nfsen/profiles-stat/sitea/' ; $config [ 'nfsen_rrds' ][] = '/var/nfsen/profiles-stat/siteb/' ; Although for most setups, it will look like below, with the profiles-stat/live directory being where it stores the general RRDs for data sources. $config [ 'nfsen_rrds' ][] = '/var/nfsen/profiles-stat/live' ; If you wish to render info for configure channels for a device, you need add the various profile-stat directories your system uses, which for most systems will be as below. $config [ 'nfsen_rrds' ][] = '/var/nfsen/profiles-stat' ; When adding sources to nfsen.conf, it is important to use the hostname that matches what is configured in LibreNMS, because the rrd files NfSen creates is named after the source name (ident), and it doesn't allow you to use an IP address instead. However, in LibreNMS, if your device is added by an IP address, add your source with any name of your choice, and create a symbolic link to the rrd file. cd /var/nfsen/profiles-stat/sitea/ ln -s mychannel.rrd librenmsdeviceIP.rrd $config [ 'nfsen_split_char' ] = '_' ; This value tells us what to replace the full stops . in the devices hostname with. $config [ 'nfsen_suffix' ] = \"_yourdomain_com\" ; The above is a very important bit as device names in NfSen are limited to 21 characters. This means full domain names for devices can be very problematic to squeeze in, so therefor this chunk is usually removed. On a similar note, NfSen profiles for channels should be created with the same name. Stats Defaults and Settings Below are the default settings used with nfdump for stats. For more defaulted information on that, please see nfdump(1). The default location for nfdump is /usr/bin/nfdump . If nfdump is located elsewhere, set it with $config['nfdump'] = '/usr/local/bin/nfdump'; for example. $config [ 'nfsen_last_max' ] = 153600 ; $config [ 'nfsen_top_max' ] = 500 ; $config [ 'nfsen_top_N' ] = array ( 10 , 20 , 50 , 100 , 200 , 500 ); $config [ 'nfsen_top_default' ] = 20 ; $config [ 'nfsen_stat_default' ] = 'srcip' ; $config [ 'nfsen_order_default' ] = 'packets' ; $config [ 'nfsen_last_default' ] = 900 ; $config [ 'nfsen_lasts' ] = array ( '300' => '5 minutes' , '600' => '10 minutes' , '900' => '15 minutes' , '1800' => '30 minutes' , '3600' => '1 hour' , '9600' => '3 hours' , '38400' => '12 hours' , '76800' => '24 hours' , '115200' => '36 hours' , '153600' => '48 hours' , ); $config['nfsen_last_max'] = 153600; The above is the max value in seconds one may pull stats for. The higher this is, the more CPU and disk intensive the search will be. Numbers larger than this will be set to this. $config['nfsen_top_max'] = 500; The above is max number of items to be displayed. Numbers larger than this will be set to this. $config['nfsen_top_N']=array( 10, 20, 50, 100, 200, 500 ); The above is a array containing a list for the drop down menu how many top items should be returned. $config [ 'nfsen_top_default' ] = 20 ; The above sets default top number to use from the drop down. $config [ 'nfsen_stat_default' ] = 'srcip' ; The above sets default stat type to use from the drop down. record Flow Records ip Any IP Address srcip SRC IP Address dstip DST IP Address port Any Port srcport SRC Port dstport DST Port srctos SRC TOS dsttos DST TOS tos TOS as AS srcas SRC AS dstas DST AS $config [ 'nfsen_order_default' ] = 'packets' ; The above sets default order type to use from the drop down. Any of the following below are currently supported. flows Number of total flows for the time period. packet Number of total packets for the time period. bytes Number of total bytes for the time period. pps Packets Per Second bps Bytes Per Second bpp Bytes Per Packet $config['nfsen_last_default']=900; The above is the last default to use from the drop down. $config['nfsen_lasts']=array( '300'=>'5 minutes', '600'=>'10 minutes', '900'=>'15 minutes', '1800'=>'30 minutes', '3600'=>'1 hour', '9600'=>'3 hours', '38400'=>'12 hours', '76800'=>'24 hours', '115200'=>'36 hours', '153600'=>'48 hours', ); The above associative array contains time intervals for how far back to go. The keys are the length in seconds and the value is just a description to display.","title":"NFSen"},{"location":"Extensions/NFSen/#nfsen","text":"The installation of NFSen is out of scope for this document / LibreNMS","title":"NFSen"},{"location":"Extensions/NFSen/#configuration","text":"The following is the configuration that can be used: $config [ 'nfsen_enable' ] = 1 ; $config [ 'nfsen_split_char' ] = '_' ; $config [ 'nfsen_rrds' ][] = '/var/nfsen/profiles-stat/live/' ; $config [ 'nfsen_rrds' ][] = '/var/nfsen/profiles-stat' ; $config [ 'nfsen_base' ][] = '/var/nfsen/' ; $config [ 'nfsen_suffix' ] = \"_yourdomain_com\" ; Set $config['nfsen_enable'] = 1; to enable NFSen support. $config['nfsen_rrds'] This value tells us where your NFSen rrd files live. This can also be an array to specify more directories like: $config [ 'nfsen_rrds' ][] = '/var/nfsen/profiles-stat/sitea/' ; $config [ 'nfsen_rrds' ][] = '/var/nfsen/profiles-stat/siteb/' ; Although for most setups, it will look like below, with the profiles-stat/live directory being where it stores the general RRDs for data sources. $config [ 'nfsen_rrds' ][] = '/var/nfsen/profiles-stat/live' ; If you wish to render info for configure channels for a device, you need add the various profile-stat directories your system uses, which for most systems will be as below. $config [ 'nfsen_rrds' ][] = '/var/nfsen/profiles-stat' ; When adding sources to nfsen.conf, it is important to use the hostname that matches what is configured in LibreNMS, because the rrd files NfSen creates is named after the source name (ident), and it doesn't allow you to use an IP address instead. However, in LibreNMS, if your device is added by an IP address, add your source with any name of your choice, and create a symbolic link to the rrd file. cd /var/nfsen/profiles-stat/sitea/ ln -s mychannel.rrd librenmsdeviceIP.rrd $config [ 'nfsen_split_char' ] = '_' ; This value tells us what to replace the full stops . in the devices hostname with. $config [ 'nfsen_suffix' ] = \"_yourdomain_com\" ; The above is a very important bit as device names in NfSen are limited to 21 characters. This means full domain names for devices can be very problematic to squeeze in, so therefor this chunk is usually removed. On a similar note, NfSen profiles for channels should be created with the same name.","title":"Configuration"},{"location":"Extensions/NFSen/#stats-defaults-and-settings","text":"Below are the default settings used with nfdump for stats. For more defaulted information on that, please see nfdump(1). The default location for nfdump is /usr/bin/nfdump . If nfdump is located elsewhere, set it with $config['nfdump'] = '/usr/local/bin/nfdump'; for example. $config [ 'nfsen_last_max' ] = 153600 ; $config [ 'nfsen_top_max' ] = 500 ; $config [ 'nfsen_top_N' ] = array ( 10 , 20 , 50 , 100 , 200 , 500 ); $config [ 'nfsen_top_default' ] = 20 ; $config [ 'nfsen_stat_default' ] = 'srcip' ; $config [ 'nfsen_order_default' ] = 'packets' ; $config [ 'nfsen_last_default' ] = 900 ; $config [ 'nfsen_lasts' ] = array ( '300' => '5 minutes' , '600' => '10 minutes' , '900' => '15 minutes' , '1800' => '30 minutes' , '3600' => '1 hour' , '9600' => '3 hours' , '38400' => '12 hours' , '76800' => '24 hours' , '115200' => '36 hours' , '153600' => '48 hours' , ); $config['nfsen_last_max'] = 153600; The above is the max value in seconds one may pull stats for. The higher this is, the more CPU and disk intensive the search will be. Numbers larger than this will be set to this. $config['nfsen_top_max'] = 500; The above is max number of items to be displayed. Numbers larger than this will be set to this. $config['nfsen_top_N']=array( 10, 20, 50, 100, 200, 500 ); The above is a array containing a list for the drop down menu how many top items should be returned. $config [ 'nfsen_top_default' ] = 20 ; The above sets default top number to use from the drop down. $config [ 'nfsen_stat_default' ] = 'srcip' ; The above sets default stat type to use from the drop down. record Flow Records ip Any IP Address srcip SRC IP Address dstip DST IP Address port Any Port srcport SRC Port dstport DST Port srctos SRC TOS dsttos DST TOS tos TOS as AS srcas SRC AS dstas DST AS $config [ 'nfsen_order_default' ] = 'packets' ; The above sets default order type to use from the drop down. Any of the following below are currently supported. flows Number of total flows for the time period. packet Number of total packets for the time period. bytes Number of total bytes for the time period. pps Packets Per Second bps Bytes Per Second bpp Bytes Per Packet $config['nfsen_last_default']=900; The above is the last default to use from the drop down. $config['nfsen_lasts']=array( '300'=>'5 minutes', '600'=>'10 minutes', '900'=>'15 minutes', '1800'=>'30 minutes', '3600'=>'1 hour', '9600'=>'3 hours', '38400'=>'12 hours', '76800'=>'24 hours', '115200'=>'36 hours', '153600'=>'48 hours', ); The above associative array contains time intervals for how far back to go. The keys are the length in seconds and the value is just a description to display.","title":"Stats Defaults and Settings"},{"location":"Extensions/Network-Map/","text":"Network Map LibreNMS has the ability to show you a network map based on: xDP Discovery MAC addresses By default, both are are included but you can enable / disable either one using the following config option: $config [ 'network_map_items' ] = array ( 'mac' , 'xdp' ); Either remove mac or xdp depending on which you want. XDP is based on FDP, CDP and LLDP support based on the device type. A global map will be drawn from the information in the database, it is worth noting that this could lead to a large network map. Network maps for individual devices are available showing the relationship with other devices. Also you can Build Device Groups and those Device Groups can be drawn with Network Map. Network Map Configurator This link will show you all the options and explain what they do. Link You may also access the dyanamic configuration interface example here from within LibreNMS by adding the following to config.php $config [ 'network_map_vis_options' ] = '{ \"configure\": { \"enabled\": true}, }' ; Note You may want to disable the automatic page refresh while you're tweaking your configuration, as the refresh will reset the dynamic configuration UI to the values currently saved in config.php This can be done by going clicking on the Settings Icon then Refresh Pause. Configurator Output Once you've achieved your desired map appearance, click the generate options button at the bottom to be given the necessary parameters to add to your config.php file. You will need to paste the genrated config into config.php the format will need to look something like this. Note that the configuartor will output the config with var options you will need strip that out and at the end of the config you need to add in }'; see the example below. $config [ 'network_map_vis_options' ] = '{ \"nodes\": { \"color\": { \"background\": \"rgba(20,252,18,1)\" }, \"font\": { \"face\": \"tahoma\" }, \"physics\": false }, \"edges\": { \"smooth\": { \"forceDirection\": \"none\" } }, \"interaction\": { \"hover\": true, \"multiselect\": true, \"navigationButtons\": true }, \"manipulation\": { \"enabled\": true }, \"physics\": { \"barnesHut\": { \"avoidOverlap\": 0.11 }, \"minVelocity\": 0.75 } }' ;","title":"Network Map"},{"location":"Extensions/Network-Map/#network-map","text":"LibreNMS has the ability to show you a network map based on: xDP Discovery MAC addresses By default, both are are included but you can enable / disable either one using the following config option: $config [ 'network_map_items' ] = array ( 'mac' , 'xdp' ); Either remove mac or xdp depending on which you want. XDP is based on FDP, CDP and LLDP support based on the device type. A global map will be drawn from the information in the database, it is worth noting that this could lead to a large network map. Network maps for individual devices are available showing the relationship with other devices. Also you can Build Device Groups and those Device Groups can be drawn with Network Map.","title":"Network Map"},{"location":"Extensions/Network-Map/#network-map-configurator","text":"This link will show you all the options and explain what they do. Link You may also access the dyanamic configuration interface example here from within LibreNMS by adding the following to config.php $config [ 'network_map_vis_options' ] = '{ \"configure\": { \"enabled\": true}, }' ;","title":"Network Map Configurator"},{"location":"Extensions/Network-Map/#note","text":"You may want to disable the automatic page refresh while you're tweaking your configuration, as the refresh will reset the dynamic configuration UI to the values currently saved in config.php This can be done by going clicking on the Settings Icon then Refresh Pause.","title":"Note"},{"location":"Extensions/Network-Map/#configurator-output","text":"Once you've achieved your desired map appearance, click the generate options button at the bottom to be given the necessary parameters to add to your config.php file. You will need to paste the genrated config into config.php the format will need to look something like this. Note that the configuartor will output the config with var options you will need strip that out and at the end of the config you need to add in }'; see the example below. $config [ 'network_map_vis_options' ] = '{ \"nodes\": { \"color\": { \"background\": \"rgba(20,252,18,1)\" }, \"font\": { \"face\": \"tahoma\" }, \"physics\": false }, \"edges\": { \"smooth\": { \"forceDirection\": \"none\" } }, \"interaction\": { \"hover\": true, \"multiselect\": true, \"navigationButtons\": true }, \"manipulation\": { \"enabled\": true }, \"physics\": { \"barnesHut\": { \"avoidOverlap\": 0.11 }, \"minVelocity\": 0.75 } }' ;","title":"Configurator Output"},{"location":"Extensions/OpenTSDB/","text":"","title":"OpenTSDB"},{"location":"Extensions/Oxidized/","text":"Oxidized intro Integrating LibreNMS with Oxidized brings the following benefits: Config viewing: Current, History, and Diffs all under the Configs tab of each device Automatic addition of devices to Oxidized: Including filtering and grouping to ease credential management Configuration searching (Requires oxidized-web 0.8.0 or newer) First you will need to install Oxidized following their documentation . Then you can procede to the LibreNMS Web UI and go to Oxidized Settings in the External Settings section of Global Settings. Enable it and enter the url to your oxidized instance. To have devices automatically added, you will need to configure oxidized to pull them from LibreNMS Feeding Oxidized LibreNMS will automatically map the OS to the Oxidized model name if they don't match. this means you shouldn't need to use the model_map config option within Oxidized. Detailed integration information This is a straight forward use of Oxidized, it relies on you having a working Oxidized setup which is already taking config snapshots for your devices. When you have that, you only need the following config to enable the display of device configs within the device page itself: $config [ 'oxidized' ][ 'enabled' ] = TRUE ; $config [ 'oxidized' ][ 'url' ] = 'http://127.0.0.1:8888' ; LibreNMS supports config versioning if Oxidized does. This is known to work with the git output module. $config [ 'oxidized' ][ 'features' ][ 'versioning' ] = true ; Oxidized supports various ways to utilise credentials to login to devices, you can specify global username/password within Oxidized, Group level username/password or per device. LibreNMS currently supports sending groups back to Oxidized so that you can then define group credentials within Oxidized. To enable this support please switch on 'Enable the return of groups to Oxidized': $config [ 'oxidized' ][ 'group_support' ] = true ; You can set a default group that devices will fall back to with: $config [ 'oxidized' ][ 'default_group' ] = 'default' ; SELinux If you're runnng SELinux, you'll need to allow httpd to connect outbound to the network, otherwise Oxidized integration in the web UI will silently fail: setsebool -P httpd_can_network_connect 1 Feeding Oxidized Oxidized has support for feeding devices into it via an API call, support for Oxidized has been added to the LibreNMS API. A sample config for Oxidized is provided below. You will need to configure default credentials for your devices in the Oxidized config, LibreNMS doesn't provide login credentials at this time. source: default: http debug: false http: url: https://librenms/api/v0/oxidized map: name: hostname model: os group: group headers: X-Auth-Token: '01582bf94c03104ecb7953dsadsadwed' LibreNMS is able to reload the Oxidized list of nodes, each time a device is added to LibreNMS. To do so, edit the option in Global Settings>External Settings>Oxidized Integration or add the following to your config.php. $config [ 'oxidized' ][ 'reload_nodes' ] = true ; Creating overrides To return an override to Oxidized you can do this by providing the override key, followed by matching a lookup for a host (or hosts), and finally by defining the overriding value itself. LibreNMS does not check for the validity of these attributes but will deliver them to Oxidized as defined. Matching of hosts can be done using hostname , sysname , os , location , sysDescr or hardware and including either a 'match' key and value, or a 'regex' key and value. The order of matching is: hostname sysname sysDescr hardware os location ip To match on the device hostnames or sysnames that contain 'lon-sw' or if the location contains 'London' then you would place the following within config.php: $config [ 'oxidized' ][ 'maps' ][ 'group' ][ 'hostname' ][] = array ( 'regex' => '/^lon-sw/' , 'group' => 'london-switches' ); $config [ 'oxidized' ][ 'maps' ][ 'group' ][ 'sysname' ][] = array ( 'regex' => '/^lon-sw/' , 'group' => 'london-switches' ); $config [ 'oxidized' ][ 'maps' ][ 'group' ][ 'location' ][] = array ( 'regex' => '/london/' , 'group' => 'london-switches' ); To match on a device os of edgeos then please use the following: $config [ 'oxidized' ][ 'maps' ][ 'group' ][ 'os' ][] = array ( 'match' => 'edgeos' , 'group' => 'wireless' ); Matching on OS requires system name of the OS. For example, 'match' => 'RouterOS' will not work, while 'match' => 'routeros' will. To override the IP Oxidized uses to poll the device, you can add the following within config.php: $config [ 'oxidized' ][ 'maps' ][ 'ip' ][ 'sysname' ][] = array ( 'regex' => '/^my.node/' , 'ip' => '192.168.1.10' ); $config [ 'oxidized' ][ 'maps' ][ 'ip' ][ 'sysname' ][] = array ( 'match' => 'my-other.node' , 'ip' => '192.168.1.20' ); This allows extending the configuration further by providing a completely flexible model for custom flags and settings, for example, below shows the ability to add an ssh_proxy host within Oxidized simply by adding the below to your configuration: $config [ 'oxidized' ][ 'maps' ][ 'ssh_proxy' ][ 'sysname' ][] = array ( 'regex' => '/^my.node/' , 'ssh_proxy' => 'my-ssh-gateway.node' ); Or of course, any custom value that could be needed or wanted can be applied, for example, setting a \"myAttribute\" to \"Super cool value\" for any configured and enabled \"routeros\" device. $config [ 'oxidized' ][ 'maps' ][ 'myAttribute' ][ 'os' ][] = array ( 'match' => 'routeros' , 'myAttribute' => 'Super cool value' ); Verify the return of groups by querying the API: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/oxidized If you need to, you can specify credentials for groups by using the following in your Oxidized config: groups: <groupname>: username: <user> password: <password> Miscellaneous If you have devices which you do not wish to appear in Oxidized then you can edit those devices in Device -> Edit -> Misc and enable \"Exclude from Oxidized?\" It's also possible to exclude certain device types and OS' from being output via the API. This is currently only possible via config.php: $config [ 'oxidized' ][ 'ignore_types' ] = array ( 'server' , 'power' ); $config [ 'oxidized' ][ 'ignore_os' ] = array ( 'linux' , 'windows' ); Trigger configuration backups Using the Oxidized REST API and Syslog Hooks , Oxidized can trigger configuration downloads whenever a configuration change event has been logged. An example script to do this is included in ./scripts/syslog-notify-oxidized.php . Oxidized can spawn a new worker thread and perform the download immediately with the following configuration next_adds_job: true Validate Oxidized config You can perform basic validation of the Oxidized configuration by going to the Overview -> Tools -> Oxidized link and in the Oxidized config validation page, paste your yaml file into the input box and click 'Validate YAML'. We check for yaml syntax errors and also actual config values to ensure they are used in the correct location. Accessing configuration of a disabled/removed device When you're disabling or removing a device from LibreNMS, the configuration will no longer be available via the LibreNMS web interface. You can gain access to these configurations directly in the Git repository of Oxidized (if using Git for version control). 1: Check in your Oxidized where are stored your Git repositories: /home/oxidized/.config/oxidized/config 2: Go the correct Git repository for the needed device (the .git one) and get the list of devices using this command: git ls-files -s 3: Save the object ID of the device, and run the command to get the file content: git cat-file -p <object id> Remove disabled/removed device If you want to purge saved config of a device that is not in LibreNMS anymore, you can run the following command: git rm --cached <object id>","title":"Oxidized"},{"location":"Extensions/Oxidized/#oxidized-intro","text":"Integrating LibreNMS with Oxidized brings the following benefits: Config viewing: Current, History, and Diffs all under the Configs tab of each device Automatic addition of devices to Oxidized: Including filtering and grouping to ease credential management Configuration searching (Requires oxidized-web 0.8.0 or newer) First you will need to install Oxidized following their documentation . Then you can procede to the LibreNMS Web UI and go to Oxidized Settings in the External Settings section of Global Settings. Enable it and enter the url to your oxidized instance. To have devices automatically added, you will need to configure oxidized to pull them from LibreNMS Feeding Oxidized LibreNMS will automatically map the OS to the Oxidized model name if they don't match. this means you shouldn't need to use the model_map config option within Oxidized.","title":"Oxidized intro"},{"location":"Extensions/Oxidized/#detailed-integration-information","text":"This is a straight forward use of Oxidized, it relies on you having a working Oxidized setup which is already taking config snapshots for your devices. When you have that, you only need the following config to enable the display of device configs within the device page itself: $config [ 'oxidized' ][ 'enabled' ] = TRUE ; $config [ 'oxidized' ][ 'url' ] = 'http://127.0.0.1:8888' ; LibreNMS supports config versioning if Oxidized does. This is known to work with the git output module. $config [ 'oxidized' ][ 'features' ][ 'versioning' ] = true ; Oxidized supports various ways to utilise credentials to login to devices, you can specify global username/password within Oxidized, Group level username/password or per device. LibreNMS currently supports sending groups back to Oxidized so that you can then define group credentials within Oxidized. To enable this support please switch on 'Enable the return of groups to Oxidized': $config [ 'oxidized' ][ 'group_support' ] = true ; You can set a default group that devices will fall back to with: $config [ 'oxidized' ][ 'default_group' ] = 'default' ;","title":"Detailed integration information"},{"location":"Extensions/Oxidized/#selinux","text":"If you're runnng SELinux, you'll need to allow httpd to connect outbound to the network, otherwise Oxidized integration in the web UI will silently fail: setsebool -P httpd_can_network_connect 1","title":"SELinux"},{"location":"Extensions/Oxidized/#feeding-oxidized","text":"Oxidized has support for feeding devices into it via an API call, support for Oxidized has been added to the LibreNMS API. A sample config for Oxidized is provided below. You will need to configure default credentials for your devices in the Oxidized config, LibreNMS doesn't provide login credentials at this time. source: default: http debug: false http: url: https://librenms/api/v0/oxidized map: name: hostname model: os group: group headers: X-Auth-Token: '01582bf94c03104ecb7953dsadsadwed' LibreNMS is able to reload the Oxidized list of nodes, each time a device is added to LibreNMS. To do so, edit the option in Global Settings>External Settings>Oxidized Integration or add the following to your config.php. $config [ 'oxidized' ][ 'reload_nodes' ] = true ;","title":"Feeding Oxidized"},{"location":"Extensions/Oxidized/#creating-overrides","text":"To return an override to Oxidized you can do this by providing the override key, followed by matching a lookup for a host (or hosts), and finally by defining the overriding value itself. LibreNMS does not check for the validity of these attributes but will deliver them to Oxidized as defined. Matching of hosts can be done using hostname , sysname , os , location , sysDescr or hardware and including either a 'match' key and value, or a 'regex' key and value. The order of matching is: hostname sysname sysDescr hardware os location ip To match on the device hostnames or sysnames that contain 'lon-sw' or if the location contains 'London' then you would place the following within config.php: $config [ 'oxidized' ][ 'maps' ][ 'group' ][ 'hostname' ][] = array ( 'regex' => '/^lon-sw/' , 'group' => 'london-switches' ); $config [ 'oxidized' ][ 'maps' ][ 'group' ][ 'sysname' ][] = array ( 'regex' => '/^lon-sw/' , 'group' => 'london-switches' ); $config [ 'oxidized' ][ 'maps' ][ 'group' ][ 'location' ][] = array ( 'regex' => '/london/' , 'group' => 'london-switches' ); To match on a device os of edgeos then please use the following: $config [ 'oxidized' ][ 'maps' ][ 'group' ][ 'os' ][] = array ( 'match' => 'edgeos' , 'group' => 'wireless' ); Matching on OS requires system name of the OS. For example, 'match' => 'RouterOS' will not work, while 'match' => 'routeros' will. To override the IP Oxidized uses to poll the device, you can add the following within config.php: $config [ 'oxidized' ][ 'maps' ][ 'ip' ][ 'sysname' ][] = array ( 'regex' => '/^my.node/' , 'ip' => '192.168.1.10' ); $config [ 'oxidized' ][ 'maps' ][ 'ip' ][ 'sysname' ][] = array ( 'match' => 'my-other.node' , 'ip' => '192.168.1.20' ); This allows extending the configuration further by providing a completely flexible model for custom flags and settings, for example, below shows the ability to add an ssh_proxy host within Oxidized simply by adding the below to your configuration: $config [ 'oxidized' ][ 'maps' ][ 'ssh_proxy' ][ 'sysname' ][] = array ( 'regex' => '/^my.node/' , 'ssh_proxy' => 'my-ssh-gateway.node' ); Or of course, any custom value that could be needed or wanted can be applied, for example, setting a \"myAttribute\" to \"Super cool value\" for any configured and enabled \"routeros\" device. $config [ 'oxidized' ][ 'maps' ][ 'myAttribute' ][ 'os' ][] = array ( 'match' => 'routeros' , 'myAttribute' => 'Super cool value' ); Verify the return of groups by querying the API: curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/oxidized If you need to, you can specify credentials for groups by using the following in your Oxidized config: groups: <groupname>: username: <user> password: <password>","title":"Creating overrides"},{"location":"Extensions/Oxidized/#miscellaneous","text":"If you have devices which you do not wish to appear in Oxidized then you can edit those devices in Device -> Edit -> Misc and enable \"Exclude from Oxidized?\" It's also possible to exclude certain device types and OS' from being output via the API. This is currently only possible via config.php: $config [ 'oxidized' ][ 'ignore_types' ] = array ( 'server' , 'power' ); $config [ 'oxidized' ][ 'ignore_os' ] = array ( 'linux' , 'windows' );","title":"Miscellaneous"},{"location":"Extensions/Oxidized/#trigger-configuration-backups","text":"Using the Oxidized REST API and Syslog Hooks , Oxidized can trigger configuration downloads whenever a configuration change event has been logged. An example script to do this is included in ./scripts/syslog-notify-oxidized.php . Oxidized can spawn a new worker thread and perform the download immediately with the following configuration next_adds_job: true","title":"Trigger configuration backups"},{"location":"Extensions/Oxidized/#validate-oxidized-config","text":"You can perform basic validation of the Oxidized configuration by going to the Overview -> Tools -> Oxidized link and in the Oxidized config validation page, paste your yaml file into the input box and click 'Validate YAML'. We check for yaml syntax errors and also actual config values to ensure they are used in the correct location.","title":"Validate Oxidized config"},{"location":"Extensions/Oxidized/#accessing-configuration-of-a-disabledremoved-device","text":"When you're disabling or removing a device from LibreNMS, the configuration will no longer be available via the LibreNMS web interface. You can gain access to these configurations directly in the Git repository of Oxidized (if using Git for version control). 1: Check in your Oxidized where are stored your Git repositories: /home/oxidized/.config/oxidized/config 2: Go the correct Git repository for the needed device (the .git one) and get the list of devices using this command: git ls-files -s 3: Save the object ID of the device, and run the command to get the file content: git cat-file -p <object id>","title":"Accessing configuration of a disabled/removed device"},{"location":"Extensions/Oxidized/#remove-disabledremoved-device","text":"If you want to purge saved config of a device that is not in LibreNMS anymore, you can run the following command: git rm --cached <object id>","title":"Remove disabled/removed device"},{"location":"Extensions/PeeringDB/","text":"PeeringDB Support LibreNMS has integration with PeeringDB to match up your BGP sessions with the peering exchanges you are connected to. To enable the integration please do so within the WebUI -> Global Settings -> External Settings -> PeeringDB Integration. Data will be collated the next time daily.sh is run or you can manually force this by running php daily.php -f peeringdb , the initial collection is delayed for a random amount of time to avoid overloading the PeeringDB API. Once enabled you will have an additional menu item under Routing -> PeeringDB","title":"PeeringDB"},{"location":"Extensions/PeeringDB/#peeringdb-support","text":"LibreNMS has integration with PeeringDB to match up your BGP sessions with the peering exchanges you are connected to. To enable the integration please do so within the WebUI -> Global Settings -> External Settings -> PeeringDB Integration. Data will be collated the next time daily.sh is run or you can manually force this by running php daily.php -f peeringdb , the initial collection is delayed for a random amount of time to avoid overloading the PeeringDB API. Once enabled you will have an additional menu item under Routing -> PeeringDB","title":"PeeringDB Support"},{"location":"Extensions/Plugin-System/","text":"Developing for the Plugin System This will most likely be deprecated in favour of adding the possible extensions to the core code base. This documentation will hopefully give you a basis for how to write a plugin for LibreNMS. A test plugin is included in LibreNMS distribution. Generic structure Plugins need to be installed into html/plugins The structure of a plugin is follows: html/plugins /PluginName /PluginName.php /PluginName.inc.php The above structure is checked before a plugin can be installed. All files / folder names are case sensitive and must match. PluginName - This is a directory and needs to be named as per the plugin you are creating. PluginName.php :: This file is used to process calls into the plugin from the main LibreNMS install. Here only functions within the class for your plugin that LibreNMS calls will be executed. For a list of currently enabled system hooks, please see further down. The minimum code required in this file is (replace Test with the name of your plugin): <?php class Test { } ?> PluginName.inc.php :: This file is the main included file when browsing to the plugin itself. You can use this to display / edit / remove whatever you like. The minimum code required in this file is: <?php ?> System Hooks System hooks are called as functions within your plugin class. The following system hooks are currently available: menu() :: This is called to build the plugin menu system and you can use this to link to your plugin (you don't have to). public static function menu() { echo('<li><a href=\"plugin/p='.get_class().'\">'.get_class().'</a></li>'); } device_overview_container($device) :: This is called in the Device Overview page. You receive the $device as a parameter, can do your work here and display your results in a frame. public function device_overview_container($device) { echo('<div class=\"container-fluid\"><div class=\"row\"> <div class=\"col-md-12\"> <div class=\"panel panel-default panel-condensed\"> <div class=\"panel-heading\"><strong>'.get_class().' Plugin </strong> </div>'); echo(' Example plugin in \"Device - Overview\" tab <br>'); echo('</div></div></div></div>'); } port_container($device, $port) :: This is called in the Port page, in the \"Plugins\" menu_option that will appear when your plugin gets enabled. In this function, you can do your work and display your results in a frame. public function port_container($device, $port) { echo('<div class=\"container-fluid\"><div class=\"row\"> <div class=\"col-md-12\"> <div class=\"panel panel-default panel-condensed\"> <div class=\"panel-heading\"><strong>'.get_class().' plugin in \"Port\" tab</strong> </div>'); echo ('Example display in Port tab</br>'); echo('</div></div></div></div>'); }","title":"Plugin System"},{"location":"Extensions/Plugin-System/#developing-for-the-plugin-system","text":"This will most likely be deprecated in favour of adding the possible extensions to the core code base. This documentation will hopefully give you a basis for how to write a plugin for LibreNMS. A test plugin is included in LibreNMS distribution.","title":"Developing for the Plugin System"},{"location":"Extensions/Plugin-System/#generic-structure","text":"Plugins need to be installed into html/plugins The structure of a plugin is follows: html/plugins /PluginName /PluginName.php /PluginName.inc.php The above structure is checked before a plugin can be installed. All files / folder names are case sensitive and must match. PluginName - This is a directory and needs to be named as per the plugin you are creating. PluginName.php :: This file is used to process calls into the plugin from the main LibreNMS install. Here only functions within the class for your plugin that LibreNMS calls will be executed. For a list of currently enabled system hooks, please see further down. The minimum code required in this file is (replace Test with the name of your plugin): <?php class Test { } ?> PluginName.inc.php :: This file is the main included file when browsing to the plugin itself. You can use this to display / edit / remove whatever you like. The minimum code required in this file is: <?php ?>","title":"Generic structure"},{"location":"Extensions/Plugin-System/#system-hooks","text":"System hooks are called as functions within your plugin class. The following system hooks are currently available: menu() :: This is called to build the plugin menu system and you can use this to link to your plugin (you don't have to). public static function menu() { echo('<li><a href=\"plugin/p='.get_class().'\">'.get_class().'</a></li>'); } device_overview_container($device) :: This is called in the Device Overview page. You receive the $device as a parameter, can do your work here and display your results in a frame. public function device_overview_container($device) { echo('<div class=\"container-fluid\"><div class=\"row\"> <div class=\"col-md-12\"> <div class=\"panel panel-default panel-condensed\"> <div class=\"panel-heading\"><strong>'.get_class().' Plugin </strong> </div>'); echo(' Example plugin in \"Device - Overview\" tab <br>'); echo('</div></div></div></div>'); } port_container($device, $port) :: This is called in the Port page, in the \"Plugins\" menu_option that will appear when your plugin gets enabled. In this function, you can do your work and display your results in a frame. public function port_container($device, $port) { echo('<div class=\"container-fluid\"><div class=\"row\"> <div class=\"col-md-12\"> <div class=\"panel panel-default panel-condensed\"> <div class=\"panel-heading\"><strong>'.get_class().' plugin in \"Port\" tab</strong> </div>'); echo ('Example display in Port tab</br>'); echo('</div></div></div></div>'); }","title":"System Hooks"},{"location":"Extensions/Poller-Service/","text":"","title":"Poller Service"},{"location":"Extensions/Port-Description-Parser/","text":"","title":"Port Description Parser"},{"location":"Extensions/Prometheus/","text":"","title":"Prometheus"},{"location":"Extensions/Proxmox/","text":"Proxmox graphing It is possible to create graphs of the Proxmox VMs that run on your monitored machines. Currently, only traffic graphs are created. One for each interface on each VM. Possibly, IO graphs will be added later on. The ultimate goal is to be able to create traffic bills for VMs, no matter on which physical machine that VM runs. Enabling Proxmox graphs To enable Proxmox graphs, do the following: In config.php, enable Proxmox: $config [ 'enable_proxmox' ] = 1 ; Then, install git and librenms-agent on the machines running Proxmox and enable the Proxmox-script using: cp /opt/librenms-agent/agent-local/proxmox /usr/lib/check_mk_agent/local/proxmox chmod +x /usr/lib/check_mk_agent/local/proxmox Then, enable and start the check_mk service using systemd cp /opt/librenms-agent/check_mk@.service /opt/librenms-agent/check_mk.socket /etc/systemd/system systemctl daemon-reload systemctl enable check_mk.socket && systemctl start check_mk.socket Then in LibreNMS active the librenms-agent and proxmox application flag for the device you are monitoring. You should now see an application in LibreNMS, as well as a new menu-item in the topmenu, allowing you to choose which cluster you want to look at. Note, if you want to use use xinetd instead of systemd Its possible to use the librenms-agent started by xinetd instead of systemd. One use case is if you are forced to use a old Proxmox installation. After installing the librenms-agent (see above) please copy enable the xinetd config, then restart the xinetd service: cp check_mk_xinetd /etc/xinetd.d/check_mk /etc/init.d/xinetd restart","title":"Proxmox"},{"location":"Extensions/Proxmox/#proxmox-graphing","text":"It is possible to create graphs of the Proxmox VMs that run on your monitored machines. Currently, only traffic graphs are created. One for each interface on each VM. Possibly, IO graphs will be added later on. The ultimate goal is to be able to create traffic bills for VMs, no matter on which physical machine that VM runs.","title":"Proxmox graphing"},{"location":"Extensions/Proxmox/#enabling-proxmox-graphs","text":"To enable Proxmox graphs, do the following: In config.php, enable Proxmox: $config [ 'enable_proxmox' ] = 1 ; Then, install git and librenms-agent on the machines running Proxmox and enable the Proxmox-script using: cp /opt/librenms-agent/agent-local/proxmox /usr/lib/check_mk_agent/local/proxmox chmod +x /usr/lib/check_mk_agent/local/proxmox Then, enable and start the check_mk service using systemd cp /opt/librenms-agent/check_mk@.service /opt/librenms-agent/check_mk.socket /etc/systemd/system systemctl daemon-reload systemctl enable check_mk.socket && systemctl start check_mk.socket Then in LibreNMS active the librenms-agent and proxmox application flag for the device you are monitoring. You should now see an application in LibreNMS, as well as a new menu-item in the topmenu, allowing you to choose which cluster you want to look at.","title":"Enabling Proxmox graphs"},{"location":"Extensions/Proxmox/#note-if-you-want-to-use-use-xinetd-instead-of-systemd","text":"Its possible to use the librenms-agent started by xinetd instead of systemd. One use case is if you are forced to use a old Proxmox installation. After installing the librenms-agent (see above) please copy enable the xinetd config, then restart the xinetd service: cp check_mk_xinetd /etc/xinetd.d/check_mk /etc/init.d/xinetd restart","title":"Note, if you want to use use xinetd instead of systemd"},{"location":"Extensions/RRDCached-Security/","text":"Securing with nginx path: blob/master/doc/ According to the man page , under \"SECURITY CONSIDERATIONS\", rrdcached has no authentication or security except for running under a unix socket. If you choose to use a network socket instead of a unix socket, you will need to secure your rrdcached installation. To do so you can proxy rrdcached using nginx to allow only specific IPs to connect. Using the same setup above, using nginx version 1.9.0 or later, you can follow this setup to proxy the default rrdcached port to the local unix socket. (You can use ./conf.d for your configuration as well) mkdir /etc/nginx/streams-{available,enabled} add the following to your nginx.conf file: #/etc/nginx/nginx.conf ... stream { include /etc/nginx/streams-enabled/* ; } Add this to /etc/nginx/streams-available/rrd server { listen 42217 ; error_log /var/log/nginx/rrd.stream.error.log ; allow $LibreNMS_IP ; deny all ; proxy_pass unix:/var/run/rrdcached/rrdcached.sock ; } Replace $LibreNMS_IP with the ip of the server that will be using rrdcached. You can specify more than one allow statement. This will bind nginx to TCP 42217 (the default rrdcached port), allow the specified IPs to connect, and deny all others. next, we'll symlink the config to streams-enabled: ln -s /etc/nginx/streams-{available,enabled}/rrd and reload nginx service nginx reload","title":"Securing with nginx"},{"location":"Extensions/RRDCached-Security/#securing-with-nginx","text":"path: blob/master/doc/ According to the man page , under \"SECURITY CONSIDERATIONS\", rrdcached has no authentication or security except for running under a unix socket. If you choose to use a network socket instead of a unix socket, you will need to secure your rrdcached installation. To do so you can proxy rrdcached using nginx to allow only specific IPs to connect. Using the same setup above, using nginx version 1.9.0 or later, you can follow this setup to proxy the default rrdcached port to the local unix socket. (You can use ./conf.d for your configuration as well) mkdir /etc/nginx/streams-{available,enabled} add the following to your nginx.conf file: #/etc/nginx/nginx.conf ... stream { include /etc/nginx/streams-enabled/* ; } Add this to /etc/nginx/streams-available/rrd server { listen 42217 ; error_log /var/log/nginx/rrd.stream.error.log ; allow $LibreNMS_IP ; deny all ; proxy_pass unix:/var/run/rrdcached/rrdcached.sock ; } Replace $LibreNMS_IP with the ip of the server that will be using rrdcached. You can specify more than one allow statement. This will bind nginx to TCP 42217 (the default rrdcached port), allow the specified IPs to connect, and deny all others. next, we'll symlink the config to streams-enabled: ln -s /etc/nginx/streams-{available,enabled}/rrd and reload nginx service nginx reload","title":"Securing with nginx"},{"location":"Extensions/RRDCached/","text":"Setting up RRDCached This document will explain how to setup RRDCached for LibreNMS. Since version 1.5, rrdtool / rrdcached now supports creating rrd files over rrdcached. If you have rrdcached 1.5.5 or above, you can also tune over rrdcached. To enable this set the following config: $config [ 'rrdtool_version' ] = '1.5.5' ; This setting has to be the exact version of rrdtool you are running. NOTE: This feature requires your client version of rrdtool to be 1.5.5 or over, in addition to your rrdcached version. Distributed Poller Support Matrix Shared FS: Is a shared filesystem required? Features: Supported features in the version indicated. G = Graphs. C = Create RRD files. U = Update RRD files. T = Tune RRD files. Version Shared FS Features 1.4.x Yes G,U <1.5.5 Yes G,U >=1.5.5 No G,C,U >=1.6.x No G,C,U It is recommended that you monitor your LibreNMS server with LibreNMS so you can view the disk I/O usage delta. Installation Manual for RRDCached installation Ubuntu 16 RRDCached installation Debian Buster RRDCached installation Debian Stretch RRDCached installation CentOS 7 or 8 RRDCached installation CentOS 6 Securing RRCached RRDCached installation Ubuntu 16 1: Install rrdcached sudo apt-get install rrdcached 2: Edit /etc/default/rrdcached to include: DAEMON=/usr/bin/rrdcached DAEMON_USER=librenms DAEMON_GROUP=librenms WRITE_THREADS=4 WRITE_TIMEOUT=1800 WRITE_JITTER=1800 BASE_PATH=/opt/librenms/rrd/ JOURNAL_PATH=/var/lib/rrdcached/journal/ PIDFILE=/run/rrdcached.pid SOCKFILE=/run/rrdcached.sock SOCKGROUP=librenms BASE_OPTIONS=\"-B -F -R\" 2: Fix permissions chown librenms:librenms /var/lib/rrdcached/journal/ 3: Restart the rrdcached service systemctl restart rrdcached.service 5: Edit /opt/librenms/config.php to include: $config [ 'rrdcached' ] = \"unix:/run/rrdcached.sock\" ; RRDCached installation Debian Buster (rrdcached 1.7.1) 1: Install rrdcached sudo apt-get install rrdcached 2; Edit /etc/default/rrdcached to include: DAEMON = /usr/bin/rrdcached WRITE_TIMEOUT = 1800 WRITE_JITTER = 1800 WRITE_THREADS = 4 BASE_PATH = /opt/librenms/rrd/ JOURNAL_PATH = /var/lib/rrdcached/journal/ PIDFILE = /var/run/rrdcached.pid SOCKFILE = /run/rrdcached.sock SOCKGROUP = librenms DAEMON_GROUP = librenms DAEMON_USER = librenms BASE_OPTIONS = \"-B -F -R\" 3: Fix permissions chown librenms:librenms /var/lib/rrdcached/journal/ 4: Restart the rrdcached service systemctl restart rrdcached.service 5: Edit /opt/librenms/config.php to include: For local RRDCached server $config [ 'rrdcached' ] = \"unix:/run/rrdcached.sock\" ; For remote RRDCached server make sure you have network option in /var/default/rrdcached NETWORK_OPTIONS = \"-L\" $config [ 'rrdcached' ] = \"IPADDRESS:42217\" ; NOTE: change IPADDRESS to the ip the rrdcached server is listening on. RRDCached installation Debian Stretch (rrdcached 1.6.0) 1: Install rrdcached sudo apt-get install rrdcached 2; Edit /etc/default/rrdcached to include: DAEMON = /usr/bin/rrdcached WRITE_TIMEOUT = 1800 WRITE_JITTER = 1800 WRITE_THREADS = 4 BASE_PATH = /opt/librenms/rrd/ JOURNAL_PATH = /var/lib/rrdcached/journal/ PIDFILE = /var/run/rrdcached.pid SOCKFILE = /run/rrdcached.sock SOCKGROUP = librenms DAEMON_GROUP = librenms DAEMON_USER = librenms BASE_OPTIONS = \"-B -F -R\" 3: Fix permissions chown librenms:librenms /var/lib/rrdcached/journal/ 4: Restart the rrdcached service systemctl restart rrdcached.service 5: Edit /opt/librenms/config.php to include: For local RRDCached server $config [ 'rrdcached' ] = \"unix:/run/rrdcached.sock\" ; For remote RRDCached server make sure you have network option in /var/default/rrdcached NETWORK_OPTIONS = \"-L\" $config [ 'rrdcached' ] = \"IPADDRESS:42217\" ; NOTE: change IPADDRESS to the ip the rrdcached server is listening on. RRDCached installation CentOS 7 or 8 1: Create /etc/systemd/system/rrdcached.service with this content: [Unit] Description=Data caching daemon for rrdtool After=network.service [Service] Type=forking PIDFile=/run/rrdcached.pid ExecStart=/usr/bin/rrdcached -w 1800 -z 1800 -f 3600 -s librenms -U librenms -G librenms -B -R -j /var/tmp -l unix:/run/rrdcached.sock -t 4 -F -b /opt/librenms/rrd/ [Install] WantedBy=default.target 2: Start rrdcached systemctl enable --now rrdcached.service 3: Edit /opt/librenms/config.php to include: $config [ 'rrdcached' ] = \"unix:/run/rrdcached.sock\" ; RRDCached installation CentOS 6 This example is based on a fresh LibreNMS install, on a minimal CentOS 6 installation. In this example, we'll use the Repoforge repository. rpm -ivh http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.3-1.el6.rf.x86_64.rpm vi /etc/yum.repos.d/rpmforge.repo Enable the Extra repo yum update rrdtool vi /etc/yum.repos.d/rpmforge.repo Disable the [rpmforge] and [rpmforge-extras] repos again vi /etc/sysconfig/rrdcached # Settings for rrdcached OPTIONS=\"-w 1800 -z 1800 -f 3600 -s librenms -U librenms -G librenms -B -R -j /var/tmp -l unix:/run/rrdcached.sock -t 4 -F -b /opt/librenms/rrd/\" RRDC_USER=librenms mkdir /var/run/rrdcached chown librenms:librenms /var/run/rrdcached/ chown librenms:librenms /var/rrdtool/ chown librenms:librenms /var/rrdtool/rrdcached/ chkconfig rrdcached on service rrdcached start Edit /opt/librenms/config.php to include: $config [ 'rrdcached' ] = \"unix:/run/rrdcached.sock\" ; Verify Check to see if the graphs are being drawn in LibreNMS. This might take a few minutes. After at least one poll cycle (5 mins), check the LibreNMS disk I/O performance delta. Disk I/O can be found under the menu Devices>All Devices>[localhost hostname]>Health>Disk I/O. Depending on many factors, you should see the Ops/sec drop by ~30-40%. Securing RRCached Please see RRDCached Security","title":"RRDCached"},{"location":"Extensions/RRDCached/#setting-up-rrdcached","text":"This document will explain how to setup RRDCached for LibreNMS. Since version 1.5, rrdtool / rrdcached now supports creating rrd files over rrdcached. If you have rrdcached 1.5.5 or above, you can also tune over rrdcached. To enable this set the following config: $config [ 'rrdtool_version' ] = '1.5.5' ; This setting has to be the exact version of rrdtool you are running. NOTE: This feature requires your client version of rrdtool to be 1.5.5 or over, in addition to your rrdcached version.","title":"Setting up RRDCached"},{"location":"Extensions/RRDCached/#distributed-poller-support-matrix","text":"Shared FS: Is a shared filesystem required? Features: Supported features in the version indicated. G = Graphs. C = Create RRD files. U = Update RRD files. T = Tune RRD files. Version Shared FS Features 1.4.x Yes G,U <1.5.5 Yes G,U >=1.5.5 No G,C,U >=1.6.x No G,C,U It is recommended that you monitor your LibreNMS server with LibreNMS so you can view the disk I/O usage delta.","title":"Distributed Poller Support Matrix"},{"location":"Extensions/RRDCached/#installation-manual-for","text":"RRDCached installation Ubuntu 16 RRDCached installation Debian Buster RRDCached installation Debian Stretch RRDCached installation CentOS 7 or 8 RRDCached installation CentOS 6 Securing RRCached","title":"Installation Manual for"},{"location":"Extensions/RRDCached/#rrdcached-installation-ubuntu-16","text":"1: Install rrdcached sudo apt-get install rrdcached 2: Edit /etc/default/rrdcached to include: DAEMON=/usr/bin/rrdcached DAEMON_USER=librenms DAEMON_GROUP=librenms WRITE_THREADS=4 WRITE_TIMEOUT=1800 WRITE_JITTER=1800 BASE_PATH=/opt/librenms/rrd/ JOURNAL_PATH=/var/lib/rrdcached/journal/ PIDFILE=/run/rrdcached.pid SOCKFILE=/run/rrdcached.sock SOCKGROUP=librenms BASE_OPTIONS=\"-B -F -R\" 2: Fix permissions chown librenms:librenms /var/lib/rrdcached/journal/ 3: Restart the rrdcached service systemctl restart rrdcached.service 5: Edit /opt/librenms/config.php to include: $config [ 'rrdcached' ] = \"unix:/run/rrdcached.sock\" ;","title":"RRDCached installation Ubuntu 16"},{"location":"Extensions/RRDCached/#rrdcached-installation-debian-buster","text":"(rrdcached 1.7.1) 1: Install rrdcached sudo apt-get install rrdcached 2; Edit /etc/default/rrdcached to include: DAEMON = /usr/bin/rrdcached WRITE_TIMEOUT = 1800 WRITE_JITTER = 1800 WRITE_THREADS = 4 BASE_PATH = /opt/librenms/rrd/ JOURNAL_PATH = /var/lib/rrdcached/journal/ PIDFILE = /var/run/rrdcached.pid SOCKFILE = /run/rrdcached.sock SOCKGROUP = librenms DAEMON_GROUP = librenms DAEMON_USER = librenms BASE_OPTIONS = \"-B -F -R\" 3: Fix permissions chown librenms:librenms /var/lib/rrdcached/journal/ 4: Restart the rrdcached service systemctl restart rrdcached.service 5: Edit /opt/librenms/config.php to include: For local RRDCached server $config [ 'rrdcached' ] = \"unix:/run/rrdcached.sock\" ; For remote RRDCached server make sure you have network option in /var/default/rrdcached NETWORK_OPTIONS = \"-L\" $config [ 'rrdcached' ] = \"IPADDRESS:42217\" ; NOTE: change IPADDRESS to the ip the rrdcached server is listening on.","title":"RRDCached installation Debian Buster"},{"location":"Extensions/RRDCached/#rrdcached-installation-debian-stretch","text":"(rrdcached 1.6.0) 1: Install rrdcached sudo apt-get install rrdcached 2; Edit /etc/default/rrdcached to include: DAEMON = /usr/bin/rrdcached WRITE_TIMEOUT = 1800 WRITE_JITTER = 1800 WRITE_THREADS = 4 BASE_PATH = /opt/librenms/rrd/ JOURNAL_PATH = /var/lib/rrdcached/journal/ PIDFILE = /var/run/rrdcached.pid SOCKFILE = /run/rrdcached.sock SOCKGROUP = librenms DAEMON_GROUP = librenms DAEMON_USER = librenms BASE_OPTIONS = \"-B -F -R\" 3: Fix permissions chown librenms:librenms /var/lib/rrdcached/journal/ 4: Restart the rrdcached service systemctl restart rrdcached.service 5: Edit /opt/librenms/config.php to include: For local RRDCached server $config [ 'rrdcached' ] = \"unix:/run/rrdcached.sock\" ; For remote RRDCached server make sure you have network option in /var/default/rrdcached NETWORK_OPTIONS = \"-L\" $config [ 'rrdcached' ] = \"IPADDRESS:42217\" ; NOTE: change IPADDRESS to the ip the rrdcached server is listening on.","title":"RRDCached installation Debian Stretch"},{"location":"Extensions/RRDCached/#rrdcached-installation-centos-7-or-8","text":"1: Create /etc/systemd/system/rrdcached.service with this content: [Unit] Description=Data caching daemon for rrdtool After=network.service [Service] Type=forking PIDFile=/run/rrdcached.pid ExecStart=/usr/bin/rrdcached -w 1800 -z 1800 -f 3600 -s librenms -U librenms -G librenms -B -R -j /var/tmp -l unix:/run/rrdcached.sock -t 4 -F -b /opt/librenms/rrd/ [Install] WantedBy=default.target 2: Start rrdcached systemctl enable --now rrdcached.service 3: Edit /opt/librenms/config.php to include: $config [ 'rrdcached' ] = \"unix:/run/rrdcached.sock\" ;","title":"RRDCached installation CentOS 7 or 8"},{"location":"Extensions/RRDCached/#rrdcached-installation-centos-6","text":"This example is based on a fresh LibreNMS install, on a minimal CentOS 6 installation. In this example, we'll use the Repoforge repository. rpm -ivh http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.3-1.el6.rf.x86_64.rpm vi /etc/yum.repos.d/rpmforge.repo Enable the Extra repo yum update rrdtool vi /etc/yum.repos.d/rpmforge.repo Disable the [rpmforge] and [rpmforge-extras] repos again vi /etc/sysconfig/rrdcached # Settings for rrdcached OPTIONS=\"-w 1800 -z 1800 -f 3600 -s librenms -U librenms -G librenms -B -R -j /var/tmp -l unix:/run/rrdcached.sock -t 4 -F -b /opt/librenms/rrd/\" RRDC_USER=librenms mkdir /var/run/rrdcached chown librenms:librenms /var/run/rrdcached/ chown librenms:librenms /var/rrdtool/ chown librenms:librenms /var/rrdtool/rrdcached/ chkconfig rrdcached on service rrdcached start Edit /opt/librenms/config.php to include: $config [ 'rrdcached' ] = \"unix:/run/rrdcached.sock\" ;","title":"RRDCached installation CentOS 6"},{"location":"Extensions/RRDCached/#verify","text":"Check to see if the graphs are being drawn in LibreNMS. This might take a few minutes. After at least one poll cycle (5 mins), check the LibreNMS disk I/O performance delta. Disk I/O can be found under the menu Devices>All Devices>[localhost hostname]>Health>Disk I/O. Depending on many factors, you should see the Ops/sec drop by ~30-40%.","title":"Verify"},{"location":"Extensions/RRDCached/#securing-rrcached","text":"Please see RRDCached Security","title":"Securing RRCached"},{"location":"Extensions/RRDTune/","text":"RRDTune When we create rrd files for ports, we currently do so with a max value of 12500000000 (100G). Because of this if a device sends us bad data back then it can appear as though a 100M port is doing 40G+ which is impossible. To counter this you can enable the rrdtool tune option which will fix the max value to the interfaces physical speed (minimum of 10M). To enable this you can do so in three ways! Globally under Global Settings -> Poller -> Datastore: RRDTool For the actual device, Edit Device -> Misc For each port, Edit Device -> Port Settings Now when a port interface speed changes (this can happen because of a physical change or just because the device has misreported) the max value is set. If you don't want to wait until a port speed changes then you can run the included script: ./scripts/tune_port.php -h <hostname> -p <ifName> Wildcards are supported using *, i.e: ./scripts/tune_port.php -h local* -p eth* This script will then perform the rrdtool tune on each port found using the provided ifSpeed for that port. Run ./scripts/tune_port.php to see help page.","title":"RRDTune"},{"location":"Extensions/RRDTune/#rrdtune","text":"When we create rrd files for ports, we currently do so with a max value of 12500000000 (100G). Because of this if a device sends us bad data back then it can appear as though a 100M port is doing 40G+ which is impossible. To counter this you can enable the rrdtool tune option which will fix the max value to the interfaces physical speed (minimum of 10M). To enable this you can do so in three ways! Globally under Global Settings -> Poller -> Datastore: RRDTool For the actual device, Edit Device -> Misc For each port, Edit Device -> Port Settings Now when a port interface speed changes (this can happen because of a physical change or just because the device has misreported) the max value is set. If you don't want to wait until a port speed changes then you can run the included script: ./scripts/tune_port.php -h <hostname> -p <ifName> Wildcards are supported using *, i.e: ./scripts/tune_port.php -h local* -p eth* This script will then perform the rrdtool tune on each port found using the provided ifSpeed for that port. Run ./scripts/tune_port.php to see help page.","title":"RRDTune"},{"location":"Extensions/Rancid/","text":"Rancid integration Librenms can generate a list of hosts that can be monitored by RANCID. We assume you have currently a running Rancid, and you just need to create and update the file 'router.db' Included Rancid script To generate the config file (maybe even add a cron to schedule this). We've assumed a few locations for Rancid, the config file you want to call it and where LibreNMS is: cd /opt/librenms/scripts/ php ./gen_rancid.php > /the/path/where/is/rancid/core/router.db Sample cron: 15 0 * * * root cd /opt/librenms/scripts && php ./gen_rancid.php > /the/path/where/is/rancid/core/router.db Now configure LibreNMS (make sure you point dir to your rancid data directory): $config [ 'rancid_configs' ][ 'core' ] = '/the/path/where/is/rancid/core' ; $config [ 'rancid_ignorecomments' ] = 0 ; After that, you should see some \"config\" tab on routers that have a rancid update. Ubuntu Rancid Install The options shown below also contains the default values. NOTE - This is Only for Ubuntu 16.04 at this time, and may not work on other distros! sudo apt-get install rancid subversion Edit Rancid config file to use subversion or git instead of default cvs, and adds a group: sudo vi /etc/rancid/rancid.conf LIST_OF_GROUPS=\"librenms\" Now change these two lines: CVSROOT=$BASEDIR/CVS; export CVSROOT RCSSYS=cvs; export RCSSYS to: CVSROOT=$BASEDIR/SVN; export CVSROOT RCSSYS=svn; export RCSSYS NOTE - This only creates 1 group! You can of course make more when you get the hang of it, this is just a basic 'Need it to work\" deal. sudo su -c /var/lib/rancid/bin/rancid-cvs -s /bin/bash -l rancid NOTE - do NOT change cvs to svn here! Leave command as is! Get a list of devices from Librenms you can pull configs from: cd /opt/librenms/scripts sudo ./gen_rancid.php Copy the output. Replace all \":\" with \";\" example: alphcr1:cisco:up will change to: alphcr1;cisco;up copy and past results into the below file: sudo vi /var/lib/rancid/librenms/router.db NOTE - This ONLY applies to newer RANCID versions and Linux distros. Older versions will need to retain the : and not the ; Create/edit rancids login file: sudo vi /var/lib/rancid/.cloginrc Add following at minimum: add user * <your username here> add password * <your password here> add method * ssh add noenable * {1} ******This disables the enable when using radius etc ******* Grant permissions for rancid: sudo chown rancid /var/lib/rancid/.cloginrc sudo chmod 600 /var/lib/rancid/.cloginrc Test config: sudo /usr/lib/rancid/bin/clogin -f /var/lib/rancid/.cloginrc <device hostname> NOTE: IF you run into a 'diffie-hellmen' kind of error, then it is because your Linux distro is using newer encyryprtion methods etc. This is basically just letting you know that the device you tested on is running an outdated encryption type. I recommend updating downstream device if able. If not, the following should fix: sudo vi /etc/ssh/ssh_config Add: KexAlgorithms diffie-hellman-group1-sha1 Re-try logging into your device again Upon success, run rancid: sudo su -c /var/lib/rancid/bin/rancid-run -s /bin/bash -l rancid Ensure your configs pulled: ```sudo su - rancid cd librenms/configs/ ls Make sure your config files are there :-) sudo usermod -a -G rancid www-data cd /opt/librenms/ Add Rancid into LibreNMS config.php: ```php ### Rancid $config['rancid_configs'][] = '/var/lib/rancid/librenms/configs/'; $config['rancid_repo_type'] = 'svn'; //'svn' or 'git' $config['rancid_ignorecomments'] = 0; Now restart apache sudo /etc/init.d/apache2 restart","title":"Rancid"},{"location":"Extensions/Rancid/#rancid-integration","text":"Librenms can generate a list of hosts that can be monitored by RANCID. We assume you have currently a running Rancid, and you just need to create and update the file 'router.db'","title":"Rancid integration"},{"location":"Extensions/Rancid/#included-rancid-script","text":"To generate the config file (maybe even add a cron to schedule this). We've assumed a few locations for Rancid, the config file you want to call it and where LibreNMS is: cd /opt/librenms/scripts/ php ./gen_rancid.php > /the/path/where/is/rancid/core/router.db Sample cron: 15 0 * * * root cd /opt/librenms/scripts && php ./gen_rancid.php > /the/path/where/is/rancid/core/router.db Now configure LibreNMS (make sure you point dir to your rancid data directory): $config [ 'rancid_configs' ][ 'core' ] = '/the/path/where/is/rancid/core' ; $config [ 'rancid_ignorecomments' ] = 0 ; After that, you should see some \"config\" tab on routers that have a rancid update.","title":"Included Rancid script"},{"location":"Extensions/Rancid/#ubuntu-rancid-install","text":"The options shown below also contains the default values. NOTE - This is Only for Ubuntu 16.04 at this time, and may not work on other distros! sudo apt-get install rancid subversion Edit Rancid config file to use subversion or git instead of default cvs, and adds a group: sudo vi /etc/rancid/rancid.conf LIST_OF_GROUPS=\"librenms\" Now change these two lines: CVSROOT=$BASEDIR/CVS; export CVSROOT RCSSYS=cvs; export RCSSYS to: CVSROOT=$BASEDIR/SVN; export CVSROOT RCSSYS=svn; export RCSSYS NOTE - This only creates 1 group! You can of course make more when you get the hang of it, this is just a basic 'Need it to work\" deal. sudo su -c /var/lib/rancid/bin/rancid-cvs -s /bin/bash -l rancid NOTE - do NOT change cvs to svn here! Leave command as is! Get a list of devices from Librenms you can pull configs from: cd /opt/librenms/scripts sudo ./gen_rancid.php Copy the output. Replace all \":\" with \";\" example: alphcr1:cisco:up will change to: alphcr1;cisco;up copy and past results into the below file: sudo vi /var/lib/rancid/librenms/router.db NOTE - This ONLY applies to newer RANCID versions and Linux distros. Older versions will need to retain the : and not the ; Create/edit rancids login file: sudo vi /var/lib/rancid/.cloginrc Add following at minimum: add user * <your username here> add password * <your password here> add method * ssh add noenable * {1} ******This disables the enable when using radius etc ******* Grant permissions for rancid: sudo chown rancid /var/lib/rancid/.cloginrc sudo chmod 600 /var/lib/rancid/.cloginrc Test config: sudo /usr/lib/rancid/bin/clogin -f /var/lib/rancid/.cloginrc <device hostname> NOTE: IF you run into a 'diffie-hellmen' kind of error, then it is because your Linux distro is using newer encyryprtion methods etc. This is basically just letting you know that the device you tested on is running an outdated encryption type. I recommend updating downstream device if able. If not, the following should fix: sudo vi /etc/ssh/ssh_config Add: KexAlgorithms diffie-hellman-group1-sha1 Re-try logging into your device again Upon success, run rancid: sudo su -c /var/lib/rancid/bin/rancid-run -s /bin/bash -l rancid Ensure your configs pulled: ```sudo su - rancid cd librenms/configs/ ls Make sure your config files are there :-) sudo usermod -a -G rancid www-data cd /opt/librenms/ Add Rancid into LibreNMS config.php: ```php ### Rancid $config['rancid_configs'][] = '/var/lib/rancid/librenms/configs/'; $config['rancid_repo_type'] = 'svn'; //'svn' or 'git' $config['rancid_ignorecomments'] = 0; Now restart apache sudo /etc/init.d/apache2 restart","title":"Ubuntu Rancid Install"},{"location":"Extensions/SNMP-Proxy/","text":"SNMP Proxy If you have machines that you want to monitor but are not reachable directly, you can use SNMPD Proxy . This will use the reachable SNMPD to proxy requests to the unreachable SNMPD. Example configuration We want to poll 'unreachable.example.com' via 'hereweare.example.com'. Use the following config: On 'hereweare.example.com': view all included .1 com2sec -Cn ctx_unreachable readonly <poller-ip> unreachable access MyROGroup ctx_unreachable any noauth prefix all none none proxy -Cn ctx_unreachable -v 2c -c private unreachable.example.com .1.3 On 'unreachable.example.com': view all included .1 80 com2sec readonly <hereweare.example.com ip address> private group MyROGroup v1 readonly group MyROGroup v2c readonly group MyROGroup usm readonly access MyROGroup \"\" any noauth exact all none none You can now poll community 'private' on 'unreachable.example.com' via community 'unreachable' on host 'hereweare.example.com'. Please note that requests on 'unreachable.example.com' will be coming from 'hereweare.example.com', not your poller.","title":"SNMP Proxy"},{"location":"Extensions/SNMP-Proxy/#snmp-proxy","text":"If you have machines that you want to monitor but are not reachable directly, you can use SNMPD Proxy . This will use the reachable SNMPD to proxy requests to the unreachable SNMPD.","title":"SNMP Proxy"},{"location":"Extensions/SNMP-Proxy/#example-configuration","text":"We want to poll 'unreachable.example.com' via 'hereweare.example.com'. Use the following config: On 'hereweare.example.com': view all included .1 com2sec -Cn ctx_unreachable readonly <poller-ip> unreachable access MyROGroup ctx_unreachable any noauth prefix all none none proxy -Cn ctx_unreachable -v 2c -c private unreachable.example.com .1.3 On 'unreachable.example.com': view all included .1 80 com2sec readonly <hereweare.example.com ip address> private group MyROGroup v1 readonly group MyROGroup v2c readonly group MyROGroup usm readonly access MyROGroup \"\" any noauth exact all none none You can now poll community 'private' on 'unreachable.example.com' via community 'unreachable' on host 'hereweare.example.com'. Please note that requests on 'unreachable.example.com' will be coming from 'hereweare.example.com', not your poller.","title":"Example configuration"},{"location":"Extensions/SNMP-Trap-Handler/","text":"SNMP trap handling Currently, LibreNMS supports a lot of trap handlers. You can check them on GitHub there . To add more see Adding new SNMP Trap handlers . Traps are handled via snmptrapd. snmptrapd is an SNMP application that receives and logs SNMP TRAP and INFORM messages. The default is to listen on UDP port 162 on all IPv4 interfaces. Since 162 is a privileged port, snmptrapd must typically be run as root. Configure snmptrapd Install snmptrapd via your package manager. For example (Debian based systems): sudo apt install snmptrapd -y In /etc/snmp/snmptrapd.conf , add : disableAuthorization yes authCommunity log,execute,net COMMUNITYSTRING traphandle default /opt/librenms/snmptrap.php To enable snmptrapd to properly parse traps, we will need to add MIBs to service. Option 1 Make the folder /etc/systemd/system/snmptrapd.service.d/ and edit the file /etc/systemd/system/snmptrapd.service.d/mibs.conf and add the following content. You may want to tweak to add vendor directories for devices you care about. In the example below, standard and cisco directories are defined, and only IF-MIB is loaded. [Service] Environment = MIBDIRS=+/opt/librenms/mibs:/opt/librenms/mibs/cisco Environment = MIBS=+IF-MIB For non-systemd systems, you can edit TRAPDOPTS in the init script in /etc/init.d/snmptrapd. TRAPDOPTS=\"-Lsd -M /opt/librenms/mibs -m IF-MIB -f -p $TRAPD_PID\" Along with any necessary configuration to receive the traps from your devices (community, etc.) Option 2 Tested on Ubuntu 18 Just setup your service like: [Unit] Description=Simple Network Management Protocol (SNMP) Trap Daemon. After=network.target ConditionPathExists=/etc/snmp/snmptrapd.conf [Service] Environment=\"MIBSDIR=/opt/librenms/mibs\" Type=simple ExecStart=/usr/sbin/snmptrapd -f -m IF-MIB -M /opt/librenms/mibs ExecReload=/bin/kill -HUP $MAINPID [Install] WantedBy=multi-user.target In Ubuntu 18 is service located by default in /etc/systemd/system/multi-user.target.wants/snmptrapd.service There is a list of snmptrapd options: Option Description -a Ignore authenticationFailure traps. [OPTIONAL] -f Do not fork from the shell -n Use numeric addresses instead of attempting hostname lookups (no DNS) [OPTIONAL] -m MIBLIST: use MIBLIST ( FILE1-MIB:FILE2-MIB ). ALL = Load all MIBS in DIRLIST. (usually fails) -M DIRLIST: use DIRLIST as the list of locations to look for MIBs. Option is not recursive, so you need to specify each DIR individually, separated by : . (For example: /opt/librenms/mibs:/opt/librenms/mibs/cisco:/opt/librenms/mibs/edgecos) Good practice is to avoid -m ALL because then it will try to load all the MIBs in DIRLIST, which will typically fail (snmptrapd cannot load that many mibs). Better is to specify the exact MIB files defining the traps you are interested in, for example for LinkDown and LinkUp as well as BGP traps, use -m IF-MIB:BGP4-MIB . Multiple files can be added, separated with : . If you want to test or store original TRAPS in log then: Create folder for storing traps for example in file traps.log sudo mkdir /var/log/snmptrap Add following config to your snmptrapd.service after ExecStart=/usr/sbin/snmptrapd -f -m ALL -M /opt/librenms/mibs -tLf /var/log/snmptrap/traps.log After succesfuly configured service reload service files, enable, and start the snmptrapd service: sudo systemctl daemon-reload sudo systemctl enable snmptrapd sudo systemctl restart snmptrapd Testing The easiest test is to generate a trap from your device. Usually, changing the configuration on a network device, or plugging/unplugging a network cable (LinkUp, LinkDown) will generate a trap. You can confirm it using a with tcpdump , tshark or wireshark . You can also generate a trap using the snmptrap command from the LibreNMS server itself (if and only if the LibreNMS server is monitored). How to send SNMP v2 Trap The command below takes the form of: snmptrap -v <snmp_version> -c <community> <destination_host> <uptime> <OID_or_MIB> <object> <value_type> <value> Using OID's: snmptrap -v 2c -c public localhost '' 1.3.6.1.4.1.8072.2.3.0.1 1.3.6.1.4.1.8072.2.3.2.1 i 123456 If you have configured logging of traps to /var/log/snmptrap/traps.log then you will see in traps.log new entry: 2020-03-09 16:22:59 localhost [UDP: [127.0.0.1]:58942->[127.0.0.1]:162]: SNMPv2-MIB::sysUpTime.0 = Timeticks: (149721964) 17 days, 7:53:39.64 SNMPv2-MIB::snmpTrapOID.0 = OID: SNMPv2-SMI::enterprises.8072.2.3.0.1 SNMPv2-SMI::enterprises.8072.2.3.2.1 = INTEGER: 123456 and in LibreNMS your localhost device eventlog like: 2020-03-09 16:22:59 SNMP trap received: SNMPv2-SMI::enterprises.8072.2.3.0.1 Why we need Uptime When you send a trap, it must of course conform to a set of standards. Every trap needs an uptime value. Uptime is how long the system has been running since boot. Sometimes this is the operating system, other devices might use the SNMP engine uptime. Regardless, a value will be sent. So what value should you type in the commands below? Oddly enough, simply supplying no value by using two single quotes '' will instruct the command to obtain the value from the operating system you are executing this on. Event logging You can configure generic event logging for snmp traps. This will log an event of the type trap for received traps. These events can be used for alerting. By default, only the TrapOID is logged. Buf you can enable the \"detailed\" variant, and all the data received with the trap will be logged. The parameter can be found in General Settings / External / SNMP Traps Integration. It can also be configured in config.php $config [ 'snmptraps' ][ 'eventlog' ] = 'unhandled' ; //default value $config [ 'snmptraps' ][ 'eventlog_detailed' ] = 'false' ; //default value Valid options are: unhandled only unhandled traps will be logged (default value) all log all traps none no traps will create a generic event log (handled traps may still log events)","title":"SNMP Trap Handler"},{"location":"Extensions/SNMP-Trap-Handler/#snmp-trap-handling","text":"Currently, LibreNMS supports a lot of trap handlers. You can check them on GitHub there . To add more see Adding new SNMP Trap handlers . Traps are handled via snmptrapd. snmptrapd is an SNMP application that receives and logs SNMP TRAP and INFORM messages. The default is to listen on UDP port 162 on all IPv4 interfaces. Since 162 is a privileged port, snmptrapd must typically be run as root.","title":"SNMP trap handling"},{"location":"Extensions/SNMP-Trap-Handler/#configure-snmptrapd","text":"Install snmptrapd via your package manager. For example (Debian based systems): sudo apt install snmptrapd -y In /etc/snmp/snmptrapd.conf , add : disableAuthorization yes authCommunity log,execute,net COMMUNITYSTRING traphandle default /opt/librenms/snmptrap.php To enable snmptrapd to properly parse traps, we will need to add MIBs to service.","title":"Configure snmptrapd"},{"location":"Extensions/SNMP-Trap-Handler/#option-1","text":"Make the folder /etc/systemd/system/snmptrapd.service.d/ and edit the file /etc/systemd/system/snmptrapd.service.d/mibs.conf and add the following content. You may want to tweak to add vendor directories for devices you care about. In the example below, standard and cisco directories are defined, and only IF-MIB is loaded. [Service] Environment = MIBDIRS=+/opt/librenms/mibs:/opt/librenms/mibs/cisco Environment = MIBS=+IF-MIB For non-systemd systems, you can edit TRAPDOPTS in the init script in /etc/init.d/snmptrapd. TRAPDOPTS=\"-Lsd -M /opt/librenms/mibs -m IF-MIB -f -p $TRAPD_PID\" Along with any necessary configuration to receive the traps from your devices (community, etc.)","title":"Option 1"},{"location":"Extensions/SNMP-Trap-Handler/#option-2","text":"Tested on Ubuntu 18 Just setup your service like: [Unit] Description=Simple Network Management Protocol (SNMP) Trap Daemon. After=network.target ConditionPathExists=/etc/snmp/snmptrapd.conf [Service] Environment=\"MIBSDIR=/opt/librenms/mibs\" Type=simple ExecStart=/usr/sbin/snmptrapd -f -m IF-MIB -M /opt/librenms/mibs ExecReload=/bin/kill -HUP $MAINPID [Install] WantedBy=multi-user.target In Ubuntu 18 is service located by default in /etc/systemd/system/multi-user.target.wants/snmptrapd.service There is a list of snmptrapd options: Option Description -a Ignore authenticationFailure traps. [OPTIONAL] -f Do not fork from the shell -n Use numeric addresses instead of attempting hostname lookups (no DNS) [OPTIONAL] -m MIBLIST: use MIBLIST ( FILE1-MIB:FILE2-MIB ). ALL = Load all MIBS in DIRLIST. (usually fails) -M DIRLIST: use DIRLIST as the list of locations to look for MIBs. Option is not recursive, so you need to specify each DIR individually, separated by : . (For example: /opt/librenms/mibs:/opt/librenms/mibs/cisco:/opt/librenms/mibs/edgecos) Good practice is to avoid -m ALL because then it will try to load all the MIBs in DIRLIST, which will typically fail (snmptrapd cannot load that many mibs). Better is to specify the exact MIB files defining the traps you are interested in, for example for LinkDown and LinkUp as well as BGP traps, use -m IF-MIB:BGP4-MIB . Multiple files can be added, separated with : . If you want to test or store original TRAPS in log then: Create folder for storing traps for example in file traps.log sudo mkdir /var/log/snmptrap Add following config to your snmptrapd.service after ExecStart=/usr/sbin/snmptrapd -f -m ALL -M /opt/librenms/mibs -tLf /var/log/snmptrap/traps.log After succesfuly configured service reload service files, enable, and start the snmptrapd service: sudo systemctl daemon-reload sudo systemctl enable snmptrapd sudo systemctl restart snmptrapd","title":"Option 2"},{"location":"Extensions/SNMP-Trap-Handler/#testing","text":"The easiest test is to generate a trap from your device. Usually, changing the configuration on a network device, or plugging/unplugging a network cable (LinkUp, LinkDown) will generate a trap. You can confirm it using a with tcpdump , tshark or wireshark . You can also generate a trap using the snmptrap command from the LibreNMS server itself (if and only if the LibreNMS server is monitored).","title":"Testing"},{"location":"Extensions/SNMP-Trap-Handler/#how-to-send-snmp-v2-trap","text":"The command below takes the form of: snmptrap -v <snmp_version> -c <community> <destination_host> <uptime> <OID_or_MIB> <object> <value_type> <value> Using OID's: snmptrap -v 2c -c public localhost '' 1.3.6.1.4.1.8072.2.3.0.1 1.3.6.1.4.1.8072.2.3.2.1 i 123456 If you have configured logging of traps to /var/log/snmptrap/traps.log then you will see in traps.log new entry: 2020-03-09 16:22:59 localhost [UDP: [127.0.0.1]:58942->[127.0.0.1]:162]: SNMPv2-MIB::sysUpTime.0 = Timeticks: (149721964) 17 days, 7:53:39.64 SNMPv2-MIB::snmpTrapOID.0 = OID: SNMPv2-SMI::enterprises.8072.2.3.0.1 SNMPv2-SMI::enterprises.8072.2.3.2.1 = INTEGER: 123456 and in LibreNMS your localhost device eventlog like: 2020-03-09 16:22:59 SNMP trap received: SNMPv2-SMI::enterprises.8072.2.3.0.1","title":"How to send SNMP v2 Trap"},{"location":"Extensions/SNMP-Trap-Handler/#why-we-need-uptime","text":"When you send a trap, it must of course conform to a set of standards. Every trap needs an uptime value. Uptime is how long the system has been running since boot. Sometimes this is the operating system, other devices might use the SNMP engine uptime. Regardless, a value will be sent. So what value should you type in the commands below? Oddly enough, simply supplying no value by using two single quotes '' will instruct the command to obtain the value from the operating system you are executing this on.","title":"Why we need Uptime"},{"location":"Extensions/SNMP-Trap-Handler/#event-logging","text":"You can configure generic event logging for snmp traps. This will log an event of the type trap for received traps. These events can be used for alerting. By default, only the TrapOID is logged. Buf you can enable the \"detailed\" variant, and all the data received with the trap will be logged. The parameter can be found in General Settings / External / SNMP Traps Integration. It can also be configured in config.php $config [ 'snmptraps' ][ 'eventlog' ] = 'unhandled' ; //default value $config [ 'snmptraps' ][ 'eventlog_detailed' ] = 'false' ; //default value Valid options are: unhandled only unhandled traps will be logged (default value) all log all traps none no traps will create a generic event log (handled traps may still log events)","title":"Event logging"},{"location":"Extensions/Services/","text":"Setting up services Nagios plugins source Setup Performance data Alerting Debug Service checks polling logic CHECK_MRPE Setting up services Services within LibreNMS provides the ability to leverage Nagios plugins to perform additional monitoring outside of SNMP. Services can also be used in conjuction with your SNMP monitoring for larger monitoring functionality. Services must be tied to a device to function properly. A good generic option is to use localhost , but it is suggest to attach the check to the device you are monitoring. Nagios plugins source Plugins come from two main sources: monitoring-plugins pkg-nagios-plugins-contrib Note: Plugins will only load if they are prefixed with check_ . The check_ prefix is stripped out when displaying in the \"Add Service\" GUI \"Type\" dropdown list. Setup Service checks are now distributable if you run a distributed setup. To leverage this, use the dispatch service. Alternatively, you could also replace check-services.php with services-wrapper.py in cron instead to run across all polling nodes. If you need to debug the output of services-wrapper.py then you can add -d to the end of the command - it is NOT recommended to do this in cron. Firstly, install Nagios plugins. Debian / Ubuntu: sudo apt install monitoring-plugins Centos: yum install nagios-plugins-all Note: The plugins are bundled with the pre-build VM and Docker images. Next, you need to enable the services within config.php with the following: $config [ 'show_services' ] = 1 ; This will enable a new service menu within your navbar. Debian/Ubuntu: $config [ 'nagios_plugins' ] = \"/usr/lib/nagios/plugins\" ; Centos: $config [ 'nagios_plugins' ] = \"/usr/lib64/nagios/plugins\" ; This will point LibreNMS at the location of the nagios plugins - please ensure that any plugins you use are set to executable. For example: Debian/Ubuntu: chmod +x /usr/lib/nagios/plugins/* Centos: chmod +x /usr/lib64/nagios/plugins/* Finally, you now need to add services-wrapper.py to the current cron file (/etc/cron.d/librenms typically) like: */5 * * * * librenms /opt/librenms/services-wrapper.py 1 Now you can add services via the main Services link in the navbar, or via the 'Add Service' link within the device, services page. Note that some services (procs, inodes, load and similar) will always poll the local LibreNMS server it's running on, regardless of which device you add it to. Performance data By default, the check-services script will collect all performance data that the Nagios script returns and display each datasource on a separate graph. LibreNMS expects scripts to return using Nagios convention for the response message structure: AEN200 However for some modules it would be better if some of this information was consolidated on a single graph. An example is the ICMP check. This check returns: Round Trip Average (rta), Round Trip Min (rtmin) and Round Trip Max (rtmax). These have been combined onto a single graph. If you find a check script that would benefit from having some datasources graphed together, please log an issue on GitHub with the debug information from the script, and let us know which DS's should go together. Example below: ./check-services.php -d -- snip -- Nagios Service - 26 Request: /usr/lib/nagios/plugins/check_icmp localhost Perf Data - DS: rta, Value: 0.016, UOM: ms Perf Data - DS: pl, Value: 0, UOM: % Perf Data - DS: rtmax, Value: 0.044, UOM: ms Perf Data - DS: rtmin, Value: 0.009, UOM: ms Response: OK - localhost: rta 0.016ms, lost 0% Service DS: { \"rta\": \"ms\", \"pl\": \"%\", \"rtmax\": \"ms\", \"rtmin\": \"ms\" } OK u:0.00 s:0.00 r:40.67 RRD[update /opt/librenms/rrd/localhost/services-26.rrd N:0.016:0:0.044:0.009] -- snip -- Alerting Services uses the Nagios Alerting scheme where exit code: 0 = Ok, 1 = Warning, 2 = Critical, To create an alerting rule to alert on service=critical, your alerting rule would look like: %services.service_status = \"2\" Debug Change user to librenms for example su - librenms then you can run the following command to help troubleshoot services. ./check-services.php -d Service checks polling logic Service check is skipped when the associated device is not pingable, and an appropriate entry is populated in the event log. Service check is polled if it's IP address parameter is not equal to associated device's IP address, even when the associated device is not pingable. To override the default logic and always poll service checks, you can disable ICMP testing for any device by switching Disable ICMP Test setting (Edit -> Misc) to ON. Service checks will never be polled on disabled devices. CHECK_MRPE In most cases, only Nagios plugins that run against a remote host with the -H option are available as services. However, if you're remote host is running the Check_MK agent you may be able to use MRPE to monitor Nagios plugins that only execute locally as services. For example, consider the fairly common check_cpu.sh Nagios plugin. If you added.. cpu_check /usr/lib/nagios/plugins/check_cpu.sh -c 95 -w 75 ...to /etc/check_mk/mrpe.cfg on your remote host, you should be able to check its output by configuring a service using the check_mrpe script. Add check_mrpe to the Nagios plugins directory on your LibreNMS server and make it executable. In LibreNMS, add a new service to the desired device with the type mrpe. Enter the IP address of the remote host and in parameters enter -a cpu_check (this should match the name used at the beginning of the line in the mrpe.cfg file).","title":"Nagios Plugins"},{"location":"Extensions/Services/#setting-up-services","text":"Services within LibreNMS provides the ability to leverage Nagios plugins to perform additional monitoring outside of SNMP. Services can also be used in conjuction with your SNMP monitoring for larger monitoring functionality. Services must be tied to a device to function properly. A good generic option is to use localhost , but it is suggest to attach the check to the device you are monitoring.","title":"Setting up services"},{"location":"Extensions/Services/#nagios-plugins-source","text":"Plugins come from two main sources: monitoring-plugins pkg-nagios-plugins-contrib Note: Plugins will only load if they are prefixed with check_ . The check_ prefix is stripped out when displaying in the \"Add Service\" GUI \"Type\" dropdown list.","title":"Nagios plugins source"},{"location":"Extensions/Services/#setup","text":"Service checks are now distributable if you run a distributed setup. To leverage this, use the dispatch service. Alternatively, you could also replace check-services.php with services-wrapper.py in cron instead to run across all polling nodes. If you need to debug the output of services-wrapper.py then you can add -d to the end of the command - it is NOT recommended to do this in cron. Firstly, install Nagios plugins. Debian / Ubuntu: sudo apt install monitoring-plugins Centos: yum install nagios-plugins-all Note: The plugins are bundled with the pre-build VM and Docker images. Next, you need to enable the services within config.php with the following: $config [ 'show_services' ] = 1 ; This will enable a new service menu within your navbar. Debian/Ubuntu: $config [ 'nagios_plugins' ] = \"/usr/lib/nagios/plugins\" ; Centos: $config [ 'nagios_plugins' ] = \"/usr/lib64/nagios/plugins\" ; This will point LibreNMS at the location of the nagios plugins - please ensure that any plugins you use are set to executable. For example: Debian/Ubuntu: chmod +x /usr/lib/nagios/plugins/* Centos: chmod +x /usr/lib64/nagios/plugins/* Finally, you now need to add services-wrapper.py to the current cron file (/etc/cron.d/librenms typically) like: */5 * * * * librenms /opt/librenms/services-wrapper.py 1 Now you can add services via the main Services link in the navbar, or via the 'Add Service' link within the device, services page. Note that some services (procs, inodes, load and similar) will always poll the local LibreNMS server it's running on, regardless of which device you add it to.","title":"Setup"},{"location":"Extensions/Services/#performance-data","text":"By default, the check-services script will collect all performance data that the Nagios script returns and display each datasource on a separate graph. LibreNMS expects scripts to return using Nagios convention for the response message structure: AEN200 However for some modules it would be better if some of this information was consolidated on a single graph. An example is the ICMP check. This check returns: Round Trip Average (rta), Round Trip Min (rtmin) and Round Trip Max (rtmax). These have been combined onto a single graph. If you find a check script that would benefit from having some datasources graphed together, please log an issue on GitHub with the debug information from the script, and let us know which DS's should go together. Example below: ./check-services.php -d -- snip -- Nagios Service - 26 Request: /usr/lib/nagios/plugins/check_icmp localhost Perf Data - DS: rta, Value: 0.016, UOM: ms Perf Data - DS: pl, Value: 0, UOM: % Perf Data - DS: rtmax, Value: 0.044, UOM: ms Perf Data - DS: rtmin, Value: 0.009, UOM: ms Response: OK - localhost: rta 0.016ms, lost 0% Service DS: { \"rta\": \"ms\", \"pl\": \"%\", \"rtmax\": \"ms\", \"rtmin\": \"ms\" } OK u:0.00 s:0.00 r:40.67 RRD[update /opt/librenms/rrd/localhost/services-26.rrd N:0.016:0:0.044:0.009] -- snip --","title":"Performance data"},{"location":"Extensions/Services/#alerting","text":"Services uses the Nagios Alerting scheme where exit code: 0 = Ok, 1 = Warning, 2 = Critical, To create an alerting rule to alert on service=critical, your alerting rule would look like: %services.service_status = \"2\"","title":"Alerting"},{"location":"Extensions/Services/#debug","text":"Change user to librenms for example su - librenms then you can run the following command to help troubleshoot services. ./check-services.php -d","title":"Debug"},{"location":"Extensions/Services/#service-checks-polling-logic","text":"Service check is skipped when the associated device is not pingable, and an appropriate entry is populated in the event log. Service check is polled if it's IP address parameter is not equal to associated device's IP address, even when the associated device is not pingable. To override the default logic and always poll service checks, you can disable ICMP testing for any device by switching Disable ICMP Test setting (Edit -> Misc) to ON. Service checks will never be polled on disabled devices.","title":"Service checks polling logic"},{"location":"Extensions/Services/#check_mrpe","text":"In most cases, only Nagios plugins that run against a remote host with the -H option are available as services. However, if you're remote host is running the Check_MK agent you may be able to use MRPE to monitor Nagios plugins that only execute locally as services. For example, consider the fairly common check_cpu.sh Nagios plugin. If you added.. cpu_check /usr/lib/nagios/plugins/check_cpu.sh -c 95 -w 75 ...to /etc/check_mk/mrpe.cfg on your remote host, you should be able to check its output by configuring a service using the check_mrpe script. Add check_mrpe to the Nagios plugins directory on your LibreNMS server and make it executable. In LibreNMS, add a new service to the desired device with the type mrpe. Enter the IP address of the remote host and in parameters enter -a cpu_check (this should match the name used at the beginning of the line in the mrpe.cfg file).","title":"CHECK_MRPE"},{"location":"Extensions/Smokeping/","text":"Smokeping integration SmokePing is a tool which lets us keep track of network latency, and visualise this through RRD graphs. LibreNMS has support for both new and pre-existing SmokePing installations. For new installations, we can use the lnms cli to generate a Smokeping configuration file. Pre-Existing Smokeping Installation If you have an existing smokeping server, follow the instructions, you only need to look at Configure LibreNMS - All Operating Systems . New Installation All installation steps assume a clean configuration - if you have an existing smokeping setup, you'll need to adapt these steps somewhat. Install and integrate Smokeping Backend - RHEL, CentOS and alike Smokeping is available via EPEL, which if you're running LibreNMS, you probably already have. If you want to do something like run Smokeping on a seperate host and ship data via RRCached though, here's the install command: sudo yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm sudo yum install smokeping Once installed, you should need a cron script installed to make sure that the configuration file is updated. You can find an example in misc/librenms-smokeping-rhel.example . Put this into /etc/cron.d/hourly, and mark it executable: sudo cp /opt/librenms/misc/smokeping-rhel.example /etc/cron.hourly/librenms-smokeping sudo chmod +x /etc/cron.hourly/librenms-smokeping Finally, update the default configuration. Strip everything from the *** Probes *** and *** Targets *** stanza's, and replace with: *** Probes *** @include /etc/smokeping/librenms-probes.conf *** Targets *** probe = FPing menu = Top title = Network Latency Grapher remark = Welcome to the SmokePing website of <b>Insert Company Name Here</b>. \\ Here you will learn all about the latency of our network. @include /etc/smokeping/librenms-targets.conf Note there may be other stanza's (possibly *** Slaves *** ) between the *** Probes *** and *** Targets *** stanza's - leave these intact. Leave everything else untouched. If you need to add other confiruation, make sure it comes after the LibreNMS configuration, and keep in mind that Smokeping does not allow duplicate modules, and cares about the configuration file sequence. Once you're happy, manually kick off the cron once, then enable and start smokeping: sudo /etc/cron.hourly/librenms-smokeping sudo systemctl enable --now smokeping Install and integrate Smokeping Backend - Ubuntu, Debian and alike Smokeping is available via the default repositories. sudo apt-get install smokeping Once installed, you should need a cron script installed to make sure that the configuration file is updated. You can find an example in misc/librenms-smokeping-debian.example . Put this into /etc/cron.d/hourly, and mark it executable: sudo cp /opt/librenms/misc/smokeping-debian.example /etc/cron.hourly/librenms-smokeping sudo chmod +x /etc/cron.hourly/librenms-smokeping Finally, update the default configuration. Strip everything from /etc/smokeping/config.d/Probes and replace with: *** Probes *** @include /etc/smokeping/config.d/librenms-probes.conf Strip everything from /etc/smokeping/config.d/Targets and replace with: *** Targets *** probe = FPing menu = Top title = Network Latency Grapher remark = Welcome to the SmokePing website of <b>Insert Company Name Here</b>. \\ Here you will learn all about the latency of our network. @include /etc/smokeping/config.d/librenms-targets.conf Leave everything else untouched. If you need to add other confiruation, make sure it comes after the LibreNMS configuration, and keep in mind that Smokeping does not allow duplicate modules, and cares about the configuration file sequence. Configure LibreNMS - All Operating Systems Edit /opt/librenms/config.php and add the following: $config [ 'smokeping' ][ 'dir' ] = '/var/lib/smokeping' ; $config [ 'smokeping' ][ 'pings' ] = 20 ; $config [ 'smokeping' ][ 'probes' ] = 2 ; $config [ 'smokeping' ][ 'integration' ] = true ; $config [ 'smokeping' ][ 'url' ] = 'smokeping/' ; // If you have a specific URL or path for smokeping dir should match the location that smokeping writes RRD's to pings should match the default smokeping value, default 20 probes should be the number of processes to spread pings over, default 2 These settings can also be set in the Web UI. Configure Smokeping's Web UI - Optional This section covers the required configuration for your web server of choice. This covers the required configuration for either Apache or Nginx. LibreNMS does not need the Web UI - you can find the graphs in LibreNMS on the latency tab. Apache Configuration - Ubuntu, Debian and alike Edit the General configuration file's Owner and contact , and cgiurl hostname details: nano /etc/smokeping/config.d/General owner = LibreNMS-Admin contact = admin@ACME.xxx cgiurl = http://yourlibrenms/cgi-bin/smokeping.cgi Smokeping should automatically install an Apache configuration file in /etc/apache2/conf-available/ . Verify this using : librenms@librenms:~/scripts$ ls /etc/apache2/conf-available/ | grep smokeping smokeping.conf If you don't see smokeping.conf listed, you'll need to create a symlink for it: ln -s /etc/smokeping/apache2.conf /etc/apache2/conf-available/smokeping.conf After creating the symlink, restart Apache with sudo systemctl apache2 restart You should be able to load the Smokeping web interface at http://yourhost/cgi-bin/smokeping.cgi Nginx Configuration - Ubuntu, Debian and alike This section assumes you have configured LibreNMS with Nginx as specified in Configure Nginx . Add the following configuration to your /etc/nginx/conf.d/librenms config file. The following will configure Nginx to respond to http://yourlibrenms/smokeping : #Browsing to `http://librenms.xxx/smokeping/` should bring up the smokeping web interface location = /smokeping/ { fastcgi_intercept_errors on; fastcgi_param SCRIPT_FILENAME /usr/lib/cgi-bin/smokeping.cgi; fastcgi_param QUERY_STRING $query_string; fastcgi_param REQUEST_METHOD $request_method; fastcgi_param CONTENT_TYPE $content_type; fastcgi_param CONTENT_LENGTH $content_length; fastcgi_param REQUEST_URI $request_uri; fastcgi_param DOCUMENT_URI $document_uri; fastcgi_param DOCUMENT_ROOT $document_root; fastcgi_param SERVER_PROTOCOL $server_protocol; fastcgi_param GATEWAY_INTERFACE CGI/1.1; fastcgi_param SERVER_SOFTWARE nginx/$nginx_version; fastcgi_param REMOTE_ADDR $remote_addr; fastcgi_param REMOTE_PORT $remote_port; fastcgi_param SERVER_ADDR $server_addr; fastcgi_param SERVER_PORT $server_port; fastcgi_param SERVER_NAME $server_name; fastcgi_param HTTPS $https if_not_empty; fastcgi_pass unix:/var/run/fcgiwrap.socket; } location ^~ /smokeping/ { alias /usr/share/smokeping/www/; index smokeping.cgi; gzip off; } After saving the configuration file, verify your Nginx configuration file syntax is OK with sudo nginx -t , then restart Nginx with sudo systemctl restart nginx You should be able to load the Smokeping web interface at http://yourhost/smokeping Nginx Password Authentification You can use the purpose-made htpasswd utility included in the apache2-utils package (Nginx password files use the same format as Apache). You can install it on Ubuntu with apt install apache2-utils After that you need to create password for your user htpasswd -c /etc/nginx/.htpasswd USER You can verify your user and password with cat /etc/nginx/.htpasswd Then you just need to add to your config auth_basic parameters location ^~ /smokeping/ { alias /usr/share/smokeping/www/; index smokeping.cgi; gzip off; auth_basic \"Private Property\"; auth_basic_user_file /etc/nginx/.htpasswd; } Common Problems RRDs::update ERROR: opening ... Permission denied There is a problem writing to the RRD directory. This is somewhat out of scope of LibreNMS, but make sure that file permissions and SELinux labels allow the smokeping user to write to the directory. If you're using RRDCacheD, make sure that the permissions are correct there too, and that if you're using -B that the smokeping RRD's are inside the base directory; update the smokeping rrd directory if required. It's not recommended to run RRDCachedD without the -B switch. Share RRDCached with LibreNMS Move the RRD's and give smokeping access rights to the LibreNMS RRD directory: sudo systemctl stop smokeping sudo mv /var/lib/smokeping /opt/librenms/rrd/ sudo usermod -a -G librenms smokeping Update data directory in /etc/smokeping : datadir = /opt/librenms/rrd/smokeping dyndir = /opt/librenms/rrd/smokeping/__cgi Finally restart the smokeping service: sudo systemctl start smokeping Remember to update config.php with the new locations. Probe FPing missing missing from the probes section Take a look at the instructions again - something isn't correct in your configuration. Section or variable already exists Most likely, content wasn't fully removed from the *** Probes *** *** Targets*** stanza's as instructed. If you're trying to integrate LibreNMS, smokeping and another source of configuration, you're probably trying to redefine a module (e.g. '+ FPing' more than once) or stanza. Otherwise, look again at the instructions. Mandatory variable 'probe' not defined The target block must have a default probe. If you follow the instructions you will have one. If you're trying to integrate LibreNMS, smokeping and another source of configuration, you need to make sure there are no duplicate or missing definitions. File '/usr/sbin/sendmail' does not exist` If you got this error at the end of the installation, simply edit commend out the sendmail entry in the configuration: -sendmail = /usr/sbin/sendmail +#sendmail = /usr/sbin/sendmail","title":"Smokeping"},{"location":"Extensions/Smokeping/#smokeping-integration","text":"SmokePing is a tool which lets us keep track of network latency, and visualise this through RRD graphs. LibreNMS has support for both new and pre-existing SmokePing installations. For new installations, we can use the lnms cli to generate a Smokeping configuration file.","title":"Smokeping integration"},{"location":"Extensions/Smokeping/#pre-existing-smokeping-installation","text":"If you have an existing smokeping server, follow the instructions, you only need to look at Configure LibreNMS - All Operating Systems .","title":"Pre-Existing Smokeping Installation"},{"location":"Extensions/Smokeping/#new-installation","text":"All installation steps assume a clean configuration - if you have an existing smokeping setup, you'll need to adapt these steps somewhat.","title":"New Installation"},{"location":"Extensions/Smokeping/#install-and-integrate-smokeping-backend-rhel-centos-and-alike","text":"Smokeping is available via EPEL, which if you're running LibreNMS, you probably already have. If you want to do something like run Smokeping on a seperate host and ship data via RRCached though, here's the install command: sudo yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm sudo yum install smokeping Once installed, you should need a cron script installed to make sure that the configuration file is updated. You can find an example in misc/librenms-smokeping-rhel.example . Put this into /etc/cron.d/hourly, and mark it executable: sudo cp /opt/librenms/misc/smokeping-rhel.example /etc/cron.hourly/librenms-smokeping sudo chmod +x /etc/cron.hourly/librenms-smokeping Finally, update the default configuration. Strip everything from the *** Probes *** and *** Targets *** stanza's, and replace with: *** Probes *** @include /etc/smokeping/librenms-probes.conf *** Targets *** probe = FPing menu = Top title = Network Latency Grapher remark = Welcome to the SmokePing website of <b>Insert Company Name Here</b>. \\ Here you will learn all about the latency of our network. @include /etc/smokeping/librenms-targets.conf Note there may be other stanza's (possibly *** Slaves *** ) between the *** Probes *** and *** Targets *** stanza's - leave these intact. Leave everything else untouched. If you need to add other confiruation, make sure it comes after the LibreNMS configuration, and keep in mind that Smokeping does not allow duplicate modules, and cares about the configuration file sequence. Once you're happy, manually kick off the cron once, then enable and start smokeping: sudo /etc/cron.hourly/librenms-smokeping sudo systemctl enable --now smokeping","title":"Install and integrate Smokeping Backend - RHEL, CentOS and alike"},{"location":"Extensions/Smokeping/#install-and-integrate-smokeping-backend-ubuntu-debian-and-alike","text":"Smokeping is available via the default repositories. sudo apt-get install smokeping Once installed, you should need a cron script installed to make sure that the configuration file is updated. You can find an example in misc/librenms-smokeping-debian.example . Put this into /etc/cron.d/hourly, and mark it executable: sudo cp /opt/librenms/misc/smokeping-debian.example /etc/cron.hourly/librenms-smokeping sudo chmod +x /etc/cron.hourly/librenms-smokeping Finally, update the default configuration. Strip everything from /etc/smokeping/config.d/Probes and replace with: *** Probes *** @include /etc/smokeping/config.d/librenms-probes.conf Strip everything from /etc/smokeping/config.d/Targets and replace with: *** Targets *** probe = FPing menu = Top title = Network Latency Grapher remark = Welcome to the SmokePing website of <b>Insert Company Name Here</b>. \\ Here you will learn all about the latency of our network. @include /etc/smokeping/config.d/librenms-targets.conf Leave everything else untouched. If you need to add other confiruation, make sure it comes after the LibreNMS configuration, and keep in mind that Smokeping does not allow duplicate modules, and cares about the configuration file sequence.","title":"Install and integrate Smokeping Backend - Ubuntu, Debian and alike"},{"location":"Extensions/Smokeping/#configure-librenms-all-operating-systems","text":"Edit /opt/librenms/config.php and add the following: $config [ 'smokeping' ][ 'dir' ] = '/var/lib/smokeping' ; $config [ 'smokeping' ][ 'pings' ] = 20 ; $config [ 'smokeping' ][ 'probes' ] = 2 ; $config [ 'smokeping' ][ 'integration' ] = true ; $config [ 'smokeping' ][ 'url' ] = 'smokeping/' ; // If you have a specific URL or path for smokeping dir should match the location that smokeping writes RRD's to pings should match the default smokeping value, default 20 probes should be the number of processes to spread pings over, default 2 These settings can also be set in the Web UI.","title":"Configure LibreNMS - All Operating Systems"},{"location":"Extensions/Smokeping/#configure-smokepings-web-ui-optional","text":"This section covers the required configuration for your web server of choice. This covers the required configuration for either Apache or Nginx. LibreNMS does not need the Web UI - you can find the graphs in LibreNMS on the latency tab.","title":"Configure Smokeping's Web UI - Optional"},{"location":"Extensions/Smokeping/#apache-configuration-ubuntu-debian-and-alike","text":"Edit the General configuration file's Owner and contact , and cgiurl hostname details: nano /etc/smokeping/config.d/General owner = LibreNMS-Admin contact = admin@ACME.xxx cgiurl = http://yourlibrenms/cgi-bin/smokeping.cgi Smokeping should automatically install an Apache configuration file in /etc/apache2/conf-available/ . Verify this using : librenms@librenms:~/scripts$ ls /etc/apache2/conf-available/ | grep smokeping smokeping.conf If you don't see smokeping.conf listed, you'll need to create a symlink for it: ln -s /etc/smokeping/apache2.conf /etc/apache2/conf-available/smokeping.conf After creating the symlink, restart Apache with sudo systemctl apache2 restart You should be able to load the Smokeping web interface at http://yourhost/cgi-bin/smokeping.cgi","title":"Apache Configuration - Ubuntu, Debian and alike"},{"location":"Extensions/Smokeping/#nginx-configuration-ubuntu-debian-and-alike","text":"This section assumes you have configured LibreNMS with Nginx as specified in Configure Nginx . Add the following configuration to your /etc/nginx/conf.d/librenms config file. The following will configure Nginx to respond to http://yourlibrenms/smokeping : #Browsing to `http://librenms.xxx/smokeping/` should bring up the smokeping web interface location = /smokeping/ { fastcgi_intercept_errors on; fastcgi_param SCRIPT_FILENAME /usr/lib/cgi-bin/smokeping.cgi; fastcgi_param QUERY_STRING $query_string; fastcgi_param REQUEST_METHOD $request_method; fastcgi_param CONTENT_TYPE $content_type; fastcgi_param CONTENT_LENGTH $content_length; fastcgi_param REQUEST_URI $request_uri; fastcgi_param DOCUMENT_URI $document_uri; fastcgi_param DOCUMENT_ROOT $document_root; fastcgi_param SERVER_PROTOCOL $server_protocol; fastcgi_param GATEWAY_INTERFACE CGI/1.1; fastcgi_param SERVER_SOFTWARE nginx/$nginx_version; fastcgi_param REMOTE_ADDR $remote_addr; fastcgi_param REMOTE_PORT $remote_port; fastcgi_param SERVER_ADDR $server_addr; fastcgi_param SERVER_PORT $server_port; fastcgi_param SERVER_NAME $server_name; fastcgi_param HTTPS $https if_not_empty; fastcgi_pass unix:/var/run/fcgiwrap.socket; } location ^~ /smokeping/ { alias /usr/share/smokeping/www/; index smokeping.cgi; gzip off; } After saving the configuration file, verify your Nginx configuration file syntax is OK with sudo nginx -t , then restart Nginx with sudo systemctl restart nginx You should be able to load the Smokeping web interface at http://yourhost/smokeping","title":"Nginx Configuration - Ubuntu, Debian and alike"},{"location":"Extensions/Smokeping/#nginx-password-authentification","text":"You can use the purpose-made htpasswd utility included in the apache2-utils package (Nginx password files use the same format as Apache). You can install it on Ubuntu with apt install apache2-utils After that you need to create password for your user htpasswd -c /etc/nginx/.htpasswd USER You can verify your user and password with cat /etc/nginx/.htpasswd Then you just need to add to your config auth_basic parameters location ^~ /smokeping/ { alias /usr/share/smokeping/www/; index smokeping.cgi; gzip off; auth_basic \"Private Property\"; auth_basic_user_file /etc/nginx/.htpasswd; }","title":"Nginx Password Authentification"},{"location":"Extensions/Smokeping/#common-problems","text":"","title":"Common Problems"},{"location":"Extensions/Smokeping/#rrdsupdate-error-opening-permission-denied","text":"There is a problem writing to the RRD directory. This is somewhat out of scope of LibreNMS, but make sure that file permissions and SELinux labels allow the smokeping user to write to the directory. If you're using RRDCacheD, make sure that the permissions are correct there too, and that if you're using -B that the smokeping RRD's are inside the base directory; update the smokeping rrd directory if required. It's not recommended to run RRDCachedD without the -B switch.","title":"RRDs::update ERROR: opening ... Permission denied"},{"location":"Extensions/Smokeping/#share-rrdcached-with-librenms","text":"Move the RRD's and give smokeping access rights to the LibreNMS RRD directory: sudo systemctl stop smokeping sudo mv /var/lib/smokeping /opt/librenms/rrd/ sudo usermod -a -G librenms smokeping Update data directory in /etc/smokeping : datadir = /opt/librenms/rrd/smokeping dyndir = /opt/librenms/rrd/smokeping/__cgi Finally restart the smokeping service: sudo systemctl start smokeping Remember to update config.php with the new locations.","title":"Share RRDCached with LibreNMS"},{"location":"Extensions/Smokeping/#probe-fping-missing-missing-from-the-probes-section","text":"Take a look at the instructions again - something isn't correct in your configuration.","title":"Probe FPing missing missing from the probes section"},{"location":"Extensions/Smokeping/#section-or-variable-already-exists","text":"Most likely, content wasn't fully removed from the *** Probes *** *** Targets*** stanza's as instructed. If you're trying to integrate LibreNMS, smokeping and another source of configuration, you're probably trying to redefine a module (e.g. '+ FPing' more than once) or stanza. Otherwise, look again at the instructions.","title":"Section or variable already exists"},{"location":"Extensions/Smokeping/#mandatory-variable-probe-not-defined","text":"The target block must have a default probe. If you follow the instructions you will have one. If you're trying to integrate LibreNMS, smokeping and another source of configuration, you need to make sure there are no duplicate or missing definitions.","title":"Mandatory variable 'probe' not defined"},{"location":"Extensions/Smokeping/#file-usrsbinsendmail-does-not-exist","text":"If you got this error at the end of the installation, simply edit commend out the sendmail entry in the configuration: -sendmail = /usr/sbin/sendmail +#sendmail = /usr/sbin/sendmail","title":"File '/usr/sbin/sendmail' does not exist`"},{"location":"Extensions/Sub-Directory/","text":"To run LibreNMS under a subdirectory on your Apache server, the directives for the LibreNMS directory are placed in the base server configuration, or in a virtual host container of your choosing. If using a virtual host, place the directives in the file where the virtual host is configured. If using the base server on RHEL distributions (CentOS, Scientific Linux, etc.) the directives can be placed in /etc/httpd/conf.d/librenms.conf . For Debian distributions (Ubuntu, etc.) place the directives in /etc/apache2/sites-available/default . #These directives can be inside a virtual host or in the base server configuration AllowEncodedSlashes On Alias /librenms /opt/librenms/html <Directory \"/opt/librenms/html\" > AllowOverride All Options FollowSymLinks MultiViews </Directory> The RewriteBase directive in html/.htaccess must be rewritten to reference the subdirectory name. Assuming LibreNMS is running at http://example.com/librenms/ , you will need to change RewriteBase / to RewriteBase /librenms . Finally, set APP_URL=/librenms/ in .env and $config[\"base_url\"] = '/librenms/'; in config.php.","title":"Sub-directory Support"},{"location":"Extensions/Supermicro/","text":"Introduction For some Supermicro information to show up in LibreNMS, you will need to install an agent. Supermicro SuperDoctor Install Supermicro SuperDoctor onto the device you want to monitor. Then add the following to /etc/snmp/snmpd.conf: pass .1.3.6.1.4.1.10876 /usr/bin/sudo /opt/Supermicro/SuperDoctor5/libs/native/snmpagent Restart net-snmp: service snmpd restart","title":"Supermicro"},{"location":"Extensions/Supermicro/#introduction","text":"For some Supermicro information to show up in LibreNMS, you will need to install an agent.","title":"Introduction"},{"location":"Extensions/Supermicro/#supermicro-superdoctor","text":"Install Supermicro SuperDoctor onto the device you want to monitor. Then add the following to /etc/snmp/snmpd.conf: pass .1.3.6.1.4.1.10876 /usr/bin/sudo /opt/Supermicro/SuperDoctor5/libs/native/snmpagent Restart net-snmp: service snmpd restart","title":"Supermicro SuperDoctor"},{"location":"Extensions/Syslog/","text":"Setting up syslog support This document will explain how to send syslog data to LibreNMS. Please also refer to the file Graylog.md for an alternate way of integrating syslog with LibreNMS. Syslog server installation syslog-ng For Debian / Ubuntu: apt-get install syslog-ng For CentOS / RedHat yum install syslog-ng Once syslog-ng is installed, edit the relevant config file (most likely /etc/syslog-ng/syslog-ng.conf) and paste the following: @version:3.5 @include \"scl.conf\" # syslog-ng configuration file. # # This should behave pretty much like the original syslog on RedHat. But # it could be configured a lot smarter. # # See syslog-ng(8) and syslog-ng.conf(5) for more information. # # Note: it also sources additional configuration files (*.conf) # located in /etc/syslog-ng/conf.d/ options { chain_hostnames ( off ) ; flush_lines ( 0 ) ; use_dns ( no ) ; use_fqdn ( no ) ; owner ( \"root\" ) ; group ( \"adm\" ) ; perm ( 0640 ) ; stats_freq ( 0 ) ; bad_hostname ( \"^gconfd $ \" ) ; } ; source s_sys { system () ; internal () ; } ; source s_net { tcp ( port ( 514 ) flags ( syslog-protocol )) ; udp ( port ( 514 ) flags ( syslog-protocol )) ; } ; ######################## # Destinations ######################## destination d_librenms { program ( \"/opt/librenms/syslog.php\" template ( \" $HOST || $FACILITY || $PRIORITY || $LEVEL || $TAG || $R_YEAR - $R_MONTH - $R_DAY $R_HOUR : $R_MIN : $R_SEC || $MSG || $PROGRAM \\n\" ) template-escape ( yes )) ; } ; filter f_kernel { facility ( kern ) ; } ; filter f_default { level ( info..emerg ) and not ( facility ( mail ) or facility ( authpriv ) or facility ( cron )) ; } ; filter f_auth { facility ( authpriv ) ; } ; filter f_mail { facility ( mail ) ; } ; filter f_emergency { level ( emerg ) ; } ; filter f_news { facility ( uucp ) or ( facility ( news ) and level ( crit..emerg )) ; } ; filter f_boot { facility ( local7 ) ; } ; filter f_cron { facility ( cron ) ; } ; ######################## # Log paths ######################## log { source ( s_net ) ; source ( s_sys ) ; destination ( d_librenms ) ; } ; # Source additional configuration files (.conf extension only) @include \"/etc/syslog-ng/conf.d/*.conf\" # vim:ft=syslog-ng:ai:si:ts=4:sw=4:et: Next start syslog-ng: service syslog-ng restart Add the following to your LibreNMS config.php file to enable the Syslog extension: $config [ 'enable_syslog' ] = 1 ; If no messages make it to the syslog tab in LibreNMS, chances are you experience an issue with SELinux. If so, create a file mycustom-librenms-rsyslog.te , with the following content: module mycustom-librenms-rsyslog 1.0; require { type syslogd_t; type httpd_sys_rw_content_t; type ping_exec_t; class process execmem; class dir { getattr search write }; class file { append getattr execute open read }; } #============= syslogd_t ============== allow syslogd_t httpd_sys_rw_content_t:dir { getattr search write }; allow syslogd_t httpd_sys_rw_content_t:file { open read append getattr }; allow syslogd_t self:process execmem; allow syslogd_t ping_exec_t:file execute; Then, as root, execute the following commands: checkmodule -M -m -o mycustom-librenms-rsyslog.mod mycustom-librenms-rsyslog.te semodule_package -o mycustom-librenms-rsyslog.pp -m mycustom-librenms-rsyslog.mod semodule -i mycustom-librenms-rsyslog.pp rsyslog If you prefer rsyslog, here are some hints on how to get it working. Add the following to your rsyslog config somewhere (could be at the top of the file in the step below, could be in rsyslog.conf if you are using remote logs for something else on this host) # Listen for syslog messages on UDP:514 $ModLoad imudp $UDPServerRun 514 Create a file called /etc/rsyslog.d/30-librenms.conf and add the following depending on your version of rsyslog. Version 8 # Feed syslog messages to librenms module(load=\"omprog\") template(name=\"librenms\" type=\"string\" string= \"%fromhost%||%syslogfacility%||%syslogpriority%||%syslogseverity%||%syslogtag%||%$year%-%$month%-%$day% %timegenerated:8:25%||%msg%||%programname%\\n\") action(type=\"omprog\" binary=\"/opt/librenms/syslog.php\" template=\"librenms\") & stop Version 7 #Feed syslog messages to librenms $ModLoad omprog $template librenms,\"%fromhost%||%syslogfacility%||%syslogpriority%||%syslogseverity%||%syslogtag%||%$year%-%$month%-%$day% %timegenerated:8:25%||%msg%||%programname%\\n\" *.* action(type=\"omprog\" binary=\"/opt/librenms/syslog.php\" template=\"librenms\") & stop Legacy # Feed syslog messages to librenms $ModLoad omprog $template librenms,\"%FROMHOST%||%syslogfacility-text%||%syslogpriority-text%||%syslogseverity%||%syslogtag%||%$YEAR%-%$MONTH%-%$DAY% %timegenerated:8:25%||%msg%||%programname%\\n\" $ActionOMProgBinary /opt/librenms/syslog.php *.* :omprog:;librenms If your rsyslog server is recieving messages relayed by another syslog server, you may try replacing %fromhost% with %hostname% , since fromhost is the host the message was received from, not the host that generated the message. The fromhost property is preferred as it avoids problems caused by devices sending incorrect hostnames in syslog messages. Add the following to your LibreNMS config.php file to enable the Syslog extension: $config [ 'enable_syslog' ] = 1 ; logstash If you prefer logstash, and it is installed on the same server as LibreNMS, here are some hints on how to get it working. First, install the output-exec plugin for logstash: /usr/share/logstash/bin/logstash-plugin install logstash-output-exec Next, create a logstash configuration file (ex. /etc/logstash/conf.d/logstash-simple.conf), and add the following: input { syslog { port => 514 } } output { exec { command => \"echo `echo %{host},,,,%{facility},,,,%{priority},,,,%{severity},,,,%{facility_label},,,,``date --date='%{timestamp}' '+%Y-%m-%d %H:%M:%S'``echo ',,,,%{message}'``echo ,,,,%{program} | sed 's/\\x25\\x7b\\x70\\x72\\x6f\\x67\\x72\\x61\\x6d\\x7d/%{facility_label}/'` | sed 's/,,,,/||/g' | /opt/librenms/syslog.php &\" } elasticsearch { hosts => [\"10.10.10.10:9200\"] index => \"syslog-%{+YYYY.MM.dd}\" } } Replace 10.10.10.10 with your primary elasticsearch server IP, and set the incoming syslog port. Alternatively, if you already have a logstash config file that works except for the LibreNMS export, take only the \"exec\" section from output and add it. Add the following to your LibreNMS config.php file to enable the Syslog extension: $config['enable_syslog'] = 1; Syslog Clean Up Can be set inside of config.php $config [ 'syslog_purge' ] = 30 ; The cleanup is run by daily.sh and any entries over X days old are automatically purged. Values are in days. See here for more Clean Up Options Link Client configuration Below are sample configurations for a variety of clients. You should understand the config before using it as you may want to make some slight changes. Further configuration hints may be found in the file Graylog.md. Replace librenms.ip with IP or hostname of your LibreNMS install. Replace any variables in with the relevant information. syslog *.* @librenms.ip rsyslog *.* @librenms.ip:514 Cisco ASA logging enable logging timestamp logging buffer-size 200000 logging buffered debugging logging trap notifications logging host <outside interface name> librenms.ip Cisco IOS logging trap debugging logging facility local6 logging librenms.ip Cisco NXOS logging server librenms.ip 5 use-vrf default facility local6 Juniper Junos set system syslog host librenms.ip authorization any set system syslog host librenms.ip daemon any set system syslog host librenms.ip kernel any set system syslog host librenms.ip user any set system syslog host librenms.ip change-log any set system syslog host librenms.ip source-address <management ip> set system syslog host librenms.ip exclude-hostname set system syslog time-format Huawei VRP info-center loghost librenms.ip info-center timestamp debugging short-date without-timezone // Optional info-center timestamp log short-date // Optional info-center timestamp trap short-date // Optional //This is optional config, especially if the device is in public ip and you dont'want to get a lot of messages of ACL info-center filter-id bymodule-alias VTY ACL_DENY info-center filter-id bymodule-alias SSH SSH_FAIL info-center filter-id bymodule-alias SNMP SNMP_FAIL info-center filter-id bymodule-alias SNMP SNMP_IPLOCK info-center filter-id bymodule-alias SNMP SNMP_IPUNLOCK info-center filter-id bymodule-alias HTTP ACL_DENY Huawei SmartAX (GPON OLT) loghost add librenms.ip librenms loghost activate name librenms Allied Telesis Alliedware Plus log date-format iso // Required so syslog-ng/LibreNMS can correctly interpret the log message formatting. log host x.x.x.x log host x.x.x.x level <errors> // Required. A log-level must be specified for syslog messages to send. log host x.x.x.x level notices program imish // Useful for seeing all commands executed by users. log host x.x.x.x level notices program imi // Required for Oxidized Syslog hook log message. log host source <eth0> If you have permitted udp and tcp 514 through any firewall then that should be all you need. Logs should start appearing and displayed within the LibreNMS web UI. Windows By Default windows has no native way to send logs to a remote syslog server. Using this how to you can download Datagram-Syslog Agent to send logs to a remote syslog server (LibreNMS). Note Keep in mind you can use any agent or program to send the logs. We are just using this Datagram-Syslog Agent for this example. Link to How to You will need to download and install \"Datagram-Syslog Agent\" for this how to Link to Download External hooks Trigger external scripts based on specific syslog patterns being matched with syslog hooks. Add the following to your LibreNMS config.php to enable hooks: $config['enable_syslog_hooks'] = 1; The below are some example hooks to call an external script in the event of a configuration change on Cisco ASA, IOS, NX-OS and IOS-XR devices. Add to your config.php file to enable. Cisco ASA $config['os']['asa']['syslog_hook'][] = Array('regex' => '/%ASA-(config-)?5-111005/', 'script' => '/opt/librenms/scripts/syslog-notify-oxidized.php'); Cisco IOS $config['os']['ios']['syslog_hook'][] = Array('regex' => '/%SYS-(SW[0-9]+-)?5-CONFIG_I/', 'script' => '/opt/librenms/scripts/syslog-notify-oxidized.php'); Cisco NXOS $config['os']['nxos']['syslog_hook'][] = Array('regex' => '/%VSHD-5-VSHD_SYSLOG_CONFIG_I/', 'script' => '/opt/librenms/scripts/syslog-notify-oxidized.php'); Cisco IOSXR $config['os']['iosxr']['syslog_hook'][] = Array('regex' => '/%GBL-CONFIG-6-DB_COMMIT/', 'script' => '/opt/librenms/scripts/syslog-notify-oxidized.php'); Juniper Junos $config['os']['junos']['syslog_hook'][] = Array('regex' => '/UI_COMMIT:/', 'script' => '/opt/librenms/scripts/syslog-notify-oxidized.php'); Juniper ScreenOS $config['os']['screenos']['syslog_hook'][] = Array('regex' => '/System configuration saved/', 'script' => '/opt/librenms/scripts/syslog-notify-oxidized.php'); Allied Telesis Alliedware Plus Note: At least software version 5.4.8-2.1 is required. log host x.x.x.x level notices program imi may also be required depending on configuration. This is to ensure the syslog hook log message gets sent to the syslog server. $config['os']['awplus']['syslog_hook'][] = Array('regex' => '/IMI.+.Startup-config saved on/', 'script' => '/opt/librenms/scripts/syslog-notify-oxidized.php'); Configuration Options Matching syslogs to hosts with different names In some cases, you may get logs that aren't being associated with the device in LibreNMS. For example, in LibreNMS the device is known as \"ne-core-01\", and that's how DNS resolves. However, the received syslogs are for \"loopback.core-nw\". To fix this issue, you can configure LibreNMS to translate the incoming syslog hostname into another hostname, so that the logs get associated with the correct device. Example: $config['syslog_xlate'] = array( 'loopback0.core7k1.noc.net' => 'n7k1-core7k1', 'loopback0.core7k2.noc.net' => 'n7k2-core7k2' );","title":"Syslog"},{"location":"Extensions/Syslog/#setting-up-syslog-support","text":"This document will explain how to send syslog data to LibreNMS. Please also refer to the file Graylog.md for an alternate way of integrating syslog with LibreNMS.","title":"Setting up syslog support"},{"location":"Extensions/Syslog/#syslog-server-installation","text":"","title":"Syslog server installation"},{"location":"Extensions/Syslog/#syslog-ng","text":"For Debian / Ubuntu: apt-get install syslog-ng For CentOS / RedHat yum install syslog-ng Once syslog-ng is installed, edit the relevant config file (most likely /etc/syslog-ng/syslog-ng.conf) and paste the following: @version:3.5 @include \"scl.conf\" # syslog-ng configuration file. # # This should behave pretty much like the original syslog on RedHat. But # it could be configured a lot smarter. # # See syslog-ng(8) and syslog-ng.conf(5) for more information. # # Note: it also sources additional configuration files (*.conf) # located in /etc/syslog-ng/conf.d/ options { chain_hostnames ( off ) ; flush_lines ( 0 ) ; use_dns ( no ) ; use_fqdn ( no ) ; owner ( \"root\" ) ; group ( \"adm\" ) ; perm ( 0640 ) ; stats_freq ( 0 ) ; bad_hostname ( \"^gconfd $ \" ) ; } ; source s_sys { system () ; internal () ; } ; source s_net { tcp ( port ( 514 ) flags ( syslog-protocol )) ; udp ( port ( 514 ) flags ( syslog-protocol )) ; } ; ######################## # Destinations ######################## destination d_librenms { program ( \"/opt/librenms/syslog.php\" template ( \" $HOST || $FACILITY || $PRIORITY || $LEVEL || $TAG || $R_YEAR - $R_MONTH - $R_DAY $R_HOUR : $R_MIN : $R_SEC || $MSG || $PROGRAM \\n\" ) template-escape ( yes )) ; } ; filter f_kernel { facility ( kern ) ; } ; filter f_default { level ( info..emerg ) and not ( facility ( mail ) or facility ( authpriv ) or facility ( cron )) ; } ; filter f_auth { facility ( authpriv ) ; } ; filter f_mail { facility ( mail ) ; } ; filter f_emergency { level ( emerg ) ; } ; filter f_news { facility ( uucp ) or ( facility ( news ) and level ( crit..emerg )) ; } ; filter f_boot { facility ( local7 ) ; } ; filter f_cron { facility ( cron ) ; } ; ######################## # Log paths ######################## log { source ( s_net ) ; source ( s_sys ) ; destination ( d_librenms ) ; } ; # Source additional configuration files (.conf extension only) @include \"/etc/syslog-ng/conf.d/*.conf\" # vim:ft=syslog-ng:ai:si:ts=4:sw=4:et: Next start syslog-ng: service syslog-ng restart Add the following to your LibreNMS config.php file to enable the Syslog extension: $config [ 'enable_syslog' ] = 1 ; If no messages make it to the syslog tab in LibreNMS, chances are you experience an issue with SELinux. If so, create a file mycustom-librenms-rsyslog.te , with the following content: module mycustom-librenms-rsyslog 1.0; require { type syslogd_t; type httpd_sys_rw_content_t; type ping_exec_t; class process execmem; class dir { getattr search write }; class file { append getattr execute open read }; } #============= syslogd_t ============== allow syslogd_t httpd_sys_rw_content_t:dir { getattr search write }; allow syslogd_t httpd_sys_rw_content_t:file { open read append getattr }; allow syslogd_t self:process execmem; allow syslogd_t ping_exec_t:file execute; Then, as root, execute the following commands: checkmodule -M -m -o mycustom-librenms-rsyslog.mod mycustom-librenms-rsyslog.te semodule_package -o mycustom-librenms-rsyslog.pp -m mycustom-librenms-rsyslog.mod semodule -i mycustom-librenms-rsyslog.pp","title":"syslog-ng"},{"location":"Extensions/Syslog/#rsyslog","text":"If you prefer rsyslog, here are some hints on how to get it working. Add the following to your rsyslog config somewhere (could be at the top of the file in the step below, could be in rsyslog.conf if you are using remote logs for something else on this host) # Listen for syslog messages on UDP:514 $ModLoad imudp $UDPServerRun 514 Create a file called /etc/rsyslog.d/30-librenms.conf and add the following depending on your version of rsyslog. Version 8 # Feed syslog messages to librenms module(load=\"omprog\") template(name=\"librenms\" type=\"string\" string= \"%fromhost%||%syslogfacility%||%syslogpriority%||%syslogseverity%||%syslogtag%||%$year%-%$month%-%$day% %timegenerated:8:25%||%msg%||%programname%\\n\") action(type=\"omprog\" binary=\"/opt/librenms/syslog.php\" template=\"librenms\") & stop Version 7 #Feed syslog messages to librenms $ModLoad omprog $template librenms,\"%fromhost%||%syslogfacility%||%syslogpriority%||%syslogseverity%||%syslogtag%||%$year%-%$month%-%$day% %timegenerated:8:25%||%msg%||%programname%\\n\" *.* action(type=\"omprog\" binary=\"/opt/librenms/syslog.php\" template=\"librenms\") & stop Legacy # Feed syslog messages to librenms $ModLoad omprog $template librenms,\"%FROMHOST%||%syslogfacility-text%||%syslogpriority-text%||%syslogseverity%||%syslogtag%||%$YEAR%-%$MONTH%-%$DAY% %timegenerated:8:25%||%msg%||%programname%\\n\" $ActionOMProgBinary /opt/librenms/syslog.php *.* :omprog:;librenms If your rsyslog server is recieving messages relayed by another syslog server, you may try replacing %fromhost% with %hostname% , since fromhost is the host the message was received from, not the host that generated the message. The fromhost property is preferred as it avoids problems caused by devices sending incorrect hostnames in syslog messages. Add the following to your LibreNMS config.php file to enable the Syslog extension: $config [ 'enable_syslog' ] = 1 ;","title":"rsyslog"},{"location":"Extensions/Syslog/#logstash","text":"If you prefer logstash, and it is installed on the same server as LibreNMS, here are some hints on how to get it working. First, install the output-exec plugin for logstash: /usr/share/logstash/bin/logstash-plugin install logstash-output-exec Next, create a logstash configuration file (ex. /etc/logstash/conf.d/logstash-simple.conf), and add the following: input { syslog { port => 514 } } output { exec { command => \"echo `echo %{host},,,,%{facility},,,,%{priority},,,,%{severity},,,,%{facility_label},,,,``date --date='%{timestamp}' '+%Y-%m-%d %H:%M:%S'``echo ',,,,%{message}'``echo ,,,,%{program} | sed 's/\\x25\\x7b\\x70\\x72\\x6f\\x67\\x72\\x61\\x6d\\x7d/%{facility_label}/'` | sed 's/,,,,/||/g' | /opt/librenms/syslog.php &\" } elasticsearch { hosts => [\"10.10.10.10:9200\"] index => \"syslog-%{+YYYY.MM.dd}\" } } Replace 10.10.10.10 with your primary elasticsearch server IP, and set the incoming syslog port. Alternatively, if you already have a logstash config file that works except for the LibreNMS export, take only the \"exec\" section from output and add it. Add the following to your LibreNMS config.php file to enable the Syslog extension: $config['enable_syslog'] = 1;","title":"logstash"},{"location":"Extensions/Syslog/#syslog-clean-up","text":"Can be set inside of config.php $config [ 'syslog_purge' ] = 30 ; The cleanup is run by daily.sh and any entries over X days old are automatically purged. Values are in days. See here for more Clean Up Options Link","title":"Syslog Clean Up"},{"location":"Extensions/Syslog/#client-configuration","text":"Below are sample configurations for a variety of clients. You should understand the config before using it as you may want to make some slight changes. Further configuration hints may be found in the file Graylog.md. Replace librenms.ip with IP or hostname of your LibreNMS install. Replace any variables in with the relevant information.","title":"Client configuration"},{"location":"Extensions/Syslog/#syslog","text":"*.* @librenms.ip","title":"syslog"},{"location":"Extensions/Syslog/#rsyslog_1","text":"*.* @librenms.ip:514","title":"rsyslog"},{"location":"Extensions/Syslog/#cisco-asa","text":"logging enable logging timestamp logging buffer-size 200000 logging buffered debugging logging trap notifications logging host <outside interface name> librenms.ip","title":"Cisco ASA"},{"location":"Extensions/Syslog/#cisco-ios","text":"logging trap debugging logging facility local6 logging librenms.ip","title":"Cisco IOS"},{"location":"Extensions/Syslog/#cisco-nxos","text":"logging server librenms.ip 5 use-vrf default facility local6","title":"Cisco NXOS"},{"location":"Extensions/Syslog/#juniper-junos","text":"set system syslog host librenms.ip authorization any set system syslog host librenms.ip daemon any set system syslog host librenms.ip kernel any set system syslog host librenms.ip user any set system syslog host librenms.ip change-log any set system syslog host librenms.ip source-address <management ip> set system syslog host librenms.ip exclude-hostname set system syslog time-format","title":"Juniper Junos"},{"location":"Extensions/Syslog/#huawei-vrp","text":"info-center loghost librenms.ip info-center timestamp debugging short-date without-timezone // Optional info-center timestamp log short-date // Optional info-center timestamp trap short-date // Optional //This is optional config, especially if the device is in public ip and you dont'want to get a lot of messages of ACL info-center filter-id bymodule-alias VTY ACL_DENY info-center filter-id bymodule-alias SSH SSH_FAIL info-center filter-id bymodule-alias SNMP SNMP_FAIL info-center filter-id bymodule-alias SNMP SNMP_IPLOCK info-center filter-id bymodule-alias SNMP SNMP_IPUNLOCK info-center filter-id bymodule-alias HTTP ACL_DENY","title":"Huawei VRP"},{"location":"Extensions/Syslog/#huawei-smartax-gpon-olt","text":"loghost add librenms.ip librenms loghost activate name librenms","title":"Huawei SmartAX (GPON OLT)"},{"location":"Extensions/Syslog/#allied-telesis-alliedware-plus","text":"log date-format iso // Required so syslog-ng/LibreNMS can correctly interpret the log message formatting. log host x.x.x.x log host x.x.x.x level <errors> // Required. A log-level must be specified for syslog messages to send. log host x.x.x.x level notices program imish // Useful for seeing all commands executed by users. log host x.x.x.x level notices program imi // Required for Oxidized Syslog hook log message. log host source <eth0> If you have permitted udp and tcp 514 through any firewall then that should be all you need. Logs should start appearing and displayed within the LibreNMS web UI.","title":"Allied Telesis Alliedware Plus"},{"location":"Extensions/Syslog/#windows","text":"By Default windows has no native way to send logs to a remote syslog server. Using this how to you can download Datagram-Syslog Agent to send logs to a remote syslog server (LibreNMS).","title":"Windows"},{"location":"Extensions/Syslog/#note","text":"Keep in mind you can use any agent or program to send the logs. We are just using this Datagram-Syslog Agent for this example. Link to How to You will need to download and install \"Datagram-Syslog Agent\" for this how to Link to Download","title":"Note"},{"location":"Extensions/Syslog/#external-hooks","text":"Trigger external scripts based on specific syslog patterns being matched with syslog hooks. Add the following to your LibreNMS config.php to enable hooks: $config['enable_syslog_hooks'] = 1; The below are some example hooks to call an external script in the event of a configuration change on Cisco ASA, IOS, NX-OS and IOS-XR devices. Add to your config.php file to enable.","title":"External hooks"},{"location":"Extensions/Syslog/#cisco-asa_1","text":"$config['os']['asa']['syslog_hook'][] = Array('regex' => '/%ASA-(config-)?5-111005/', 'script' => '/opt/librenms/scripts/syslog-notify-oxidized.php');","title":"Cisco ASA"},{"location":"Extensions/Syslog/#cisco-ios_1","text":"$config['os']['ios']['syslog_hook'][] = Array('regex' => '/%SYS-(SW[0-9]+-)?5-CONFIG_I/', 'script' => '/opt/librenms/scripts/syslog-notify-oxidized.php');","title":"Cisco IOS"},{"location":"Extensions/Syslog/#cisco-nxos_1","text":"$config['os']['nxos']['syslog_hook'][] = Array('regex' => '/%VSHD-5-VSHD_SYSLOG_CONFIG_I/', 'script' => '/opt/librenms/scripts/syslog-notify-oxidized.php');","title":"Cisco NXOS"},{"location":"Extensions/Syslog/#cisco-iosxr","text":"$config['os']['iosxr']['syslog_hook'][] = Array('regex' => '/%GBL-CONFIG-6-DB_COMMIT/', 'script' => '/opt/librenms/scripts/syslog-notify-oxidized.php');","title":"Cisco IOSXR"},{"location":"Extensions/Syslog/#juniper-junos_1","text":"$config['os']['junos']['syslog_hook'][] = Array('regex' => '/UI_COMMIT:/', 'script' => '/opt/librenms/scripts/syslog-notify-oxidized.php');","title":"Juniper Junos"},{"location":"Extensions/Syslog/#juniper-screenos","text":"$config['os']['screenos']['syslog_hook'][] = Array('regex' => '/System configuration saved/', 'script' => '/opt/librenms/scripts/syslog-notify-oxidized.php');","title":"Juniper ScreenOS"},{"location":"Extensions/Syslog/#allied-telesis-alliedware-plus_1","text":"Note: At least software version 5.4.8-2.1 is required. log host x.x.x.x level notices program imi may also be required depending on configuration. This is to ensure the syslog hook log message gets sent to the syslog server. $config['os']['awplus']['syslog_hook'][] = Array('regex' => '/IMI.+.Startup-config saved on/', 'script' => '/opt/librenms/scripts/syslog-notify-oxidized.php');","title":"Allied Telesis Alliedware Plus"},{"location":"Extensions/Syslog/#configuration-options","text":"","title":"Configuration Options"},{"location":"Extensions/Syslog/#matching-syslogs-to-hosts-with-different-names","text":"In some cases, you may get logs that aren't being associated with the device in LibreNMS. For example, in LibreNMS the device is known as \"ne-core-01\", and that's how DNS resolves. However, the received syslogs are for \"loopback.core-nw\". To fix this issue, you can configure LibreNMS to translate the incoming syslog hostname into another hostname, so that the logs get associated with the correct device. Example: $config['syslog_xlate'] = array( 'loopback0.core7k1.noc.net' => 'n7k1-core7k1', 'loopback0.core7k2.noc.net' => 'n7k2-core7k2' );","title":"Matching syslogs to hosts with different names"},{"location":"Extensions/Two-Factor-Auth/","text":"About Over the last couple of years, the primary attack vector for internet accounts has been static passwords. Therefore static passwords are no longer sufficient to protect unauthorized access to accounts. Two Factor Authentication adds a variable part in authentication procedures. A user is now required to supply a changing 6-digit passcode in addition to it's password to obtain access to the account. LibreNMS has a RFC4226 conform implementation of both Time and Counter based One-Time-Passwords. It also allows the administrator to configure a throttle time to enforce after 3 failures exceeded. Unlike RFC4226 suggestions, this throttle time will not stack on the amount of failures. Types In general, these two types do not differ in algorithmic terms. The types only differ in the variable being used to derive the passcodes from. The underlying HMAC-SHA1 remains the same for both types, security advantages or disadvantages of each are discussed further down. Timebased One-Time-Password (TOTP) Like the name suggests, this type uses the current Time or a subset of it to generate the passcodes. These passcodes solely rely on the secrecy of their Secretkey in order to provide passcodes. An attacker only needs to guess that Secretkey and the other variable part is any given time, presumably the time upon login. RFC4226 suggests a resynchronization attempt in case the passcode mismatches, providing the attacker a range of up to +/- 3 Minutes to create passcodes. Counterbased One-Time-Password (TOTP) This type uses an internal counter that needs to be in sync with the server's counter to successfully authenticate the passcodes. The main advantage over timebased OTP is the attacker doesn't only need to know the Secretkey but also the server's Counter in order to create valid passcodes. RFC4226 suggests a resynchronization attempt in case the passcode mismatches, providing the attacker a range of up to +4 increments from the actual counter to create passcodes. Configuration Enable Two-Factor: $config [ 'twofactor' ] = true ; Set throttle-time (in seconds): $config [ 'twofactor_lock' ] = 300 ; Usage These steps imply that TwoFactor has been enabled in your config.php Create a Two-Factor key: Go to 'My Settings' (/preferences/) Choose TwoFactor type Click on 'Generate TwoFactor Secret Key' If your browser didn't reload, reload manually Scan provided QR or click on 'Manual' to see the Key Google Authenticator Installation guides for Google Authenticator can be found here . Usage: Create a key like described above Scan provided QR or click on 'Manual' and type down the Secret On next login, enter the passcode that the App provides","title":"Two-Factor Auth"},{"location":"Extensions/Two-Factor-Auth/#about","text":"Over the last couple of years, the primary attack vector for internet accounts has been static passwords. Therefore static passwords are no longer sufficient to protect unauthorized access to accounts. Two Factor Authentication adds a variable part in authentication procedures. A user is now required to supply a changing 6-digit passcode in addition to it's password to obtain access to the account. LibreNMS has a RFC4226 conform implementation of both Time and Counter based One-Time-Passwords. It also allows the administrator to configure a throttle time to enforce after 3 failures exceeded. Unlike RFC4226 suggestions, this throttle time will not stack on the amount of failures.","title":"About"},{"location":"Extensions/Two-Factor-Auth/#types","text":"In general, these two types do not differ in algorithmic terms. The types only differ in the variable being used to derive the passcodes from. The underlying HMAC-SHA1 remains the same for both types, security advantages or disadvantages of each are discussed further down.","title":"Types"},{"location":"Extensions/Two-Factor-Auth/#timebased-one-time-password-totp","text":"Like the name suggests, this type uses the current Time or a subset of it to generate the passcodes. These passcodes solely rely on the secrecy of their Secretkey in order to provide passcodes. An attacker only needs to guess that Secretkey and the other variable part is any given time, presumably the time upon login. RFC4226 suggests a resynchronization attempt in case the passcode mismatches, providing the attacker a range of up to +/- 3 Minutes to create passcodes.","title":"Timebased One-Time-Password (TOTP)"},{"location":"Extensions/Two-Factor-Auth/#counterbased-one-time-password-totp","text":"This type uses an internal counter that needs to be in sync with the server's counter to successfully authenticate the passcodes. The main advantage over timebased OTP is the attacker doesn't only need to know the Secretkey but also the server's Counter in order to create valid passcodes. RFC4226 suggests a resynchronization attempt in case the passcode mismatches, providing the attacker a range of up to +4 increments from the actual counter to create passcodes.","title":"Counterbased One-Time-Password (TOTP)"},{"location":"Extensions/Two-Factor-Auth/#configuration","text":"Enable Two-Factor: $config [ 'twofactor' ] = true ; Set throttle-time (in seconds): $config [ 'twofactor_lock' ] = 300 ;","title":"Configuration"},{"location":"Extensions/Two-Factor-Auth/#usage","text":"These steps imply that TwoFactor has been enabled in your config.php Create a Two-Factor key: Go to 'My Settings' (/preferences/) Choose TwoFactor type Click on 'Generate TwoFactor Secret Key' If your browser didn't reload, reload manually Scan provided QR or click on 'Manual' to see the Key","title":"Usage"},{"location":"Extensions/Two-Factor-Auth/#google-authenticator","text":"Installation guides for Google Authenticator can be found here . Usage: Create a key like described above Scan provided QR or click on 'Manual' and type down the Secret On next login, enter the passcode that the App provides","title":"Google Authenticator"},{"location":"Extensions/Varnish/","text":"Varnish Installation Guide This document explains how to install Varnish Reverse Proxy for LibreNMS. Varnish is caching software that sits logically between an HTTP client and an HTTP server. Varnish caches HTTP responses from the HTTP server. If an HTTP request can not be responded to by the Varnish cache it directs the request to the HTTP Server. This type of HTTP caching is called a reverse proxy server. Caching your HTTP server can decrease page load times significantly. Simplified block diagram of an Apache HTTP server with Varnish 4.0 Reverse Proxy CentOS 7 Varnish Installation In this example we will assume your Apache 2.4.X HTTP server is working and configured to process HTTP requests on port 80. If not, please see Installing LibreNMS Install Varnish 4.0 RPM Enable the Varnish CentOS 7 repo and install rpm --nosignature -i https://repo.varnish-cache.org/redhat/varnish-4.0.el7.rpm yum install varnish By default Varnish listens for HTTP requests on port 6081. Temporarily add a firewalld rule for testing Varnish. firewall-cmd --zone = public --add-port = 6081 /tcp Test Varnish Start Varnish systemctl start varnish Using a web browser navigate to :6081 or 127.0.0.1:6081. You should see a Varnish error message, this shows that Varnish is working. Example error message: Error 503 Backend fetch failed Backend fetch failed Guru Meditation: XID: 3 Varnish cache server Edit Varnish Parameters Now we need to configure Varnish to listen to HTTP requests on port 80 and relay those requests to the Apache HTTP server on port 8080 (see block diagram). Stop Varnish. systemctl stop varnish Create a back-up of varnish.params just in case you make a mistake. cp /etc/varnish/varnish.params /etc/varnish/varnish.params.bak Edit the varnish.params config. vim /etc/varnish/varnish.params Set the VCL location, IP address, port, and cache location and size. malloc sets the cache location to RAM, and 512M sets the cache size to 512MB. VARNISH_LISTEN_ADDRESS = 192 . 168 . 1 . 10 VARNISH_LISTEN_PORT = 80 VARNISH_VCL_CONF =/ etc / varnish / librenms . vcl VARNISH_STORAGE = \"malloc,512M\" Example varnish.params: # Set this to 1 to make systemd reload try to switch vcl without restart. RELOAD_VCL = 1 # Main configuration file. You probably want to change it. VARNISH_VCL_CONF =/ etc / varnish / librenms . vcl # Default address and port to bind to. Blank address means all IPv4 # and IPv6 interfaces, otherwise specify a host name, an IPv4 dotted # quad, or an IPv6 address in brackets. VARNISH_LISTEN_ADDRESS = 192 . 168 . 1 . 10 VARNISH_LISTEN_PORT = 80 # Admin interface listen address and port VARNISH_ADMIN_LISTEN_ADDRESS = 127 . 0 . 0 . 1 VARNISH_ADMIN_LISTEN_PORT = 6082 # Shared secret file for admin interface VARNISH_SECRET_FILE =/ etc / varnish / secret # Backend storage specification, see Storage Types in the varnishd(5) # man page for details. VARNISH_STORAGE = \"malloc,512M\" # Default TTL used when the backend does not specify one VARNISH_TTL = 120 # User and group for the varnishd worker processes VARNISH_USER = varnish VARNISH_GROUP = varnish # Other options, see the man page varnishd(1) DAEMON_OPTS = \"-p thread_pool_min=5 -p thread_pool_max=500 -p thread_pool_timeout=300\" Configure Apache for Varnish Edit librenms.conf and modify the Apache Virtual Host listening port. Modify: <VirtualHost *:80> to: <VirtualHost *:8080> vim /etc/httpd/conf.d/librenms.conf Varnish can not share a port with Apache. Change the Apache listening port to 8080. Modify: Listen 80 to: Listen 8080 vim /etc/httpd/conf/httpd.conf Create the librenms.vcl cd /etc/varnish touch librenms.vcl Set ownership and permissions for Varnish files. chown varnish:varnish default.vcl varnish.params secret chmod 644 default.vcl varnish.params secret Edit the librenms.vcl. vim librenms.vcl Paste example VCL config, read config comments for more information. # # This is an example VCL file for Varnish. # # It does not do anything by default, delegating control to the # builtin VCL. The builtin VCL is called when there is no explicit # return statement. # # See the VCL chapters in the Users Guide at https://www.varnish-cache.org/docs/ # and http://varnish-cache.org/trac/wiki/VCLExamples for more examples. # Marker to tell the VCL compiler that this VCL has been adapted to the # new 4.0 format. vcl 4.0 ; # Default backend definition. Set this to point to your Apache server. backend librenms { .host = \"127.0.0.1\" ; .port = \"8080\" ; } # In this example our objective is to cache static content with Varnish and temporarily # cache dynamic content in the client web browser. sub vcl_recv { # HTTP requests from client web browser. # Here we remove any cookie HTTP requests for the 'librenms.domain.net' host # containing the matching file extensions. We don't have to match by host if you # only have LibreNMS running on Apache. # If the cookies are not removed from the HTTP request then Varnish will not cache # the files. 'else' function is set to 'pass', or don't cache anything that doesn't # match. if ( req.http.host ~ \"^librenms.domain.net\" ) { set req.backend_hint = librenms ; if ( req.url ~ \"\\.(png|gif|jpg|jpeg|ico|pdf|js|css|svg|eot|otf|woff|woff2|ttf)$\" ) { unset req.http.Cookie ; } else { return ( pass ); } } } sub vcl_backend_response { # 'sub vcl_backend_response' is the same function as 'sub vcl_fetch' in Varnish 3, however, # the syntax is slightly different # This function happens after we read the response headers from the backend (Apache). # First function 'if (bereq.url ~ \"\\' removes cookies from the Apache HTTP responses # that match the file extensions that are between the quotes, and cache the files for 24 hours. # This assumes you update LibreNMS once a day, otherwise restart Varnish to clear cache. # Second function 'if (bereq.url ~ \"^/' removes the Pragma no-cache statements and sets the age # of how long the client browser will cache the matching urls. # LibreNMS graphs are updated every 300 seconds, 'max-age=300' is set to match this behavior. # We could cache these URLs in Varnish but it would add to the complexity of the config. if ( bereq.http.host ~ \"^librenms.domain.net\" ) { if ( bereq.url ~ \"\\.(png|gif|jpg|jpeg|ico|pdf|js|css|svg|eot|otf|woff|woff2|ttf)$\" ) { unset beresp.http.Set-cookie ; set beresp.ttl = 24h ; } if ( bereq.url ~ \"^/graph.php\" || \"^/device/\" || \"^/iftype/\" || \"^/customers/\" || \"^/health/\" || \"^/apps/\" || \"^/(plugin)$\" || \"^/(alert)$\" || \"^/eventlog/\" || \"^/graphs/\" || \"^/ports/\" ) { unset beresp.http.Pragma ; set beresp.http.Cache-Control = \"max-age=300\" ; } } } sub vcl_deliver { # Happens when we have all the pieces we need, and are about to send the # response to the client. # You can do accounting or modifying the final object here. return ( deliver ); } Reload rules to remove the temporary port rule we added earlier. firewall-cmd --reload Varnish caching does not take effect immediately. You will need to browse the LibreNMS website to build up the cache. Use the command varnishstat to monitor Varnish caching. Over time you should see 'MAIN.cache_hit' and 'MAIN.client_req' increase. With the above VCL the hit to request ratio is approximately 84%. Session based VCL (coming soon) Testing and debugging VCL (coming soon)","title":"Varnish"},{"location":"Extensions/Varnish/#varnish-installation-guide","text":"This document explains how to install Varnish Reverse Proxy for LibreNMS. Varnish is caching software that sits logically between an HTTP client and an HTTP server. Varnish caches HTTP responses from the HTTP server. If an HTTP request can not be responded to by the Varnish cache it directs the request to the HTTP Server. This type of HTTP caching is called a reverse proxy server. Caching your HTTP server can decrease page load times significantly.","title":"Varnish Installation Guide"},{"location":"Extensions/Varnish/#simplified-block-diagram-of-an-apache-http-server-with-varnish-40-reverse-proxy","text":"","title":"Simplified block diagram of an Apache HTTP server with Varnish 4.0 Reverse Proxy"},{"location":"Extensions/Varnish/#centos-7-varnish-installation","text":"In this example we will assume your Apache 2.4.X HTTP server is working and configured to process HTTP requests on port 80. If not, please see Installing LibreNMS","title":"CentOS 7 Varnish Installation"},{"location":"Extensions/Varnish/#install-varnish-40-rpm","text":"Enable the Varnish CentOS 7 repo and install rpm --nosignature -i https://repo.varnish-cache.org/redhat/varnish-4.0.el7.rpm yum install varnish By default Varnish listens for HTTP requests on port 6081. Temporarily add a firewalld rule for testing Varnish. firewall-cmd --zone = public --add-port = 6081 /tcp","title":"Install Varnish 4.0 RPM"},{"location":"Extensions/Varnish/#test-varnish","text":"Start Varnish systemctl start varnish Using a web browser navigate to :6081 or 127.0.0.1:6081. You should see a Varnish error message, this shows that Varnish is working. Example error message: Error 503 Backend fetch failed Backend fetch failed Guru Meditation: XID: 3 Varnish cache server","title":"Test Varnish"},{"location":"Extensions/Varnish/#edit-varnish-parameters","text":"Now we need to configure Varnish to listen to HTTP requests on port 80 and relay those requests to the Apache HTTP server on port 8080 (see block diagram). Stop Varnish. systemctl stop varnish Create a back-up of varnish.params just in case you make a mistake. cp /etc/varnish/varnish.params /etc/varnish/varnish.params.bak Edit the varnish.params config. vim /etc/varnish/varnish.params Set the VCL location, IP address, port, and cache location and size. malloc sets the cache location to RAM, and 512M sets the cache size to 512MB. VARNISH_LISTEN_ADDRESS = 192 . 168 . 1 . 10 VARNISH_LISTEN_PORT = 80 VARNISH_VCL_CONF =/ etc / varnish / librenms . vcl VARNISH_STORAGE = \"malloc,512M\" Example varnish.params: # Set this to 1 to make systemd reload try to switch vcl without restart. RELOAD_VCL = 1 # Main configuration file. You probably want to change it. VARNISH_VCL_CONF =/ etc / varnish / librenms . vcl # Default address and port to bind to. Blank address means all IPv4 # and IPv6 interfaces, otherwise specify a host name, an IPv4 dotted # quad, or an IPv6 address in brackets. VARNISH_LISTEN_ADDRESS = 192 . 168 . 1 . 10 VARNISH_LISTEN_PORT = 80 # Admin interface listen address and port VARNISH_ADMIN_LISTEN_ADDRESS = 127 . 0 . 0 . 1 VARNISH_ADMIN_LISTEN_PORT = 6082 # Shared secret file for admin interface VARNISH_SECRET_FILE =/ etc / varnish / secret # Backend storage specification, see Storage Types in the varnishd(5) # man page for details. VARNISH_STORAGE = \"malloc,512M\" # Default TTL used when the backend does not specify one VARNISH_TTL = 120 # User and group for the varnishd worker processes VARNISH_USER = varnish VARNISH_GROUP = varnish # Other options, see the man page varnishd(1) DAEMON_OPTS = \"-p thread_pool_min=5 -p thread_pool_max=500 -p thread_pool_timeout=300\"","title":"Edit Varnish Parameters"},{"location":"Extensions/Varnish/#configure-apache-for-varnish","text":"Edit librenms.conf and modify the Apache Virtual Host listening port. Modify: <VirtualHost *:80> to: <VirtualHost *:8080> vim /etc/httpd/conf.d/librenms.conf Varnish can not share a port with Apache. Change the Apache listening port to 8080. Modify: Listen 80 to: Listen 8080 vim /etc/httpd/conf/httpd.conf Create the librenms.vcl cd /etc/varnish touch librenms.vcl Set ownership and permissions for Varnish files. chown varnish:varnish default.vcl varnish.params secret chmod 644 default.vcl varnish.params secret Edit the librenms.vcl. vim librenms.vcl Paste example VCL config, read config comments for more information. # # This is an example VCL file for Varnish. # # It does not do anything by default, delegating control to the # builtin VCL. The builtin VCL is called when there is no explicit # return statement. # # See the VCL chapters in the Users Guide at https://www.varnish-cache.org/docs/ # and http://varnish-cache.org/trac/wiki/VCLExamples for more examples. # Marker to tell the VCL compiler that this VCL has been adapted to the # new 4.0 format. vcl 4.0 ; # Default backend definition. Set this to point to your Apache server. backend librenms { .host = \"127.0.0.1\" ; .port = \"8080\" ; } # In this example our objective is to cache static content with Varnish and temporarily # cache dynamic content in the client web browser. sub vcl_recv { # HTTP requests from client web browser. # Here we remove any cookie HTTP requests for the 'librenms.domain.net' host # containing the matching file extensions. We don't have to match by host if you # only have LibreNMS running on Apache. # If the cookies are not removed from the HTTP request then Varnish will not cache # the files. 'else' function is set to 'pass', or don't cache anything that doesn't # match. if ( req.http.host ~ \"^librenms.domain.net\" ) { set req.backend_hint = librenms ; if ( req.url ~ \"\\.(png|gif|jpg|jpeg|ico|pdf|js|css|svg|eot|otf|woff|woff2|ttf)$\" ) { unset req.http.Cookie ; } else { return ( pass ); } } } sub vcl_backend_response { # 'sub vcl_backend_response' is the same function as 'sub vcl_fetch' in Varnish 3, however, # the syntax is slightly different # This function happens after we read the response headers from the backend (Apache). # First function 'if (bereq.url ~ \"\\' removes cookies from the Apache HTTP responses # that match the file extensions that are between the quotes, and cache the files for 24 hours. # This assumes you update LibreNMS once a day, otherwise restart Varnish to clear cache. # Second function 'if (bereq.url ~ \"^/' removes the Pragma no-cache statements and sets the age # of how long the client browser will cache the matching urls. # LibreNMS graphs are updated every 300 seconds, 'max-age=300' is set to match this behavior. # We could cache these URLs in Varnish but it would add to the complexity of the config. if ( bereq.http.host ~ \"^librenms.domain.net\" ) { if ( bereq.url ~ \"\\.(png|gif|jpg|jpeg|ico|pdf|js|css|svg|eot|otf|woff|woff2|ttf)$\" ) { unset beresp.http.Set-cookie ; set beresp.ttl = 24h ; } if ( bereq.url ~ \"^/graph.php\" || \"^/device/\" || \"^/iftype/\" || \"^/customers/\" || \"^/health/\" || \"^/apps/\" || \"^/(plugin)$\" || \"^/(alert)$\" || \"^/eventlog/\" || \"^/graphs/\" || \"^/ports/\" ) { unset beresp.http.Pragma ; set beresp.http.Cache-Control = \"max-age=300\" ; } } } sub vcl_deliver { # Happens when we have all the pieces we need, and are about to send the # response to the client. # You can do accounting or modifying the final object here. return ( deliver ); } Reload rules to remove the temporary port rule we added earlier. firewall-cmd --reload Varnish caching does not take effect immediately. You will need to browse the LibreNMS website to build up the cache. Use the command varnishstat to monitor Varnish caching. Over time you should see 'MAIN.cache_hit' and 'MAIN.client_req' increase. With the above VCL the hit to request ratio is approximately 84%. Session based VCL (coming soon) Testing and debugging VCL (coming soon)","title":"Configure Apache for Varnish"},{"location":"Extensions/Weathermap/","text":"Network-WeatherMap with LibreNMS Integrating LibreNMS with Network-Weathermap, allows you to build network maps to help visulaize network traffic flow rates. Link to Network-Wearthermap Offical Website Prerequisites Network-WeatherMap requires php pear to work. Installing Network-WeatherMap Step 1 Extract to your LibreNMS plugins directory /opt/librenms/html/plugins so you should see something like /opt/librenms/html/plugins/Weathermap/ The best way to do this is via git. Go to your install directory and then /opt/librenms/html/plugins Enter: git clone https://github.com/librenms-plugins/Weathermap.git Step 2 Inside the html/plugins directory, change the ownership of the Weathermap directory by typing chown -R librenms:librenms Weathermap/ Make the configs directory writeable chmod 775 /opt/librenms/html/plugins/Weathermap/configs Note if you are using SELinux you need to input the following command chcon -R -t httpd_cache_t Weathermap/ Step 3 Enable the cron process by editing your current LibreNMS cron file (typically /etc/cron.d/librenms) and add the following: */5 * * * * librenms /opt/librenms/html/plugins/Weathermap/map-poller.php >> /dev/null 2>&1 Step 4 Enable the plugin from LibreNMS Web UI in OverView ->Plugins -> Plugin Admin menu. Step 5 Now you should see Weathermap Overview -> Plugins -> Weathermap Create your maps, please note when you create a MAP, please click Map Style, ensure Overlib is selected for HTML Style and click submit. Also, ensure you set an output image filename and output HTML filename in Map Properties. I'd recommend you use the output folder as this is excluded from git updates (i.e enter output/mymap.png and output/mymap.html). Optional: If your install is in another directory than standard, set $basehref within map-poller.php . WeatherMapper Automatically generate weathermaps from a LibreNMS database using WeatherMapper Link Adding your Network Weathermaps to the Dashboards Once you have created your Network Weather Map you can add it to a dashboard page by doing the following. Step 1 When you create the Weathermap make sure to export as HTML and PNG you will need this for the out to the dashboard. In the Weathermap Plugin page, you will see the output maps. Right click on one of the maps and click on copy image address . Example URL: http://yourlibrenms.org/plugins/Weathermap/output/yourmap.html Step 2 Then go back to your Dashboard, create a new dashboard and give it a name. select the widget as External Images . Give the Widget a Title. The Image URL will need to be the address you copied but at the end remove the .html and replace it with .png Example Image URL http://yourlibrenms.org/plugins/Weathermap/output/yourmap.png The Target URL will be the URL you copied but with the .html at the end of the URL. Example Target URL http://yourlibrenms.org/plugins/Weathermap/output/yourmap.html Then Click on Set You should now be able to see the Weathermap you have created in your list of dashboards. You could also add this to existing dashboards.","title":"Weathermap"},{"location":"Extensions/Weathermap/#network-weathermap-with-librenms","text":"Integrating LibreNMS with Network-Weathermap, allows you to build network maps to help visulaize network traffic flow rates. Link to Network-Wearthermap Offical Website","title":"Network-WeatherMap with LibreNMS"},{"location":"Extensions/Weathermap/#prerequisites","text":"Network-WeatherMap requires php pear to work.","title":"Prerequisites"},{"location":"Extensions/Weathermap/#installing-network-weathermap","text":"","title":"Installing Network-WeatherMap"},{"location":"Extensions/Weathermap/#step-1","text":"Extract to your LibreNMS plugins directory /opt/librenms/html/plugins so you should see something like /opt/librenms/html/plugins/Weathermap/ The best way to do this is via git. Go to your install directory and then /opt/librenms/html/plugins Enter: git clone https://github.com/librenms-plugins/Weathermap.git","title":"Step 1"},{"location":"Extensions/Weathermap/#step-2","text":"Inside the html/plugins directory, change the ownership of the Weathermap directory by typing chown -R librenms:librenms Weathermap/ Make the configs directory writeable chmod 775 /opt/librenms/html/plugins/Weathermap/configs Note if you are using SELinux you need to input the following command chcon -R -t httpd_cache_t Weathermap/","title":"Step 2"},{"location":"Extensions/Weathermap/#step-3","text":"Enable the cron process by editing your current LibreNMS cron file (typically /etc/cron.d/librenms) and add the following: */5 * * * * librenms /opt/librenms/html/plugins/Weathermap/map-poller.php >> /dev/null 2>&1","title":"Step 3"},{"location":"Extensions/Weathermap/#step-4","text":"Enable the plugin from LibreNMS Web UI in OverView ->Plugins -> Plugin Admin menu.","title":"Step 4"},{"location":"Extensions/Weathermap/#step-5","text":"Now you should see Weathermap Overview -> Plugins -> Weathermap Create your maps, please note when you create a MAP, please click Map Style, ensure Overlib is selected for HTML Style and click submit. Also, ensure you set an output image filename and output HTML filename in Map Properties. I'd recommend you use the output folder as this is excluded from git updates (i.e enter output/mymap.png and output/mymap.html). Optional: If your install is in another directory than standard, set $basehref within map-poller.php .","title":"Step 5"},{"location":"Extensions/Weathermap/#weathermapper","text":"Automatically generate weathermaps from a LibreNMS database using WeatherMapper Link","title":"WeatherMapper"},{"location":"Extensions/Weathermap/#adding-your-network-weathermaps-to-the-dashboards","text":"Once you have created your Network Weather Map you can add it to a dashboard page by doing the following.","title":"Adding your Network Weathermaps to the Dashboards"},{"location":"Extensions/Weathermap/#step-1_1","text":"When you create the Weathermap make sure to export as HTML and PNG you will need this for the out to the dashboard. In the Weathermap Plugin page, you will see the output maps. Right click on one of the maps and click on copy image address . Example URL: http://yourlibrenms.org/plugins/Weathermap/output/yourmap.html","title":"Step 1"},{"location":"Extensions/Weathermap/#step-2_1","text":"Then go back to your Dashboard, create a new dashboard and give it a name. select the widget as External Images . Give the Widget a Title. The Image URL will need to be the address you copied but at the end remove the .html and replace it with .png Example Image URL http://yourlibrenms.org/plugins/Weathermap/output/yourmap.png The Target URL will be the URL you copied but with the .html at the end of the URL. Example Target URL http://yourlibrenms.org/plugins/Weathermap/output/yourmap.html Then Click on Set You should now be able to see the Weathermap you have created in your list of dashboards. You could also add this to existing dashboards.","title":"Step 2"},{"location":"Extensions/World-Map/","text":"World Map Configuration LibreNMS comes with a configurable Geo Map based on World Map Widget to visualize where your equipment is located geographically. World Map Widget World Map Widget, requires you to have properly formatted addresses in sysLocation or sysLocation override. As part of the standard poller these addresses will be Geocoded by Google and stored in the database. Location resolution happens as follows If device['location'] contains [lat, lng] (note the square brackets), that is used If there is a location overide for the device in the WebUI and it contains [lat, lng] (note the square brackets), that is used. Attempt to resolve lat, lng using $config['geoloc']['engine'] Properly formatted addresses in sysLocation or sysLocation override, under device settings. Example: [40.424521, -86.912755] or 1100 Congress Ave, Austin, TX 78701 We have two current mapping engines available: Leaflet (default) Jquery-Mapael World Map Widget Settings Initial Latitude / Longitude : The map will be centered on those coordinates. Initial Zoom : Initial zoom of the map. More information about zoom levels . Grouping radius : Markers are grouped by area. This value define the maximum size of grouping areas. Show devices : Show devices based on there status. Example Settings: Offline OpenStreet Map If you can't access OpenStreet map directly you can run a local tile server . To specify a different url you can set: $config [ 'leaflet' ][ 'tile_url' ] = 'localhost.com' ; Additional Leaflet config $config [ 'map' ][ 'engine' ] = \"leaflet\" ; $config [ 'leaflet' ][ 'default_lat' ] = \"51.981074\" ; $config [ 'leaflet' ][ 'default_lng' ] = \"5.350342\" ; $config [ 'leaflet' ][ 'default_zoom' ] = 8 ; // Device grouping radius in KM default 80KM $config [ 'leaflet' ][ 'group_radius' ] = 1 ; Geocode engine config $config [ 'geoloc' ][ 'engine' ] = \"google\" ; // Valid options are google, mapquest or bing $config [ 'geoloc' ][ 'api_key' ] = \"abcdefghijklmnopqrstuvwxyz\" ; Google: Pros: fast, accurate Cons: requires a credit card even for a free account MapQuest: Pros: free, no credit card required Cons: inaccurate: most addresses are returned as locations at the center of the US Bing: Pros: free, no credit card required, accurate Cons: Microsoft(debatable) Jquery-Mapael config Further custom options are available to load different maps of the world, set default coordinates of where the map will zoom and the zoom level by default. An example of this is: $config [ 'map' ][ 'engine' ] = \"jquery-mapael\" ; $config [ 'mapael' ][ 'default_map' ] = 'mapael-maps/united_kingdom/united_kingdom.js' ; $config [ 'mapael' ][ 'map_width' ] = 400 ; $config [ 'mapael' ][ 'default_lat' ] = '50.898482' ; $config [ 'mapael' ][ 'default_lng' ] = '-3.401402' ; $config [ 'mapael' ][ 'default_zoom' ] = 20 ; A list of maps can be found in html/js/maps/ or html/js/mapael-maps/ .","title":"World Map"},{"location":"Extensions/World-Map/#world-map-configuration","text":"LibreNMS comes with a configurable Geo Map based on World Map Widget to visualize where your equipment is located geographically.","title":"World Map Configuration"},{"location":"Extensions/World-Map/#world-map-widget","text":"World Map Widget, requires you to have properly formatted addresses in sysLocation or sysLocation override. As part of the standard poller these addresses will be Geocoded by Google and stored in the database. Location resolution happens as follows If device['location'] contains [lat, lng] (note the square brackets), that is used If there is a location overide for the device in the WebUI and it contains [lat, lng] (note the square brackets), that is used. Attempt to resolve lat, lng using $config['geoloc']['engine'] Properly formatted addresses in sysLocation or sysLocation override, under device settings. Example: [40.424521, -86.912755] or 1100 Congress Ave, Austin, TX 78701 We have two current mapping engines available: Leaflet (default) Jquery-Mapael","title":"World Map Widget"},{"location":"Extensions/World-Map/#world-map-widget-settings","text":"Initial Latitude / Longitude : The map will be centered on those coordinates. Initial Zoom : Initial zoom of the map. More information about zoom levels . Grouping radius : Markers are grouped by area. This value define the maximum size of grouping areas. Show devices : Show devices based on there status. Example Settings:","title":"World Map Widget Settings"},{"location":"Extensions/World-Map/#offline-openstreet-map","text":"If you can't access OpenStreet map directly you can run a local tile server . To specify a different url you can set: $config [ 'leaflet' ][ 'tile_url' ] = 'localhost.com' ;","title":"Offline OpenStreet Map"},{"location":"Extensions/World-Map/#additional-leaflet-config","text":"$config [ 'map' ][ 'engine' ] = \"leaflet\" ; $config [ 'leaflet' ][ 'default_lat' ] = \"51.981074\" ; $config [ 'leaflet' ][ 'default_lng' ] = \"5.350342\" ; $config [ 'leaflet' ][ 'default_zoom' ] = 8 ; // Device grouping radius in KM default 80KM $config [ 'leaflet' ][ 'group_radius' ] = 1 ;","title":"Additional Leaflet config"},{"location":"Extensions/World-Map/#geocode-engine-config","text":"$config [ 'geoloc' ][ 'engine' ] = \"google\" ; // Valid options are google, mapquest or bing $config [ 'geoloc' ][ 'api_key' ] = \"abcdefghijklmnopqrstuvwxyz\" ; Google: Pros: fast, accurate Cons: requires a credit card even for a free account MapQuest: Pros: free, no credit card required Cons: inaccurate: most addresses are returned as locations at the center of the US Bing: Pros: free, no credit card required, accurate Cons: Microsoft(debatable)","title":"Geocode engine config"},{"location":"Extensions/World-Map/#jquery-mapael-config","text":"Further custom options are available to load different maps of the world, set default coordinates of where the map will zoom and the zoom level by default. An example of this is: $config [ 'map' ][ 'engine' ] = \"jquery-mapael\" ; $config [ 'mapael' ][ 'default_map' ] = 'mapael-maps/united_kingdom/united_kingdom.js' ; $config [ 'mapael' ][ 'map_width' ] = 400 ; $config [ 'mapael' ][ 'default_lat' ] = '50.898482' ; $config [ 'mapael' ][ 'default_lng' ] = '-3.401402' ; $config [ 'mapael' ][ 'default_zoom' ] = 20 ; A list of maps can be found in html/js/maps/ or html/js/mapael-maps/ .","title":"Jquery-Mapael config"},{"location":"Extensions/metrics/Graphite/","text":"Enabling support for Graphite This module sends all metrics to a remote graphite service. You need something like Grafana for graphing. What you don't get Pretty graphs, this is why at present you need Grafana. You need to build your own graphs within Grafana. RRD will continue to function as normal so LibreNMS itself should continue to function as normal. Configuration $config [ 'graphite' ][ 'enable' ] = true ; $config [ 'graphite' ][ 'host' ] = 'your.graphite.server' ; $config [ 'graphite' ][ 'port' ] = 2003 ; // this defaults to 2003 and is usually not needed $config [ 'graphite' ][ 'prefix' ] = 'your.metric.prefix' ; Your metric path can be prefixed if required, otherwise the metric path for Graphite will be in the form of hostname.measurement.fieldname , interfaces will be stored as hostname.ports.ifName.fieldname . The same data then stored within rrd will be sent to Graphite and recorded. You can then create graphs within Grafana to display the information you need. Graphite Configuration As LibreNMS updates its metrics every 5 minutes, the following addition to your storage-schemas.conf is suggested. [network] pattern = your\\.metric\\.prefix\\..* retentions = 5m:30d,15m:90d,1h:1y","title":"Graphite"},{"location":"Extensions/metrics/Graphite/#enabling-support-for-graphite","text":"This module sends all metrics to a remote graphite service. You need something like Grafana for graphing.","title":"Enabling support for Graphite"},{"location":"Extensions/metrics/Graphite/#what-you-dont-get","text":"Pretty graphs, this is why at present you need Grafana. You need to build your own graphs within Grafana. RRD will continue to function as normal so LibreNMS itself should continue to function as normal.","title":"What you don't get"},{"location":"Extensions/metrics/Graphite/#configuration","text":"$config [ 'graphite' ][ 'enable' ] = true ; $config [ 'graphite' ][ 'host' ] = 'your.graphite.server' ; $config [ 'graphite' ][ 'port' ] = 2003 ; // this defaults to 2003 and is usually not needed $config [ 'graphite' ][ 'prefix' ] = 'your.metric.prefix' ; Your metric path can be prefixed if required, otherwise the metric path for Graphite will be in the form of hostname.measurement.fieldname , interfaces will be stored as hostname.ports.ifName.fieldname . The same data then stored within rrd will be sent to Graphite and recorded. You can then create graphs within Grafana to display the information you need.","title":"Configuration"},{"location":"Extensions/metrics/Graphite/#graphite-configuration","text":"As LibreNMS updates its metrics every 5 minutes, the following addition to your storage-schemas.conf is suggested. [network] pattern = your\\.metric\\.prefix\\..* retentions = 5m:30d,15m:90d,1h:1y","title":"Graphite Configuration"},{"location":"Extensions/metrics/InfluxDB/","text":"Enabling support for InfluxDB Before we get started it is important that you know and understand that InfluxDB support is currently alpha at best. All it provides is the sending of data to a InfluxDB install. Due to the current changes that are constantly being made to InfluxDB itself then we cannot guarantee that your data will be ok so enabling this support is at your own risk! Requirements InfluxDB >= 0.94 Grafana PHP 5.5 for InfluxDB-PHP The setup of the above is completely out of scope here and we aren't really able to provide any help with this side of things. What you don't get Pretty graphs, this is why at present you need Grafana. You need to build your own graphs within Grafana. Support for InfluxDB or Grafana, we would highly recommend that you have some level of experience with these. RRD will continue to function as normal so LibreNMS itself should continue to function as normal. Configuration $config [ 'influxdb' ][ 'enable' ] = true ; $config [ 'influxdb' ][ 'transport' ] = 'http' ; # Default, other options: https, udp $config [ 'influxdb' ][ 'host' ] = '127.0.0.1' ; $config [ 'influxdb' ][ 'port' ] = '8086' ; $config [ 'influxdb' ][ 'db' ] = 'librenms' ; $config [ 'influxdb' ][ 'username' ] = 'admin' ; $config [ 'influxdb' ][ 'password' ] = 'admin' ; $config [ 'influxdb' ][ 'timeout' ] = 0 ; # Optional $config [ 'influxdb' ][ 'verifySSL' ] = false ; # Optional No credentials are needed if you don't use InfluxDB authentication. The same data then stored within rrd will be sent to InfluxDB and recorded. You can then create graphs within Grafana to display the information you need.","title":"InfluxDB"},{"location":"Extensions/metrics/InfluxDB/#enabling-support-for-influxdb","text":"Before we get started it is important that you know and understand that InfluxDB support is currently alpha at best. All it provides is the sending of data to a InfluxDB install. Due to the current changes that are constantly being made to InfluxDB itself then we cannot guarantee that your data will be ok so enabling this support is at your own risk!","title":"Enabling support for InfluxDB"},{"location":"Extensions/metrics/InfluxDB/#requirements","text":"InfluxDB >= 0.94 Grafana PHP 5.5 for InfluxDB-PHP The setup of the above is completely out of scope here and we aren't really able to provide any help with this side of things.","title":"Requirements"},{"location":"Extensions/metrics/InfluxDB/#what-you-dont-get","text":"Pretty graphs, this is why at present you need Grafana. You need to build your own graphs within Grafana. Support for InfluxDB or Grafana, we would highly recommend that you have some level of experience with these. RRD will continue to function as normal so LibreNMS itself should continue to function as normal.","title":"What you don't get"},{"location":"Extensions/metrics/InfluxDB/#configuration","text":"$config [ 'influxdb' ][ 'enable' ] = true ; $config [ 'influxdb' ][ 'transport' ] = 'http' ; # Default, other options: https, udp $config [ 'influxdb' ][ 'host' ] = '127.0.0.1' ; $config [ 'influxdb' ][ 'port' ] = '8086' ; $config [ 'influxdb' ][ 'db' ] = 'librenms' ; $config [ 'influxdb' ][ 'username' ] = 'admin' ; $config [ 'influxdb' ][ 'password' ] = 'admin' ; $config [ 'influxdb' ][ 'timeout' ] = 0 ; # Optional $config [ 'influxdb' ][ 'verifySSL' ] = false ; # Optional No credentials are needed if you don't use InfluxDB authentication. The same data then stored within rrd will be sent to InfluxDB and recorded. You can then create graphs within Grafana to display the information you need.","title":"Configuration"},{"location":"Extensions/metrics/OpenTSDB/","text":"Enabling support for OpenTSDB This module sends all metrics to OpenTSDB server. You need something like Grafana for graphing. Requirements OpenTSDB Grafana What you don't get Pretty graphs, this is why at present you need Grafana. You need to build your own graphs within Grafana. RRD will continue to function normally so LibreNMS itself should continue to function normally. You can add the following to config.php . Configuration // OpenTSDB default configuration $config [ 'opentsdb' ][ 'enable' ] = true ; $config [ 'opentsdb' ][ 'host' ] = '127.0.0.1' ; // your OpenTSDB server $config [ 'opentsdb' ][ 'port' ] = 4242 ; The same data than the one stored within rrd will be sent to OpenTSDB and recorded. You can then create graphs within Grafana to display the information you need.","title":"OpenTSDB"},{"location":"Extensions/metrics/OpenTSDB/#enabling-support-for-opentsdb","text":"This module sends all metrics to OpenTSDB server. You need something like Grafana for graphing.","title":"Enabling support for OpenTSDB"},{"location":"Extensions/metrics/OpenTSDB/#requirements","text":"OpenTSDB Grafana","title":"Requirements"},{"location":"Extensions/metrics/OpenTSDB/#what-you-dont-get","text":"Pretty graphs, this is why at present you need Grafana. You need to build your own graphs within Grafana. RRD will continue to function normally so LibreNMS itself should continue to function normally. You can add the following to config.php .","title":"What you don't get"},{"location":"Extensions/metrics/OpenTSDB/#configuration","text":"// OpenTSDB default configuration $config [ 'opentsdb' ][ 'enable' ] = true ; $config [ 'opentsdb' ][ 'host' ] = '127.0.0.1' ; // your OpenTSDB server $config [ 'opentsdb' ][ 'port' ] = 4242 ; The same data than the one stored within rrd will be sent to OpenTSDB and recorded. You can then create graphs within Grafana to display the information you need.","title":"Configuration"},{"location":"Extensions/metrics/Prometheus/","text":"Enabling support for Prometheus Please be aware Prometheus support is alpha at best, It hasn't been extensively tested and is still in development All it provides is the sending of data to a a Prometheus PushGateway. Please be careful when enabling this support you use it at your own risk! Requirements (Older versions may work but haven't been tested Prometheus >= 2.0 PushGateway >= 0.4.0 Grafana PHP-CURL The setup of the above is completely out of scope here and we aren't really able to provide any help with this side of things. What you don't get Pretty graphs, this is why at present you need Grafana. You need to build your own graphs within Grafana. Support for Prometheus or Grafana, we would highly recommend that you have some level of experience with these. RRD will continue to function as normal so LibreNMS itself should continue to function as normal. Configuration $config [ 'prometheus' ][ 'enable' ] = true ; $config [ 'prometheus' ][ 'url' ] = 'http://127.0.0.1:9091' ; $config [ 'prometheus' ][ 'job' ] = 'librenms' ; # Optional Sample Prometheus Scrape Config (for scraping the Push Gateway) - job_name: pushgateway scrape_interval: 300s honor_labels: true static_configs: - targets: ['127.0.0.1:9091'] The same data then stored within rrd will be sent to Prometheus and recorded. You can then create graphs within Grafana to display the information you need.","title":"Prometheus"},{"location":"Extensions/metrics/Prometheus/#enabling-support-for-prometheus","text":"Please be aware Prometheus support is alpha at best, It hasn't been extensively tested and is still in development All it provides is the sending of data to a a Prometheus PushGateway. Please be careful when enabling this support you use it at your own risk!","title":"Enabling support for Prometheus"},{"location":"Extensions/metrics/Prometheus/#requirements-older-versions-may-work-but-havent-been-tested","text":"Prometheus >= 2.0 PushGateway >= 0.4.0 Grafana PHP-CURL The setup of the above is completely out of scope here and we aren't really able to provide any help with this side of things.","title":"Requirements (Older versions may work but haven't been tested"},{"location":"Extensions/metrics/Prometheus/#what-you-dont-get","text":"Pretty graphs, this is why at present you need Grafana. You need to build your own graphs within Grafana. Support for Prometheus or Grafana, we would highly recommend that you have some level of experience with these. RRD will continue to function as normal so LibreNMS itself should continue to function as normal.","title":"What you don't get"},{"location":"Extensions/metrics/Prometheus/#configuration","text":"$config [ 'prometheus' ][ 'enable' ] = true ; $config [ 'prometheus' ][ 'url' ] = 'http://127.0.0.1:9091' ; $config [ 'prometheus' ][ 'job' ] = 'librenms' ; # Optional","title":"Configuration"},{"location":"Extensions/metrics/Prometheus/#sample-prometheus-scrape-config-for-scraping-the-push-gateway","text":"- job_name: pushgateway scrape_interval: 300s honor_labels: true static_configs: - targets: ['127.0.0.1:9091'] The same data then stored within rrd will be sent to Prometheus and recorded. You can then create graphs within Grafana to display the information you need.","title":"Sample Prometheus Scrape Config (for scraping the Push Gateway)"},{"location":"General/Acknowledgement/","text":"LibreNMS wouldn't be what it is today without the use of some other amazing projects. We list below what we make use of including the license compliance. 3rd Party GPLv3 Compliant Bootstrap : MIT Font Awesome : MIT License Jquery Bootgrid : MIT License Pace : Open License Twitter typeahead : Open License Vis : MIT / Apache 2.0 TCPDF : LGPLv3 Bootstrap 3 Datepicker : MIT Bootstrap Dropdown Hover Plugin : MIT Bootstrap Switch : Apache 2.0 Handlebars : Open License Cycle2 : MIT/GPL Jquery : MIT Jquery UI : MIT Jquery QRCode : MIT Mktree : Open License Moment : MIT Tag Manager : MIT TW Sack : GPLv3 Gridster : MIT Pure PHP radius class : GPLv3 GeSHi - Generic Syntax Highlighter : GPLv2+ MalaysiaMap.svg - By Exiang CC BY 3.0 , via Wikimedia Commons Code for UBNT Devices Mark Gibbons mgibbons@oemcomp.com Initial code base submitted via PR721 Jquery LazyLoad : MIT License influxdb-php : MIT License HTML Purifier : LGPL v2.1 Symfony Yaml : MIT PHPMailer : LGPL v2.1 pbin : GPLv2 (or later - see script header) CorsSlim : MIT Confluence HTTP Authenticator Graylog SSO Authentication Plugin Select2 : MIT License JustGage : MIT jQuery.extendext : MIT doT : MIT jQuery-queryBuilder : MIT sql-parser : MIT (Currently a custom build is used) 3rd Party GPLv3 Non-compliant JpGraph (html/includes/jpgraph): QPL 1.0 license MIBS (mibs): unknown/various html/graph-realtime.php: BSD (original?) html/includes/collectd/: GPLv2 only overLIB (html/js/overlib_mini.js): modified Artistic 1.0?","title":"Acknowledgements"},{"location":"General/Acknowledgement/#3rd-party-gplv3-compliant","text":"Bootstrap : MIT Font Awesome : MIT License Jquery Bootgrid : MIT License Pace : Open License Twitter typeahead : Open License Vis : MIT / Apache 2.0 TCPDF : LGPLv3 Bootstrap 3 Datepicker : MIT Bootstrap Dropdown Hover Plugin : MIT Bootstrap Switch : Apache 2.0 Handlebars : Open License Cycle2 : MIT/GPL Jquery : MIT Jquery UI : MIT Jquery QRCode : MIT Mktree : Open License Moment : MIT Tag Manager : MIT TW Sack : GPLv3 Gridster : MIT Pure PHP radius class : GPLv3 GeSHi - Generic Syntax Highlighter : GPLv2+ MalaysiaMap.svg - By Exiang CC BY 3.0 , via Wikimedia Commons Code for UBNT Devices Mark Gibbons mgibbons@oemcomp.com Initial code base submitted via PR721 Jquery LazyLoad : MIT License influxdb-php : MIT License HTML Purifier : LGPL v2.1 Symfony Yaml : MIT PHPMailer : LGPL v2.1 pbin : GPLv2 (or later - see script header) CorsSlim : MIT Confluence HTTP Authenticator Graylog SSO Authentication Plugin Select2 : MIT License JustGage : MIT jQuery.extendext : MIT doT : MIT jQuery-queryBuilder : MIT sql-parser : MIT (Currently a custom build is used)","title":"3rd Party GPLv3 Compliant"},{"location":"General/Acknowledgement/#3rd-party-gplv3-non-compliant","text":"JpGraph (html/includes/jpgraph): QPL 1.0 license MIBS (mibs): unknown/various html/graph-realtime.php: BSD (original?) html/includes/collectd/: GPLv2 only overLIB (html/js/overlib_mini.js): modified Artistic 1.0?","title":"3rd Party GPLv3 Non-compliant"},{"location":"General/CODE_OF_CONDUCT/","text":"Our Pledge In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation. Our Standards Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting Our Responsibilities Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful. Scope This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers. Enforcement Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at team@librenms.org. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership. Attribution This Code of Conduct is adapted from the Contributor Covenant , version 1.4, available at http://contributor-covenant.org/version/1/4","title":"Code of Conduct"},{"location":"General/CODE_OF_CONDUCT/#our-pledge","text":"In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.","title":"Our Pledge"},{"location":"General/CODE_OF_CONDUCT/#our-standards","text":"Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting","title":"Our Standards"},{"location":"General/CODE_OF_CONDUCT/#our-responsibilities","text":"Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.","title":"Our Responsibilities"},{"location":"General/CODE_OF_CONDUCT/#scope","text":"This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.","title":"Scope"},{"location":"General/CODE_OF_CONDUCT/#enforcement","text":"Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at team@librenms.org. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.","title":"Enforcement"},{"location":"General/CODE_OF_CONDUCT/#attribution","text":"This Code of Conduct is adapted from the Contributor Covenant , version 1.4, available at http://contributor-covenant.org/version/1/4","title":"Attribution"},{"location":"General/Callback-Stats-and-Privacy/","text":"Stats data and your privacy This document has been put together to explain what LibreNMS does when it calls back home to report some anonymous statistics. Let's start off by saying, all of the code that processes the data and submits it is included in the standard LibreNMS branch you've installed, the code that accepts this data and in turn generates some pretty graphs is all open source and available on Git Hub. Please feel free to review the code, comment on it and suggest changes / improvements. Also, don't forget - by default installations DO NOT call back home, you need to opt into this. Above all we respect users privacy which is why this system has been designed like it has. Now onto the bit you're interested in, what is submitted and what we do with that data. What is submitted All data is anonymous. Generic statistics are taken from the database, these include things like device count, device type, device OS, port types, port speeds, port count and BGP peer count. Take a look at the code for full details. Pairs of sysDescr and sysObjectID from devices with a small amount of sanitation to prevent things like hostnames from being submitted. We record version numbers of php, mysql, net-snmp and rrdtool A random UUID is generated on your own install. That's it! Your IP isn't logged, even via our web service accepting the data. We don't need to know who you are so we don't ask. What we do with the data We store it, not for long - 3 months at the moment although this could change. We use it to generate pretty graphs for people to see. We use it to help prioritise issues and features that need to be worked on. We use sysDescr and sysObjectID to create unit tests and improve OS discovery Questions? Q. How often is data submitted? A. We submit the data once a day according to running daily.sh via cron. If you disable this then opting in will not have any affect. Q. Where can I see the data I submitted? A. You can't see the data raw, but we collate all of the data together and provide a dynamic site so you can see the results of all contributed stats here Q. I want my data removed. A. That's easy, simply press 'Clear remote stats' in the About LibreNMS page of your control panel, the next time the call back script is run it will remove all the data we have. Q. I clicked the 'Clear remote stats' button by accident. A. No problem, before daily.sh runs again - just opt back in, all of your existing data will stay. Hopefully this answers the questions you might have on why and what we are doing here, if not, please pop into our discord server or community forum and ask any questions you like. How do I enable stats submission? If you're happy with all of this - please consider switching the call back system on, you can do this within the About LibreNMS page within your control panel. In the Statistics section you will find a toggle switch to enable / disable the feature. If you've previously had it switched on and want to opt out and remove your data, click the 'Clear remote stats' button and on the next submission all the data you've sent us will be removed!","title":"Submitting stats"},{"location":"General/Callback-Stats-and-Privacy/#stats-data-and-your-privacy","text":"This document has been put together to explain what LibreNMS does when it calls back home to report some anonymous statistics. Let's start off by saying, all of the code that processes the data and submits it is included in the standard LibreNMS branch you've installed, the code that accepts this data and in turn generates some pretty graphs is all open source and available on Git Hub. Please feel free to review the code, comment on it and suggest changes / improvements. Also, don't forget - by default installations DO NOT call back home, you need to opt into this. Above all we respect users privacy which is why this system has been designed like it has. Now onto the bit you're interested in, what is submitted and what we do with that data.","title":"Stats data and your privacy"},{"location":"General/Callback-Stats-and-Privacy/#what-is-submitted","text":"All data is anonymous. Generic statistics are taken from the database, these include things like device count, device type, device OS, port types, port speeds, port count and BGP peer count. Take a look at the code for full details. Pairs of sysDescr and sysObjectID from devices with a small amount of sanitation to prevent things like hostnames from being submitted. We record version numbers of php, mysql, net-snmp and rrdtool A random UUID is generated on your own install. That's it! Your IP isn't logged, even via our web service accepting the data. We don't need to know who you are so we don't ask.","title":"What is submitted"},{"location":"General/Callback-Stats-and-Privacy/#what-we-do-with-the-data","text":"We store it, not for long - 3 months at the moment although this could change. We use it to generate pretty graphs for people to see. We use it to help prioritise issues and features that need to be worked on. We use sysDescr and sysObjectID to create unit tests and improve OS discovery","title":"What we do with the data"},{"location":"General/Callback-Stats-and-Privacy/#questions","text":"Q. How often is data submitted? A. We submit the data once a day according to running daily.sh via cron. If you disable this then opting in will not have any affect. Q. Where can I see the data I submitted? A. You can't see the data raw, but we collate all of the data together and provide a dynamic site so you can see the results of all contributed stats here Q. I want my data removed. A. That's easy, simply press 'Clear remote stats' in the About LibreNMS page of your control panel, the next time the call back script is run it will remove all the data we have. Q. I clicked the 'Clear remote stats' button by accident. A. No problem, before daily.sh runs again - just opt back in, all of your existing data will stay. Hopefully this answers the questions you might have on why and what we are doing here, if not, please pop into our discord server or community forum and ask any questions you like.","title":"Questions?"},{"location":"General/Callback-Stats-and-Privacy/#how-do-i-enable-stats-submission","text":"If you're happy with all of this - please consider switching the call back system on, you can do this within the About LibreNMS page within your control panel. In the Statistics section you will find a toggle switch to enable / disable the feature. If you've previously had it switched on and want to opt out and remove your data, click the 'Clear remote stats' button and on the next submission all the data you've sent us will be removed!","title":"How do I enable stats submission?"},{"location":"General/Changelog/","text":"1.69 (2020-11-01) A big thank you to the following 34 contributors this last month: Jellyfrog (23) murrant (23) PipoCanaja (7) SourceDoctor (4) dagbdagb (3) ottorei (2) hanserasmus (2) bakerds (2) willhseitz (2) robje (2) Olen (2) gerhardqux (1) diegocanton (1) Negatifff (1) TheGreatDoc (1) avinash403 (1) rkojedzinszky (1) lowinger42 (1) FingerlessGlov3s (1) tim427 (1) mjeffin (1) guipoletto (1) DerTFL (1) gil-obradors (1) clarkchentw (1) h-barnhart (1) CameronMunroe (1) ibigbug (1) corsoblaster (1) dorkmatt (1) MarlinMr (1) bofh80 (1) p4k8 (1) TheMysteriousX (1) Thanks to maintainers and others that helped with pull requests this month: Jellyfrog (36) murrant (34) SourceDoctor (17) PipoCanaja (4) Feature Optional availability calculation mode to allow planned maintenance ( #12218 ) - ottorei Yaml support to translate sysObjectID to get hardware ( #12187 ) - murrant IRC Add simple tag-parsing of colors and highlights in alerts ( #12138 ) - Olen Add refresh in widget settings ( #12127 ) - Negatifff Added new authalgo support for SNMPv3 ( #11966 ) - hanserasmus Security Remove legacy password algorithms and move to Laravel standard ( #12252 ) - Jellyfrog Validate dashboard id ( #12219 ) - murrant Fix SQL injection vulnerability in MAC Accounting graph ( #12204 ) - murrant Device Basic support for Sophos xg v18 ( #12251 ) - corsoblaster Convert VyOS to yaml ( #12231 ) - Jellyfrog Fix wrong Zyxel GS1900 Q-BRIDGE replies (fdb-table) ( #12230 ) - PipoCanaja Add supermicro SVG logo ( #12222 ) - gil-obradors Fix Oki LAN OS info ( #12213 ) - murrant Initial support for DC-UPS-48 from algcom ( #12209 ) - guipoletto Put all Eaton mibs in the same subdir, update mibs, update YAML-files ( #12197 ) - dagbdagb Add a bunch more Brocade Ironware devices ( #12191 ) - robje Add opengear hardware discovery ( #12189 ) - murrant All os detection now uses Yaml ( #12186 ) - murrant New device: Rohde & Schwarz Sx800 ( #12181 ) - TheGreatDoc Add support for Supermicro hardware/serial discovery ( #12176 ) - Jellyfrog Add FreshTomato OS definition which is fork of tomato ( #12173 ) - FingerlessGlov3s Ciena SAOS 8 device improvements ( #12172 ) - bakerds Make Eaton Gigabit Network Card (AKA M2) a separate OS ( #12156 ) - dagbdagb New sensors for siteboss OS + new sensor type: percentage (%) ( #11958 ) - willhseitz Webui Fixed display \"Power Status\" for libvirt vm's ( #12283 ) - DerTFL Allow pre-formatted logon message ( #12281 ) - murrant Fix - only get shortlabel from vlan if it has ports ( #12267 ) - SourceDoctor Webui - Corrected swapped ul/dl Max Rate ( #12255 ) - PipoCanaja Permissions query fixes ( #12220 ) - murrant Health Overlib Correction ( #12203 ) - SourceDoctor Additional fix for Cisco Crossbar overview missing ( #12185 ) - lowinger42 Convert Device>vlan view to Laravel ( #12163 ) - Jellyfrog Add Blade Submenu component ( #12159 ) - Jellyfrog Graphs Add two day period to graph widget ( #12210 ) - murrant Applications Bug - Typo in bind application polling ( #12276 ) - PipoCanaja Force lower case variable $unbound[] - Unbound polling ( #12178 ) - diegocanton Api Api functions - device_availability device_outages quick fix ( #12270 ) - bofh80 Alerting Show response on error ( #12228 ) - ibigbug Polling Update DSL stats even if port is down ( #12262 ) - PipoCanaja Fix dispatcher crash on restart ( #12257 ) - murrant Allow nullable ospf auth ( #12249 ) - willhseitz Bug Fix permissions bug in IRC ( #12266 ) - murrant Snmpwalk_cache_oid() handle multiline strings ( #12254 ) - murrant Fix sql query syntax error ( #12248 ) - Jellyfrog Fix device url ( #12234 ) - Jellyfrog Add space between manufacturer and hardware ( #12233 ) - Jellyfrog Move device exist check to prevent error ( #12232 ) - Jellyfrog Bug - Check group os file before inclusion ( #12227 ) - PipoCanaja Fix return value on deleting a Device Group ( #12225 ) - SourceDoctor Fix typo cause empty data for NFS Server ( #12223 ) - clarkchentw Update only latest Null Value Row in Outages Table ( #12206 ) - ottorei Ircbot fix ( #12192 ) - robje Fix Linux OS mib_dir usage ( #12190 ) - Jellyfrog Fix lnms update command ( #12182 ) - murrant Do not remove users with API tokens ( #12162 ) - gerhardqux IRC fix joining alert channel(s) ( #12160 ) - Olen Fix midnight poller data loss ( #11582 ) - TheMysteriousX Refactor Cleanup generate_sensor_link ( #12154 ) - SourceDoctor Support multiple daily process locking backends with distributed polling ( #11896 ) - murrant Documentation Update SNMP-Configuration-Examples.md ( #12265 ) - MarlinMr Clarify non-x86 hardware info sources for snmpd ( #12253 ) - dorkmatt Improve Services documentation ( #12226 ) - CameronMunroe Added instructions for rsyslog version 8 ( #12224 ) - h-barnhart Fixed the IRC-Bot Extensions link ( #12216 ) - tim427 Add table of content to installation guide ( #12202 ) - Jellyfrog Update Install-LibreNMS.md ( #12201 ) - mjeffin Add docs for Supermicro Superdoctor ( #12200 ) - Jellyfrog Updated linux snmpd.conf example ( #12195 ) - murrant Ignore changelog in docs search ( #12194 ) - Jellyfrog Add missing mkdocs extension ( #12193 ) - Jellyfrog Icecast doc correction ( #12183 ) - avinash403 Suggest Fast Ping before 1 Minute Polling ( #12179 ) - murrant Update Initial-Detection.md ( #12174 ) - bakerds Update Example-Hardware-Setup.md ( #12170 ) - dagbdagb Don't index changelogs ( #12166 ) - murrant Tests Capture OSPF test data ( #12215 ) - murrant Scheduled maintenance test ( #12171 ) - murrant Misc Apply fixes from StyleCI ( #12285 ) - Jellyfrog Change of default .pdf font ( #12278 ) - p4k8 Accommodate upcoming php 7.3 change ( #12180 ) - hanserasmus Add missing primary keys ( #12106 ) - rkojedzinszky Dependencies Update PHP dependencies ( #12169 ) - murrant 1.68 (2020-09-29) A big thank you to the following 44 contributors this last month: murrant (14) Jellyfrog (12) Olen (6) SourceDoctor (4) craig-nokia (4) PipoCanaja (3) nathanshiaulam (2) opalivan (2) TheGreatDoc (2) Negatifff (2) magnuslarsen (1) jozefrebjak (1) dupondje (1) nightcore500 (1) cmarmonier (1) crcro (1) TheMysteriousX (1) sjtarik (1) thomcatdotrocks (1) teunvink (1) arrmo (1) jasoncheng7115 (1) QuadPiece (1) avinash403 (1) pobradovic08 (1) q7joey (1) ospfbgp (1) n-lyakhovoy (1) BirkirFreyr (1) hugalafutro (1) dagbdagb (1) cliffalbert (1) deajan (1) hanserasmus (1) bestlong (1) louis-oui (1) bekreyev (1) kvedder-amplex (1) damonreed (1) Blorpy (1) h-barnhart (1) kanokc (1) dependabot (1) CirnoT (1) Thanks to maintainers and others that helped with pull requests this month: Jellyfrog (52) murrant (20) PipoCanaja (8) SourceDoctor (1) TheGreatDoc (1) Negatifff (1) Feature Add functionality to use snmp-scan.py to add to specific poller group ( #12029 ) - nathanshiaulam Device Fix edgeswitch regex ( #12168 ) - Jellyfrog UBNT switch discovery issue-12133 ( #12167 ) - kanokc Improve DNOS fallback os info ( #12165 ) - murrant Windows detect newer versions ( #12164 ) - murrant Fix older ProCurve hardware/version ( #12155 ) - murrant Eaton mgeups fixes ( #12150 ) - dagbdagb Adding basic support for Symertricom-Microsemi SSU2000 ( #12145 ) - craig-nokia TAIT - Chassis, Software and Serial detection ( #12131 ) - opalivan Mistake in ddmDiagnosisRXPower OID ( #12114 ) - n-lyakhovoy Add NoBulk Option for Sitemonitor ( #12100 ) - kvedder-amplex Convert OS discovery to new style ( #12099 ) - murrant Device support for Tait Infra93 ( #12093 ) - opalivan Add detection of Cisco ftd 4115 ( #12092 ) - Blorpy Add basic support for Emerson Netsure Controllers ( #12091 ) - craig-nokia New OS: Ekinops ( #12088 ) - h-barnhart Add basic support for GE Galaxy Pulsar Plus Controllers ( #12087 ) - craig-nokia Add Sensatronic E4-16 support ( #12083 ) - q7joey Add support for VOSS switches VSP-4900-12MXU-12XE, XA1440, and XA1480 ( #12072 ) - ospfbgp Added Migrating... state ( #12071 ) - TheGreatDoc Added Nokia timos SFP RX/TX dbm sensors ( #12065 ) - craig-nokia Add support for Beagleboard ( #12060 ) - arrmo Fix atenpdu sensors ( #12055 ) - murrant Adding serial number discovery to aruba os poller ( #12053 ) - sjtarik Osnexus quantastor initial support ( #12045 ) - crcro Ifotec product integration ( #12038 ) - cmarmonier Fix incorrect eth0 status for Ubiquiti AirFiber 5XHD ( #12025 ) - nightcore500 Synology DSM: Moved to yaml discovery ( #11962 ) - TheGreatDoc Added support for OS detection from NXOS and UCS ( #11722 ) - magnuslarsen Updated Support of Smartax GPON OLT ( #11719 ) - jozefrebjak Webui Fix editing schedule maintenance ( #12079 ) - louis-oui Replace VyOS' .png with .svg ( #12067 ) - QuadPiece Fixed URL of detailed graphs for jitter SLA probe ( #11984 ) - pobradovic08 Speedup vlans list in device VLANS tab ( #11805 ) - Negatifff Snmp Traps More eventlogs for snmptraps ( #12112 ) - PipoCanaja Applications Fix queries RRD graph. ( #12152 ) - hugalafutro Icecast, Opensips and Voip monitor Application ( #12070 ) - avinash403 Api API Calls to list Device Outages, calculated Availability ( #12103 ) - SourceDoctor Billing Fix billing showing estimated transfer based on total of 1 days if billing day is first ( #10445 ) - CirnoT Discovery Fix skip_value_lt plurality confusion ( #12056 ) - murrant Polling Include ifName for bad_ifXEntry OS ( #12104 ) - murrant Rancid Add paloalto panos to gen_rancid.php ( #12161 ) - BirkirFreyr Add support for H3C/Comware ( #12144 ) - cliffalbert Since Rancid 3, the separator is ; ( #11688 ) - dupondje Bug Make sure 1st admin user creation does not fail with error 500 ( #12119 ) - deajan Fix to show Routing Count in Pagemenu Selector ( #12111 ) - SourceDoctor Fix CiHelper function checkPythonExec to use 'pip3 install --user' and improve error message ( #12097 ) - damonreed Fix arp-search search ( #12075 ) - Jellyfrog Improve mib_dir setting consistency ( #12069 ) - murrant Matrix txnid fix ( #12057 ) - thomcatdotrocks Refactor Allow index rename migration to recover partially completed previous run ( #12084 ) - murrant Rewrite smokeping script to be an lnms command ( #11585 ) - TheMysteriousX Documentation Update Application Docs for Unbound ( #12151 ) - SourceDoctor Use lnms dev:check instead of pre-commit.php ( #12149 ) - murrant ARP endpoint can search by MAC ( #12129 ) - murrant Update Oxidized docs ( #12116 ) - hanserasmus Begins with / Ends with, SQL example is reverse ( #12113 ) - bestlong MySQL Documentation Update ( #12085 ) - SourceDoctor Update Distributed-Poller.md ( #12074 ) - nathanshiaulam Remove broken link ( #12059 ) - teunvink Translation Update ru.json ( #12109 ) - bekreyev Misc New index in alert_log table ( #12143 ) - Negatifff IRC Add more logging and debug info ( #12140 ) - Olen Don't set nick on each tick ( #12139 ) - Olen List external commands in help. Allow reload of external commands ( #12137 ) - Olen Increase the read-buffer as 64 bytes can be a little small ( #12136 ) - Olen Remove unused \"irc_chan\". Renamed to \"irc_alert_chan\" ( #12135 ) - Olen Add some variables to the init of the class ( #12134 ) - Olen Cast device_id to int to prevent type error in deviceCache::get() ( #12076 ) - Jellyfrog Add attach sysName to Prometheus. ( #12061 ) - jasoncheng7115 Dependencies Set PHP 7.3 as minimum supported version ( #12118 ) - Jellyfrog Bump http-proxy from 1.18.0 to 1.18.1 ( #12081 ) - dependabot 1.67 (2020-09-03) A big thank you to the following 23 contributors this last month: Jellyfrog (10) TheGreatDoc (5) hanserasmus (5) SourceDoctor (5) murrant (4) Negatifff (2) bofh80 (2) pobradovic08 (2) arrmo (2) dependabot (2) jozefrebjak (1) Jarod2801 (1) Zmegolaz (1) Najihel (1) TheMysteriousX (1) craig-nokia (1) sprich96 (1) raphael247 (1) nathanshiaulam (1) m4rcu5 (1) nbyers (1) rjmidau (1) nightcore500 (1) Thanks to maintainers and others that helped with pull requests this month: Jellyfrog (27) murrant (14) TheGreatDoc (5) SourceDoctor (4) PipoCanaja (1) rigocalin (1) Cormoran96 (1) Feature Show Device Outages as Log List ( #12011 ) - SourceDoctor Availability Calculation for all Devices ( #12004 ) - SourceDoctor Device Detect additional TrueNAS hardware types ( #12052 ) - TheMysteriousX Fix 'unused data sent totalconns' in BigIP LTM Pool Members ( #12041 ) - rjmidau Expand endrun os support ( #12008 ) - hanserasmus Nokia 7705 packet microwave ( #12007 ) - craig-nokia Add Cisco Firepower 1140 ( #12006 ) - Najihel Updated documentation and Discovery, to match Asuswrt-Merlin PR ( #11999 ) - arrmo Arista EOS: Added groups and better sensor names ( #11990 ) - TheGreatDoc Cisco SLA jitter tag ( #11983 ) - pobradovic08 Fix qnap state graphs ( #11976 ) - TheGreatDoc Added support for FS NMU ( #11965 ) - jozefrebjak Wireless support for Asuswrt-Merlin (the same as Openwrt) ( #11964 ) - arrmo Fixed Ubiquiti Airfiber LTU retrieval ( #11844 ) - nightcore500 Webui Only show smokeping in menu if enabled ( #12019 ) - Negatifff Small update to installation steps ( #12016 ) - hanserasmus Add crossorigin policy to link rel manifest ( #12005 ) - Zmegolaz Only show smokeping link if the url is configured ( #11992 ) - Jellyfrog Convert LastSync date for oxidized config info ( #11779 ) - Negatifff Graphs Set RRD minimum to 0 to see the real change relation in app Smart, Mdadm and Certificate ( #11986 ) - SourceDoctor Alerting Matrix alert transport ( #12018 ) - raphael247 Clean up default alert rules ( #12014 ) - murrant Polling Use overwrite_ip when set on devices for ping checks ( #12022 ) - nathanshiaulam Increase default RRD data retention of MIN, MAX, and LAST to match AVERAGE ( #11995 ) - pobradovic08 Bug Corrected alert_rules.json file to container proper JSON. ( #12033 ) - nbyers Fix fping6 config definition ( #12003 ) - TheGreatDoc Restore device inventory logic after 055abcf ( #11993 ) - Jellyfrog Hide pip3 missing validate error ( #11987 ) - murrant Full path to python requirements check ( #11982 ) - murrant Python requirements check, use sys.exit ( #11981 ) - murrant Add default values to cast ( #11977 ) - Jellyfrog Add type hinting to devicecache ( #11975 ) - Jellyfrog Fix automatic service discovery ( #11963 ) - bofh80 Documentation Update Smokeping.md ( #12048 ) - TheGreatDoc Rewrite the docs for OS discovery ( #12047 ) - Jellyfrog Rewrite the test data capture section ( #12046 ) - Jellyfrog Update Fast Ping Check docs ( #12024 ) - hanserasmus Update PortGroups.md ( #12015 ) - sprich96 Update Applications Docs for Apache Agent ( #12009 ) - hanserasmus Fixed header anchors in RRDCached Documentation ( #12002 ) - hanserasmus Update Install-LibreNMS.md ( #12001 ) - Jarod2801 Misc Update travis to Ubuntu 18.04 ( #12043 ) - Jellyfrog Fix missing 'nets' for autodiscovery ( #12039 ) - bofh80 Handle unknown device_type's. ( #12031 ) - m4rcu5 Move Availability Setting to Poller ( #12021 ) - SourceDoctor Cleanup Database Tables on Host Deletion ( #12012 ) - SourceDoctor Add missing index for device_perf ( #11974 ) - Jellyfrog Dependencies Bump symfony/http-kernel from 5.1.2 to 5.1.5 ( #12049 ) - dependabot Bump elliptic from 6.5.2 to 6.5.3 ( #11988 ) - dependabot 1.66 (2020-07-30) A big thank you to the following 28 contributors this last month: murrant (17) Jellyfrog (8) SourceDoctor (5) TheGreatDoc (4) peelman (4) cppmonkey (2) TheMysteriousX (2) arrmo (2) seros1521 (2) hanserasmus (2) NotARobotDude (1) allwaysoft (1) Oirbsiu (1) penfold1972 (1) cwispy (1) hrtrd (1) louis-oui (1) ppasserini (1) kleinem86 (1) javichumellamo (1) CirnoT (1) awein (1) Wooboy (1) AnaelMobilia (1) twelch24 (1) hp197 (1) dependabot (1) craig-nokia (1) Thanks to maintainers and others that helped with pull requests this month: Jellyfrog (28) murrant (26) SourceDoctor (11) githonk (1) kkrumm1 (1) laf (1) Security Add permission support to Oxidized config search ( #11928 ) - Jellyfrog Fix sql injection ( #11923 ) - murrant Fix SQL injections in ajax_table.php ( #11920 ) - Jellyfrog Sanitize graph title input ( #11919 ) - Jellyfrog Add more types to settings page ( #11918 ) - Jellyfrog Fix settings access ( #11915 ) - murrant Device Fix USW detection again ( #11978 ) - murrant Add Canon iPF series ( #11959 ) - Wooboy Added basic EndRun support ( #11932 ) - hanserasmus QNAP NAS - Added state rules to collection ( #11931 ) - TheGreatDoc QNAP NAS - Added RAID states for each volume. ( #11930 ) - TheGreatDoc CBQoS improvement ( #11926 ) - seros1521 Dell included a typo in their sysDescr ( #11917 ) - TheMysteriousX Added support for Fortinet FortiVoice devices ( #11914 ) - cppmonkey Support NetMan 204 ( #11913 ) - javichumellamo Added support for Eltek SmartPack2 Touch ( #11909 ) - cppmonkey Add Divisors to Eaton Matrix sensors ( #11906 ) - peelman Add support SNR Memory pool, dBm, voltage, current, fan speed and status ( #11888 ) - hrtrd Add support for Aten PE8216 PDU ( #11887 ) - cwispy Ciena SDS ( #11857 ) - penfold1972 Cisco PW: Correct interface names in response to the SNMP query of cpwVcName ( #11851 ) - Oirbsiu Initial Release, wireless sensor support for Openwrt ( #11768 ) - arrmo OS detection for Dell PowerVault MD arrays ( #11509 ) - TheMysteriousX Webui Fix encoded html entities in page title ( #11979 ) - murrant Fix netflow links ( #11971 ) - murrant Convert blade to panel component ( #11957 ) - Jellyfrog Fix wrong str::finish argument order ( #11955 ) - hp197 Show SysName in Availability Widget ( #11953 ) - SourceDoctor Convert device notes to blade ( #11952 ) - Jellyfrog Sort Neighbors by ifName, not bei ifAlias ( #11951 ) - SourceDoctor Make sure base_url always ends with / ( #11949 ) - murrant Change text from black to white availability-map ( #11946 ) - NotARobotDude Show Location on Poller Log ( #11945 ) - SourceDoctor LLDP Neighbour List - alphabetic sort ( #11944 ) - SourceDoctor Fix missing Munin controller tab definition ( #11943 ) - CirnoT Correct link for Rule, Location (Alerts, and several other pages) ( #11937 ) - arrmo Enhance Alert History Table View ( #11936 ) - SourceDoctor Black legend text in dark theme ( #11933 ) - twelch24 Fix users that set a non-array for cors ( #11921 ) - murrant Restore device alert tab ( #11897 ) - murrant Laravel 7.x Shift ( #11676 ) - Jellyfrog Graphs Remove legacy code and fix missing device graphs ( #11950 ) - murrant Refresh device_bits graph; align column headers, use wider descriptio\u2026 ( #11922 ) - peelman Fix graphing with generic_v3_multiline_float ( #11916 ) - awein Mult graphs bits spacing ( #11907 ) - peelman Api CORS settings in webui ( #11912 ) - murrant Alerting Added Proxy support for Api Transport ( #11968 ) - kleinem86 Add alert rule error on invert map selected but no selection in device, group or location list ( #11894 ) - louis-oui Discovery Less strict sysName matching for neighbor discovery ( #11804 ) - seros1521 Polling Fix bug when timeout exceeded ( #11934 ) - murrant Selected Port Polling, only try to optimize polling if enabled by global setting ( #11908 ) - peelman Added check for incorrect ifConnectorPresent truth values, if invalid\u2026 ( #11634 ) - craig-nokia Bug Fix latency.blade.php to show smokeping integration ( #11980 ) - TheGreatDoc Dispatch Service Fix maintenance issues ( #11973 ) - murrant Fix .env path in daily.sh ( #11972 ) - murrant Fix QNAP os polling ( #11938 ) - TheGreatDoc Fix error about ob not started sometimes in migration ( #11927 ) - Jellyfrog Refactor Simpler Python requirements check ( #11939 ) - murrant Documentation Update RRDCached.md ( #11967 ) - hanserasmus Update Smokeping.md ( #11956 ) - AnaelMobilia Fix missing doc OpenWRT ( #11924 ) - murrant Translation Simplify Chinese lang Translation ( #11905 ) - allwaysoft Update italian translation ( #11901 ) - ppasserini Tests Fix route tests ( #11898 ) - murrant Dependencies Bump lodash from 4.17.15 to 4.17.19 ( #11942 ) - dependabot 1.65 (2020-07-03) A big thank you to the following 42 contributors this last month: murrant (46) SourceDoctor (24) PipoCanaja (5) Jellyfrog (5) TheGreatDoc (4) Negatifff (4) TheMysteriousX (2) tamirhad (2) willhseitz (2) AnaelMobilia (2) yon2004 (2) pepperoni-pi (2) jasoncheng7115 (1) ppasserini (1) ajsiersema (1) ZoLuSs (1) cjwbath (1) joshuabaird (1) louis-oui (1) footstep86 (1) yac01 (1) robje (1) ryanheffernan (1) karrots (1) Martin22 (1) dupondje (1) opalivan (1) arrmo (1) moisseev (1) XxPatrickxX (1) kuhball (1) rkandilarov (1) hanserasmus (1) systeembeheer-rtvu (1) slashdoom (1) gardar (1) vitalisator (1) sorano (1) Derova (1) dependabot (1) Munzy (1) nepeat (1) Thanks to maintainers and others that helped with pull requests this month: murrant (48) SourceDoctor (27) Jellyfrog (20) PipoCanaja (11) TheGreatDoc (6) kkrumm1 (6) f0o (3) laf (2) LEV82 (1) hanserasmus (1) sorano (1) Feature Devices List: Sort downtime and uptime ( #11829 ) - murrant Skip_value can check OID existance ( #11822 ) - PipoCanaja New Web Installer ( #11810 ) - murrant Device Availability Calculation ( #11784 ) - SourceDoctor Dispatcher Service settings ( #11760 ) - murrant Improve migration to release update channel ( #11669 ) - murrant Security Prevent unauthorized access to device graphs ( #11878 ) - Jellyfrog Device Remove the last node from the arbor sysObjectId ( #11890 ) - TheMysteriousX Move qnap to yaml discovery + extended discovery ( #11882 ) - TheGreatDoc Added support for Integra E radios ( #11871 ) - Derova Add Riello Netman 204 support ( #11856 ) - sorano Cirpack states mapping ( #11855 ) - vitalisator Jacarta interSeptor support (environmental monitoring device) ( #11826 ) - systeembeheer-rtvu Make IPv6 discovery work on JunOS ( #11825 ) - TheMysteriousX Gigamon GigaVUE basic support ( #11824 ) - hanserasmus Add new hardware model for Eltek/enexus ( #11809 ) - willhseitz Arista sometimes returns NaN value when polling ( #11800 ) - tamirhad ArubaOS-CX Identification ( #11792 ) - XxPatrickxX Add Edgecore ES3526XA OID ( #11791 ) - moisseev Add Packetlight PL2000 support ( #11782 ) - opalivan Add Edgecore ECS4100-28T OID ( #11778 ) - Negatifff Imcopower - Fixed state in imcopower-big ( #11774 ) - Martin22 VRP FDB table correctly parsed on some CE switches ( #11766 ) - PipoCanaja Add APC Cooler detection ( #11764 ) - karrots Workaround for bad entSensorPrecision values ( #11757 ) - ryanheffernan VRP with new Discovery model for hw/serial etc ( #11756 ) - PipoCanaja Fix Samsung Printer ( #11752 ) - murrant Added Arista SN ( #11737 ) - TheGreatDoc F5 LTM bandwidth controller ( #11728 ) - yac01 Fix missing PoE port graphs for Cisco Catalyst 9K ( #11698 ) - ajsiersema Add OS support for Aviat WTM ( #11654 ) - joshuabaird New OS: DHCPatriot (dhcpatriot) ( #11472 ) - pepperoni-pi Arista VRF discovery support ( #11421 ) - PipoCanaja Webui Edit maintenance schedule, handle timezone properly ( #11889 ) - murrant Fix devices missing from graph view ( #11886 ) - murrant Auth AD URL Setting in Web UI ( #11884 ) - Munzy Fix some str_i_contains() usages ( #11877 ) - murrant Settings geocode lookup ( #11875 ) - murrant Fix last th min-width in manage device groups table ( #11860 ) - Negatifff Fix Cisco Crossbar overview missing ( #11839 ) - murrant Allow device url by hostname ( #11831 ) - murrant 404 when device does not exist ( #11830 ) - murrant Device Maintenance configurable duration ( #11821 ) - SourceDoctor Fix external auth auto-login ( #11813 ) - murrant Fix poller settings display ( #11801 ) - murrant Fix smokeping slave not found causing error ( #11799 ) - murrant Add device groups in overview tab ( #11796 ) - Negatifff Fixed typo in function htmlspecialchars within snmp edit ( #11794 ) - kuhball Fix 2 latency tab bugs ( #11787 ) - murrant Alert Template - sort Alert Rules alphabetic ( #11786 ) - SourceDoctor Lighter RRD graph colors ( #11759 ) - willhseitz Windows Device Overlib equal to Linux ( #11730 ) - SourceDoctor Widget hide-show search Field ( #11729 ) - SourceDoctor Don't call clean() on the inputs to the SNMP settings form ( #11709 ) - cjwbath Eventlog Application Alert in it's Severity Colour ( #11660 ) - SourceDoctor Fix availability map downtime ( #11638 ) - louis-oui Added ability to use JSON directly in Msteams Transport ( #11129 ) - pepperoni-pi Graphs RRD Float Precision Customization ( #11853 ) - SourceDoctor Application Puppet Agent RRD Runtime Graph fix ( #11837 ) - SourceDoctor Show full description text on Asterisk RRDs ( #11742 ) - SourceDoctor Snmp Traps Added UPS-MIB Trap On Battery (upsTraps.0.1) ( #11776 ) - TheGreatDoc Applications Application DHCP Upgrade ( #11661 ) - SourceDoctor Added discovery for ups-nut status ( #11606 ) - yon2004 Apps - backupninja ( #11010 ) - AnaelMobilia Alerting Fix recurring maintenance days ( #11863 ) - murrant UPS Alert Rule Fix ( #11836 ) - SourceDoctor Fix alert last modified timestamps ( #11833 ) - murrant Make the Discord transport more formatted for Discord. ( #11461 ) - nepeat Maintenance Windows: recurring now works overnight ( #11389 ) - murrant Polling Fix process details on newer versions of windows checkmk agent ( #11840 ) - gardar Fix performance issue in loadbalancers module ( #11771 ) - tamirhad Implemented a generic approach for ifHighSpeed values that cannot be \u2026 ( #11504 ) - footstep86 Rancid Fix Rancid GIT ( #11795 ) - dupondje Bug Python 3.4 is the minimum requirement ( #11880 ) - Jellyfrog Fix unauthenticated graphs ( #11879 ) - murrant Make fping work when fping6 is not present ( #11868 ) - murrant Hotfix CustomOID visibility ( #11861 ) - SourceDoctor Restore SQL debug output ( #11832 ) - murrant Ping Perf fix while running Squid ( #11823 ) - SourceDoctor Fix pip3 validation ( #11788 ) - murrant Validate autoload first ( #11785 ) - murrant Change github-remove shebang to python3 ( #11753 ) - murrant Syslog -> Added colour priority to the label column ( #11607 ) - TheGreatDoc Refactor PHP session is no longer required ( #11870 ) - murrant Fix validation and other issues when config.php is missing ( #11867 ) - murrant Reformat OS yaml so it is easier to read ( #11862 ) - murrant Auth middleware refinement ( #11767 ) - murrant Cleanup Cleanup functions.inc.php ( #11835 ) - SourceDoctor Change Units on Noise Floor ( #11790 ) - arrmo Documentation Install change all tabs ( #11876 ) - murrant Update Services.md ( #11834 ) - slashdoom Bare Dashboard Option ( #11818 ) - SourceDoctor Fix typo on Debian install documentation ( #11816 ) - AnaelMobilia Added SNMP v3 configuration example for Mikrotik/ROS ( #11802 ) - rkandilarov Clearer python-memcached info ( #11772 ) - murrant Update and Consolidate Install docs Ubuntu 20.04 and CentOS 8 ( #11762 ) - murrant Application sudo correction ( #11741 ) - SourceDoctor Fix Application Sudo Example ( #11707 ) - ZoLuSs Update RRDCached Documentation ( #11516 ) - SourceDoctor Doc debian 10 updates ( #11488 ) - robje Translation Italian translation ( #11775 ) - ppasserini Update zh-tw language ( #11664 ) - jasoncheng7115 Tests Fix sqlite test failure ( #11847 ) - murrant Misc Drop validation: group has write access ( #11873 ) - murrant Lnms script should not be owned or ran by root ( #11848 ) - murrant Debug pass-through exceptions for Ignition ( #11773 ) - murrant Dependencies Bump websocket-extensions from 0.1.3 to 0.1.4 ( #11874 ) - dependabot Update PHP dependencies ( #11846 ) - murrant Replace laravel-vue-i18n-generator ( #11815 ) - Jellyfrog 1.64 (2020-05-31) A big thank you to the following 56 contributors this last month: murrant (56) SourceDoctor (22) PipoCanaja (13) hanserasmus (5) TheMysteriousX (5) TheGreatDoc (5) arjitc (4) arrmo (4) footstep86 (4) spencerryan (3) Jellyfrog (3) jozefrebjak (3) joseUPV (2) vitalisator (2) gardar (2) moisseev (2) bakerds (2) facuxt (2) gcotone (1) crazy-max (1) hachpai (1) VirTechSystems (1) PelNet (1) dsgagi (1) dagbdagb (1) stylersnico (1) karlshea (1) ospfbgp (1) LaZyDK (1) Munzy (1) damonreed (1) Duffyx (1) nimrof (1) Butterscup (1) louis-oui (1) ProTofik (1) mattosem (1) jp-asdf (1) evheros (1) f0o (1) ajsiersema (1) Negatifff (1) dupondje (1) mathieu-oui (1) cjwbath (1) olivluca (1) craig-nokia (1) h-barnhart (1) jonasblomq (1) dependabot (1) KingJ (1) cliffalbert (1) lazyb0nes (1) bukowski12 (1) loopodoopo (1) deajan (1) Thanks to maintainers and others that helped with pull requests this month: murrant (84) SourceDoctor (32) Jellyfrog (20) PipoCanaja (14) TheGreatDoc (10) kkrumm1 (2) laf (2) Npeca75 (1) f0o (1) dwiesner (1) Feature Maintenance Mode via Device Settings ( #11649 ) - SourceDoctor Added link to smokeping interface and added smokeping options to global settings ( #11610 ) - TheGreatDoc Drop PHP 71 & Python2 support ( #11531 ) - murrant Implement OS specific information discovery ( #11446 ) - murrant Device page dropdown hero button, Performance -> Latency ( #11328 ) - murrant Security Fix port permissions ( #11560 ) - murrant Device New Device: PowerTek/BladeShelter PDU support ( #11731 ) - mattosem Add new sysobjectid for Arbor ArbOS TMS appliances ( #11711 ) - jp-asdf Fixed Cisco ASA Lan2Lan typo ( #11704 ) - evheros Added TPLINK vlans support ( #11697 ) - PipoCanaja Added OID for EdgeCore models: ES 3528M-SFP, ES 4612, ES 3526 XA, ECS\u2026 ( #11690 ) - Negatifff Fix mini graphs with PanOS ( #11681 ) - mathieu-oui New Device: Paradyne SHDSL modems ( #11679 ) - PipoCanaja New corner cases for Huawei VRP BGP ( #11663 ) - PipoCanaja Updated Ciena Waveserver MIBs and fixed interface naming ( #11646 ) - bakerds Fix unit state sensor oid for aos6 ( #11639 ) - joseUPV Support for Ciena service delivery switch family ( #11636 ) - bakerds Added FortiAuthenticator support ( #11633 ) - footstep86 FortiWeb CPU and Memory ( #11632 ) - footstep86 Extend processor polling to Dell Powerconnect N1100 and N1500 series ( #11631 ) - KingJ Riedo E3Meter PDU ( #11624 ) - PipoCanaja Add WAN (3/4g-LTE) support on Huawei AR family ( #11619 ) - PipoCanaja Add Papouch Quido Device ( #11605 ) - bukowski12 Vendor Dantherm ( #11603 ) - loopodoopo Added FortiSandbox support ( #11593 ) - footstep86 Correct options for IBMC version polling ( #11587 ) - PipoCanaja Device - Correct SysObjectID for RIEDO Concentrator ( #11573 ) - PipoCanaja Add serial for QTECH QSW-3400 ( #11569 ) - moisseev Fixed issues with IMCO Power ( #11559 ) - jozefrebjak New OS: QTECH ( #11556 ) - moisseev Move packet journey counters from linux to packetjourney ( #11550 ) - TheMysteriousX Fix cisco sensor thresholds ( #11547 ) - dsgagi Restore applications in TrueNAS ( #11546 ) - karlshea Fix Papouch detection too generic ( #11540 ) - murrant Updates to Brother Printer ( #11532 ) - arrmo OS Detection for Mobileiron Core, Sentry appliances ( #11510 ) - TheMysteriousX AOS Advanced Support. ( #11500 ) - joseUPV SIAE Radio: add additional sensors and data ( #11498 ) - murrant Fix lcos PHP 7.4 incompatible code ( #11497 ) - murrant Added bgpPeerDescr for Arista OS ( #11495 ) - damonreed Support FreeNAS/TrueNAS 11.3 ( #11494 ) - TheMysteriousX MPLS updates and bugfixing ( #11468 ) - vitalisator Airos 8.x.x no long supports AirMaxQuality ( #11400 ) - facuxt Added discovery and graphing for JunOS (SRX) RPM probes ( #11187 ) - PelNet Added FortiMail support ( #10895 ) - footstep86 Webui Fixing API Creation Error Message ( #11745 ) - SourceDoctor Show full description text on MySQL RRDs ( #11738 ) - SourceDoctor Maximum Execution Time Exceeded show error ( #11720 ) - murrant Enumerate Alert Level ( #11652 ) - SourceDoctor Show Laravel version in about ( #11641 ) - murrant Fix various issues with loading os definitions ( #11640 ) - murrant Application State Icons ( #11630 ) - SourceDoctor Handle exception about unserializable route cache ( #11625 ) - murrant Fixed realtime graph http get spam ( #11616 ) - Butterscup Disable auto-refresh for notifications and alert history ( #11589 ) - louis-oui Sort Health table alphabetic ( #11586 ) - SourceDoctor Only Show in TopInterfaces Devices which are up ( #11578 ) - SourceDoctor Natural Sort Applications by Display Name ( #11577 ) - SourceDoctor Application DisplayName in Overview Hover ( #11576 ) - SourceDoctor Add acknowledgment notes to eventlog ( #11575 ) - vitalisator Fix vmhost device page link ( #11553 ) - murrant Correct OS Overlib in Inventory ( #11551 ) - SourceDoctor Fix poller deletion ( #11549 ) - murrant Fix smokeping wo integration ( #11548 ) - murrant Show Hardware Details on Network Adapters in Device - Inventory ( #11545 ) - SourceDoctor Fix display of device modules ( #11543 ) - ospfbgp Addhost (web) snmp v3 not used first ( #11536 ) - nimrof Fix apps overview link ( #11535 ) - murrant Sort Top Devices widget descending by default ( #11534 ) - murrant Update device health settings Table UI ( #11529 ) - arjitc Fix errors for some devices loading components ( #11527 ) - murrant Fix new bill search input ( #11524 ) - murrant Equalize BootstrapSwitch Style on Device Edit to LibreNMS Standard ( #11513 ) - arjitc Limit port, seconds, retries, max repeats and max OIDs to numeric type ( #11512 ) - arjitc Put all the stats into the optionbar ( #11501 ) - arjitc Login form footer center align ( #11499 ) - jozefrebjak WebUI - Improved \"dark\" theme ( #11417 ) - facuxt Snmp Traps OSPF SNMP Trap Handlers ( #11647 ) - h-barnhart Added warmStart trap handler ( #11583 ) - jozefrebjak Applications Add support for windows librenms(check_mk) agent ( #11691 ) - gardar Application - Redis ( #11612 ) - SourceDoctor Adjust RRDCached application event graph ( #11528 ) - SourceDoctor Fix RRDCached Application Socket Address in Poller ( #11525 ) - SourceDoctor String Nicement for RRDCached - also alphabetic sorting of array ( #11517 ) - SourceDoctor Api Enabling general search for ports, devices, and more ( #11571 ) - hachpai Alerting Fix another mysql error in isMaintenance() ( #11746 ) - arrmo Address Incorrect DATE value in isUnderMaintenance ( #11736 ) - arrmo Do not delay alert recovery notifications ( #11555 ) - spencerryan Send Device group membership to Pagerduty ( #11522 ) - spencerryan Allow manual configuration of Pagerduty Integration Key ( #11519 ) - spencerryan Copy and modify the syslog transport for sending alerts to Splunk in an easy to parse format ( #11176 ) - VirTechSystems Discovery Fix sensor type/class confusion ( #11608 ) - PipoCanaja Improvement for matching LLDP neighbors with known hosts. ( #11445 ) - dagbdagb Migrate Python scripts to Python 3 ( #10759 ) - deajan Polling Fix wireless sensor polling unit display ( #11748 ) - murrant Fix poller enabling graphs for display ( #11743 ) - murrant Fix dynamic group membership rule for devices.status equal 0 ( #11699 ) - ajsiersema Fix - Seperate default poller id and distributed poller groups ( #11584 ) - SourceDoctor Fix double escaping ( #11503 ) - gcotone Rancid Add Edgemax support to rancid script ( #11687 ) - dupondje Support for allied telesis and cisco wlc ( #11617 ) - cliffalbert Bug Fix MySQL App sorts display ( #11740 ) - SourceDoctor Remove int width from db schema validation (MySQL 8) ( #11725 ) - arrmo Fix CSRF Token in Latency tab ( #11703 ) - f0o Fix some python3 wrapper connection issues ( #11693 ) - murrant Fix the PANOS HA state check alert rule from collection ( #11657 ) - cjwbath Fix inconsistent escapes (slashes in sysLocation) ( #11637 ) - murrant Fix \"improper label name\" in Prometheus datastore ( #11602 ) - TheGreatDoc Filter on sensor class as expected and documented ( #11592 ) - PipoCanaja Fix python always install as user ( #11562 ) - murrant Fix default uptime warning to 86400 seconds ( #11507 ) - SourceDoctor Refactor Clean mempools code to avoid unnecessary snmpget ( #11678 ) - PipoCanaja Enumerate AlertState ( #11665 ) - SourceDoctor Python wrapper sql cleanup ( #11628 ) - murrant Python3 only for snmp-scan.py ( #11623 ) - murrant Laravel 6.x ( #11397 ) - Jellyfrog Documentation Update rrdtool setting explanation ( #11724 ) - hanserasmus Update distributed poller docs intro ( #11721 ) - murrant Hardware examples SourceDoctor ( #11680 ) - SourceDoctor Applications Corrected wrong path in documentation ( #11675 ) - ProTofik Document update for distributed poller ( #11655 ) - craig-nokia Fix Fast-Ping-Check.md to include information about RRDCached ( #11645 ) - jonasblomq Update Example-Hardware-Setup.md ( #11611 ) - lazyb0nes Removed reference to deprecated poller-service.py ( #11598 ) - hanserasmus Added example for the alerta transport ( #11596 ) - olivluca Add missing python3 modules from repo, remove pip ( #11594 ) - gardar Correct sensor ignore documentation ( #11591 ) - PipoCanaja Typo Fix ( #11588 ) - Munzy Update Docker installation doc ( #11579 ) - crazy-max Add python3 and pip3 to installs ( #11566 ) - hanserasmus Added python3 for new installs ( #11564 ) - hanserasmus Added note about having same APP_KEY value ( #11521 ) - hanserasmus Updated Index to add the doc for Debian 10 ( #11515 ) - stylersnico Update Installation-Ubuntu-1804-Nginx.md ( #11466 ) - LaZyDK Tests Testing cleanup ( #11677 ) - murrant Rewrite development helper to lnms dev:check ( #11650 ) - murrant Fix test behaviour with PHP 7.4 on Fedora 32 ( #11648 ) - TheMysteriousX Speed up tests by skipping pings ( #11642 ) - murrant Update PHPUnit to 8.x ( #11635 ) - Jellyfrog Os_schema is missing a module ( #11511 ) - TheMysteriousX Misc Check python3 and pip3 versions match ( #11739 ) - murrant Check lnms running user ( #11726 ) - murrant Make migrations work in SQLite ( #11643 ) - murrant Validate PHP version mismatch ( #11621 ) - murrant Setuptools is required for python dependency check ( #11600 ) - SourceDoctor Hide python user warning if deps met at system level ( #11590 ) - murrant Send python 3 version to stats.librenms.org ( #11568 ) - murrant Add python validation fix suggestions ( #11563 ) - murrant Added ignored devices to be pinged by smokeping ( #11557 ) - TheGreatDoc Python3 Module Dependency Check ( #11544 ) - SourceDoctor Fix socket logic in services-wrapper.py ( #11523 ) - Duffyx Install python requirements during daily ( #11486 ) - murrant Run artisan optimize after composer install ( #11465 ) - Jellyfrog Dependencies Bump jquery from 3.4.1 to 3.5.0 ( #11644 ) - dependabot 1.63 (2020-04-27) A big thank you to the following 41 contributors this last month: murrant (31) SourceDoctor (12) Jellyfrog (11) PipoCanaja (7) Martin22 (5) TheMysteriousX (5) hanserasmus (4) willhseitz (4) dneto82 (3) kedare (3) jozefrebjak (3) stylersnico (2) priiduonu (2) h-barnhart (2) nimrof (2) mathieu-oui (1) AnaelMobilia (1) frenchie (1) noaheroufus (1) TFujiwara (1) vsessink (1) dGs- (1) robwilkes (1) vitalisator (1) jviersel (1) FingerlessGlov3s (1) TheGreatDoc (1) jepke (1) Alex131089 (1) nwautomator (1) danislav (1) monrad (1) gonzocrazy (1) arjitc (1) robje (1) arrmo (1) AltiUP (1) realgreef (1) Zaxmy (1) Cormoran96 (1) TvL2386 (1) Thanks to maintainers and others that helped with pull requests this month: murrant (44) Jellyfrog (31) SourceDoctor (23) PipoCanaja (19) TheGreatDoc (5) laf (3) kkrumm1 (1) craig-nokia (1) Feature Global search MAC Address ( #11434 ) - SourceDoctor Config CLI improvements ( #11430 ) - murrant Implement watchdog to librenms-service ( #11353 ) - willhseitz Device Opengear add mempool discovery+polling ( #11491 ) - gonzocrazy Detection, sensors and zpool/dataset usage for FreeNAS, TrueNAS ( #11474 ) - TheMysteriousX OS detection and sensors for Dell Compellent ( #11467 ) - TheMysteriousX Add OS detection for Greenbone appliances ( #11464 ) - TheMysteriousX Raspberry Pi frequency sensors discovery ( #11460 ) - priiduonu Added Cisco Firepower 1010 ( #11449 ) - realgreef Add OS version to asuswrt-merlin ( #11438 ) - arrmo Added support for Peplink Pepwave & FusionHub ( #11432 ) - jozefrebjak Extend Netvision Socomec UPS cards for RFC1628 ( #11426 ) - PipoCanaja Add support for Advantech switches ( #11415 ) - monrad CyberPower SNMP Traps ( #11403 ) - h-barnhart Classify as unix for additional sensors ( #11390 ) - nwautomator IMCO Power - Added skip values for older devices without temperature sensor support. ( #11387 ) - Martin22 Ubiquiti Airfiber LTU many more sensors ( #11382 ) - jepke Fix routing engine discovery on standalone JunOS devices ( #11381 ) - TheMysteriousX Add support Ray3 ( #11374 ) - Martin22 OPNsense poller better reporting of Version and Platform ( #11350 ) - FingerlessGlov3s Mikrotik - Updated MIB file and added Wireless Quality ( #11347 ) - Martin22 Fix PanOS Sessions count and add Vsys and other sensors ( #11341 ) - mathieu-oui Added hardware detection for FreeBSD ( #11313 ) - frenchie Add support for Ascom IPBS ( #11308 ) - PipoCanaja Added Support for AirConsole Servers ( #11302 ) - jozefrebjak New device IMCO POWER ( #11296 ) - Martin22 APC NetBotz 200 - doesn't add not available temperature sensors ( #11259 ) - dGs- IPv6 support for BGP peers in VRP devices ( #11243 ) - PipoCanaja Added support for RIEDO data concentrator ( #11237 ) - PipoCanaja Added support for ICT Modular Power System and ICT Sine Wave Inverter ( #11182 ) - noaheroufus Fix for Nokia 7705 SAR ( #11021 ) - vitalisator Added sensors for outlets on Schleifenbauer devices. ( #10949 ) - jviersel Webui Fix duplicate type=\"submit\" ( #11493 ) - nimrof Fixed a small typo ( #11487 ) - hanserasmus Restore click on Dashboard menu entry ( #11478 ) - murrant Fix - Show OS specific Mouseover in Alert Widget ( #11457 ) - SourceDoctor Toggle dashboard editor without refresh ( #11455 ) - murrant Fix sensor link ( #11454 ) - murrant Don't access the database too soon in Device model boot ( #11453 ) - murrant Fix devices filter os ( #11443 ) - murrant Prevent breaking of interface name into 2 words/parts ( #11420 ) - arjitc Fix dashboard size ( #11405 ) - murrant Update on OS only logo. ( #11399 ) - dneto82 Updated panos.svg ( #11398 ) - dneto82 Fix global search by IP ( #11395 ) - murrant Clarify that you can use IP or hostname to add a device ( #11393 ) - murrant Widget Eventlog Sensors Link and Mouseover functionality ( #11380 ) - SourceDoctor Convert alert modals to blade ( #11373 ) - Jellyfrog Display custom types as in the config file (with ucwords) ( #11367 ) - murrant Geo map: check if lat/long exist for each device with link ( #11366 ) - willhseitz Fix shared dashboards missing users ( #11365 ) - murrant Protect against plugins that leak output ( #11364 ) - murrant Toggle visibilty of Dashboard Editor ( #11321 ) - SourceDoctor Honoring config option force_ip_to_sysname in bill creation and editing ( #10382 ) - TvL2386 Applications Change stats file location (Bind9) ( #11439 ) - AltiUP Rrdcached Socket Check fix ( #11372 ) - SourceDoctor Get configured Rrdcached Socket from config ( #11351 ) - SourceDoctor Fix memcached always reporting \"ERROR\" for app_state ( #10739 ) - willhseitz Api BGP API: fix search by ipv6 when using compressed addresses ( #11394 ) - kedare BGP API: Allow to filter by local and remote peer address. ( #11340 ) - kedare Alerting PagerDuty Transport Improvement ( #11459 ) - h-barnhart Add support for sending events to Sensu ( #11383 ) - TheMysteriousX Adding Column ifSpeed_prev, ifHighSpeed_prev to Ports Table ( #11348 ) - SourceDoctor Add transport for Smsmode (SMS provider) ( #11332 ) - AnaelMobilia Billing Fix billing graphs: work around jpgraph bug ( #11425 ) - murrant Discovery Cisco sensor discovery fixes ( #11077 ) - robwilkes Polling BGP Polling: Add error code management ( #11424 ) - kedare Fix device creation using overwrited ip ( #11388 ) - Alex131089 Fix adsl graphs ( #11379 ) - murrant Fix rrd format issues for asterisk and cipsec-tunnels ( #11375 ) - murrant Patch unix agent ( #11312 ) - TFujiwara Fixed race conditions in distributed poller setup ( #11307 ) - vsessink Fix 10853 os specific syslocation ( #11082 ) - willhseitz Bug Customer graphs: fix evaluation order so unauthenticated access works ( #11485 ) - Zaxmy Fix case sensitiv translations ( #11463 ) - Jellyfrog Missed one jpgraph string ( #11447 ) - murrant Alert rule in, not_in remove ( #11437 ) - SourceDoctor Fix a copy-n-paste error ( #11429 ) - robje Fix - Read the db_port as integer ( #11392 ) - danislav Fix dashboard html escaping and javascript redirect ( #11370 ) - Jellyfrog Refactor Cleanup unused code ( #11391 ) - SourceDoctor Delete ports via eloquent event ( #11354 ) - murrant Convert overview page to laravel ( #10757 ) - Jellyfrog Cleanup Update php-codesniffer ( #11368 ) - murrant Documentation Add ASP sms provider ( #11489 ) - Cormoran96 Created installation for Debian 10 ( #11481 ) - stylersnico Add php-opcache settings to Performance Tuning ( #11452 ) - hanserasmus Updated selected-port-polling explanation ( #11435 ) - hanserasmus Update Images.md ( #11418 ) - TheGreatDoc Fix RRDTune.md ( #11369 ) - jozefrebjak Tests Addhost tests ( #11385 ) - nimrof Misc Set PHP 7.2.5 as minimum supported version ( #11470 ) - Jellyfrog Show full path to ini file for timezone validation failures ( #11444 ) - murrant Global setting better naming ( #11412 ) - SourceDoctor Updated MIB from Palo Alto ( #11402 ) - dneto82 Update PHP dependencies ( #11377 ) - murrant 1.62 (2020-03-31) A big thank you to the following 34 contributors this last month: murrant (17) SourceDoctor (15) PipoCanaja (7) dagbdagb (4) danislav (3) mpikzink (3) cjwbath (3) kedare (3) ghost (2) dlangille (2) Munzy (2) jozefrebjak (2) Urth (2) joseUPV (1) hanserasmus (1) josephtingiris (1) FingerlessGlov3s (1) fhlmbrg (1) h-barnhart (1) shepherdjay (1) Chewza (1) ospfbgp (1) jepke (1) ekoyle (1) pobradovic08 (1) dGs- (1) nickhilliard (1) raphaelyancey (1) rkojedzinszky (1) lucadefazio (1) fusedsynapse (1) jp-asdf (1) chrisocalypse (1) crcro (1) Thanks to maintainers and others that helped with pull requests this month: SourceDoctor (26) PipoCanaja (24) murrant (22) kkrumm1 (8) Jellyfrog (6) vdchuyen (1) sp1rr3 (1) TheGreatDoc (1) laf (1) Feature Geographical map: Show network links between locations ( #11269 ) - kedare Extra VLAN mapping in bridge FDB module to fix ProCurve ( #11230 ) - cjwbath Device Add support for VOSS switches VSP-7400-48Y-8C and VSP-4900-48P ( #11360 ) - ospfbgp Changed USV bypass state from alert to warning ( #11356 ) - mpikzink Cisco-Remote-Access-Monitor ( #11355 ) - mpikzink Added support for Cisco Firepower FTD 4140 ( #11345 ) - chrisocalypse Create MAS-MIB-SMIV2-MIB ( #11342 ) - jp-asdf Sonus became Ribbon Communications - update logos ( #11339 ) - cjwbath Added cisco firepower threat defense 1120 ( #11336 ) - lucadefazio Ubiquiti Edgepower OS definition ( #11315 ) - jepke Fixed issue with reporting of Cisco ASA Remote Sessions. rev2 ( #11286 ) - dagbdagb Update Sophos detection ( #11275 ) - murrant Add support for Cisco SX350X-24 ( #11272 ) - Chewza Add device support for SilverPeak ( #11270 ) - shepherdjay Update OPNsense definition due to incorrect OID on second detection method ( #11265 ) - FingerlessGlov3s Added additional Cisco FirePOWER device ID's for 2100 series ( #11260 ) - ghost Fix \"inteno\" and \"quanta\" OS collision ( #11238 ) - PipoCanaja Collect average server CPU usage on Huawei RH servers (IBMC) ( #11236 ) - PipoCanaja Added support for Inteno devices ( #11229 ) - PipoCanaja Store OLD-CISCO-xxx-MIB files in their directory ( #11228 ) - PipoCanaja Add Device: Innovaphone ( #11225 ) - mpikzink Webui QueryBuilder Filter alphabetic sorting ( #11358 ) - SourceDoctor Don't show deleted ports in device overview ( #11344 ) - murrant Top Interfaces, exclude invalid ports ( #11338 ) - murrant Fix invalid paths introduced in librenms/librenms#9883 ( #11337 ) - fusedsynapse Global Settings - force_ip_to_sysname, force_hostname_to_sysname ( #11335 ) - SourceDoctor Use format_hostname in dependencies list ( #11333 ) - PipoCanaja Better map link scaling algorithm ( #11329 ) - kedare Widget - TopInterface, TopDevice - device popup missing os name ( #11325 ) - SourceDoctor Fix js warning in settings, update js deps ( #11324 ) - murrant Replace AES by SHA for authalgo ( #11314 ) - dGs- Widget Fix - Server Stats - show DisplayName instead Device ID ( #11301 ) - SourceDoctor Widget - show selected DeviceGroup in Title ( #11299 ) - SourceDoctor Builder View Fix for Collection Selector ( #11290 ) - SourceDoctor Form csrf missing in custom_oid edit ( #11282 ) - danislav Sort Settings by translated names ( #11280 ) - murrant Rewrite Poller Management to Blade/Eloquent ( #11277 ) - SourceDoctor Add datastore settings to the Web UI ( #11266 ) - murrant Show the plugin's name in the title rather than just \"Plugin\" ( #11258 ) - cjwbath Global Search - IPv4, IPv6 ( #11257 ) - SourceDoctor Extended unbound monitoring ( #11255 ) - hanserasmus Graphs Fix graph previous with rrdgraph_real_percentile ( #11306 ) - murrant Graph CPU Steal and IO Wait ( #11235 ) - SourceDoctor Applications Fix issue when field name is longer than allowed ( #11349 ) - murrant Mailcow-dockerized postfix stats ( #11058 ) - crcro Api Fix bills api percentage calculation with cdr/quota of zero ( #11352 ) - Urth Alerting Alert Rule - add Operator 'in' and 'not in' ( #11327 ) - SourceDoctor Alert Collection Rule - APC UPS Diagnostics Test Result ( #11292 ) - SourceDoctor Alert Collection Rule fix for APC on Battery Power ( #11291 ) - SourceDoctor Billing Fix bills api output for period=previous ( #11295 ) - Urth Discovery Fix autodiscovery vs discovery on LLDP/xDP links ( #11189 ) - kedare Polling Fixed Netscaler vserver rrd ds name ( #11304 ) - pobradovic08 Refactor Datastores to allow future improvements. OpenTSDB Tags. ( #11283 ) - murrant Fallback to default Poller Group on delete ( #11278 ) - SourceDoctor Upgrade UCD Mibs (Others) ( #11253 ) - Munzy Update Linux SNMPD to support ssCpuRawSteal ( #11252 ) - Munzy Changed poller member validation step and message ( #11239 ) - joseUPV Bug Add primary key to device_graphs ( #11331 ) - rkojedzinszky Stop using {} for arrays ( #11319 ) - dlangille Only check depedencies once in validate.php ( #11316 ) - murrant Fix get_rrd_dir() function ( #11310 ) - murrant Fix show rrdtool command ( #11305 ) - murrant Fix custom oids not being added to RRD after other RRD cleanups ( #11300 ) - ekoyle Fix db_port config in services-wrapper ( #11284 ) - danislav Fix - Crash in Device Group on some Operator ( #11250 ) - SourceDoctor Fix error when deleting alert maintenance schedules ( #11232 ) - josephtingiris Cleanup Symfony requires php-dom extension ( #11320 ) - nickhilliard Documentation Update SNMP-Configuration-Examples.md ( #11334 ) - dagbdagb Update SMART extension documentation ( #11330 ) - raphaelyancey Update Performance.md ( #11298 ) - dagbdagb Update Dispatcher-Service.md ( #11297 ) - dagbdagb Fix dockerized postfix app wrong url ( #11285 ) - jozefrebjak Add quotes around the word mail ( #11267 ) - danislav Update SNMP-Trap-Handler.md ( #11263 ) - jozefrebjak Fix includes/defaults.inc.php references ( #11249 ) - dlangille Update SSL-Configuration.md ( #11223 ) - fhlmbrg Health Sensor Advanced Discovery Example ( #11179 ) - h-barnhart Translation French translation update ( #11293 ) - PipoCanaja 1.61 (2020-03-01) A big thank you to the following 21 contributors this last month: SourceDoctor (22) PipoCanaja (15) josephtingiris (9) murrant (8) mpikzink (7) Jellyfrog (4) gabrielRojasNew (4) joseUPV (3) kedare (3) kkrumm1 (2) h-barnhart (1) FingerlessGlov3s (1) danislav (1) joretapoo (1) wikro (1) pepperoni-pi (1) gcotone (1) lehuizi (1) Pluppo (1) Atroskelis (1) jasoncheng7115 (1) Thanks to maintainers and others that helped with pull requests this month: kkrumm1 (24) SourceDoctor (21) PipoCanaja (20) Jellyfrog (17) murrant (14) laf (7) louis-oui (1) arrmo (1) Feature Option to default open Location Map on Device View ( #11167 ) - SourceDoctor Community 10946, Option -r for ping.php ( #11161 ) - danislav Extra VLAN mapping in AOS specific FDB module ( #11145 ) - joseUPV Puppet Agent Monitoring ( #10827 ) - SourceDoctor Device Aruba cluster userfriendly read ( #11217 ) - mpikzink IOSXE ignore macSecControlledIF and macSecUncontrolledIF ifTypes ( #11214 ) - pepperoni-pi Additional OPNsense detection ( #11196 ) - FingerlessGlov3s Added Cambium PTP670 ( #11186 ) - PipoCanaja Add basic support for PICA8 devices ( #11185 ) - PipoCanaja Add the serial to aruba-instant devices ( #11184 ) - mpikzink Huawei MIB updates ( #11181 ) - PipoCanaja Adva FSP150cc Health Sensors ( #11168 ) - h-barnhart Add support for reading advertised BGP prefixes ( #11147 ) - kedare Bug - Correct RFC1213 route discovery ( #11144 ) - PipoCanaja Aruba Controller ->Correct AP Power value ( #11122 ) - joseUPV Support for Teldat routers ( #11118 ) - PipoCanaja Add serial to Epson printer ( #11111 ) - mpikzink Add Janitza Power Sensors ( #11110 ) - mpikzink Add Serialnumber to HP und Konica printers ( #11106 ) - mpikzink Adding support for Cisco SB SX550X-24F switch ( #11098 ) - Pluppo Added rittal-cmc (LCP Plus) ( #11091 ) - mpikzink Improve Huawei VRP bgp discovery ( #11054 ) - PipoCanaja Webui Running Alerts colorized depending on to their severity ( #11210 ) - SourceDoctor Dashboard Widget Availability - show Hostname ( #11208 ) - SourceDoctor Move storage module settings to discovery tab ( #11206 ) - murrant Update JS deps ( #11203 ) - murrant Fix global settings array validate messages ( #11199 ) - murrant Global Settings - Uptime Warning ( #11198 ) - SourceDoctor Global Settings - Mountpoint ignore options ( #11197 ) - SourceDoctor Global search by IP address ( #11165 ) - josephtingiris Add Size column to edit Storage Settings table ( #11164 ) - josephtingiris Equalize default Poller Group Naming ( #11156 ) - SourceDoctor Configurable Alert Rule default settings ( #11152 ) - SourceDoctor Change Device, Group, Location - Order ( #11141 ) - SourceDoctor Alert Rule label fix ( #11137 ) - SourceDoctor Fix android-chrome icons ( #11136 ) - josephtingiris Update devices last_ping along with device_perf ( #11117 ) - josephtingiris Renovated Alert Rules ( #11115 ) - josephtingiris Fix inventory page hostname/sysname and default generate_device_link behaviour ( #11114 ) - kedare Hide \"devices added\" for devices that existed before #11104 ( #11107 ) - josephtingiris Add a space for times like '1 minute' ( #11105 ) - josephtingiris Show when a device was added and last discovered ( #11104 ) - josephtingiris Speed up canAccessDevice/devicesForUser ( #10992 ) - Jellyfrog Api BGP API: Add filter by remote ASN ( #11204 ) - kedare Add alert_rule filtering to API ROUTE \"list_alerts\" ( #11109 ) - gcotone Added add and remove parents for device from the V0 API ( #11100 ) - gabrielRojasNew Created add, edit, remove location and edit, remove services to the v\u2026 ( #11080 ) - gabrielRojasNew Alerting Copy existing Alert Rule ( #11195 ) - SourceDoctor More verbose Alert Detail Fallback ( #11153 ) - SourceDoctor Alert Rule default update ( #11143 ) - SourceDoctor Ping Latency Check to Alert Collection ( #11139 ) - SourceDoctor Location based Alert Rule ( #11128 ) - SourceDoctor Default alert rules remove Devices up/down ( #11124 ) - kkrumm1 Discovery MPLS Route discovery - Wrong variable assignation order ( #11103 ) - PipoCanaja Polling Reduce DB polling while getting SNMP data ( #11162 ) - SourceDoctor Mark assigned default Poller Group ( #11112 ) - SourceDoctor Change Poller time validation ( #11108 ) - joseUPV Bug Device Page: Remove csrf token from url when updating url ( #11180 ) - murrant Space on type like \"OOB Management\" cause issue on smokeping, edit ge\u2026 ( #11160 ) - joretapoo Invalidate 'Wrong Type' snmp_walk() data ( #11159 ) - josephtingiris Fix invalid dnos test data ( #11158 ) - murrant Fix SSO Auth test ( #11155 ) - murrant PHP hashes are case sensitive. ( #11151 ) - wikro Change ups-nut sensors ( #11113 ) - mpikzink Fixed unix-agent polling bug where the called method can't be found ( #11102 ) - lehuizi Documentation Correct docs menu name ( #11207 ) - Jellyfrog Added documentation to edit, delete services and locations ( #11193 ) - gabrielRojasNew Added steps to split DB off to its own server ( #11130 ) - SourceDoctor Added yum-config-manager to Remi install ( #11033 ) - Atroskelis Translation Update settings.php translation string ( #10928 ) - jasoncheng7115 Misc Validate that php sockets is available ( #11177 ) - murrant 1.60 (2020-02-04) A big thank you to the following 33 contributors this last month: SourceDoctor (19) louis-oui (12) josephtingiris (11) martijn-schmidt (3) vitalisator (2) murrant (2) h-barnhart (2) joshuabaird (2) LEV82 (2) cjwbath (2) arrmo (2) nistorj (1) kkrumm1 (1) AnaelMobilia (1) clmcavaney (1) arjitc (1) dagbdagb (1) Jellyfrog (1) klui2k1 (1) ccperilla (1) laf (1) craig-nokia (1) JohnSPeach (1) zombah (1) opalivan (1) mpikzink (1) TheGreatDoc (1) HostIRE (1) willhseitz (1) SpaceDump (1) xorrkaz (1) ajsiersema (1) PipoCanaja (1) Thanks to maintainers and others that helped with pull requests this month: kkrumm1 (45) PipoCanaja (32) Jellyfrog (18) laf (3) murrant (3) Feature Maintenance Mode for a complete Location ( #11089 ) - SourceDoctor Alternate Poller IP instead of Hostname ( #10981 ) - SourceDoctor Device Fixed missing PoE graphs for Cisco devices ( #11087 ) - ajsiersema Fix Air Fiber port stats ( #11079 ) - murrant Added OS definition and discovery for SIAE Alfo80HD ( #11063 ) - HostIRE Added WUT Humidity and Temperature Sensors ( #11053 ) - mpikzink Create CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB ( #11052 ) - opalivan Minor updates for dd-wrt, clarify snmp source better ( #11051 ) - arrmo Add Zyxel MGS-3712 Sensors ( #11050 ) - vitalisator Update IOS-XR with NCS-5500 support ( #11044 ) - zombah Add sensors to Infoblox discovery (nios.yaml) ( #11043 ) - JohnSPeach Update timos.inc.php ( #11040 ) - craig-nokia Fixed issue with SNMP contexts using vlan 1002-1005 on IOS devices ( #11031 ) - nistorj Create TRIPPLITE-PRODUCTS ( #11028 ) - arjitc Add support for TRENDnet switch ( #11007 ) - arrmo Add ifotec definition file ( #11005 ) - AnaelMobilia Correct preg_match() pattern on line 5 ( #10999 ) - josephtingiris Fix Siklu Voltage Sensor ( #10997 ) - joshuabaird Add state sensor for Packetflux Sitemonitor Switch Input ( #10994 ) - joshuabaird Add Lancom OAP-321 Wireless AP ( #10982 ) - vitalisator Update IronWare sensors & bgp-peers discovery, allow skip_values to target a specific index appended to the OID ( #10941 ) - martijn-schmidt FDB for ArubaOS ( #10940 ) - klui2k1 Extend FS switches support, handle lowerLayerDown ifOperStatus ( #10904 ) - PipoCanaja Webui Mark Devices in Maintenance Mode ( #11092 ) - SourceDoctor Fix missing ACK & Notes modals on device alert page ( #11076 ) - josephtingiris Poller Group Management - Device Count ( #11073 ) - SourceDoctor Order Poller Group by Name ( #11072 ) - SourceDoctor Change Poller Group on Device Settings ( #11071 ) - SourceDoctor Fixed device SNMP edit form (and better feedback) ( #11068 ) - josephtingiris Oxidized GUI tweaks ( #11066 ) - cjwbath Add aggregate totals to multiport_bits graph, similar to port_bits ( #11065 ) - willhseitz Format the Device Module Naming like in global Settings ( #11061 ) - SourceDoctor Allow findOsImage() to also use the first two words of $feature ( #11049 ) - josephtingiris Highlight Device Dependency Path to Dependency Root Device(s) ( #11025 ) - SourceDoctor Support of \"disable alerting\" in availability map and device summary widget ( #11022 ) - louis-oui Highlight isolated Devices (Devices with no Dependencies) ( #11018 ) - SourceDoctor Clarify doc and webui for ignore tag on devices, ports, components and services ( #11016 ) - louis-oui \"Disable alerting\" on device disables alert rules check (not just alert transport) ( #11015 ) - louis-oui Clarify disable, ignore and disable all alerts in device edit section ( #11011 ) - louis-oui Add Blade directives for common Url functions ( #10995 ) - Jellyfrog Alertlog stats dashboard widget ( #10967 ) - louis-oui Add alert rule option to invert devices and groups \"map to\" list ( #10954 ) - louis-oui Graphing Device Dependency ( #10916 ) - SourceDoctor Add 'alert history' widget for dashboard ( #10901 ) - louis-oui Discovery Module and Poller Module configuration via Global Settings Web GUI ( #10854 ) - SourceDoctor Snmp Traps VMWare Guest State Traps and UI ( #11035 ) - h-barnhart SNMP Traps for Juniper Power Supplies ( #10965 ) - h-barnhart Applications Show Alert Detail for Applications ( #11088 ) - SourceDoctor Asterisk app: add IAX2 peer graphs ( #11078 ) - josephtingiris PureFTPd Application ( #11048 ) - SourceDoctor Alerting Remove also Associations by deleting Scheduled Maintenance ( #11093 ) - SourceDoctor Remove redundant data from Alert fallback detail ( #11081 ) - SourceDoctor Cisco Spark Do not strip tags when markdown is in use. ( #11075 ) - xorrkaz Added fix for escaping underscore while using Markdown ( #11070 ) - SpaceDump Add alert rule option to invert devices and groups \"map to\" list ( #11038 ) - louis-oui Do not update alert timestamp when updating a triggered alert ( #10907 ) - louis-oui Billing SNMP counters validation ( #11037 ) - ccperilla Discovery Don't overwrite real port ids with zeros in the FDB ( #11041 ) - cjwbath Add bad_ifoperstatus for filtering interfaces having a status for example 'notPresent' ( #10977 ) - LEV82 Polling Don't dnslookup if overwrite IP is configured ( #11084 ) - SourceDoctor Optimize DB update of ports and ports_statistics tables when polling ( #10792 ) - louis-oui Bug Revert ironware BGP-peers changes from PR #10941 ( #11096 ) - martijn-schmidt Fix snmptranslate exception ( #11085 ) - josephtingiris Updated test data for arubaos, fs-switch, ifotec, lcos, siklu and trendnet, to pass Travis tests ( #11067 ) - LEV82 Fix FatalThrowableError in forgetAttrib() ( #11064 ) - josephtingiris Fix SQL constraint violation, 'port_id' cannot be null ( #11055 ) - josephtingiris Fix alerts not displayed ( #11034 ) - louis-oui Fix & amend broken $num_ports query on line 83 ( #11013 ) - josephtingiris Bugfix the snmpsim collector: use the correct mibdir ( #11003 ) - martijn-schmidt In rrdtool_escape(), fix invalid length ( #11001 ) - josephtingiris Refactor Centralize Application Display Naming ( #11047 ) - SourceDoctor Remove uneeded table header ( #11029 ) - SourceDoctor Always update widget seeds when db update ( #10917 ) - louis-oui Cleanup Fixing PHP incompatibility issue with PHP 7.4 ( #11030 ) - clmcavaney Documentation SELinux fix for syslog-ng with LibreNMS on Centos ( #11014 ) - dagbdagb Translation Correct 'shortend' misspelling ( #11000 ) - josephtingiris Old Changelogs","title":"Changelog"},{"location":"General/Changelog/#169","text":"(2020-11-01) A big thank you to the following 34 contributors this last month: Jellyfrog (23) murrant (23) PipoCanaja (7) SourceDoctor (4) dagbdagb (3) ottorei (2) hanserasmus (2) bakerds (2) willhseitz (2) robje (2) Olen (2) gerhardqux (1) diegocanton (1) Negatifff (1) TheGreatDoc (1) avinash403 (1) rkojedzinszky (1) lowinger42 (1) FingerlessGlov3s (1) tim427 (1) mjeffin (1) guipoletto (1) DerTFL (1) gil-obradors (1) clarkchentw (1) h-barnhart (1) CameronMunroe (1) ibigbug (1) corsoblaster (1) dorkmatt (1) MarlinMr (1) bofh80 (1) p4k8 (1) TheMysteriousX (1) Thanks to maintainers and others that helped with pull requests this month: Jellyfrog (36) murrant (34) SourceDoctor (17) PipoCanaja (4)","title":"1.69"},{"location":"General/Changelog/#feature","text":"Optional availability calculation mode to allow planned maintenance ( #12218 ) - ottorei Yaml support to translate sysObjectID to get hardware ( #12187 ) - murrant IRC Add simple tag-parsing of colors and highlights in alerts ( #12138 ) - Olen Add refresh in widget settings ( #12127 ) - Negatifff Added new authalgo support for SNMPv3 ( #11966 ) - hanserasmus","title":"Feature"},{"location":"General/Changelog/#security","text":"Remove legacy password algorithms and move to Laravel standard ( #12252 ) - Jellyfrog Validate dashboard id ( #12219 ) - murrant Fix SQL injection vulnerability in MAC Accounting graph ( #12204 ) - murrant","title":"Security"},{"location":"General/Changelog/#device","text":"Basic support for Sophos xg v18 ( #12251 ) - corsoblaster Convert VyOS to yaml ( #12231 ) - Jellyfrog Fix wrong Zyxel GS1900 Q-BRIDGE replies (fdb-table) ( #12230 ) - PipoCanaja Add supermicro SVG logo ( #12222 ) - gil-obradors Fix Oki LAN OS info ( #12213 ) - murrant Initial support for DC-UPS-48 from algcom ( #12209 ) - guipoletto Put all Eaton mibs in the same subdir, update mibs, update YAML-files ( #12197 ) - dagbdagb Add a bunch more Brocade Ironware devices ( #12191 ) - robje Add opengear hardware discovery ( #12189 ) - murrant All os detection now uses Yaml ( #12186 ) - murrant New device: Rohde & Schwarz Sx800 ( #12181 ) - TheGreatDoc Add support for Supermicro hardware/serial discovery ( #12176 ) - Jellyfrog Add FreshTomato OS definition which is fork of tomato ( #12173 ) - FingerlessGlov3s Ciena SAOS 8 device improvements ( #12172 ) - bakerds Make Eaton Gigabit Network Card (AKA M2) a separate OS ( #12156 ) - dagbdagb New sensors for siteboss OS + new sensor type: percentage (%) ( #11958 ) - willhseitz","title":"Device"},{"location":"General/Changelog/#webui","text":"Fixed display \"Power Status\" for libvirt vm's ( #12283 ) - DerTFL Allow pre-formatted logon message ( #12281 ) - murrant Fix - only get shortlabel from vlan if it has ports ( #12267 ) - SourceDoctor Webui - Corrected swapped ul/dl Max Rate ( #12255 ) - PipoCanaja Permissions query fixes ( #12220 ) - murrant Health Overlib Correction ( #12203 ) - SourceDoctor Additional fix for Cisco Crossbar overview missing ( #12185 ) - lowinger42 Convert Device>vlan view to Laravel ( #12163 ) - Jellyfrog Add Blade Submenu component ( #12159 ) - Jellyfrog","title":"Webui"},{"location":"General/Changelog/#graphs","text":"Add two day period to graph widget ( #12210 ) - murrant","title":"Graphs"},{"location":"General/Changelog/#applications","text":"Bug - Typo in bind application polling ( #12276 ) - PipoCanaja Force lower case variable $unbound[] - Unbound polling ( #12178 ) - diegocanton","title":"Applications"},{"location":"General/Changelog/#api","text":"Api functions - device_availability device_outages quick fix ( #12270 ) - bofh80","title":"Api"},{"location":"General/Changelog/#alerting","text":"Show response on error ( #12228 ) - ibigbug","title":"Alerting"},{"location":"General/Changelog/#polling","text":"Update DSL stats even if port is down ( #12262 ) - PipoCanaja Fix dispatcher crash on restart ( #12257 ) - murrant Allow nullable ospf auth ( #12249 ) - willhseitz","title":"Polling"},{"location":"General/Changelog/#bug","text":"Fix permissions bug in IRC ( #12266 ) - murrant Snmpwalk_cache_oid() handle multiline strings ( #12254 ) - murrant Fix sql query syntax error ( #12248 ) - Jellyfrog Fix device url ( #12234 ) - Jellyfrog Add space between manufacturer and hardware ( #12233 ) - Jellyfrog Move device exist check to prevent error ( #12232 ) - Jellyfrog Bug - Check group os file before inclusion ( #12227 ) - PipoCanaja Fix return value on deleting a Device Group ( #12225 ) - SourceDoctor Fix typo cause empty data for NFS Server ( #12223 ) - clarkchentw Update only latest Null Value Row in Outages Table ( #12206 ) - ottorei Ircbot fix ( #12192 ) - robje Fix Linux OS mib_dir usage ( #12190 ) - Jellyfrog Fix lnms update command ( #12182 ) - murrant Do not remove users with API tokens ( #12162 ) - gerhardqux IRC fix joining alert channel(s) ( #12160 ) - Olen Fix midnight poller data loss ( #11582 ) - TheMysteriousX","title":"Bug"},{"location":"General/Changelog/#refactor","text":"Cleanup generate_sensor_link ( #12154 ) - SourceDoctor Support multiple daily process locking backends with distributed polling ( #11896 ) - murrant","title":"Refactor"},{"location":"General/Changelog/#documentation","text":"Update SNMP-Configuration-Examples.md ( #12265 ) - MarlinMr Clarify non-x86 hardware info sources for snmpd ( #12253 ) - dorkmatt Improve Services documentation ( #12226 ) - CameronMunroe Added instructions for rsyslog version 8 ( #12224 ) - h-barnhart Fixed the IRC-Bot Extensions link ( #12216 ) - tim427 Add table of content to installation guide ( #12202 ) - Jellyfrog Update Install-LibreNMS.md ( #12201 ) - mjeffin Add docs for Supermicro Superdoctor ( #12200 ) - Jellyfrog Updated linux snmpd.conf example ( #12195 ) - murrant Ignore changelog in docs search ( #12194 ) - Jellyfrog Add missing mkdocs extension ( #12193 ) - Jellyfrog Icecast doc correction ( #12183 ) - avinash403 Suggest Fast Ping before 1 Minute Polling ( #12179 ) - murrant Update Initial-Detection.md ( #12174 ) - bakerds Update Example-Hardware-Setup.md ( #12170 ) - dagbdagb Don't index changelogs ( #12166 ) - murrant","title":"Documentation"},{"location":"General/Changelog/#tests","text":"Capture OSPF test data ( #12215 ) - murrant Scheduled maintenance test ( #12171 ) - murrant","title":"Tests"},{"location":"General/Changelog/#misc","text":"Apply fixes from StyleCI ( #12285 ) - Jellyfrog Change of default .pdf font ( #12278 ) - p4k8 Accommodate upcoming php 7.3 change ( #12180 ) - hanserasmus Add missing primary keys ( #12106 ) - rkojedzinszky","title":"Misc"},{"location":"General/Changelog/#dependencies","text":"Update PHP dependencies ( #12169 ) - murrant","title":"Dependencies"},{"location":"General/Changelog/#168","text":"(2020-09-29) A big thank you to the following 44 contributors this last month: murrant (14) Jellyfrog (12) Olen (6) SourceDoctor (4) craig-nokia (4) PipoCanaja (3) nathanshiaulam (2) opalivan (2) TheGreatDoc (2) Negatifff (2) magnuslarsen (1) jozefrebjak (1) dupondje (1) nightcore500 (1) cmarmonier (1) crcro (1) TheMysteriousX (1) sjtarik (1) thomcatdotrocks (1) teunvink (1) arrmo (1) jasoncheng7115 (1) QuadPiece (1) avinash403 (1) pobradovic08 (1) q7joey (1) ospfbgp (1) n-lyakhovoy (1) BirkirFreyr (1) hugalafutro (1) dagbdagb (1) cliffalbert (1) deajan (1) hanserasmus (1) bestlong (1) louis-oui (1) bekreyev (1) kvedder-amplex (1) damonreed (1) Blorpy (1) h-barnhart (1) kanokc (1) dependabot (1) CirnoT (1) Thanks to maintainers and others that helped with pull requests this month: Jellyfrog (52) murrant (20) PipoCanaja (8) SourceDoctor (1) TheGreatDoc (1) Negatifff (1)","title":"1.68"},{"location":"General/Changelog/#feature_1","text":"Add functionality to use snmp-scan.py to add to specific poller group ( #12029 ) - nathanshiaulam","title":"Feature"},{"location":"General/Changelog/#device_1","text":"Fix edgeswitch regex ( #12168 ) - Jellyfrog UBNT switch discovery issue-12133 ( #12167 ) - kanokc Improve DNOS fallback os info ( #12165 ) - murrant Windows detect newer versions ( #12164 ) - murrant Fix older ProCurve hardware/version ( #12155 ) - murrant Eaton mgeups fixes ( #12150 ) - dagbdagb Adding basic support for Symertricom-Microsemi SSU2000 ( #12145 ) - craig-nokia TAIT - Chassis, Software and Serial detection ( #12131 ) - opalivan Mistake in ddmDiagnosisRXPower OID ( #12114 ) - n-lyakhovoy Add NoBulk Option for Sitemonitor ( #12100 ) - kvedder-amplex Convert OS discovery to new style ( #12099 ) - murrant Device support for Tait Infra93 ( #12093 ) - opalivan Add detection of Cisco ftd 4115 ( #12092 ) - Blorpy Add basic support for Emerson Netsure Controllers ( #12091 ) - craig-nokia New OS: Ekinops ( #12088 ) - h-barnhart Add basic support for GE Galaxy Pulsar Plus Controllers ( #12087 ) - craig-nokia Add Sensatronic E4-16 support ( #12083 ) - q7joey Add support for VOSS switches VSP-4900-12MXU-12XE, XA1440, and XA1480 ( #12072 ) - ospfbgp Added Migrating... state ( #12071 ) - TheGreatDoc Added Nokia timos SFP RX/TX dbm sensors ( #12065 ) - craig-nokia Add support for Beagleboard ( #12060 ) - arrmo Fix atenpdu sensors ( #12055 ) - murrant Adding serial number discovery to aruba os poller ( #12053 ) - sjtarik Osnexus quantastor initial support ( #12045 ) - crcro Ifotec product integration ( #12038 ) - cmarmonier Fix incorrect eth0 status for Ubiquiti AirFiber 5XHD ( #12025 ) - nightcore500 Synology DSM: Moved to yaml discovery ( #11962 ) - TheGreatDoc Added support for OS detection from NXOS and UCS ( #11722 ) - magnuslarsen Updated Support of Smartax GPON OLT ( #11719 ) - jozefrebjak","title":"Device"},{"location":"General/Changelog/#webui_1","text":"Fix editing schedule maintenance ( #12079 ) - louis-oui Replace VyOS' .png with .svg ( #12067 ) - QuadPiece Fixed URL of detailed graphs for jitter SLA probe ( #11984 ) - pobradovic08 Speedup vlans list in device VLANS tab ( #11805 ) - Negatifff","title":"Webui"},{"location":"General/Changelog/#snmp-traps","text":"More eventlogs for snmptraps ( #12112 ) - PipoCanaja","title":"Snmp Traps"},{"location":"General/Changelog/#applications_1","text":"Fix queries RRD graph. ( #12152 ) - hugalafutro Icecast, Opensips and Voip monitor Application ( #12070 ) - avinash403","title":"Applications"},{"location":"General/Changelog/#api_1","text":"API Calls to list Device Outages, calculated Availability ( #12103 ) - SourceDoctor","title":"Api"},{"location":"General/Changelog/#billing","text":"Fix billing showing estimated transfer based on total of 1 days if billing day is first ( #10445 ) - CirnoT","title":"Billing"},{"location":"General/Changelog/#discovery","text":"Fix skip_value_lt plurality confusion ( #12056 ) - murrant","title":"Discovery"},{"location":"General/Changelog/#polling_1","text":"Include ifName for bad_ifXEntry OS ( #12104 ) - murrant","title":"Polling"},{"location":"General/Changelog/#rancid","text":"Add paloalto panos to gen_rancid.php ( #12161 ) - BirkirFreyr Add support for H3C/Comware ( #12144 ) - cliffalbert Since Rancid 3, the separator is ; ( #11688 ) - dupondje","title":"Rancid"},{"location":"General/Changelog/#bug_1","text":"Make sure 1st admin user creation does not fail with error 500 ( #12119 ) - deajan Fix to show Routing Count in Pagemenu Selector ( #12111 ) - SourceDoctor Fix CiHelper function checkPythonExec to use 'pip3 install --user' and improve error message ( #12097 ) - damonreed Fix arp-search search ( #12075 ) - Jellyfrog Improve mib_dir setting consistency ( #12069 ) - murrant Matrix txnid fix ( #12057 ) - thomcatdotrocks","title":"Bug"},{"location":"General/Changelog/#refactor_1","text":"Allow index rename migration to recover partially completed previous run ( #12084 ) - murrant Rewrite smokeping script to be an lnms command ( #11585 ) - TheMysteriousX","title":"Refactor"},{"location":"General/Changelog/#documentation_1","text":"Update Application Docs for Unbound ( #12151 ) - SourceDoctor Use lnms dev:check instead of pre-commit.php ( #12149 ) - murrant ARP endpoint can search by MAC ( #12129 ) - murrant Update Oxidized docs ( #12116 ) - hanserasmus Begins with / Ends with, SQL example is reverse ( #12113 ) - bestlong MySQL Documentation Update ( #12085 ) - SourceDoctor Update Distributed-Poller.md ( #12074 ) - nathanshiaulam Remove broken link ( #12059 ) - teunvink","title":"Documentation"},{"location":"General/Changelog/#translation","text":"Update ru.json ( #12109 ) - bekreyev","title":"Translation"},{"location":"General/Changelog/#misc_1","text":"New index in alert_log table ( #12143 ) - Negatifff IRC Add more logging and debug info ( #12140 ) - Olen Don't set nick on each tick ( #12139 ) - Olen List external commands in help. Allow reload of external commands ( #12137 ) - Olen Increase the read-buffer as 64 bytes can be a little small ( #12136 ) - Olen Remove unused \"irc_chan\". Renamed to \"irc_alert_chan\" ( #12135 ) - Olen Add some variables to the init of the class ( #12134 ) - Olen Cast device_id to int to prevent type error in deviceCache::get() ( #12076 ) - Jellyfrog Add attach sysName to Prometheus. ( #12061 ) - jasoncheng7115","title":"Misc"},{"location":"General/Changelog/#dependencies_1","text":"Set PHP 7.3 as minimum supported version ( #12118 ) - Jellyfrog Bump http-proxy from 1.18.0 to 1.18.1 ( #12081 ) - dependabot","title":"Dependencies"},{"location":"General/Changelog/#167","text":"(2020-09-03) A big thank you to the following 23 contributors this last month: Jellyfrog (10) TheGreatDoc (5) hanserasmus (5) SourceDoctor (5) murrant (4) Negatifff (2) bofh80 (2) pobradovic08 (2) arrmo (2) dependabot (2) jozefrebjak (1) Jarod2801 (1) Zmegolaz (1) Najihel (1) TheMysteriousX (1) craig-nokia (1) sprich96 (1) raphael247 (1) nathanshiaulam (1) m4rcu5 (1) nbyers (1) rjmidau (1) nightcore500 (1) Thanks to maintainers and others that helped with pull requests this month: Jellyfrog (27) murrant (14) TheGreatDoc (5) SourceDoctor (4) PipoCanaja (1) rigocalin (1) Cormoran96 (1)","title":"1.67"},{"location":"General/Changelog/#feature_2","text":"Show Device Outages as Log List ( #12011 ) - SourceDoctor Availability Calculation for all Devices ( #12004 ) - SourceDoctor","title":"Feature"},{"location":"General/Changelog/#device_2","text":"Detect additional TrueNAS hardware types ( #12052 ) - TheMysteriousX Fix 'unused data sent totalconns' in BigIP LTM Pool Members ( #12041 ) - rjmidau Expand endrun os support ( #12008 ) - hanserasmus Nokia 7705 packet microwave ( #12007 ) - craig-nokia Add Cisco Firepower 1140 ( #12006 ) - Najihel Updated documentation and Discovery, to match Asuswrt-Merlin PR ( #11999 ) - arrmo Arista EOS: Added groups and better sensor names ( #11990 ) - TheGreatDoc Cisco SLA jitter tag ( #11983 ) - pobradovic08 Fix qnap state graphs ( #11976 ) - TheGreatDoc Added support for FS NMU ( #11965 ) - jozefrebjak Wireless support for Asuswrt-Merlin (the same as Openwrt) ( #11964 ) - arrmo Fixed Ubiquiti Airfiber LTU retrieval ( #11844 ) - nightcore500","title":"Device"},{"location":"General/Changelog/#webui_2","text":"Only show smokeping in menu if enabled ( #12019 ) - Negatifff Small update to installation steps ( #12016 ) - hanserasmus Add crossorigin policy to link rel manifest ( #12005 ) - Zmegolaz Only show smokeping link if the url is configured ( #11992 ) - Jellyfrog Convert LastSync date for oxidized config info ( #11779 ) - Negatifff","title":"Webui"},{"location":"General/Changelog/#graphs_1","text":"Set RRD minimum to 0 to see the real change relation in app Smart, Mdadm and Certificate ( #11986 ) - SourceDoctor","title":"Graphs"},{"location":"General/Changelog/#alerting_1","text":"Matrix alert transport ( #12018 ) - raphael247 Clean up default alert rules ( #12014 ) - murrant","title":"Alerting"},{"location":"General/Changelog/#polling_2","text":"Use overwrite_ip when set on devices for ping checks ( #12022 ) - nathanshiaulam Increase default RRD data retention of MIN, MAX, and LAST to match AVERAGE ( #11995 ) - pobradovic08","title":"Polling"},{"location":"General/Changelog/#bug_2","text":"Corrected alert_rules.json file to container proper JSON. ( #12033 ) - nbyers Fix fping6 config definition ( #12003 ) - TheGreatDoc Restore device inventory logic after 055abcf ( #11993 ) - Jellyfrog Hide pip3 missing validate error ( #11987 ) - murrant Full path to python requirements check ( #11982 ) - murrant Python requirements check, use sys.exit ( #11981 ) - murrant Add default values to cast ( #11977 ) - Jellyfrog Add type hinting to devicecache ( #11975 ) - Jellyfrog Fix automatic service discovery ( #11963 ) - bofh80","title":"Bug"},{"location":"General/Changelog/#documentation_2","text":"Update Smokeping.md ( #12048 ) - TheGreatDoc Rewrite the docs for OS discovery ( #12047 ) - Jellyfrog Rewrite the test data capture section ( #12046 ) - Jellyfrog Update Fast Ping Check docs ( #12024 ) - hanserasmus Update PortGroups.md ( #12015 ) - sprich96 Update Applications Docs for Apache Agent ( #12009 ) - hanserasmus Fixed header anchors in RRDCached Documentation ( #12002 ) - hanserasmus Update Install-LibreNMS.md ( #12001 ) - Jarod2801","title":"Documentation"},{"location":"General/Changelog/#misc_2","text":"Update travis to Ubuntu 18.04 ( #12043 ) - Jellyfrog Fix missing 'nets' for autodiscovery ( #12039 ) - bofh80 Handle unknown device_type's. ( #12031 ) - m4rcu5 Move Availability Setting to Poller ( #12021 ) - SourceDoctor Cleanup Database Tables on Host Deletion ( #12012 ) - SourceDoctor Add missing index for device_perf ( #11974 ) - Jellyfrog","title":"Misc"},{"location":"General/Changelog/#dependencies_2","text":"Bump symfony/http-kernel from 5.1.2 to 5.1.5 ( #12049 ) - dependabot Bump elliptic from 6.5.2 to 6.5.3 ( #11988 ) - dependabot","title":"Dependencies"},{"location":"General/Changelog/#166","text":"(2020-07-30) A big thank you to the following 28 contributors this last month: murrant (17) Jellyfrog (8) SourceDoctor (5) TheGreatDoc (4) peelman (4) cppmonkey (2) TheMysteriousX (2) arrmo (2) seros1521 (2) hanserasmus (2) NotARobotDude (1) allwaysoft (1) Oirbsiu (1) penfold1972 (1) cwispy (1) hrtrd (1) louis-oui (1) ppasserini (1) kleinem86 (1) javichumellamo (1) CirnoT (1) awein (1) Wooboy (1) AnaelMobilia (1) twelch24 (1) hp197 (1) dependabot (1) craig-nokia (1) Thanks to maintainers and others that helped with pull requests this month: Jellyfrog (28) murrant (26) SourceDoctor (11) githonk (1) kkrumm1 (1) laf (1)","title":"1.66"},{"location":"General/Changelog/#security_1","text":"Add permission support to Oxidized config search ( #11928 ) - Jellyfrog Fix sql injection ( #11923 ) - murrant Fix SQL injections in ajax_table.php ( #11920 ) - Jellyfrog Sanitize graph title input ( #11919 ) - Jellyfrog Add more types to settings page ( #11918 ) - Jellyfrog Fix settings access ( #11915 ) - murrant","title":"Security"},{"location":"General/Changelog/#device_3","text":"Fix USW detection again ( #11978 ) - murrant Add Canon iPF series ( #11959 ) - Wooboy Added basic EndRun support ( #11932 ) - hanserasmus QNAP NAS - Added state rules to collection ( #11931 ) - TheGreatDoc QNAP NAS - Added RAID states for each volume. ( #11930 ) - TheGreatDoc CBQoS improvement ( #11926 ) - seros1521 Dell included a typo in their sysDescr ( #11917 ) - TheMysteriousX Added support for Fortinet FortiVoice devices ( #11914 ) - cppmonkey Support NetMan 204 ( #11913 ) - javichumellamo Added support for Eltek SmartPack2 Touch ( #11909 ) - cppmonkey Add Divisors to Eaton Matrix sensors ( #11906 ) - peelman Add support SNR Memory pool, dBm, voltage, current, fan speed and status ( #11888 ) - hrtrd Add support for Aten PE8216 PDU ( #11887 ) - cwispy Ciena SDS ( #11857 ) - penfold1972 Cisco PW: Correct interface names in response to the SNMP query of cpwVcName ( #11851 ) - Oirbsiu Initial Release, wireless sensor support for Openwrt ( #11768 ) - arrmo OS detection for Dell PowerVault MD arrays ( #11509 ) - TheMysteriousX","title":"Device"},{"location":"General/Changelog/#webui_3","text":"Fix encoded html entities in page title ( #11979 ) - murrant Fix netflow links ( #11971 ) - murrant Convert blade to panel component ( #11957 ) - Jellyfrog Fix wrong str::finish argument order ( #11955 ) - hp197 Show SysName in Availability Widget ( #11953 ) - SourceDoctor Convert device notes to blade ( #11952 ) - Jellyfrog Sort Neighbors by ifName, not bei ifAlias ( #11951 ) - SourceDoctor Make sure base_url always ends with / ( #11949 ) - murrant Change text from black to white availability-map ( #11946 ) - NotARobotDude Show Location on Poller Log ( #11945 ) - SourceDoctor LLDP Neighbour List - alphabetic sort ( #11944 ) - SourceDoctor Fix missing Munin controller tab definition ( #11943 ) - CirnoT Correct link for Rule, Location (Alerts, and several other pages) ( #11937 ) - arrmo Enhance Alert History Table View ( #11936 ) - SourceDoctor Black legend text in dark theme ( #11933 ) - twelch24 Fix users that set a non-array for cors ( #11921 ) - murrant Restore device alert tab ( #11897 ) - murrant Laravel 7.x Shift ( #11676 ) - Jellyfrog","title":"Webui"},{"location":"General/Changelog/#graphs_2","text":"Remove legacy code and fix missing device graphs ( #11950 ) - murrant Refresh device_bits graph; align column headers, use wider descriptio\u2026 ( #11922 ) - peelman Fix graphing with generic_v3_multiline_float ( #11916 ) - awein Mult graphs bits spacing ( #11907 ) - peelman","title":"Graphs"},{"location":"General/Changelog/#api_2","text":"CORS settings in webui ( #11912 ) - murrant","title":"Api"},{"location":"General/Changelog/#alerting_2","text":"Added Proxy support for Api Transport ( #11968 ) - kleinem86 Add alert rule error on invert map selected but no selection in device, group or location list ( #11894 ) - louis-oui","title":"Alerting"},{"location":"General/Changelog/#discovery_1","text":"Less strict sysName matching for neighbor discovery ( #11804 ) - seros1521","title":"Discovery"},{"location":"General/Changelog/#polling_3","text":"Fix bug when timeout exceeded ( #11934 ) - murrant Selected Port Polling, only try to optimize polling if enabled by global setting ( #11908 ) - peelman Added check for incorrect ifConnectorPresent truth values, if invalid\u2026 ( #11634 ) - craig-nokia","title":"Polling"},{"location":"General/Changelog/#bug_3","text":"Fix latency.blade.php to show smokeping integration ( #11980 ) - TheGreatDoc Dispatch Service Fix maintenance issues ( #11973 ) - murrant Fix .env path in daily.sh ( #11972 ) - murrant Fix QNAP os polling ( #11938 ) - TheGreatDoc Fix error about ob not started sometimes in migration ( #11927 ) - Jellyfrog","title":"Bug"},{"location":"General/Changelog/#refactor_2","text":"Simpler Python requirements check ( #11939 ) - murrant","title":"Refactor"},{"location":"General/Changelog/#documentation_3","text":"Update RRDCached.md ( #11967 ) - hanserasmus Update Smokeping.md ( #11956 ) - AnaelMobilia Fix missing doc OpenWRT ( #11924 ) - murrant","title":"Documentation"},{"location":"General/Changelog/#translation_1","text":"Simplify Chinese lang Translation ( #11905 ) - allwaysoft Update italian translation ( #11901 ) - ppasserini","title":"Translation"},{"location":"General/Changelog/#tests_1","text":"Fix route tests ( #11898 ) - murrant","title":"Tests"},{"location":"General/Changelog/#dependencies_3","text":"Bump lodash from 4.17.15 to 4.17.19 ( #11942 ) - dependabot","title":"Dependencies"},{"location":"General/Changelog/#165","text":"(2020-07-03) A big thank you to the following 42 contributors this last month: murrant (46) SourceDoctor (24) PipoCanaja (5) Jellyfrog (5) TheGreatDoc (4) Negatifff (4) TheMysteriousX (2) tamirhad (2) willhseitz (2) AnaelMobilia (2) yon2004 (2) pepperoni-pi (2) jasoncheng7115 (1) ppasserini (1) ajsiersema (1) ZoLuSs (1) cjwbath (1) joshuabaird (1) louis-oui (1) footstep86 (1) yac01 (1) robje (1) ryanheffernan (1) karrots (1) Martin22 (1) dupondje (1) opalivan (1) arrmo (1) moisseev (1) XxPatrickxX (1) kuhball (1) rkandilarov (1) hanserasmus (1) systeembeheer-rtvu (1) slashdoom (1) gardar (1) vitalisator (1) sorano (1) Derova (1) dependabot (1) Munzy (1) nepeat (1) Thanks to maintainers and others that helped with pull requests this month: murrant (48) SourceDoctor (27) Jellyfrog (20) PipoCanaja (11) TheGreatDoc (6) kkrumm1 (6) f0o (3) laf (2) LEV82 (1) hanserasmus (1) sorano (1)","title":"1.65"},{"location":"General/Changelog/#feature_3","text":"Devices List: Sort downtime and uptime ( #11829 ) - murrant Skip_value can check OID existance ( #11822 ) - PipoCanaja New Web Installer ( #11810 ) - murrant Device Availability Calculation ( #11784 ) - SourceDoctor Dispatcher Service settings ( #11760 ) - murrant Improve migration to release update channel ( #11669 ) - murrant","title":"Feature"},{"location":"General/Changelog/#security_2","text":"Prevent unauthorized access to device graphs ( #11878 ) - Jellyfrog","title":"Security"},{"location":"General/Changelog/#device_4","text":"Remove the last node from the arbor sysObjectId ( #11890 ) - TheMysteriousX Move qnap to yaml discovery + extended discovery ( #11882 ) - TheGreatDoc Added support for Integra E radios ( #11871 ) - Derova Add Riello Netman 204 support ( #11856 ) - sorano Cirpack states mapping ( #11855 ) - vitalisator Jacarta interSeptor support (environmental monitoring device) ( #11826 ) - systeembeheer-rtvu Make IPv6 discovery work on JunOS ( #11825 ) - TheMysteriousX Gigamon GigaVUE basic support ( #11824 ) - hanserasmus Add new hardware model for Eltek/enexus ( #11809 ) - willhseitz Arista sometimes returns NaN value when polling ( #11800 ) - tamirhad ArubaOS-CX Identification ( #11792 ) - XxPatrickxX Add Edgecore ES3526XA OID ( #11791 ) - moisseev Add Packetlight PL2000 support ( #11782 ) - opalivan Add Edgecore ECS4100-28T OID ( #11778 ) - Negatifff Imcopower - Fixed state in imcopower-big ( #11774 ) - Martin22 VRP FDB table correctly parsed on some CE switches ( #11766 ) - PipoCanaja Add APC Cooler detection ( #11764 ) - karrots Workaround for bad entSensorPrecision values ( #11757 ) - ryanheffernan VRP with new Discovery model for hw/serial etc ( #11756 ) - PipoCanaja Fix Samsung Printer ( #11752 ) - murrant Added Arista SN ( #11737 ) - TheGreatDoc F5 LTM bandwidth controller ( #11728 ) - yac01 Fix missing PoE port graphs for Cisco Catalyst 9K ( #11698 ) - ajsiersema Add OS support for Aviat WTM ( #11654 ) - joshuabaird New OS: DHCPatriot (dhcpatriot) ( #11472 ) - pepperoni-pi Arista VRF discovery support ( #11421 ) - PipoCanaja","title":"Device"},{"location":"General/Changelog/#webui_4","text":"Edit maintenance schedule, handle timezone properly ( #11889 ) - murrant Fix devices missing from graph view ( #11886 ) - murrant Auth AD URL Setting in Web UI ( #11884 ) - Munzy Fix some str_i_contains() usages ( #11877 ) - murrant Settings geocode lookup ( #11875 ) - murrant Fix last th min-width in manage device groups table ( #11860 ) - Negatifff Fix Cisco Crossbar overview missing ( #11839 ) - murrant Allow device url by hostname ( #11831 ) - murrant 404 when device does not exist ( #11830 ) - murrant Device Maintenance configurable duration ( #11821 ) - SourceDoctor Fix external auth auto-login ( #11813 ) - murrant Fix poller settings display ( #11801 ) - murrant Fix smokeping slave not found causing error ( #11799 ) - murrant Add device groups in overview tab ( #11796 ) - Negatifff Fixed typo in function htmlspecialchars within snmp edit ( #11794 ) - kuhball Fix 2 latency tab bugs ( #11787 ) - murrant Alert Template - sort Alert Rules alphabetic ( #11786 ) - SourceDoctor Lighter RRD graph colors ( #11759 ) - willhseitz Windows Device Overlib equal to Linux ( #11730 ) - SourceDoctor Widget hide-show search Field ( #11729 ) - SourceDoctor Don't call clean() on the inputs to the SNMP settings form ( #11709 ) - cjwbath Eventlog Application Alert in it's Severity Colour ( #11660 ) - SourceDoctor Fix availability map downtime ( #11638 ) - louis-oui Added ability to use JSON directly in Msteams Transport ( #11129 ) - pepperoni-pi","title":"Webui"},{"location":"General/Changelog/#graphs_3","text":"RRD Float Precision Customization ( #11853 ) - SourceDoctor Application Puppet Agent RRD Runtime Graph fix ( #11837 ) - SourceDoctor Show full description text on Asterisk RRDs ( #11742 ) - SourceDoctor","title":"Graphs"},{"location":"General/Changelog/#snmp-traps_1","text":"Added UPS-MIB Trap On Battery (upsTraps.0.1) ( #11776 ) - TheGreatDoc","title":"Snmp Traps"},{"location":"General/Changelog/#applications_2","text":"Application DHCP Upgrade ( #11661 ) - SourceDoctor Added discovery for ups-nut status ( #11606 ) - yon2004 Apps - backupninja ( #11010 ) - AnaelMobilia","title":"Applications"},{"location":"General/Changelog/#alerting_3","text":"Fix recurring maintenance days ( #11863 ) - murrant UPS Alert Rule Fix ( #11836 ) - SourceDoctor Fix alert last modified timestamps ( #11833 ) - murrant Make the Discord transport more formatted for Discord. ( #11461 ) - nepeat Maintenance Windows: recurring now works overnight ( #11389 ) - murrant","title":"Alerting"},{"location":"General/Changelog/#polling_4","text":"Fix process details on newer versions of windows checkmk agent ( #11840 ) - gardar Fix performance issue in loadbalancers module ( #11771 ) - tamirhad Implemented a generic approach for ifHighSpeed values that cannot be \u2026 ( #11504 ) - footstep86","title":"Polling"},{"location":"General/Changelog/#rancid_1","text":"Fix Rancid GIT ( #11795 ) - dupondje","title":"Rancid"},{"location":"General/Changelog/#bug_4","text":"Python 3.4 is the minimum requirement ( #11880 ) - Jellyfrog Fix unauthenticated graphs ( #11879 ) - murrant Make fping work when fping6 is not present ( #11868 ) - murrant Hotfix CustomOID visibility ( #11861 ) - SourceDoctor Restore SQL debug output ( #11832 ) - murrant Ping Perf fix while running Squid ( #11823 ) - SourceDoctor Fix pip3 validation ( #11788 ) - murrant Validate autoload first ( #11785 ) - murrant Change github-remove shebang to python3 ( #11753 ) - murrant Syslog -> Added colour priority to the label column ( #11607 ) - TheGreatDoc","title":"Bug"},{"location":"General/Changelog/#refactor_3","text":"PHP session is no longer required ( #11870 ) - murrant Fix validation and other issues when config.php is missing ( #11867 ) - murrant Reformat OS yaml so it is easier to read ( #11862 ) - murrant Auth middleware refinement ( #11767 ) - murrant","title":"Refactor"},{"location":"General/Changelog/#cleanup","text":"Cleanup functions.inc.php ( #11835 ) - SourceDoctor Change Units on Noise Floor ( #11790 ) - arrmo","title":"Cleanup"},{"location":"General/Changelog/#documentation_4","text":"Install change all tabs ( #11876 ) - murrant Update Services.md ( #11834 ) - slashdoom Bare Dashboard Option ( #11818 ) - SourceDoctor Fix typo on Debian install documentation ( #11816 ) - AnaelMobilia Added SNMP v3 configuration example for Mikrotik/ROS ( #11802 ) - rkandilarov Clearer python-memcached info ( #11772 ) - murrant Update and Consolidate Install docs Ubuntu 20.04 and CentOS 8 ( #11762 ) - murrant Application sudo correction ( #11741 ) - SourceDoctor Fix Application Sudo Example ( #11707 ) - ZoLuSs Update RRDCached Documentation ( #11516 ) - SourceDoctor Doc debian 10 updates ( #11488 ) - robje","title":"Documentation"},{"location":"General/Changelog/#translation_2","text":"Italian translation ( #11775 ) - ppasserini Update zh-tw language ( #11664 ) - jasoncheng7115","title":"Translation"},{"location":"General/Changelog/#tests_2","text":"Fix sqlite test failure ( #11847 ) - murrant","title":"Tests"},{"location":"General/Changelog/#misc_3","text":"Drop validation: group has write access ( #11873 ) - murrant Lnms script should not be owned or ran by root ( #11848 ) - murrant Debug pass-through exceptions for Ignition ( #11773 ) - murrant","title":"Misc"},{"location":"General/Changelog/#dependencies_4","text":"Bump websocket-extensions from 0.1.3 to 0.1.4 ( #11874 ) - dependabot Update PHP dependencies ( #11846 ) - murrant Replace laravel-vue-i18n-generator ( #11815 ) - Jellyfrog","title":"Dependencies"},{"location":"General/Changelog/#164","text":"(2020-05-31) A big thank you to the following 56 contributors this last month: murrant (56) SourceDoctor (22) PipoCanaja (13) hanserasmus (5) TheMysteriousX (5) TheGreatDoc (5) arjitc (4) arrmo (4) footstep86 (4) spencerryan (3) Jellyfrog (3) jozefrebjak (3) joseUPV (2) vitalisator (2) gardar (2) moisseev (2) bakerds (2) facuxt (2) gcotone (1) crazy-max (1) hachpai (1) VirTechSystems (1) PelNet (1) dsgagi (1) dagbdagb (1) stylersnico (1) karlshea (1) ospfbgp (1) LaZyDK (1) Munzy (1) damonreed (1) Duffyx (1) nimrof (1) Butterscup (1) louis-oui (1) ProTofik (1) mattosem (1) jp-asdf (1) evheros (1) f0o (1) ajsiersema (1) Negatifff (1) dupondje (1) mathieu-oui (1) cjwbath (1) olivluca (1) craig-nokia (1) h-barnhart (1) jonasblomq (1) dependabot (1) KingJ (1) cliffalbert (1) lazyb0nes (1) bukowski12 (1) loopodoopo (1) deajan (1) Thanks to maintainers and others that helped with pull requests this month: murrant (84) SourceDoctor (32) Jellyfrog (20) PipoCanaja (14) TheGreatDoc (10) kkrumm1 (2) laf (2) Npeca75 (1) f0o (1) dwiesner (1)","title":"1.64"},{"location":"General/Changelog/#feature_4","text":"Maintenance Mode via Device Settings ( #11649 ) - SourceDoctor Added link to smokeping interface and added smokeping options to global settings ( #11610 ) - TheGreatDoc Drop PHP 71 & Python2 support ( #11531 ) - murrant Implement OS specific information discovery ( #11446 ) - murrant Device page dropdown hero button, Performance -> Latency ( #11328 ) - murrant","title":"Feature"},{"location":"General/Changelog/#security_3","text":"Fix port permissions ( #11560 ) - murrant","title":"Security"},{"location":"General/Changelog/#device_5","text":"New Device: PowerTek/BladeShelter PDU support ( #11731 ) - mattosem Add new sysobjectid for Arbor ArbOS TMS appliances ( #11711 ) - jp-asdf Fixed Cisco ASA Lan2Lan typo ( #11704 ) - evheros Added TPLINK vlans support ( #11697 ) - PipoCanaja Added OID for EdgeCore models: ES 3528M-SFP, ES 4612, ES 3526 XA, ECS\u2026 ( #11690 ) - Negatifff Fix mini graphs with PanOS ( #11681 ) - mathieu-oui New Device: Paradyne SHDSL modems ( #11679 ) - PipoCanaja New corner cases for Huawei VRP BGP ( #11663 ) - PipoCanaja Updated Ciena Waveserver MIBs and fixed interface naming ( #11646 ) - bakerds Fix unit state sensor oid for aos6 ( #11639 ) - joseUPV Support for Ciena service delivery switch family ( #11636 ) - bakerds Added FortiAuthenticator support ( #11633 ) - footstep86 FortiWeb CPU and Memory ( #11632 ) - footstep86 Extend processor polling to Dell Powerconnect N1100 and N1500 series ( #11631 ) - KingJ Riedo E3Meter PDU ( #11624 ) - PipoCanaja Add WAN (3/4g-LTE) support on Huawei AR family ( #11619 ) - PipoCanaja Add Papouch Quido Device ( #11605 ) - bukowski12 Vendor Dantherm ( #11603 ) - loopodoopo Added FortiSandbox support ( #11593 ) - footstep86 Correct options for IBMC version polling ( #11587 ) - PipoCanaja Device - Correct SysObjectID for RIEDO Concentrator ( #11573 ) - PipoCanaja Add serial for QTECH QSW-3400 ( #11569 ) - moisseev Fixed issues with IMCO Power ( #11559 ) - jozefrebjak New OS: QTECH ( #11556 ) - moisseev Move packet journey counters from linux to packetjourney ( #11550 ) - TheMysteriousX Fix cisco sensor thresholds ( #11547 ) - dsgagi Restore applications in TrueNAS ( #11546 ) - karlshea Fix Papouch detection too generic ( #11540 ) - murrant Updates to Brother Printer ( #11532 ) - arrmo OS Detection for Mobileiron Core, Sentry appliances ( #11510 ) - TheMysteriousX AOS Advanced Support. ( #11500 ) - joseUPV SIAE Radio: add additional sensors and data ( #11498 ) - murrant Fix lcos PHP 7.4 incompatible code ( #11497 ) - murrant Added bgpPeerDescr for Arista OS ( #11495 ) - damonreed Support FreeNAS/TrueNAS 11.3 ( #11494 ) - TheMysteriousX MPLS updates and bugfixing ( #11468 ) - vitalisator Airos 8.x.x no long supports AirMaxQuality ( #11400 ) - facuxt Added discovery and graphing for JunOS (SRX) RPM probes ( #11187 ) - PelNet Added FortiMail support ( #10895 ) - footstep86","title":"Device"},{"location":"General/Changelog/#webui_5","text":"Fixing API Creation Error Message ( #11745 ) - SourceDoctor Show full description text on MySQL RRDs ( #11738 ) - SourceDoctor Maximum Execution Time Exceeded show error ( #11720 ) - murrant Enumerate Alert Level ( #11652 ) - SourceDoctor Show Laravel version in about ( #11641 ) - murrant Fix various issues with loading os definitions ( #11640 ) - murrant Application State Icons ( #11630 ) - SourceDoctor Handle exception about unserializable route cache ( #11625 ) - murrant Fixed realtime graph http get spam ( #11616 ) - Butterscup Disable auto-refresh for notifications and alert history ( #11589 ) - louis-oui Sort Health table alphabetic ( #11586 ) - SourceDoctor Only Show in TopInterfaces Devices which are up ( #11578 ) - SourceDoctor Natural Sort Applications by Display Name ( #11577 ) - SourceDoctor Application DisplayName in Overview Hover ( #11576 ) - SourceDoctor Add acknowledgment notes to eventlog ( #11575 ) - vitalisator Fix vmhost device page link ( #11553 ) - murrant Correct OS Overlib in Inventory ( #11551 ) - SourceDoctor Fix poller deletion ( #11549 ) - murrant Fix smokeping wo integration ( #11548 ) - murrant Show Hardware Details on Network Adapters in Device - Inventory ( #11545 ) - SourceDoctor Fix display of device modules ( #11543 ) - ospfbgp Addhost (web) snmp v3 not used first ( #11536 ) - nimrof Fix apps overview link ( #11535 ) - murrant Sort Top Devices widget descending by default ( #11534 ) - murrant Update device health settings Table UI ( #11529 ) - arjitc Fix errors for some devices loading components ( #11527 ) - murrant Fix new bill search input ( #11524 ) - murrant Equalize BootstrapSwitch Style on Device Edit to LibreNMS Standard ( #11513 ) - arjitc Limit port, seconds, retries, max repeats and max OIDs to numeric type ( #11512 ) - arjitc Put all the stats into the optionbar ( #11501 ) - arjitc Login form footer center align ( #11499 ) - jozefrebjak WebUI - Improved \"dark\" theme ( #11417 ) - facuxt","title":"Webui"},{"location":"General/Changelog/#snmp-traps_2","text":"OSPF SNMP Trap Handlers ( #11647 ) - h-barnhart Added warmStart trap handler ( #11583 ) - jozefrebjak","title":"Snmp Traps"},{"location":"General/Changelog/#applications_3","text":"Add support for windows librenms(check_mk) agent ( #11691 ) - gardar Application - Redis ( #11612 ) - SourceDoctor Adjust RRDCached application event graph ( #11528 ) - SourceDoctor Fix RRDCached Application Socket Address in Poller ( #11525 ) - SourceDoctor String Nicement for RRDCached - also alphabetic sorting of array ( #11517 ) - SourceDoctor","title":"Applications"},{"location":"General/Changelog/#api_3","text":"Enabling general search for ports, devices, and more ( #11571 ) - hachpai","title":"Api"},{"location":"General/Changelog/#alerting_4","text":"Fix another mysql error in isMaintenance() ( #11746 ) - arrmo Address Incorrect DATE value in isUnderMaintenance ( #11736 ) - arrmo Do not delay alert recovery notifications ( #11555 ) - spencerryan Send Device group membership to Pagerduty ( #11522 ) - spencerryan Allow manual configuration of Pagerduty Integration Key ( #11519 ) - spencerryan Copy and modify the syslog transport for sending alerts to Splunk in an easy to parse format ( #11176 ) - VirTechSystems","title":"Alerting"},{"location":"General/Changelog/#discovery_2","text":"Fix sensor type/class confusion ( #11608 ) - PipoCanaja Improvement for matching LLDP neighbors with known hosts. ( #11445 ) - dagbdagb Migrate Python scripts to Python 3 ( #10759 ) - deajan","title":"Discovery"},{"location":"General/Changelog/#polling_5","text":"Fix wireless sensor polling unit display ( #11748 ) - murrant Fix poller enabling graphs for display ( #11743 ) - murrant Fix dynamic group membership rule for devices.status equal 0 ( #11699 ) - ajsiersema Fix - Seperate default poller id and distributed poller groups ( #11584 ) - SourceDoctor Fix double escaping ( #11503 ) - gcotone","title":"Polling"},{"location":"General/Changelog/#rancid_2","text":"Add Edgemax support to rancid script ( #11687 ) - dupondje Support for allied telesis and cisco wlc ( #11617 ) - cliffalbert","title":"Rancid"},{"location":"General/Changelog/#bug_5","text":"Fix MySQL App sorts display ( #11740 ) - SourceDoctor Remove int width from db schema validation (MySQL 8) ( #11725 ) - arrmo Fix CSRF Token in Latency tab ( #11703 ) - f0o Fix some python3 wrapper connection issues ( #11693 ) - murrant Fix the PANOS HA state check alert rule from collection ( #11657 ) - cjwbath Fix inconsistent escapes (slashes in sysLocation) ( #11637 ) - murrant Fix \"improper label name\" in Prometheus datastore ( #11602 ) - TheGreatDoc Filter on sensor class as expected and documented ( #11592 ) - PipoCanaja Fix python always install as user ( #11562 ) - murrant Fix default uptime warning to 86400 seconds ( #11507 ) - SourceDoctor","title":"Bug"},{"location":"General/Changelog/#refactor_4","text":"Clean mempools code to avoid unnecessary snmpget ( #11678 ) - PipoCanaja Enumerate AlertState ( #11665 ) - SourceDoctor Python wrapper sql cleanup ( #11628 ) - murrant Python3 only for snmp-scan.py ( #11623 ) - murrant Laravel 6.x ( #11397 ) - Jellyfrog","title":"Refactor"},{"location":"General/Changelog/#documentation_5","text":"Update rrdtool setting explanation ( #11724 ) - hanserasmus Update distributed poller docs intro ( #11721 ) - murrant Hardware examples SourceDoctor ( #11680 ) - SourceDoctor Applications Corrected wrong path in documentation ( #11675 ) - ProTofik Document update for distributed poller ( #11655 ) - craig-nokia Fix Fast-Ping-Check.md to include information about RRDCached ( #11645 ) - jonasblomq Update Example-Hardware-Setup.md ( #11611 ) - lazyb0nes Removed reference to deprecated poller-service.py ( #11598 ) - hanserasmus Added example for the alerta transport ( #11596 ) - olivluca Add missing python3 modules from repo, remove pip ( #11594 ) - gardar Correct sensor ignore documentation ( #11591 ) - PipoCanaja Typo Fix ( #11588 ) - Munzy Update Docker installation doc ( #11579 ) - crazy-max Add python3 and pip3 to installs ( #11566 ) - hanserasmus Added python3 for new installs ( #11564 ) - hanserasmus Added note about having same APP_KEY value ( #11521 ) - hanserasmus Updated Index to add the doc for Debian 10 ( #11515 ) - stylersnico Update Installation-Ubuntu-1804-Nginx.md ( #11466 ) - LaZyDK","title":"Documentation"},{"location":"General/Changelog/#tests_3","text":"Testing cleanup ( #11677 ) - murrant Rewrite development helper to lnms dev:check ( #11650 ) - murrant Fix test behaviour with PHP 7.4 on Fedora 32 ( #11648 ) - TheMysteriousX Speed up tests by skipping pings ( #11642 ) - murrant Update PHPUnit to 8.x ( #11635 ) - Jellyfrog Os_schema is missing a module ( #11511 ) - TheMysteriousX","title":"Tests"},{"location":"General/Changelog/#misc_4","text":"Check python3 and pip3 versions match ( #11739 ) - murrant Check lnms running user ( #11726 ) - murrant Make migrations work in SQLite ( #11643 ) - murrant Validate PHP version mismatch ( #11621 ) - murrant Setuptools is required for python dependency check ( #11600 ) - SourceDoctor Hide python user warning if deps met at system level ( #11590 ) - murrant Send python 3 version to stats.librenms.org ( #11568 ) - murrant Add python validation fix suggestions ( #11563 ) - murrant Added ignored devices to be pinged by smokeping ( #11557 ) - TheGreatDoc Python3 Module Dependency Check ( #11544 ) - SourceDoctor Fix socket logic in services-wrapper.py ( #11523 ) - Duffyx Install python requirements during daily ( #11486 ) - murrant Run artisan optimize after composer install ( #11465 ) - Jellyfrog","title":"Misc"},{"location":"General/Changelog/#dependencies_5","text":"Bump jquery from 3.4.1 to 3.5.0 ( #11644 ) - dependabot","title":"Dependencies"},{"location":"General/Changelog/#163","text":"(2020-04-27) A big thank you to the following 41 contributors this last month: murrant (31) SourceDoctor (12) Jellyfrog (11) PipoCanaja (7) Martin22 (5) TheMysteriousX (5) hanserasmus (4) willhseitz (4) dneto82 (3) kedare (3) jozefrebjak (3) stylersnico (2) priiduonu (2) h-barnhart (2) nimrof (2) mathieu-oui (1) AnaelMobilia (1) frenchie (1) noaheroufus (1) TFujiwara (1) vsessink (1) dGs- (1) robwilkes (1) vitalisator (1) jviersel (1) FingerlessGlov3s (1) TheGreatDoc (1) jepke (1) Alex131089 (1) nwautomator (1) danislav (1) monrad (1) gonzocrazy (1) arjitc (1) robje (1) arrmo (1) AltiUP (1) realgreef (1) Zaxmy (1) Cormoran96 (1) TvL2386 (1) Thanks to maintainers and others that helped with pull requests this month: murrant (44) Jellyfrog (31) SourceDoctor (23) PipoCanaja (19) TheGreatDoc (5) laf (3) kkrumm1 (1) craig-nokia (1)","title":"1.63"},{"location":"General/Changelog/#feature_5","text":"Global search MAC Address ( #11434 ) - SourceDoctor Config CLI improvements ( #11430 ) - murrant Implement watchdog to librenms-service ( #11353 ) - willhseitz","title":"Feature"},{"location":"General/Changelog/#device_6","text":"Opengear add mempool discovery+polling ( #11491 ) - gonzocrazy Detection, sensors and zpool/dataset usage for FreeNAS, TrueNAS ( #11474 ) - TheMysteriousX OS detection and sensors for Dell Compellent ( #11467 ) - TheMysteriousX Add OS detection for Greenbone appliances ( #11464 ) - TheMysteriousX Raspberry Pi frequency sensors discovery ( #11460 ) - priiduonu Added Cisco Firepower 1010 ( #11449 ) - realgreef Add OS version to asuswrt-merlin ( #11438 ) - arrmo Added support for Peplink Pepwave & FusionHub ( #11432 ) - jozefrebjak Extend Netvision Socomec UPS cards for RFC1628 ( #11426 ) - PipoCanaja Add support for Advantech switches ( #11415 ) - monrad CyberPower SNMP Traps ( #11403 ) - h-barnhart Classify as unix for additional sensors ( #11390 ) - nwautomator IMCO Power - Added skip values for older devices without temperature sensor support. ( #11387 ) - Martin22 Ubiquiti Airfiber LTU many more sensors ( #11382 ) - jepke Fix routing engine discovery on standalone JunOS devices ( #11381 ) - TheMysteriousX Add support Ray3 ( #11374 ) - Martin22 OPNsense poller better reporting of Version and Platform ( #11350 ) - FingerlessGlov3s Mikrotik - Updated MIB file and added Wireless Quality ( #11347 ) - Martin22 Fix PanOS Sessions count and add Vsys and other sensors ( #11341 ) - mathieu-oui Added hardware detection for FreeBSD ( #11313 ) - frenchie Add support for Ascom IPBS ( #11308 ) - PipoCanaja Added Support for AirConsole Servers ( #11302 ) - jozefrebjak New device IMCO POWER ( #11296 ) - Martin22 APC NetBotz 200 - doesn't add not available temperature sensors ( #11259 ) - dGs- IPv6 support for BGP peers in VRP devices ( #11243 ) - PipoCanaja Added support for RIEDO data concentrator ( #11237 ) - PipoCanaja Added support for ICT Modular Power System and ICT Sine Wave Inverter ( #11182 ) - noaheroufus Fix for Nokia 7705 SAR ( #11021 ) - vitalisator Added sensors for outlets on Schleifenbauer devices. ( #10949 ) - jviersel","title":"Device"},{"location":"General/Changelog/#webui_6","text":"Fix duplicate type=\"submit\" ( #11493 ) - nimrof Fixed a small typo ( #11487 ) - hanserasmus Restore click on Dashboard menu entry ( #11478 ) - murrant Fix - Show OS specific Mouseover in Alert Widget ( #11457 ) - SourceDoctor Toggle dashboard editor without refresh ( #11455 ) - murrant Fix sensor link ( #11454 ) - murrant Don't access the database too soon in Device model boot ( #11453 ) - murrant Fix devices filter os ( #11443 ) - murrant Prevent breaking of interface name into 2 words/parts ( #11420 ) - arjitc Fix dashboard size ( #11405 ) - murrant Update on OS only logo. ( #11399 ) - dneto82 Updated panos.svg ( #11398 ) - dneto82 Fix global search by IP ( #11395 ) - murrant Clarify that you can use IP or hostname to add a device ( #11393 ) - murrant Widget Eventlog Sensors Link and Mouseover functionality ( #11380 ) - SourceDoctor Convert alert modals to blade ( #11373 ) - Jellyfrog Display custom types as in the config file (with ucwords) ( #11367 ) - murrant Geo map: check if lat/long exist for each device with link ( #11366 ) - willhseitz Fix shared dashboards missing users ( #11365 ) - murrant Protect against plugins that leak output ( #11364 ) - murrant Toggle visibilty of Dashboard Editor ( #11321 ) - SourceDoctor Honoring config option force_ip_to_sysname in bill creation and editing ( #10382 ) - TvL2386","title":"Webui"},{"location":"General/Changelog/#applications_4","text":"Change stats file location (Bind9) ( #11439 ) - AltiUP Rrdcached Socket Check fix ( #11372 ) - SourceDoctor Get configured Rrdcached Socket from config ( #11351 ) - SourceDoctor Fix memcached always reporting \"ERROR\" for app_state ( #10739 ) - willhseitz","title":"Applications"},{"location":"General/Changelog/#api_4","text":"BGP API: fix search by ipv6 when using compressed addresses ( #11394 ) - kedare BGP API: Allow to filter by local and remote peer address. ( #11340 ) - kedare","title":"Api"},{"location":"General/Changelog/#alerting_5","text":"PagerDuty Transport Improvement ( #11459 ) - h-barnhart Add support for sending events to Sensu ( #11383 ) - TheMysteriousX Adding Column ifSpeed_prev, ifHighSpeed_prev to Ports Table ( #11348 ) - SourceDoctor Add transport for Smsmode (SMS provider) ( #11332 ) - AnaelMobilia","title":"Alerting"},{"location":"General/Changelog/#billing_1","text":"Fix billing graphs: work around jpgraph bug ( #11425 ) - murrant","title":"Billing"},{"location":"General/Changelog/#discovery_3","text":"Cisco sensor discovery fixes ( #11077 ) - robwilkes","title":"Discovery"},{"location":"General/Changelog/#polling_6","text":"BGP Polling: Add error code management ( #11424 ) - kedare Fix device creation using overwrited ip ( #11388 ) - Alex131089 Fix adsl graphs ( #11379 ) - murrant Fix rrd format issues for asterisk and cipsec-tunnels ( #11375 ) - murrant Patch unix agent ( #11312 ) - TFujiwara Fixed race conditions in distributed poller setup ( #11307 ) - vsessink Fix 10853 os specific syslocation ( #11082 ) - willhseitz","title":"Polling"},{"location":"General/Changelog/#bug_6","text":"Customer graphs: fix evaluation order so unauthenticated access works ( #11485 ) - Zaxmy Fix case sensitiv translations ( #11463 ) - Jellyfrog Missed one jpgraph string ( #11447 ) - murrant Alert rule in, not_in remove ( #11437 ) - SourceDoctor Fix a copy-n-paste error ( #11429 ) - robje Fix - Read the db_port as integer ( #11392 ) - danislav Fix dashboard html escaping and javascript redirect ( #11370 ) - Jellyfrog","title":"Bug"},{"location":"General/Changelog/#refactor_5","text":"Cleanup unused code ( #11391 ) - SourceDoctor Delete ports via eloquent event ( #11354 ) - murrant Convert overview page to laravel ( #10757 ) - Jellyfrog","title":"Refactor"},{"location":"General/Changelog/#cleanup_1","text":"Update php-codesniffer ( #11368 ) - murrant","title":"Cleanup"},{"location":"General/Changelog/#documentation_6","text":"Add ASP sms provider ( #11489 ) - Cormoran96 Created installation for Debian 10 ( #11481 ) - stylersnico Add php-opcache settings to Performance Tuning ( #11452 ) - hanserasmus Updated selected-port-polling explanation ( #11435 ) - hanserasmus Update Images.md ( #11418 ) - TheGreatDoc Fix RRDTune.md ( #11369 ) - jozefrebjak","title":"Documentation"},{"location":"General/Changelog/#tests_4","text":"Addhost tests ( #11385 ) - nimrof","title":"Tests"},{"location":"General/Changelog/#misc_5","text":"Set PHP 7.2.5 as minimum supported version ( #11470 ) - Jellyfrog Show full path to ini file for timezone validation failures ( #11444 ) - murrant Global setting better naming ( #11412 ) - SourceDoctor Updated MIB from Palo Alto ( #11402 ) - dneto82 Update PHP dependencies ( #11377 ) - murrant","title":"Misc"},{"location":"General/Changelog/#162","text":"(2020-03-31) A big thank you to the following 34 contributors this last month: murrant (17) SourceDoctor (15) PipoCanaja (7) dagbdagb (4) danislav (3) mpikzink (3) cjwbath (3) kedare (3) ghost (2) dlangille (2) Munzy (2) jozefrebjak (2) Urth (2) joseUPV (1) hanserasmus (1) josephtingiris (1) FingerlessGlov3s (1) fhlmbrg (1) h-barnhart (1) shepherdjay (1) Chewza (1) ospfbgp (1) jepke (1) ekoyle (1) pobradovic08 (1) dGs- (1) nickhilliard (1) raphaelyancey (1) rkojedzinszky (1) lucadefazio (1) fusedsynapse (1) jp-asdf (1) chrisocalypse (1) crcro (1) Thanks to maintainers and others that helped with pull requests this month: SourceDoctor (26) PipoCanaja (24) murrant (22) kkrumm1 (8) Jellyfrog (6) vdchuyen (1) sp1rr3 (1) TheGreatDoc (1) laf (1)","title":"1.62"},{"location":"General/Changelog/#feature_6","text":"Geographical map: Show network links between locations ( #11269 ) - kedare Extra VLAN mapping in bridge FDB module to fix ProCurve ( #11230 ) - cjwbath","title":"Feature"},{"location":"General/Changelog/#device_7","text":"Add support for VOSS switches VSP-7400-48Y-8C and VSP-4900-48P ( #11360 ) - ospfbgp Changed USV bypass state from alert to warning ( #11356 ) - mpikzink Cisco-Remote-Access-Monitor ( #11355 ) - mpikzink Added support for Cisco Firepower FTD 4140 ( #11345 ) - chrisocalypse Create MAS-MIB-SMIV2-MIB ( #11342 ) - jp-asdf Sonus became Ribbon Communications - update logos ( #11339 ) - cjwbath Added cisco firepower threat defense 1120 ( #11336 ) - lucadefazio Ubiquiti Edgepower OS definition ( #11315 ) - jepke Fixed issue with reporting of Cisco ASA Remote Sessions. rev2 ( #11286 ) - dagbdagb Update Sophos detection ( #11275 ) - murrant Add support for Cisco SX350X-24 ( #11272 ) - Chewza Add device support for SilverPeak ( #11270 ) - shepherdjay Update OPNsense definition due to incorrect OID on second detection method ( #11265 ) - FingerlessGlov3s Added additional Cisco FirePOWER device ID's for 2100 series ( #11260 ) - ghost Fix \"inteno\" and \"quanta\" OS collision ( #11238 ) - PipoCanaja Collect average server CPU usage on Huawei RH servers (IBMC) ( #11236 ) - PipoCanaja Added support for Inteno devices ( #11229 ) - PipoCanaja Store OLD-CISCO-xxx-MIB files in their directory ( #11228 ) - PipoCanaja Add Device: Innovaphone ( #11225 ) - mpikzink","title":"Device"},{"location":"General/Changelog/#webui_7","text":"QueryBuilder Filter alphabetic sorting ( #11358 ) - SourceDoctor Don't show deleted ports in device overview ( #11344 ) - murrant Top Interfaces, exclude invalid ports ( #11338 ) - murrant Fix invalid paths introduced in librenms/librenms#9883 ( #11337 ) - fusedsynapse Global Settings - force_ip_to_sysname, force_hostname_to_sysname ( #11335 ) - SourceDoctor Use format_hostname in dependencies list ( #11333 ) - PipoCanaja Better map link scaling algorithm ( #11329 ) - kedare Widget - TopInterface, TopDevice - device popup missing os name ( #11325 ) - SourceDoctor Fix js warning in settings, update js deps ( #11324 ) - murrant Replace AES by SHA for authalgo ( #11314 ) - dGs- Widget Fix - Server Stats - show DisplayName instead Device ID ( #11301 ) - SourceDoctor Widget - show selected DeviceGroup in Title ( #11299 ) - SourceDoctor Builder View Fix for Collection Selector ( #11290 ) - SourceDoctor Form csrf missing in custom_oid edit ( #11282 ) - danislav Sort Settings by translated names ( #11280 ) - murrant Rewrite Poller Management to Blade/Eloquent ( #11277 ) - SourceDoctor Add datastore settings to the Web UI ( #11266 ) - murrant Show the plugin's name in the title rather than just \"Plugin\" ( #11258 ) - cjwbath Global Search - IPv4, IPv6 ( #11257 ) - SourceDoctor Extended unbound monitoring ( #11255 ) - hanserasmus","title":"Webui"},{"location":"General/Changelog/#graphs_4","text":"Fix graph previous with rrdgraph_real_percentile ( #11306 ) - murrant Graph CPU Steal and IO Wait ( #11235 ) - SourceDoctor","title":"Graphs"},{"location":"General/Changelog/#applications_5","text":"Fix issue when field name is longer than allowed ( #11349 ) - murrant Mailcow-dockerized postfix stats ( #11058 ) - crcro","title":"Applications"},{"location":"General/Changelog/#api_5","text":"Fix bills api percentage calculation with cdr/quota of zero ( #11352 ) - Urth","title":"Api"},{"location":"General/Changelog/#alerting_6","text":"Alert Rule - add Operator 'in' and 'not in' ( #11327 ) - SourceDoctor Alert Collection Rule - APC UPS Diagnostics Test Result ( #11292 ) - SourceDoctor Alert Collection Rule fix for APC on Battery Power ( #11291 ) - SourceDoctor","title":"Alerting"},{"location":"General/Changelog/#billing_2","text":"Fix bills api output for period=previous ( #11295 ) - Urth","title":"Billing"},{"location":"General/Changelog/#discovery_4","text":"Fix autodiscovery vs discovery on LLDP/xDP links ( #11189 ) - kedare","title":"Discovery"},{"location":"General/Changelog/#polling_7","text":"Fixed Netscaler vserver rrd ds name ( #11304 ) - pobradovic08 Refactor Datastores to allow future improvements. OpenTSDB Tags. ( #11283 ) - murrant Fallback to default Poller Group on delete ( #11278 ) - SourceDoctor Upgrade UCD Mibs (Others) ( #11253 ) - Munzy Update Linux SNMPD to support ssCpuRawSteal ( #11252 ) - Munzy Changed poller member validation step and message ( #11239 ) - joseUPV","title":"Polling"},{"location":"General/Changelog/#bug_7","text":"Add primary key to device_graphs ( #11331 ) - rkojedzinszky Stop using {} for arrays ( #11319 ) - dlangille Only check depedencies once in validate.php ( #11316 ) - murrant Fix get_rrd_dir() function ( #11310 ) - murrant Fix show rrdtool command ( #11305 ) - murrant Fix custom oids not being added to RRD after other RRD cleanups ( #11300 ) - ekoyle Fix db_port config in services-wrapper ( #11284 ) - danislav Fix - Crash in Device Group on some Operator ( #11250 ) - SourceDoctor Fix error when deleting alert maintenance schedules ( #11232 ) - josephtingiris","title":"Bug"},{"location":"General/Changelog/#cleanup_2","text":"Symfony requires php-dom extension ( #11320 ) - nickhilliard","title":"Cleanup"},{"location":"General/Changelog/#documentation_7","text":"Update SNMP-Configuration-Examples.md ( #11334 ) - dagbdagb Update SMART extension documentation ( #11330 ) - raphaelyancey Update Performance.md ( #11298 ) - dagbdagb Update Dispatcher-Service.md ( #11297 ) - dagbdagb Fix dockerized postfix app wrong url ( #11285 ) - jozefrebjak Add quotes around the word mail ( #11267 ) - danislav Update SNMP-Trap-Handler.md ( #11263 ) - jozefrebjak Fix includes/defaults.inc.php references ( #11249 ) - dlangille Update SSL-Configuration.md ( #11223 ) - fhlmbrg Health Sensor Advanced Discovery Example ( #11179 ) - h-barnhart","title":"Documentation"},{"location":"General/Changelog/#translation_3","text":"French translation update ( #11293 ) - PipoCanaja","title":"Translation"},{"location":"General/Changelog/#161","text":"(2020-03-01) A big thank you to the following 21 contributors this last month: SourceDoctor (22) PipoCanaja (15) josephtingiris (9) murrant (8) mpikzink (7) Jellyfrog (4) gabrielRojasNew (4) joseUPV (3) kedare (3) kkrumm1 (2) h-barnhart (1) FingerlessGlov3s (1) danislav (1) joretapoo (1) wikro (1) pepperoni-pi (1) gcotone (1) lehuizi (1) Pluppo (1) Atroskelis (1) jasoncheng7115 (1) Thanks to maintainers and others that helped with pull requests this month: kkrumm1 (24) SourceDoctor (21) PipoCanaja (20) Jellyfrog (17) murrant (14) laf (7) louis-oui (1) arrmo (1)","title":"1.61"},{"location":"General/Changelog/#feature_7","text":"Option to default open Location Map on Device View ( #11167 ) - SourceDoctor Community 10946, Option -r for ping.php ( #11161 ) - danislav Extra VLAN mapping in AOS specific FDB module ( #11145 ) - joseUPV Puppet Agent Monitoring ( #10827 ) - SourceDoctor","title":"Feature"},{"location":"General/Changelog/#device_8","text":"Aruba cluster userfriendly read ( #11217 ) - mpikzink IOSXE ignore macSecControlledIF and macSecUncontrolledIF ifTypes ( #11214 ) - pepperoni-pi Additional OPNsense detection ( #11196 ) - FingerlessGlov3s Added Cambium PTP670 ( #11186 ) - PipoCanaja Add basic support for PICA8 devices ( #11185 ) - PipoCanaja Add the serial to aruba-instant devices ( #11184 ) - mpikzink Huawei MIB updates ( #11181 ) - PipoCanaja Adva FSP150cc Health Sensors ( #11168 ) - h-barnhart Add support for reading advertised BGP prefixes ( #11147 ) - kedare Bug - Correct RFC1213 route discovery ( #11144 ) - PipoCanaja Aruba Controller ->Correct AP Power value ( #11122 ) - joseUPV Support for Teldat routers ( #11118 ) - PipoCanaja Add serial to Epson printer ( #11111 ) - mpikzink Add Janitza Power Sensors ( #11110 ) - mpikzink Add Serialnumber to HP und Konica printers ( #11106 ) - mpikzink Adding support for Cisco SB SX550X-24F switch ( #11098 ) - Pluppo Added rittal-cmc (LCP Plus) ( #11091 ) - mpikzink Improve Huawei VRP bgp discovery ( #11054 ) - PipoCanaja","title":"Device"},{"location":"General/Changelog/#webui_8","text":"Running Alerts colorized depending on to their severity ( #11210 ) - SourceDoctor Dashboard Widget Availability - show Hostname ( #11208 ) - SourceDoctor Move storage module settings to discovery tab ( #11206 ) - murrant Update JS deps ( #11203 ) - murrant Fix global settings array validate messages ( #11199 ) - murrant Global Settings - Uptime Warning ( #11198 ) - SourceDoctor Global Settings - Mountpoint ignore options ( #11197 ) - SourceDoctor Global search by IP address ( #11165 ) - josephtingiris Add Size column to edit Storage Settings table ( #11164 ) - josephtingiris Equalize default Poller Group Naming ( #11156 ) - SourceDoctor Configurable Alert Rule default settings ( #11152 ) - SourceDoctor Change Device, Group, Location - Order ( #11141 ) - SourceDoctor Alert Rule label fix ( #11137 ) - SourceDoctor Fix android-chrome icons ( #11136 ) - josephtingiris Update devices last_ping along with device_perf ( #11117 ) - josephtingiris Renovated Alert Rules ( #11115 ) - josephtingiris Fix inventory page hostname/sysname and default generate_device_link behaviour ( #11114 ) - kedare Hide \"devices added\" for devices that existed before #11104 ( #11107 ) - josephtingiris Add a space for times like '1 minute' ( #11105 ) - josephtingiris Show when a device was added and last discovered ( #11104 ) - josephtingiris Speed up canAccessDevice/devicesForUser ( #10992 ) - Jellyfrog","title":"Webui"},{"location":"General/Changelog/#api_6","text":"BGP API: Add filter by remote ASN ( #11204 ) - kedare Add alert_rule filtering to API ROUTE \"list_alerts\" ( #11109 ) - gcotone Added add and remove parents for device from the V0 API ( #11100 ) - gabrielRojasNew Created add, edit, remove location and edit, remove services to the v\u2026 ( #11080 ) - gabrielRojasNew","title":"Api"},{"location":"General/Changelog/#alerting_7","text":"Copy existing Alert Rule ( #11195 ) - SourceDoctor More verbose Alert Detail Fallback ( #11153 ) - SourceDoctor Alert Rule default update ( #11143 ) - SourceDoctor Ping Latency Check to Alert Collection ( #11139 ) - SourceDoctor Location based Alert Rule ( #11128 ) - SourceDoctor Default alert rules remove Devices up/down ( #11124 ) - kkrumm1","title":"Alerting"},{"location":"General/Changelog/#discovery_5","text":"MPLS Route discovery - Wrong variable assignation order ( #11103 ) - PipoCanaja","title":"Discovery"},{"location":"General/Changelog/#polling_8","text":"Reduce DB polling while getting SNMP data ( #11162 ) - SourceDoctor Mark assigned default Poller Group ( #11112 ) - SourceDoctor Change Poller time validation ( #11108 ) - joseUPV","title":"Polling"},{"location":"General/Changelog/#bug_8","text":"Device Page: Remove csrf token from url when updating url ( #11180 ) - murrant Space on type like \"OOB Management\" cause issue on smokeping, edit ge\u2026 ( #11160 ) - joretapoo Invalidate 'Wrong Type' snmp_walk() data ( #11159 ) - josephtingiris Fix invalid dnos test data ( #11158 ) - murrant Fix SSO Auth test ( #11155 ) - murrant PHP hashes are case sensitive. ( #11151 ) - wikro Change ups-nut sensors ( #11113 ) - mpikzink Fixed unix-agent polling bug where the called method can't be found ( #11102 ) - lehuizi","title":"Bug"},{"location":"General/Changelog/#documentation_8","text":"Correct docs menu name ( #11207 ) - Jellyfrog Added documentation to edit, delete services and locations ( #11193 ) - gabrielRojasNew Added steps to split DB off to its own server ( #11130 ) - SourceDoctor Added yum-config-manager to Remi install ( #11033 ) - Atroskelis","title":"Documentation"},{"location":"General/Changelog/#translation_4","text":"Update settings.php translation string ( #10928 ) - jasoncheng7115","title":"Translation"},{"location":"General/Changelog/#misc_6","text":"Validate that php sockets is available ( #11177 ) - murrant","title":"Misc"},{"location":"General/Changelog/#160","text":"(2020-02-04) A big thank you to the following 33 contributors this last month: SourceDoctor (19) louis-oui (12) josephtingiris (11) martijn-schmidt (3) vitalisator (2) murrant (2) h-barnhart (2) joshuabaird (2) LEV82 (2) cjwbath (2) arrmo (2) nistorj (1) kkrumm1 (1) AnaelMobilia (1) clmcavaney (1) arjitc (1) dagbdagb (1) Jellyfrog (1) klui2k1 (1) ccperilla (1) laf (1) craig-nokia (1) JohnSPeach (1) zombah (1) opalivan (1) mpikzink (1) TheGreatDoc (1) HostIRE (1) willhseitz (1) SpaceDump (1) xorrkaz (1) ajsiersema (1) PipoCanaja (1) Thanks to maintainers and others that helped with pull requests this month: kkrumm1 (45) PipoCanaja (32) Jellyfrog (18) laf (3) murrant (3)","title":"1.60"},{"location":"General/Changelog/#feature_8","text":"Maintenance Mode for a complete Location ( #11089 ) - SourceDoctor Alternate Poller IP instead of Hostname ( #10981 ) - SourceDoctor","title":"Feature"},{"location":"General/Changelog/#device_9","text":"Fixed missing PoE graphs for Cisco devices ( #11087 ) - ajsiersema Fix Air Fiber port stats ( #11079 ) - murrant Added OS definition and discovery for SIAE Alfo80HD ( #11063 ) - HostIRE Added WUT Humidity and Temperature Sensors ( #11053 ) - mpikzink Create CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB ( #11052 ) - opalivan Minor updates for dd-wrt, clarify snmp source better ( #11051 ) - arrmo Add Zyxel MGS-3712 Sensors ( #11050 ) - vitalisator Update IOS-XR with NCS-5500 support ( #11044 ) - zombah Add sensors to Infoblox discovery (nios.yaml) ( #11043 ) - JohnSPeach Update timos.inc.php ( #11040 ) - craig-nokia Fixed issue with SNMP contexts using vlan 1002-1005 on IOS devices ( #11031 ) - nistorj Create TRIPPLITE-PRODUCTS ( #11028 ) - arjitc Add support for TRENDnet switch ( #11007 ) - arrmo Add ifotec definition file ( #11005 ) - AnaelMobilia Correct preg_match() pattern on line 5 ( #10999 ) - josephtingiris Fix Siklu Voltage Sensor ( #10997 ) - joshuabaird Add state sensor for Packetflux Sitemonitor Switch Input ( #10994 ) - joshuabaird Add Lancom OAP-321 Wireless AP ( #10982 ) - vitalisator Update IronWare sensors & bgp-peers discovery, allow skip_values to target a specific index appended to the OID ( #10941 ) - martijn-schmidt FDB for ArubaOS ( #10940 ) - klui2k1 Extend FS switches support, handle lowerLayerDown ifOperStatus ( #10904 ) - PipoCanaja","title":"Device"},{"location":"General/Changelog/#webui_9","text":"Mark Devices in Maintenance Mode ( #11092 ) - SourceDoctor Fix missing ACK & Notes modals on device alert page ( #11076 ) - josephtingiris Poller Group Management - Device Count ( #11073 ) - SourceDoctor Order Poller Group by Name ( #11072 ) - SourceDoctor Change Poller Group on Device Settings ( #11071 ) - SourceDoctor Fixed device SNMP edit form (and better feedback) ( #11068 ) - josephtingiris Oxidized GUI tweaks ( #11066 ) - cjwbath Add aggregate totals to multiport_bits graph, similar to port_bits ( #11065 ) - willhseitz Format the Device Module Naming like in global Settings ( #11061 ) - SourceDoctor Allow findOsImage() to also use the first two words of $feature ( #11049 ) - josephtingiris Highlight Device Dependency Path to Dependency Root Device(s) ( #11025 ) - SourceDoctor Support of \"disable alerting\" in availability map and device summary widget ( #11022 ) - louis-oui Highlight isolated Devices (Devices with no Dependencies) ( #11018 ) - SourceDoctor Clarify doc and webui for ignore tag on devices, ports, components and services ( #11016 ) - louis-oui \"Disable alerting\" on device disables alert rules check (not just alert transport) ( #11015 ) - louis-oui Clarify disable, ignore and disable all alerts in device edit section ( #11011 ) - louis-oui Add Blade directives for common Url functions ( #10995 ) - Jellyfrog Alertlog stats dashboard widget ( #10967 ) - louis-oui Add alert rule option to invert devices and groups \"map to\" list ( #10954 ) - louis-oui Graphing Device Dependency ( #10916 ) - SourceDoctor Add 'alert history' widget for dashboard ( #10901 ) - louis-oui Discovery Module and Poller Module configuration via Global Settings Web GUI ( #10854 ) - SourceDoctor","title":"Webui"},{"location":"General/Changelog/#snmp-traps_3","text":"VMWare Guest State Traps and UI ( #11035 ) - h-barnhart SNMP Traps for Juniper Power Supplies ( #10965 ) - h-barnhart","title":"Snmp Traps"},{"location":"General/Changelog/#applications_6","text":"Show Alert Detail for Applications ( #11088 ) - SourceDoctor Asterisk app: add IAX2 peer graphs ( #11078 ) - josephtingiris PureFTPd Application ( #11048 ) - SourceDoctor","title":"Applications"},{"location":"General/Changelog/#alerting_8","text":"Remove also Associations by deleting Scheduled Maintenance ( #11093 ) - SourceDoctor Remove redundant data from Alert fallback detail ( #11081 ) - SourceDoctor Cisco Spark Do not strip tags when markdown is in use. ( #11075 ) - xorrkaz Added fix for escaping underscore while using Markdown ( #11070 ) - SpaceDump Add alert rule option to invert devices and groups \"map to\" list ( #11038 ) - louis-oui Do not update alert timestamp when updating a triggered alert ( #10907 ) - louis-oui","title":"Alerting"},{"location":"General/Changelog/#billing_3","text":"SNMP counters validation ( #11037 ) - ccperilla","title":"Billing"},{"location":"General/Changelog/#discovery_6","text":"Don't overwrite real port ids with zeros in the FDB ( #11041 ) - cjwbath Add bad_ifoperstatus for filtering interfaces having a status for example 'notPresent' ( #10977 ) - LEV82","title":"Discovery"},{"location":"General/Changelog/#polling_9","text":"Don't dnslookup if overwrite IP is configured ( #11084 ) - SourceDoctor Optimize DB update of ports and ports_statistics tables when polling ( #10792 ) - louis-oui","title":"Polling"},{"location":"General/Changelog/#bug_9","text":"Revert ironware BGP-peers changes from PR #10941 ( #11096 ) - martijn-schmidt Fix snmptranslate exception ( #11085 ) - josephtingiris Updated test data for arubaos, fs-switch, ifotec, lcos, siklu and trendnet, to pass Travis tests ( #11067 ) - LEV82 Fix FatalThrowableError in forgetAttrib() ( #11064 ) - josephtingiris Fix SQL constraint violation, 'port_id' cannot be null ( #11055 ) - josephtingiris Fix alerts not displayed ( #11034 ) - louis-oui Fix & amend broken $num_ports query on line 83 ( #11013 ) - josephtingiris Bugfix the snmpsim collector: use the correct mibdir ( #11003 ) - martijn-schmidt In rrdtool_escape(), fix invalid length ( #11001 ) - josephtingiris","title":"Bug"},{"location":"General/Changelog/#refactor_6","text":"Centralize Application Display Naming ( #11047 ) - SourceDoctor Remove uneeded table header ( #11029 ) - SourceDoctor Always update widget seeds when db update ( #10917 ) - louis-oui","title":"Refactor"},{"location":"General/Changelog/#cleanup_3","text":"Fixing PHP incompatibility issue with PHP 7.4 ( #11030 ) - clmcavaney","title":"Cleanup"},{"location":"General/Changelog/#documentation_9","text":"SELinux fix for syslog-ng with LibreNMS on Centos ( #11014 ) - dagbdagb","title":"Documentation"},{"location":"General/Changelog/#translation_5","text":"Correct 'shortend' misspelling ( #11000 ) - josephtingiris","title":"Translation"},{"location":"General/Changelog/#old-changelogs","text":"","title":"Old Changelogs"},{"location":"General/Contributing/","text":"","title":"Contributing"},{"location":"General/Credits/","text":"","title":"Credits"},{"location":"General/Releases/","text":"Introduction We try to ensure that breaking changes aren't introduced by utilising various automated code testing, syntax testing and unit testing along with manual code review. However bugs can and do get introduced as well as major refactoring to improve the quality of the code base. We have two branches available for you to use. The default is the master branch. Development branch Our master branch is our dev branch, this is actively commited to and it's not uncommon for multiple commits to be merged in daily. As such sometimes changes will be introduced which will cause unintended issues. If this happens we are usually quick to fix or revert those changes. We appreciate everyone that runs this branch as you are in essence secondary testers to the automation and manually testing that is done during the merge stages. You can configure your install (this is the default) to use this branch by setting $config['update_channel'] = 'master'; in config.php and ensuring you switch to the master branch with: cd /opt/librenms && git checkout master Stable branch With this in mind, we provide a monthly stable release which is released on or around the last Sunday of the month. Code pull requests (aside from Bug fixes) are stopped days leading up to the release to ensure that we have a clean working branch at that point. The changelog is also updated and will reference the release number and date so you can see what changes have been made since the last release. To switch to using stable branches you can set $config['update_channel'] = 'release'; in config.php and then switch to the latest release branch with: cd /opt/librenms && git fetch --tags && git checkout $(git describe --tags $(git rev-list --tags --max-count=1))","title":"Choosing a release"},{"location":"General/Releases/#introduction","text":"We try to ensure that breaking changes aren't introduced by utilising various automated code testing, syntax testing and unit testing along with manual code review. However bugs can and do get introduced as well as major refactoring to improve the quality of the code base. We have two branches available for you to use. The default is the master branch.","title":"Introduction"},{"location":"General/Releases/#development-branch","text":"Our master branch is our dev branch, this is actively commited to and it's not uncommon for multiple commits to be merged in daily. As such sometimes changes will be introduced which will cause unintended issues. If this happens we are usually quick to fix or revert those changes. We appreciate everyone that runs this branch as you are in essence secondary testers to the automation and manually testing that is done during the merge stages. You can configure your install (this is the default) to use this branch by setting $config['update_channel'] = 'master'; in config.php and ensuring you switch to the master branch with: cd /opt/librenms && git checkout master","title":"Development branch"},{"location":"General/Releases/#stable-branch","text":"With this in mind, we provide a monthly stable release which is released on or around the last Sunday of the month. Code pull requests (aside from Bug fixes) are stopped days leading up to the release to ensure that we have a clean working branch at that point. The changelog is also updated and will reference the release number and date so you can see what changes have been made since the last release. To switch to using stable branches you can set $config['update_channel'] = 'release'; in config.php and then switch to the latest release branch with: cd /opt/librenms && git fetch --tags && git checkout $(git describe --tags $(git rev-list --tags --max-count=1))","title":"Stable branch"},{"location":"General/Security/","text":"General Like any good software we take security seriously. However, bugs do make it into the software along with the history of the code base we inherited. It's how we deal with identified vulnerabilities that should show that we take things seriously. Securing your install As with any system of this nature, we highly recommend that you restrict access to the install via a firewall or VPN. It is also highly recommended that the Web interface is protected with an SSL certificate such as ones provided by LetsEncrypt . Please ensure you keep your install up to date . Reporting vulnerabilities Like anyone, we appreciate the work people put in to find flaws in software and welcome anyone to do so with LibreNMS, this will lead to better quality and more secure software for everyone. If you think you've found a vulnerability and want to discuss it with some of the core team then you can email us at team@librenms.org and we will endeavour to get back to as quick as we can, this is usually within 24 hours. We are happy to attribute credit to the findings but we ask that we're given a chance to patch any vulnerability before public disclosure so that our users can update as soon as a fix is available.","title":"Security information"},{"location":"General/Security/#general","text":"Like any good software we take security seriously. However, bugs do make it into the software along with the history of the code base we inherited. It's how we deal with identified vulnerabilities that should show that we take things seriously.","title":"General"},{"location":"General/Security/#securing-your-install","text":"As with any system of this nature, we highly recommend that you restrict access to the install via a firewall or VPN. It is also highly recommended that the Web interface is protected with an SSL certificate such as ones provided by LetsEncrypt . Please ensure you keep your install up to date .","title":"Securing your install"},{"location":"General/Security/#reporting-vulnerabilities","text":"Like anyone, we appreciate the work people put in to find flaws in software and welcome anyone to do so with LibreNMS, this will lead to better quality and more secure software for everyone. If you think you've found a vulnerability and want to discuss it with some of the core team then you can email us at team@librenms.org and we will endeavour to get back to as quick as we can, this is usually within 24 hours. We are happy to attribute credit to the findings but we ask that we're given a chance to patch any vulnerability before public disclosure so that our users can update as soon as a fix is available.","title":"Reporting vulnerabilities"},{"location":"General/Updating/","text":"By default, LibreNMS is set to automatically update. If you have disabled this feature then you can perform a manual update. Manual update If you would like to perform a manual update then you can do this by running the following command as the librenms user: ./daily.sh This will update both the core LibreNMS files but also update the database structure if updates are available. Advanced users If you absolutely must update manually without using ./daily.sh then you can do so by running the following commands: cd /opt/librenms git pull ./scripts/composer_wrapper.php install --no-dev php includes/sql-schema/update.php ./validate.php You should continue to run daily.sh. This does database cleanup and other processes in addition to updating. You can disable the daily.sh update process as described below. Disabling automatic updates LibreNMS by default performs updates on a daily basis. This can be disabled by setting: $config['update'] = 0;","title":"Updating an install"},{"location":"General/Updating/#manual-update","text":"If you would like to perform a manual update then you can do this by running the following command as the librenms user: ./daily.sh This will update both the core LibreNMS files but also update the database structure if updates are available.","title":"Manual update"},{"location":"General/Updating/#advanced-users","text":"If you absolutely must update manually without using ./daily.sh then you can do so by running the following commands: cd /opt/librenms git pull ./scripts/composer_wrapper.php install --no-dev php includes/sql-schema/update.php ./validate.php You should continue to run daily.sh. This does database cleanup and other processes in addition to updating. You can disable the daily.sh update process as described below.","title":"Advanced users"},{"location":"General/Updating/#disabling-automatic-updates","text":"LibreNMS by default performs updates on a daily basis. This can be disabled by setting: $config['update'] = 0;","title":"Disabling automatic updates"},{"location":"General/Welcome-to-Observium-users/","text":"LibreNMS is a fork of Observium. The reason for the fork has nothing to do with Observium's move to community vs. paid versions . It is simply that we have different priorities and values to the Observium development team. We decided to fork (reluctantly) because we like using Observium, but we want to collaborate on a community-based project with like-minded IT professionals. See README.md and the references there for more information about the kind of community we're trying to promote. LibreNMS was forked from the last GPL-licensed version of Observium . Thanks to one of our users, Dan Brown, who has written a migration script , you can easily move your Observium install over to LibreNMS. This also takes care of moving from one CPU architecture to another. Give it a try :) How LibreNMS will be different from Observium: We will have an inclusive community, where it's OK to ask stupid questions, and OK to ask for things that aren't on the roadmap. If you'd like to see something added, add or comment on the relevant issue in our Community forum . Development decisions will be community-driven. We want to make software that fulfills its users' needs. There are no plans for a paid version, and we don't anticipate this ever changing. There are no current plans for paid support, but this may be added later if there is sufficient demand. We use git for version control and GitHub for hosting to make it as easy and painless as possible to create forked or private versions. Reasons why you might want to use Observium instead of LibreNMS: You have a financial investment in Observium and aren't concerned about community contributions. You don't like the GNU General Public License, version 3 or the philosophy of Free Software/copyleft in general. Reasons why you might want to use LibreNMS instead of Observium: You want to work with others on the project, knowing that your investment of time and effort will not be wasted . You want to add and experiment with features that are not a priority for the Observium developers. See CONTRIBUTING for more details. You want to make use of the additional features LibreNMS can offer.","title":"Welcome to Observium users"},{"location":"Installation/","text":"Installing LibreNMS Docker An official LibreNMS docker image based on Alpine Linux and Nginx is available on DockerHub . Documentation can be found on the Github repository . Manually If you want to install manually then we have some documentation which should make it easy. This document includes instructions for: Ubuntu 20.04 RHEL / CentOS 8 Debian 10 Install LibreNMS Images We have some pre-built VirtualBox images you can use to get started: Virtual Machines Old Install Docs These install docs are no longer updated and may result in an unsuccessful install. Ubuntu 18.04 Apache Ubuntu 18.04 Nginx Debian 10 Nginx RHEL / CentOS 7 Apache RHEL / CentOS 7 Nginx Ubuntu 16.04 Apache Ubuntu 16.04 Nginx RHEL / CentOS 6","title":"How to install LibreNMS"},{"location":"Installation/#installing-librenms","text":"","title":"Installing LibreNMS"},{"location":"Installation/#docker","text":"An official LibreNMS docker image based on Alpine Linux and Nginx is available on DockerHub . Documentation can be found on the Github repository .","title":"Docker"},{"location":"Installation/#manually","text":"If you want to install manually then we have some documentation which should make it easy. This document includes instructions for: Ubuntu 20.04 RHEL / CentOS 8 Debian 10 Install LibreNMS","title":"Manually"},{"location":"Installation/#images","text":"We have some pre-built VirtualBox images you can use to get started: Virtual Machines","title":"Images"},{"location":"Installation/#old-install-docs","text":"These install docs are no longer updated and may result in an unsuccessful install. Ubuntu 18.04 Apache Ubuntu 18.04 Nginx Debian 10 Nginx RHEL / CentOS 7 Apache RHEL / CentOS 7 Nginx Ubuntu 16.04 Apache Ubuntu 16.04 Nginx RHEL / CentOS 6","title":"Old Install Docs"},{"location":"Installation/CentOS-image/","text":"","title":"CentOS image"},{"location":"Installation/Images/","text":"CentOS NOTE: We highly advise that you change all passwords on this image when you deploy it!! NOTE: Read the above note again! We have available for download a pre-built image based on CentOS 7 and Ubuntu 18.04. These images are built using packer.io . Details of the image and it's setup are: At present we provide the following builds: OVA Built with VirtualBox. Any issues and or help with these images should be reported via Community Fourm or our Discord server Setup US Keyboard Etc/UTC Timezone 4 Poller Wrapper threads Software PHP 7 MariaDB Syslog-ng Features Oxidized installed but not configured Weathermap plugin enabled Billing enabled RRDCached enabled Service checks enabled Syslog enabled Download All images can be downloaded from GitHub . The tags follow the main LibreNMS repo. When a new LibreNMS release is available we will push new images out running that version. Please do note that if you download an older release with a view to running that specific version, you will need to disable updates in config.php. Access/Credentials To access your newly imported VM, those ports are forwarded from your machine to the VM: 8080 for WebUI and 2023 for SSH. Remember to edit/remove them if you change (and you should) the VM network configuration. WebUI (http://localhost:8080) username: librenms password: D32fwefwef SSH (ssh://localhost:2023) username: librenms password: CDne3fwdfds MySQL/MariaDB username: librenms password: D42nf23rewD Contributing If you would like to help with these images whether it's add additional features or default software / settings then you can do so on GitHub .","title":"LibreNMS VMs"},{"location":"Installation/Images/#centos","text":"NOTE: We highly advise that you change all passwords on this image when you deploy it!! NOTE: Read the above note again! We have available for download a pre-built image based on CentOS 7 and Ubuntu 18.04. These images are built using packer.io . Details of the image and it's setup are: At present we provide the following builds: OVA Built with VirtualBox. Any issues and or help with these images should be reported via Community Fourm or our Discord server","title":"CentOS"},{"location":"Installation/Images/#setup","text":"US Keyboard Etc/UTC Timezone 4 Poller Wrapper threads","title":"Setup"},{"location":"Installation/Images/#software","text":"PHP 7 MariaDB Syslog-ng","title":"Software"},{"location":"Installation/Images/#features","text":"Oxidized installed but not configured Weathermap plugin enabled Billing enabled RRDCached enabled Service checks enabled Syslog enabled","title":"Features"},{"location":"Installation/Images/#download","text":"All images can be downloaded from GitHub . The tags follow the main LibreNMS repo. When a new LibreNMS release is available we will push new images out running that version. Please do note that if you download an older release with a view to running that specific version, you will need to disable updates in config.php.","title":"Download"},{"location":"Installation/Images/#accesscredentials","text":"To access your newly imported VM, those ports are forwarded from your machine to the VM: 8080 for WebUI and 2023 for SSH. Remember to edit/remove them if you change (and you should) the VM network configuration. WebUI (http://localhost:8080) username: librenms password: D32fwefwef SSH (ssh://localhost:2023) username: librenms password: CDne3fwdfds MySQL/MariaDB username: librenms password: D42nf23rewD","title":"Access/Credentials"},{"location":"Installation/Images/#contributing","text":"If you would like to help with these images whether it's add additional features or default software / settings then you can do so on GitHub .","title":"Contributing"},{"location":"Installation/Install-LibreNMS/","text":"Prepare Linux Server You should have an installed Linux server running one of the supported OS. Make sure you select your server's OS in the tabbed options below. Choice of web server is your preference, NGINX is recommended. Connect to the server command line and follow the instructions below. NOTE: These instructions assume you are the root user. If you are not, prepend sudo to the shell commands (the ones that aren't at mysql> prompts) or temporarily become a user with root privileges with sudo -s or sudo -i . Please note the minimum supported PHP version is 7.2.5 Install Required Packages Ubuntu 20.04 NGINX apt install software-properties-common add-apt-repository universe apt update apt install acl curl composer fping git graphviz imagemagick mariadb-client mariadb-server mtr-tiny nginx-full nmap php7.4-cli php7.4-curl php7.4-fpm php7.4-gd php7.4-json php7.4-mbstring php7.4-mysql php7.4-snmp php7.4-xml php7.4-zip rrdtool snmp snmpd whois unzip python3-pymysql python3-dotenv python3-redis python3-setuptools Apache apt install software-properties-common add-apt-repository universe apt update apt install acl curl apache2 composer fping git graphviz imagemagick libapache2-mod-fcgid mariadb-client mariadb-server mtr-tiny nmap php7.4-cli php7.4-curl php7.4-fpm php7.4-gd php7.4-json php7.4-mbstring php7.4-mysql php7.4-snmp php7.4-xml php7.4-zip rrdtool snmp snmpd whois python3-pymysql python3-dotenv python3-redis python3-setuptools CentOS 8 NGINX dnf -y install epel-release dnf module reset php dnf module enable php:7.3 dnf install bash-completion cronie fping git ImageMagick mariadb-server mtr net-snmp net-snmp-utils nginx nmap php-fpm php-cli php-common php-curl php-gd php-json php-mbstring php-process php-snmp php-xml php-zip php-mysqlnd python3 python3-PyMySQL python3-redis python3-memcached python3-pip rrdtool unzip Apache dnf -y install epel-release dnf module reset php dnf module enable php:7.3 dnf install bash-completion cronie fping git httpd ImageMagick mariadb-server mtr net-snmp net-snmp-utils nmap php-fpm php-cli php-common php-curl php-gd php-json php-mbstring php-process php-snmp php-xml php-zip php-mysqlnd python3 python3-PyMySQL python3-redis python3-memcached python3-pip rrdtool unzip Debian 10 NGINX apt install acl curl composer fping git graphviz imagemagick mariadb-client mariadb-server mtr-tiny nginx-full nmap php7.3-cli php7.3-curl php7.3-fpm php7.3-gd php7.3-json php7.3-mbstring php7.3-mysql php7.3-snmp php7.3-xml php7.3-zip python3-dotenv python3-pymysql python3-redis python3-setuptools rrdtool snmp snmpd whois Add librenms user useradd librenms -d /opt/librenms -M -r -s \"$(which bash)\" Download LibreNMS cd /opt git clone https://github.com/librenms/librenms.git Set permissions chown -R librenms:librenms /opt/librenms chmod 771 /opt/librenms setfacl -d -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/ setfacl -R -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/ Install PHP dependencies su - librenms ./scripts/composer_wrapper.php install --no-dev exit Sometime when there is a proxy used to gain internet access, the above script may fail. The workaround is to install the composer package manually. For a global installation: wget https://getcomposer.org/composer-stable.phar mv composer-stable.phar /usr/bin/composer chmod +x /usr/bin/composer Set timezone See http://php.net/manual/en/timezones.php for a list of supported timezones. Valid examples are: \"America/New_York\", \"Australia/Brisbane\", \"Etc/UTC\". Ensure date.timezone is set in php.ini to your preferred time zone. Ubuntu 20.04 vi /etc/php/7.4/fpm/php.ini vi /etc/php/7.4/cli/php.ini CentOS 8 vi /etc/php.ini Debian 10 vi /etc/php/7.3/fpm/php.ini vi /etc/php/7.3/cli/php.ini Remember to set the system timezone as well. timedatectl set-timezone Etc/UTC Configure MariaDB Ubuntu 20.04 vi /etc/mysql/mariadb.conf.d/50-server.cnf CentOS 8 vi /etc/my.cnf.d/mariadb-server.cnf Debian 10 vi /etc/mysql/mariadb.conf.d/50-server.cnf Within the [mysqld] section add: innodb_file_per_table=1 lower_case_table_names=0 systemctl enable mariadb systemctl restart mariadb mysql -u root NOTE: Change the 'password' below to something secure. CREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci ; CREATE USER 'librenms' @ 'localhost' IDENTIFIED BY 'password' ; GRANT ALL PRIVILEGES ON librenms . * TO 'librenms' @ 'localhost' ; FLUSH PRIVILEGES ; exit Configure PHP-FPM Ubuntu 20.04 cp /etc/php/7.4/fpm/pool.d/www.conf /etc/php/7.4/fpm/pool.d/librenms.conf vi /etc/php/7.4/fpm/pool.d/librenms.conf CentOS 8 cp /etc/php-fpm.d/www.conf /etc/php-fpm.d/librenms.conf vi /etc/php-fpm.d/librenms.conf Debian 10 cp /etc/php/7.3/fpm/pool.d/www.conf /etc/php/7.3/fpm/pool.d/librenms.conf vi /etc/php/7.3/fpm/pool.d/librenms.conf Change [www] to [librenms] : [librenms] Change user and group to \"librenms\": user = librenms group = librenms Change listen to a unique name: listen = /run/php-fpm-librenms.sock If there are no other PHP web applications on this server, you may remove www.conf to save some resources. Feel free to tune the performance settings in librenms.conf to meet your needs. Configure Web Server Ubuntu 20.04 NGINX vi /etc/nginx/conf.d/librenms.conf Add the following config, edit server_name as required: server { listen 80 ; server_name librenms.example.com ; root /opt/librenms/html ; index index.php ; charset utf-8 ; gzip on ; gzip_types text/css application/javascript text/javascript application/x-javascript image/svg+xml text/plain text/xsd text/xsl text/xml image/x-icon ; location / { try_files $uri $uri/ /index.php? $query_string ; } location ~ [^/]\\.php(/|$) { fastcgi_pass unix:/run/php-fpm-librenms.sock ; fastcgi_split_path_info ^(.+\\.php)(/.+) $ ; include fastcgi.conf ; } location ~ /\\.(?!well-known).* { deny all ; } } rm /etc/nginx/sites-enabled/default systemctl restart nginx systemctl restart php7.4-fpm Apache vi /etc/apache2/sites-available/librenms.conf Add the following config, edit ServerName as required: <VirtualHost *:80 > DocumentRoot /opt/librenms/html/ ServerName librenms.example.com AllowEncodedSlashes NoDecode <Directory \"/opt/librenms/html/\" > Require all granted AllowOverride All Options FollowSymLinks MultiViews </Directory> # Enable http authorization headers <IfModule setenvif_module > SetEnvIfNoCase ^Authorization$ \"(.+)\" HTTP_AUTHORIZATION=$1 </IfModule> <FilesMatch \".+\\.php$\" > SetHandler \"proxy:unix:/run/php-fpm-librenms.sock|fcgi://localhost\" </FilesMatch> </VirtualHost> a2dissite 000 -default a2enmod proxy_fcgi setenvif rewrite a2ensite librenms.conf systemctl restart apache2 systemctl restart php7.4-fpm CentOS 8 NGINX vi /etc/nginx/conf.d/librenms.conf Add the following config, edit server_name as required: server { listen 80 ; server_name librenms.example.com ; root /opt/librenms/html ; index index.php ; charset utf-8 ; gzip on ; gzip_types text/css application/javascript text/javascript application/x-javascript image/svg+xml text/plain text/xsd text/xsl text/xml image/x-icon ; location / { try_files $uri $uri/ /index.php? $query_string ; } location ~ [^/]\\.php(/|$) { fastcgi_pass unix:/run/php-fpm-librenms.sock ; fastcgi_split_path_info ^(.+\\.php)(/.+) $ ; include fastcgi.conf ; } location ~ /\\.(?!well-known).* { deny all ; } } NOTE: If this is the only site you are hosting on this server (it should be :)) then you will need to disable the default site. Delete the server section from /etc/nginx/nginx.conf systemctl enable --now nginx systemctl enable --now php-fpm Apache Create the librenms.conf: vi /etc/httpd/conf.d/librenms.conf Add the following config, edit ServerName as required: <VirtualHost *:80 > DocumentRoot /opt/librenms/html/ ServerName librenms.example.com AllowEncodedSlashes NoDecode <Directory \"/opt/librenms/html/\" > Require all granted AllowOverride All Options FollowSymLinks MultiViews </Directory> # Enable http authorization headers <IfModule setenvif_module > SetEnvIfNoCase ^Authorization$ \"(.+)\" HTTP_AUTHORIZATION=$1 </IfModule> <FilesMatch \".+\\.php$\" > SetHandler \"proxy:unix:/run/php-fpm-librenms.sock|fcgi://localhost\" </FilesMatch> </VirtualHost> NOTE: If this is the only site you are hosting on this server (it should be :)) then you will need to disable the default site. rm -f /etc/httpd/conf.d/welcome.conf systemctl enable --now httpd systemctl enable --now php-fpm Debian 10 NGINX vi /etc/nginx/sites-enabled/librenms.vhost Add the following config, edit server_name as required: server { listen 80 ; server_name librenms.example.com ; root /opt/librenms/html ; index index.php ; charset utf-8 ; gzip on ; gzip_types text/css application/javascript text/javascript application/x-javascript image/svg+xml text/plain text/xsd text/xsl text/xml image/x-icon ; location / { try_files $uri $uri/ /index.php? $query_string ; } location ~ [^/]\\.php(/|$) { fastcgi_pass unix:/run/php-fpm-librenms.sock ; fastcgi_split_path_info ^(.+\\.php)(/.+) $ ; include fastcgi.conf ; } location ~ /\\.(?!well-known).* { deny all ; } } rm /etc/nginx/sites-enabled/default systemctl reload nginx systemctl restart php7.3-fpm SELinux Ubuntu 20.04 SELinux not enabled by default CentOS 8 Install the policy tool for SELinux: dnf install policycoreutils-python-utils Configure the contexts needed by LibreNMS semanage fcontext -a -t httpd_sys_content_t '/opt/librenms/html(/.*)?' semanage fcontext -a -t httpd_sys_rw_content_t '/opt/librenms/(logs|rrd|storage)(/.*)?' restorecon -RFvv /opt/librenms setsebool -P httpd_can_sendmail=1 setsebool -P httpd_execmem 1 chcon -t httpd_sys_rw_content_t /opt/librenms/.env Allow fping Create the file http_fping.tt with the following contents. You can create this file anywhere, as it is a throw-away file. The last step in this install procedure will install the module in the proper location. module http_fping 1.0; require { type httpd_t; class capability net_raw; class rawip_socket { getopt create setopt write read }; } #============= httpd_t ============== allow httpd_t self:capability net_raw; allow httpd_t self:rawip_socket { getopt create setopt write read }; Then run these commands checkmodule -M -m -o http_fping.mod http_fping.tt semodule_package -o http_fping.pp -m http_fping.mod semodule -i http_fping.pp Additional SELinux problems may be found by executing the following command audit2why < /var/log/audit/audit.log Debian 10 SELinux not enabled by default Allow access through firewall Ubuntu 20.04 Firewall not enabled by default CentOS 8 firewall-cmd --zone public --add-service http --add-service https firewall-cmd --permanent --zone public --add-service http --add-service https Debian 10 Firewall not enabled by default Enable lnms command completion This feature grants you the opportunity to use tab for completion on lnms commands as you would for normal linux commands. ln -s /opt/librenms/lnms /usr/local/bin/lnms cp /opt/librenms/misc/lnms-completion.bash /etc/bash_completion.d/ Configure snmpd cp /opt/librenms/snmpd.conf.example /etc/snmp/snmpd.conf vi /etc/snmp/snmpd.conf Edit the text which says RANDOMSTRINGGOESHERE and set your own community string. curl -o /usr/bin/distro https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/distro chmod +x /usr/bin/distro systemctl enable snmpd systemctl restart snmpd Cron job cp /opt/librenms/librenms.nonroot.cron /etc/cron.d/librenms NOTE: Keep in mind that cron, by default, only uses a very limited set of environment variables. You may need to configure proxy variables for the cron invocation. Alternatively adding the proxy settings in config.php is possible too. The config.php file will be created in the upcoming steps. Review the following URL after you finished librenms install steps: https://docs.librenms.org/Support/Configuration/#proxy-support Copy logrotate config LibreNMS keeps logs in /opt/librenms/logs . Over time these can become large and be rotated out. To rotate out the old logs you can use the provided logrotate config file: cp /opt/librenms/misc/librenms.logrotate /etc/logrotate.d/librenms Web installer Now head to the web installer and follow the on-screen instructions. http://librenms.example.com/install The web installer might prompt you to create a config.php file in your librenms install location manually, copying the content displayed on-screen to the file. If you have to do this, please remember to set the permissions on config.php after you copied the on-screen contents to the file. Run: chown librenms:librenms /opt/librenms/config.php Final steps That's it! You now should be able to log in to http://librenms.example.com/ . Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default. Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps. Add the first device We now suggest that you add localhost as your first device from within the WebUI. Troubleshooting If you ever have issues with your install, run validate.php: sudo su - librenms ./validate.php There are various options for getting help listed on the LibreNMS web site: https://www.librenms.org/#support What next? Now that you've installed LibreNMS, we'd suggest that you have a read of a few other docs to get you going: Performance tuning Alerting Device Groups Auto discovery Closing We hope you enjoy using LibreNMS. If you do, it would be great if you would consider opting into the stats system we have, please see this page on what it is and how to enable it. If you would like to help make LibreNMS better there are many ways to help . You can also back LibreNMS on Open Collective .","title":"Install LibreNMS"},{"location":"Installation/Install-LibreNMS/#prepare-linux-server","text":"You should have an installed Linux server running one of the supported OS. Make sure you select your server's OS in the tabbed options below. Choice of web server is your preference, NGINX is recommended. Connect to the server command line and follow the instructions below. NOTE: These instructions assume you are the root user. If you are not, prepend sudo to the shell commands (the ones that aren't at mysql> prompts) or temporarily become a user with root privileges with sudo -s or sudo -i . Please note the minimum supported PHP version is 7.2.5","title":"Prepare Linux Server"},{"location":"Installation/Install-LibreNMS/#install-required-packages","text":"Ubuntu 20.04 NGINX apt install software-properties-common add-apt-repository universe apt update apt install acl curl composer fping git graphviz imagemagick mariadb-client mariadb-server mtr-tiny nginx-full nmap php7.4-cli php7.4-curl php7.4-fpm php7.4-gd php7.4-json php7.4-mbstring php7.4-mysql php7.4-snmp php7.4-xml php7.4-zip rrdtool snmp snmpd whois unzip python3-pymysql python3-dotenv python3-redis python3-setuptools Apache apt install software-properties-common add-apt-repository universe apt update apt install acl curl apache2 composer fping git graphviz imagemagick libapache2-mod-fcgid mariadb-client mariadb-server mtr-tiny nmap php7.4-cli php7.4-curl php7.4-fpm php7.4-gd php7.4-json php7.4-mbstring php7.4-mysql php7.4-snmp php7.4-xml php7.4-zip rrdtool snmp snmpd whois python3-pymysql python3-dotenv python3-redis python3-setuptools CentOS 8 NGINX dnf -y install epel-release dnf module reset php dnf module enable php:7.3 dnf install bash-completion cronie fping git ImageMagick mariadb-server mtr net-snmp net-snmp-utils nginx nmap php-fpm php-cli php-common php-curl php-gd php-json php-mbstring php-process php-snmp php-xml php-zip php-mysqlnd python3 python3-PyMySQL python3-redis python3-memcached python3-pip rrdtool unzip Apache dnf -y install epel-release dnf module reset php dnf module enable php:7.3 dnf install bash-completion cronie fping git httpd ImageMagick mariadb-server mtr net-snmp net-snmp-utils nmap php-fpm php-cli php-common php-curl php-gd php-json php-mbstring php-process php-snmp php-xml php-zip php-mysqlnd python3 python3-PyMySQL python3-redis python3-memcached python3-pip rrdtool unzip Debian 10 NGINX apt install acl curl composer fping git graphviz imagemagick mariadb-client mariadb-server mtr-tiny nginx-full nmap php7.3-cli php7.3-curl php7.3-fpm php7.3-gd php7.3-json php7.3-mbstring php7.3-mysql php7.3-snmp php7.3-xml php7.3-zip python3-dotenv python3-pymysql python3-redis python3-setuptools rrdtool snmp snmpd whois","title":"Install Required Packages"},{"location":"Installation/Install-LibreNMS/#add-librenms-user","text":"useradd librenms -d /opt/librenms -M -r -s \"$(which bash)\"","title":"Add librenms user"},{"location":"Installation/Install-LibreNMS/#download-librenms","text":"cd /opt git clone https://github.com/librenms/librenms.git","title":"Download LibreNMS"},{"location":"Installation/Install-LibreNMS/#set-permissions","text":"chown -R librenms:librenms /opt/librenms chmod 771 /opt/librenms setfacl -d -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/ setfacl -R -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/","title":"Set permissions"},{"location":"Installation/Install-LibreNMS/#install-php-dependencies","text":"su - librenms ./scripts/composer_wrapper.php install --no-dev exit Sometime when there is a proxy used to gain internet access, the above script may fail. The workaround is to install the composer package manually. For a global installation: wget https://getcomposer.org/composer-stable.phar mv composer-stable.phar /usr/bin/composer chmod +x /usr/bin/composer","title":"Install PHP dependencies"},{"location":"Installation/Install-LibreNMS/#set-timezone","text":"See http://php.net/manual/en/timezones.php for a list of supported timezones. Valid examples are: \"America/New_York\", \"Australia/Brisbane\", \"Etc/UTC\". Ensure date.timezone is set in php.ini to your preferred time zone. Ubuntu 20.04 vi /etc/php/7.4/fpm/php.ini vi /etc/php/7.4/cli/php.ini CentOS 8 vi /etc/php.ini Debian 10 vi /etc/php/7.3/fpm/php.ini vi /etc/php/7.3/cli/php.ini Remember to set the system timezone as well. timedatectl set-timezone Etc/UTC","title":"Set timezone"},{"location":"Installation/Install-LibreNMS/#configure-mariadb","text":"Ubuntu 20.04 vi /etc/mysql/mariadb.conf.d/50-server.cnf CentOS 8 vi /etc/my.cnf.d/mariadb-server.cnf Debian 10 vi /etc/mysql/mariadb.conf.d/50-server.cnf Within the [mysqld] section add: innodb_file_per_table=1 lower_case_table_names=0 systemctl enable mariadb systemctl restart mariadb mysql -u root NOTE: Change the 'password' below to something secure. CREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci ; CREATE USER 'librenms' @ 'localhost' IDENTIFIED BY 'password' ; GRANT ALL PRIVILEGES ON librenms . * TO 'librenms' @ 'localhost' ; FLUSH PRIVILEGES ; exit","title":"Configure MariaDB"},{"location":"Installation/Install-LibreNMS/#configure-php-fpm","text":"Ubuntu 20.04 cp /etc/php/7.4/fpm/pool.d/www.conf /etc/php/7.4/fpm/pool.d/librenms.conf vi /etc/php/7.4/fpm/pool.d/librenms.conf CentOS 8 cp /etc/php-fpm.d/www.conf /etc/php-fpm.d/librenms.conf vi /etc/php-fpm.d/librenms.conf Debian 10 cp /etc/php/7.3/fpm/pool.d/www.conf /etc/php/7.3/fpm/pool.d/librenms.conf vi /etc/php/7.3/fpm/pool.d/librenms.conf Change [www] to [librenms] : [librenms] Change user and group to \"librenms\": user = librenms group = librenms Change listen to a unique name: listen = /run/php-fpm-librenms.sock If there are no other PHP web applications on this server, you may remove www.conf to save some resources. Feel free to tune the performance settings in librenms.conf to meet your needs.","title":"Configure PHP-FPM"},{"location":"Installation/Install-LibreNMS/#configure-web-server","text":"Ubuntu 20.04 NGINX vi /etc/nginx/conf.d/librenms.conf Add the following config, edit server_name as required: server { listen 80 ; server_name librenms.example.com ; root /opt/librenms/html ; index index.php ; charset utf-8 ; gzip on ; gzip_types text/css application/javascript text/javascript application/x-javascript image/svg+xml text/plain text/xsd text/xsl text/xml image/x-icon ; location / { try_files $uri $uri/ /index.php? $query_string ; } location ~ [^/]\\.php(/|$) { fastcgi_pass unix:/run/php-fpm-librenms.sock ; fastcgi_split_path_info ^(.+\\.php)(/.+) $ ; include fastcgi.conf ; } location ~ /\\.(?!well-known).* { deny all ; } } rm /etc/nginx/sites-enabled/default systemctl restart nginx systemctl restart php7.4-fpm Apache vi /etc/apache2/sites-available/librenms.conf Add the following config, edit ServerName as required: <VirtualHost *:80 > DocumentRoot /opt/librenms/html/ ServerName librenms.example.com AllowEncodedSlashes NoDecode <Directory \"/opt/librenms/html/\" > Require all granted AllowOverride All Options FollowSymLinks MultiViews </Directory> # Enable http authorization headers <IfModule setenvif_module > SetEnvIfNoCase ^Authorization$ \"(.+)\" HTTP_AUTHORIZATION=$1 </IfModule> <FilesMatch \".+\\.php$\" > SetHandler \"proxy:unix:/run/php-fpm-librenms.sock|fcgi://localhost\" </FilesMatch> </VirtualHost> a2dissite 000 -default a2enmod proxy_fcgi setenvif rewrite a2ensite librenms.conf systemctl restart apache2 systemctl restart php7.4-fpm CentOS 8 NGINX vi /etc/nginx/conf.d/librenms.conf Add the following config, edit server_name as required: server { listen 80 ; server_name librenms.example.com ; root /opt/librenms/html ; index index.php ; charset utf-8 ; gzip on ; gzip_types text/css application/javascript text/javascript application/x-javascript image/svg+xml text/plain text/xsd text/xsl text/xml image/x-icon ; location / { try_files $uri $uri/ /index.php? $query_string ; } location ~ [^/]\\.php(/|$) { fastcgi_pass unix:/run/php-fpm-librenms.sock ; fastcgi_split_path_info ^(.+\\.php)(/.+) $ ; include fastcgi.conf ; } location ~ /\\.(?!well-known).* { deny all ; } } NOTE: If this is the only site you are hosting on this server (it should be :)) then you will need to disable the default site. Delete the server section from /etc/nginx/nginx.conf systemctl enable --now nginx systemctl enable --now php-fpm Apache Create the librenms.conf: vi /etc/httpd/conf.d/librenms.conf Add the following config, edit ServerName as required: <VirtualHost *:80 > DocumentRoot /opt/librenms/html/ ServerName librenms.example.com AllowEncodedSlashes NoDecode <Directory \"/opt/librenms/html/\" > Require all granted AllowOverride All Options FollowSymLinks MultiViews </Directory> # Enable http authorization headers <IfModule setenvif_module > SetEnvIfNoCase ^Authorization$ \"(.+)\" HTTP_AUTHORIZATION=$1 </IfModule> <FilesMatch \".+\\.php$\" > SetHandler \"proxy:unix:/run/php-fpm-librenms.sock|fcgi://localhost\" </FilesMatch> </VirtualHost> NOTE: If this is the only site you are hosting on this server (it should be :)) then you will need to disable the default site. rm -f /etc/httpd/conf.d/welcome.conf systemctl enable --now httpd systemctl enable --now php-fpm Debian 10 NGINX vi /etc/nginx/sites-enabled/librenms.vhost Add the following config, edit server_name as required: server { listen 80 ; server_name librenms.example.com ; root /opt/librenms/html ; index index.php ; charset utf-8 ; gzip on ; gzip_types text/css application/javascript text/javascript application/x-javascript image/svg+xml text/plain text/xsd text/xsl text/xml image/x-icon ; location / { try_files $uri $uri/ /index.php? $query_string ; } location ~ [^/]\\.php(/|$) { fastcgi_pass unix:/run/php-fpm-librenms.sock ; fastcgi_split_path_info ^(.+\\.php)(/.+) $ ; include fastcgi.conf ; } location ~ /\\.(?!well-known).* { deny all ; } } rm /etc/nginx/sites-enabled/default systemctl reload nginx systemctl restart php7.3-fpm","title":"Configure Web Server"},{"location":"Installation/Install-LibreNMS/#selinux","text":"Ubuntu 20.04 SELinux not enabled by default CentOS 8 Install the policy tool for SELinux: dnf install policycoreutils-python-utils","title":"SELinux"},{"location":"Installation/Install-LibreNMS/#configure-the-contexts-needed-by-librenms","text":"semanage fcontext -a -t httpd_sys_content_t '/opt/librenms/html(/.*)?' semanage fcontext -a -t httpd_sys_rw_content_t '/opt/librenms/(logs|rrd|storage)(/.*)?' restorecon -RFvv /opt/librenms setsebool -P httpd_can_sendmail=1 setsebool -P httpd_execmem 1 chcon -t httpd_sys_rw_content_t /opt/librenms/.env","title":"Configure the contexts needed by LibreNMS"},{"location":"Installation/Install-LibreNMS/#allow-fping","text":"Create the file http_fping.tt with the following contents. You can create this file anywhere, as it is a throw-away file. The last step in this install procedure will install the module in the proper location. module http_fping 1.0; require { type httpd_t; class capability net_raw; class rawip_socket { getopt create setopt write read }; } #============= httpd_t ============== allow httpd_t self:capability net_raw; allow httpd_t self:rawip_socket { getopt create setopt write read }; Then run these commands checkmodule -M -m -o http_fping.mod http_fping.tt semodule_package -o http_fping.pp -m http_fping.mod semodule -i http_fping.pp Additional SELinux problems may be found by executing the following command audit2why < /var/log/audit/audit.log Debian 10 SELinux not enabled by default","title":"Allow fping"},{"location":"Installation/Install-LibreNMS/#allow-access-through-firewall","text":"Ubuntu 20.04 Firewall not enabled by default CentOS 8 firewall-cmd --zone public --add-service http --add-service https firewall-cmd --permanent --zone public --add-service http --add-service https Debian 10 Firewall not enabled by default","title":"Allow access through firewall"},{"location":"Installation/Install-LibreNMS/#enable-lnms-command-completion","text":"This feature grants you the opportunity to use tab for completion on lnms commands as you would for normal linux commands. ln -s /opt/librenms/lnms /usr/local/bin/lnms cp /opt/librenms/misc/lnms-completion.bash /etc/bash_completion.d/","title":"Enable lnms command completion"},{"location":"Installation/Install-LibreNMS/#configure-snmpd","text":"cp /opt/librenms/snmpd.conf.example /etc/snmp/snmpd.conf vi /etc/snmp/snmpd.conf Edit the text which says RANDOMSTRINGGOESHERE and set your own community string. curl -o /usr/bin/distro https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/distro chmod +x /usr/bin/distro systemctl enable snmpd systemctl restart snmpd","title":"Configure snmpd"},{"location":"Installation/Install-LibreNMS/#cron-job","text":"cp /opt/librenms/librenms.nonroot.cron /etc/cron.d/librenms NOTE: Keep in mind that cron, by default, only uses a very limited set of environment variables. You may need to configure proxy variables for the cron invocation. Alternatively adding the proxy settings in config.php is possible too. The config.php file will be created in the upcoming steps. Review the following URL after you finished librenms install steps: https://docs.librenms.org/Support/Configuration/#proxy-support","title":"Cron job"},{"location":"Installation/Install-LibreNMS/#copy-logrotate-config","text":"LibreNMS keeps logs in /opt/librenms/logs . Over time these can become large and be rotated out. To rotate out the old logs you can use the provided logrotate config file: cp /opt/librenms/misc/librenms.logrotate /etc/logrotate.d/librenms","title":"Copy logrotate config"},{"location":"Installation/Install-LibreNMS/#web-installer","text":"Now head to the web installer and follow the on-screen instructions. http://librenms.example.com/install The web installer might prompt you to create a config.php file in your librenms install location manually, copying the content displayed on-screen to the file. If you have to do this, please remember to set the permissions on config.php after you copied the on-screen contents to the file. Run: chown librenms:librenms /opt/librenms/config.php","title":"Web installer"},{"location":"Installation/Install-LibreNMS/#final-steps","text":"That's it! You now should be able to log in to http://librenms.example.com/ . Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default. Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps.","title":"Final steps"},{"location":"Installation/Install-LibreNMS/#add-the-first-device","text":"We now suggest that you add localhost as your first device from within the WebUI.","title":"Add the first device"},{"location":"Installation/Install-LibreNMS/#troubleshooting","text":"If you ever have issues with your install, run validate.php: sudo su - librenms ./validate.php There are various options for getting help listed on the LibreNMS web site: https://www.librenms.org/#support","title":"Troubleshooting"},{"location":"Installation/Install-LibreNMS/#what-next","text":"Now that you've installed LibreNMS, we'd suggest that you have a read of a few other docs to get you going: Performance tuning Alerting Device Groups Auto discovery","title":"What next?"},{"location":"Installation/Install-LibreNMS/#closing","text":"We hope you enjoy using LibreNMS. If you do, it would be great if you would consider opting into the stats system we have, please see this page on what it is and how to enable it. If you would like to help make LibreNMS better there are many ways to help . You can also back LibreNMS on Open Collective .","title":"Closing"},{"location":"Installation/Installation-CentOS-6-Apache-Nginx/","text":"NOTE: These instructions assume you are the root user. If you are not, prepend sudo to the shell commands (the ones that aren't at mysql> prompts) or temporarily become a user with root privileges with sudo -s or sudo -i . Please note the minimum supported PHP version is 7.2.5 On the DB Server This host is where the MySQL database runs. It could be the same machine as your network management server (this is the most common initial deployment scenario). ** Whilst we are working on ensuring LibreNMS is compatible with MySQL strict mode, for now, please disable this after mysql is installed. You are free to choose between using MySQL or MariaDB: MySQL yum install net-snmp mysql-server mysql-client chkconfig mysqld on service mysqld start MariaDB yum install net-snmp mariadb-server mariadb-client chkconfig mariadb on service mariadb start Gneral Now continue with the installation: chkconfig snmpd on service snmpd start mysql_secure_installation mysql -uroot -p Enter the MySQL/MariaDB root password to enter the command-line interface. Create database. CREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci ; CREATE USER 'librenms' @ 'localhost' IDENTIFIED BY 'password' ; GRANT ALL PRIVILEGES ON librenms . * TO 'librenms' @ 'localhost' ; FLUSH PRIVILEGES ; exit Replace <ip> above with the IP of the server running LibreNMS. If your database is on the same server as LibreNMS, use localhost as the IP address. Edit the mysql/mariadb configuration file: vim /etc/my.cnf Add the following line: innodb_file_per_table=1 If you are deploying a separate database server, you also need to specify the bind-address . If your MySQL database resides on the same server as LibreNMS, you should skip this step. bind-address = <ip> If you see a line that starts sql-mode then change this to sql-mode=\"\" . Save, and restart MySQL/MariaDB to apply your changes: service mysqld restart or service mariadb restart On the NMS Install necessary software. The packages listed below are an all-inclusive list of packages that were necessary on a clean install of CentOS 6.x. It also requires the EPEL repository. Net_IPv6 is required even if your network environment does not support IPv6. Note if not using HTTPd (Apache): RHEL requires httpd to be installed regardless of of nginx 's (or any other web-server's) presence. yum install epel-release yum install php php-cli php-gd php-mysql php-snmp php-pear php-curl httpd net-snmp graphviz graphviz-php mysql ImageMagick jwhois nmap mtr rrdtool MySQL-python net-snmp-utils vixie-cron php-mcrypt fping git pear install Net_IPv4-1.3.4 pear install Net_IPv6-1.2.2b2 Configure SNMPD on localhost Edit /etc/snmp/snmpd.conf to enable self-polling. An absolute minimal config for snmpd is: rocommunity public 127.0.0.1 You may either edit the default configuration file to your liking, or backup the default config file and replace it entirely with your own. To apply your changes, run service snmpd restart for Centos 6.x. If you have deployed a separate database server, you will likely want to configure snmpd on that host as well. Adding the librenms-user for Apache useradd librenms -d /opt/librenms -M -r usermod -a -G librenms apache Adding the librenms-user for Nginx useradd librenms -d /opt/librenms -M -r usermod -a -G librenms nginx Using HTTPd (Apache2) Set httpd to start on system boot. chkconfig --levels 235 httpd on In /etc/php.ini , ensure date.timezone is set to your preferred time zone. See http://php.net/manual/en/timezones.php for a list of supported timezones. Valid examples are: \"America/New York\", \"Australia/Brisbane\", \"Etc/UTC\". Please also ensure that allow_url_fopen is enabled. Other functions needed for LibreNMS include exec,passthru,shell_exec,escapeshellarg,escapeshellcmd,proc_close,proc_open,popen . Next, add the following to /etc/httpd/conf.d/librenms.conf If you are running Apache below version 2.2.18: <VirtualHost *:80 > DocumentRoot /opt/librenms/html/ ServerName librenms.example.com CustomLog /opt/librenms/logs/access_log combined ErrorLog /opt/librenms/logs/error_log AllowEncodedSlashes On <Directory \"/opt/librenms/html/\" > AllowOverride All Options FollowSymLinks MultiViews </Directory> </VirtualHost> If you are running Apache 2.2.18 or higher: <VirtualHost *:80 > DocumentRoot /opt/librenms/html/ ServerName librenms.example.com CustomLog /opt/librenms/logs/access_log combined ErrorLog /opt/librenms/logs/error_log AllowEncodedSlashes NoDecode <Directory \"/opt/librenms/html/\" > AllowOverride All Options FollowSymLinks MultiViews Require all granted </Directory> </VirtualHost> If the file /etc/httpd/conf.d/welcome.conf exists, you will want to remove that as well unless you're familiar with Name-based Virtual Hosts . rn /etc/httpd/conf.d/welcome.conf /etc/httpd/conf.d/welcome.conf.bak Using Nginx and PHP-FPM If you choose to run Nginx, you will need to install necessary extra software and let it start on system boot. yum install nginx php-fpm chkconfig nginx on chkconfig php-fpm on Modify permissions and configuration for php-fpm to use nginx credentials. mkdir /var/lib/php/session chown root:nginx /var/lib/php -R vim /etc/php-fpm.d/www.conf # At line #12: Change `listen` to `/var/run/php5-fpm.sock` # At line #39-41: Change the `user` and `group` to `nginx` Add configuration for nginx at /etc/nginx/conf.d/librenms.conf with the following content: server { listen 80 ; server_name librenms.example.com ; root /opt/librenms/html ; index index.php ; access_log /opt/librenms/logs/access_log ; error_log /opt/librenms/logs/error_log ; location / { try_files $uri $uri/ @librenms ; } location ~ \\.php { fastcgi_param PATH_INFO $fastcgi_path_info ; include fastcgi.conf ; fastcgi_split_path_info ^(.+\\.php)(/.+) $ ; fastcgi_pass unix:/var/run/php5-fpm.sock ; } location ~ /\\.ht { deny all ; } location @librenms { rewrite api/v 0 (.*) $ /api_v0.php/ $1 last ; rewrite ^(.+) $ /index.php/ $1 last ; } } Cloning You can clone the repository via HTTPS or SSH. In either case, you need to ensure the appropriate port (443 for HTTPS, 22 for SSH) is open in the outbound direction for your server. cd /opt git clone https://github.com/librenms/librenms.git librenms cd /opt/librenms NOTE: The recommended method of cloning a git repository is HTTPS. If you would like to clone via SSH instead, use the command git clone git@github.com:librenms/librenms.git librenms instead. Prepare the Web Interface To prepare the web interface, you'll need to create and chown a directory as well as create an Apache vhost. First, create and chown the rrd directory and create the logs directory mkdir rrd logs chown -R librenms:librenms /opt/librenms chmod 775 rrd If you're planing on running rrdcached, make sure that the path is also chmod'ed to 775 and chown'ed to librenms:librenms. SELinux if you're using SELinux you need to allow web server user to write into logs directory. semanage tool is a part of policycoreutils-python, so if don't have it, you can install it Please note that running LibreNMS with SELinux is still experimental and we cannot guarantee that everything will be working fine for now. yum install policycoreutils-python semanage fcontext -a -t httpd_sys_content_t '/opt/librenms/logs(/.*)?' semanage fcontext -a -t httpd_sys_rw_content_t '/opt/librenms/logs(/.*)?' restorecon -RFvv /opt/librenms/logs/ Set selinux to allow httpd to sendmail setsebool -P httpd_can_sendmail = 1 Start the web-server # For HTTPd (Apache): service httpd restart # For Nginx: service nginx restart Web Installer At this stage you can launch the web installer by going to http://IP/install.php and follow the on-screen instructions. Alternatively if you want to continue the setup manually then perform the manual install steps. If you cannot reach the installer, stop here and solve that problem before proceeding. Afterwards, Add the following line to the end of config.php : $config['fping'] = \"/usr/sbin/fping\"; Manual Install You may skip this section if the web installer succeeded. cp config.php.default config.php vi config.php Change the values to the right of the equal sign for lines beginning with $config[db_] to match your database information as previously configured. Change the value of $config['snmp']['community'] from public to whatever your default read-only SNMP community is. If you have multiple existing communities in your environment, set it to the most common. Add the following line to the end of config.php : $config['fping'] = \"/usr/sbin/fping\"; Important: Be sure you have no characters (including whitespace like: newlines, spaces, tabs, etc) outside of the <?php?> blocks. Your graphs will break otherwise and there will be no error messages to indicate otherwise! Initialize the database Initiate the follow database with the following command: php includes/sql-schema/update.php Create admin user Create the admin user - priv should be 10 php adduser.php <name> <pass> 10 <email> Substitute your desired username, password and email address--and leave the angled brackets off. Validate your install After performing the manual install or web install, be sure to run validate.php as root in the librenms directory: php validate.php This will check your install to verify it is set up correctly. Add localhost php addhost.php localhost public v2c Replace public to match what you set in /etc/snmp/snmpd.conf . This command also assumes you are using SNMP v2c. If you're using v3, there are additional steps (NOTE: instructions for SNMPv3 to come). Discover localhost: php discovery.php -h all Create cronjob The polling method used by LibreNMS is poller-wrapper.py , which was placed in the public domain by its author. By default, the LibreNMS cronjob runs poller-wrapper.py with 16 threads. The current LibreNMS recommendation is to use 4 threads per core. The default if no thread count is 16 threads . If the thread count needs to be changed, you can do so by editing the cron file ( /etc/cron.d/librenms ). Just add a number after poller-wrapper.py , as in the below example: /opt/librenms/poller-wrapper.py 12 >> /dev/null 2>&1 Create the cronjob cp librenms.nonroot.cron /etc/cron.d/librenms NOTE: Keep in mind that cron, by default, only uses a very limited set of environment variables. You may need to configure proxy variables for the cron invocation. Alternatively adding the proxy settings in config.php is possible too. The config.php file will be created in the upcoming steps. Review the following URL after you finished librenms install steps: https://docs.librenms.org/Support/Configuration/#proxy-support Copy logrotate config LibreNMS keeps logs in /opt/librenms/logs . Over time these can become large and be rotated out. To rotate out the old logs you can use the provided logrotate config file: cp misc/librenms.logrotate /etc/logrotate.d/librenms Daily Updates LibreNMS performs daily updates by default. At 00:15 system time every day, a git pull --no-edit --quiet is performed. You can override this default by editing your config.php file. Remove the comment (the # mark) on the line: #$config['update'] = 0; so that it looks like this: $config['update'] = 0; Install complete Please allow for 2-3 runs of the poller-wrapper for data to start appearing in the WebUI. If you don't see data after this, please refer to the FAQ for assistance. That's it! You now should be able to log in to http://librenms.example.com/ . Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default. Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps. It would be great if you would consider opting into the stats system we have, please see this page on what it is and how to enable it.","title":"Installation CentOS 6 Apache Nginx"},{"location":"Installation/Installation-CentOS-6-Apache-Nginx/#on-the-db-server","text":"This host is where the MySQL database runs. It could be the same machine as your network management server (this is the most common initial deployment scenario). ** Whilst we are working on ensuring LibreNMS is compatible with MySQL strict mode, for now, please disable this after mysql is installed. You are free to choose between using MySQL or MariaDB:","title":"On the DB Server"},{"location":"Installation/Installation-CentOS-6-Apache-Nginx/#mysql","text":"yum install net-snmp mysql-server mysql-client chkconfig mysqld on service mysqld start","title":"MySQL"},{"location":"Installation/Installation-CentOS-6-Apache-Nginx/#mariadb","text":"yum install net-snmp mariadb-server mariadb-client chkconfig mariadb on service mariadb start","title":"MariaDB"},{"location":"Installation/Installation-CentOS-6-Apache-Nginx/#gneral","text":"Now continue with the installation: chkconfig snmpd on service snmpd start mysql_secure_installation mysql -uroot -p Enter the MySQL/MariaDB root password to enter the command-line interface. Create database. CREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci ; CREATE USER 'librenms' @ 'localhost' IDENTIFIED BY 'password' ; GRANT ALL PRIVILEGES ON librenms . * TO 'librenms' @ 'localhost' ; FLUSH PRIVILEGES ; exit Replace <ip> above with the IP of the server running LibreNMS. If your database is on the same server as LibreNMS, use localhost as the IP address. Edit the mysql/mariadb configuration file: vim /etc/my.cnf Add the following line: innodb_file_per_table=1 If you are deploying a separate database server, you also need to specify the bind-address . If your MySQL database resides on the same server as LibreNMS, you should skip this step. bind-address = <ip> If you see a line that starts sql-mode then change this to sql-mode=\"\" . Save, and restart MySQL/MariaDB to apply your changes: service mysqld restart or service mariadb restart","title":"Gneral"},{"location":"Installation/Installation-CentOS-6-Apache-Nginx/#on-the-nms","text":"Install necessary software. The packages listed below are an all-inclusive list of packages that were necessary on a clean install of CentOS 6.x. It also requires the EPEL repository. Net_IPv6 is required even if your network environment does not support IPv6. Note if not using HTTPd (Apache): RHEL requires httpd to be installed regardless of of nginx 's (or any other web-server's) presence. yum install epel-release yum install php php-cli php-gd php-mysql php-snmp php-pear php-curl httpd net-snmp graphviz graphviz-php mysql ImageMagick jwhois nmap mtr rrdtool MySQL-python net-snmp-utils vixie-cron php-mcrypt fping git pear install Net_IPv4-1.3.4 pear install Net_IPv6-1.2.2b2","title":"On the NMS"},{"location":"Installation/Installation-CentOS-6-Apache-Nginx/#configure-snmpd-on-localhost","text":"Edit /etc/snmp/snmpd.conf to enable self-polling. An absolute minimal config for snmpd is: rocommunity public 127.0.0.1 You may either edit the default configuration file to your liking, or backup the default config file and replace it entirely with your own. To apply your changes, run service snmpd restart for Centos 6.x. If you have deployed a separate database server, you will likely want to configure snmpd on that host as well.","title":"Configure SNMPD on localhost"},{"location":"Installation/Installation-CentOS-6-Apache-Nginx/#adding-the-librenms-user-for-apache","text":"useradd librenms -d /opt/librenms -M -r usermod -a -G librenms apache","title":"Adding the librenms-user for Apache"},{"location":"Installation/Installation-CentOS-6-Apache-Nginx/#adding-the-librenms-user-for-nginx","text":"useradd librenms -d /opt/librenms -M -r usermod -a -G librenms nginx","title":"Adding the librenms-user for Nginx"},{"location":"Installation/Installation-CentOS-6-Apache-Nginx/#using-httpd-apache2","text":"Set httpd to start on system boot. chkconfig --levels 235 httpd on In /etc/php.ini , ensure date.timezone is set to your preferred time zone. See http://php.net/manual/en/timezones.php for a list of supported timezones. Valid examples are: \"America/New York\", \"Australia/Brisbane\", \"Etc/UTC\". Please also ensure that allow_url_fopen is enabled. Other functions needed for LibreNMS include exec,passthru,shell_exec,escapeshellarg,escapeshellcmd,proc_close,proc_open,popen . Next, add the following to /etc/httpd/conf.d/librenms.conf If you are running Apache below version 2.2.18: <VirtualHost *:80 > DocumentRoot /opt/librenms/html/ ServerName librenms.example.com CustomLog /opt/librenms/logs/access_log combined ErrorLog /opt/librenms/logs/error_log AllowEncodedSlashes On <Directory \"/opt/librenms/html/\" > AllowOverride All Options FollowSymLinks MultiViews </Directory> </VirtualHost> If you are running Apache 2.2.18 or higher: <VirtualHost *:80 > DocumentRoot /opt/librenms/html/ ServerName librenms.example.com CustomLog /opt/librenms/logs/access_log combined ErrorLog /opt/librenms/logs/error_log AllowEncodedSlashes NoDecode <Directory \"/opt/librenms/html/\" > AllowOverride All Options FollowSymLinks MultiViews Require all granted </Directory> </VirtualHost> If the file /etc/httpd/conf.d/welcome.conf exists, you will want to remove that as well unless you're familiar with Name-based Virtual Hosts . rn /etc/httpd/conf.d/welcome.conf /etc/httpd/conf.d/welcome.conf.bak","title":"Using HTTPd (Apache2)"},{"location":"Installation/Installation-CentOS-6-Apache-Nginx/#using-nginx-and-php-fpm","text":"If you choose to run Nginx, you will need to install necessary extra software and let it start on system boot. yum install nginx php-fpm chkconfig nginx on chkconfig php-fpm on Modify permissions and configuration for php-fpm to use nginx credentials. mkdir /var/lib/php/session chown root:nginx /var/lib/php -R vim /etc/php-fpm.d/www.conf # At line #12: Change `listen` to `/var/run/php5-fpm.sock` # At line #39-41: Change the `user` and `group` to `nginx` Add configuration for nginx at /etc/nginx/conf.d/librenms.conf with the following content: server { listen 80 ; server_name librenms.example.com ; root /opt/librenms/html ; index index.php ; access_log /opt/librenms/logs/access_log ; error_log /opt/librenms/logs/error_log ; location / { try_files $uri $uri/ @librenms ; } location ~ \\.php { fastcgi_param PATH_INFO $fastcgi_path_info ; include fastcgi.conf ; fastcgi_split_path_info ^(.+\\.php)(/.+) $ ; fastcgi_pass unix:/var/run/php5-fpm.sock ; } location ~ /\\.ht { deny all ; } location @librenms { rewrite api/v 0 (.*) $ /api_v0.php/ $1 last ; rewrite ^(.+) $ /index.php/ $1 last ; } }","title":"Using Nginx and PHP-FPM"},{"location":"Installation/Installation-CentOS-6-Apache-Nginx/#cloning","text":"You can clone the repository via HTTPS or SSH. In either case, you need to ensure the appropriate port (443 for HTTPS, 22 for SSH) is open in the outbound direction for your server. cd /opt git clone https://github.com/librenms/librenms.git librenms cd /opt/librenms NOTE: The recommended method of cloning a git repository is HTTPS. If you would like to clone via SSH instead, use the command git clone git@github.com:librenms/librenms.git librenms instead.","title":"Cloning"},{"location":"Installation/Installation-CentOS-6-Apache-Nginx/#prepare-the-web-interface","text":"To prepare the web interface, you'll need to create and chown a directory as well as create an Apache vhost. First, create and chown the rrd directory and create the logs directory mkdir rrd logs chown -R librenms:librenms /opt/librenms chmod 775 rrd If you're planing on running rrdcached, make sure that the path is also chmod'ed to 775 and chown'ed to librenms:librenms. SELinux if you're using SELinux you need to allow web server user to write into logs directory. semanage tool is a part of policycoreutils-python, so if don't have it, you can install it Please note that running LibreNMS with SELinux is still experimental and we cannot guarantee that everything will be working fine for now. yum install policycoreutils-python semanage fcontext -a -t httpd_sys_content_t '/opt/librenms/logs(/.*)?' semanage fcontext -a -t httpd_sys_rw_content_t '/opt/librenms/logs(/.*)?' restorecon -RFvv /opt/librenms/logs/ Set selinux to allow httpd to sendmail setsebool -P httpd_can_sendmail = 1","title":"Prepare the Web Interface"},{"location":"Installation/Installation-CentOS-6-Apache-Nginx/#start-the-web-server","text":"# For HTTPd (Apache): service httpd restart # For Nginx: service nginx restart","title":"Start the web-server"},{"location":"Installation/Installation-CentOS-6-Apache-Nginx/#web-installer","text":"At this stage you can launch the web installer by going to http://IP/install.php and follow the on-screen instructions. Alternatively if you want to continue the setup manually then perform the manual install steps. If you cannot reach the installer, stop here and solve that problem before proceeding. Afterwards, Add the following line to the end of config.php : $config['fping'] = \"/usr/sbin/fping\";","title":"Web Installer"},{"location":"Installation/Installation-CentOS-6-Apache-Nginx/#manual-install","text":"You may skip this section if the web installer succeeded. cp config.php.default config.php vi config.php Change the values to the right of the equal sign for lines beginning with $config[db_] to match your database information as previously configured. Change the value of $config['snmp']['community'] from public to whatever your default read-only SNMP community is. If you have multiple existing communities in your environment, set it to the most common. Add the following line to the end of config.php : $config['fping'] = \"/usr/sbin/fping\"; Important: Be sure you have no characters (including whitespace like: newlines, spaces, tabs, etc) outside of the <?php?> blocks. Your graphs will break otherwise and there will be no error messages to indicate otherwise!","title":"Manual Install"},{"location":"Installation/Installation-CentOS-6-Apache-Nginx/#initialize-the-database","text":"Initiate the follow database with the following command: php includes/sql-schema/update.php","title":"Initialize the database"},{"location":"Installation/Installation-CentOS-6-Apache-Nginx/#create-admin-user","text":"Create the admin user - priv should be 10 php adduser.php <name> <pass> 10 <email> Substitute your desired username, password and email address--and leave the angled brackets off.","title":"Create admin user"},{"location":"Installation/Installation-CentOS-6-Apache-Nginx/#validate-your-install","text":"After performing the manual install or web install, be sure to run validate.php as root in the librenms directory: php validate.php This will check your install to verify it is set up correctly.","title":"Validate your install"},{"location":"Installation/Installation-CentOS-6-Apache-Nginx/#add-localhost","text":"php addhost.php localhost public v2c Replace public to match what you set in /etc/snmp/snmpd.conf . This command also assumes you are using SNMP v2c. If you're using v3, there are additional steps (NOTE: instructions for SNMPv3 to come). Discover localhost: php discovery.php -h all","title":"Add localhost"},{"location":"Installation/Installation-CentOS-6-Apache-Nginx/#create-cronjob","text":"The polling method used by LibreNMS is poller-wrapper.py , which was placed in the public domain by its author. By default, the LibreNMS cronjob runs poller-wrapper.py with 16 threads. The current LibreNMS recommendation is to use 4 threads per core. The default if no thread count is 16 threads . If the thread count needs to be changed, you can do so by editing the cron file ( /etc/cron.d/librenms ). Just add a number after poller-wrapper.py , as in the below example: /opt/librenms/poller-wrapper.py 12 >> /dev/null 2>&1 Create the cronjob cp librenms.nonroot.cron /etc/cron.d/librenms NOTE: Keep in mind that cron, by default, only uses a very limited set of environment variables. You may need to configure proxy variables for the cron invocation. Alternatively adding the proxy settings in config.php is possible too. The config.php file will be created in the upcoming steps. Review the following URL after you finished librenms install steps: https://docs.librenms.org/Support/Configuration/#proxy-support","title":"Create cronjob"},{"location":"Installation/Installation-CentOS-6-Apache-Nginx/#copy-logrotate-config","text":"LibreNMS keeps logs in /opt/librenms/logs . Over time these can become large and be rotated out. To rotate out the old logs you can use the provided logrotate config file: cp misc/librenms.logrotate /etc/logrotate.d/librenms","title":"Copy logrotate config"},{"location":"Installation/Installation-CentOS-6-Apache-Nginx/#daily-updates","text":"LibreNMS performs daily updates by default. At 00:15 system time every day, a git pull --no-edit --quiet is performed. You can override this default by editing your config.php file. Remove the comment (the # mark) on the line: #$config['update'] = 0; so that it looks like this: $config['update'] = 0;","title":"Daily Updates"},{"location":"Installation/Installation-CentOS-6-Apache-Nginx/#install-complete","text":"Please allow for 2-3 runs of the poller-wrapper for data to start appearing in the WebUI. If you don't see data after this, please refer to the FAQ for assistance. That's it! You now should be able to log in to http://librenms.example.com/ . Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default. Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps. It would be great if you would consider opting into the stats system we have, please see this page on what it is and how to enable it.","title":"Install complete"},{"location":"Installation/Installation-CentOS-7-Apache/","text":"NOTE: These instructions assume you are the root user. If you are not, prepend sudo to the shell commands (the ones that aren't at mysql> prompts) or temporarily become a user with root privileges with sudo -s or sudo -i . Please note the minimum supported PHP version is 7.2.5 Install Common Required Packages yum install epel-release yum install git cronie fping jwhois ImageMagick mtr MySQL-python net-snmp net-snmp-utils nmap python-memcached rrdtool policycoreutils-python httpd mariadb mariadb-server unzip python3 python3-pip Install PHP CentOS 7 comes with php 5.4 which is not compatible with LibreNMS. There are multiple ways to install php 7.x on CentOS 7, like Webtatic, Remi or SCL, the last two are maintained by Remi Collet of RedHat. Running with Remi PHP yum localinstall http://rpms.remirepo.net/enterprise/remi-release-7.rpm Install the yum-config-manager to change to Remi PHP 7.3 Repo. yum install yum-utils yum-config-manager --enable remi-php73 Install the required packages yum install mod_php php-cli php-common php-curl php-gd php-mbstring php-process php-snmp php-xml php-zip php-memcached php-mysqlnd Running with CentOS SCL php yum install centos-release-scl yum install rh-php72 rh-php72-php-cli rh-php72-php-common rh-php72-php-curl rh-php72-php-gd rh-php72-php-mbstring rh-php72-php-process rh-php72-php-snmp rh-php72-php-xml rh-php72-php-zip rh-php72-php-memcached rh-php72-php-mysqlnd ln -s /opt/rh/rh-php72/root/usr/bin/php /usr/bin/php ln -s /opt/rh/httpd24/root/etc/httpd/conf.d/rh-php72-php.conf /etc/httpd/conf.d/ ln -s /opt/rh/httpd24/root/etc/httpd/conf.modules.d/15-rh-php72-php.conf /etc/httpd/conf.modules.d/ ln -s /opt/rh/httpd24/root/etc/httpd/modules/librh-php72-php7.so /etc/httpd/modules/ Add librenms user useradd librenms -d /opt/librenms -M -r usermod -a -G librenms apache Download LibreNMS cd /opt git clone https://github.com/librenms/librenms.git Set permissions chown -R librenms:librenms /opt/librenms chmod 770 /opt/librenms setfacl -d -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/ /opt/librenms/cache setfacl -R -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/ /opt/librenms/cache Install PHP dependencies su - librenms ./scripts/composer_wrapper.php install --no-dev exit DB Server Configure MySQL systemctl enable --now mariadb mysql -u root NOTE: Please change the 'password' below to something secure. CREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci ; CREATE USER 'librenms' @ 'localhost' IDENTIFIED BY 'password' ; GRANT ALL PRIVILEGES ON librenms . * TO 'librenms' @ 'localhost' ; FLUSH PRIVILEGES ; exit vi /etc/my.cnf Within the [mysqld] section please add: innodb_file_per_table = 1 lower_case_table_names = 0 systemctl restart mariadb Web Server Configure PHP Ensure date.timezone is set in php.ini to your preferred time zone. See http://php.net/manual/en/timezones.php for a list of supported timezones. Valid examples are: \"America/New_York\", \"Australia/Brisbane\", \"Etc/UTC\". When PHP is configured with open_basedir, be sure to allow the following paths for LibreNMS to work: php_admin_value[open_basedir] = \"/opt/librenms:/usr/lib64/nagios/plugins:/dev/urandom:/usr/sbin/fping:/usr/sbin/fping6:/usr/bin/snmpgetnext:/usr/bin/rrdtool:/usr/bin/snmpwalk:/usr/bin/snmpget:/usr/bin/snmpbulkwalk:/usr/bin/snmptranslate:/usr/bin/traceroute:/usr/bin/whois:/bin/ping:/usr/sbin/mtr:/usr/bin/nmap:/usr/sbin/ipmitool:/usr/bin/virsh:/usr/bin/nfdump\" vi /etc/php.ini or vi /etc/opt/rh/rh-php72/php.ini Configure Apache Create the librenms.conf: vi /etc/httpd/conf.d/librenms.conf Add the following config, edit ServerName as required: <VirtualHost *:80 > DocumentRoot /opt/librenms/html/ ServerName librenms.example.com AllowEncodedSlashes NoDecode <Directory \"/opt/librenms/html/\" > Require all granted AllowOverride All Options FollowSymLinks MultiViews </Directory> </VirtualHost> NOTE: If this is the only site you are hosting on this server (it should be :)) then you will need to disable the default site. rm -f /etc/httpd/conf.d/welcome.conf systemctl enable --now httpd SELinux Install the policy tool for SELinux: yum install policycoreutils-python Configure the contexts needed by LibreNMS semanage fcontext -a -t httpd_sys_content_t '/opt/librenms/logs(/.*)?' semanage fcontext -a -t httpd_sys_rw_content_t '/opt/librenms/logs(/.*)?' restorecon -RFvv /opt/librenms/logs/ semanage fcontext -a -t httpd_sys_content_t '/opt/librenms/rrd(/.*)?' semanage fcontext -a -t httpd_sys_rw_content_t '/opt/librenms/rrd(/.*)?' restorecon -RFvv /opt/librenms/rrd/ semanage fcontext -a -t httpd_sys_content_t '/opt/librenms/storage(/.*)?' semanage fcontext -a -t httpd_sys_rw_content_t '/opt/librenms/storage(/.*)?' restorecon -RFvv /opt/librenms/storage/ semanage fcontext -a -t httpd_sys_content_t '/opt/librenms/bootstrap/cache(/.*)?' semanage fcontext -a -t httpd_sys_rw_content_t '/opt/librenms/bootstrap/cache(/.*)?' restorecon -RFvv /opt/librenms/bootstrap/cache/ semanage fcontext -a -t httpd_sys_content_t '/opt/librenms/cache(/.*)?' semanage fcontext -a -t httpd_sys_rw_content_t '/opt/librenms/cache(/.*)?' restorecon -RFvv /var/www/opt/librenms/cache/ setsebool -P httpd_can_sendmail=1 Additional SELinux problems may be found by executing the following command audit2why < /var/log/audit/audit.log Allow fping Create the file http_fping.tt with the following contents. You can create this file anywhere, as it is a throw-away file. The last step in this install procedure will install the module in the proper location. module http_fping 1.0; require { type httpd_t; class capability net_raw; class rawip_socket { getopt create setopt write read }; } #============= httpd_t ============== allow httpd_t self:capability net_raw; allow httpd_t self:rawip_socket { getopt create setopt write read }; Then run these commands checkmodule -M -m -o http_fping.mod http_fping.tt semodule_package -o http_fping.pp -m http_fping.mod semodule -i http_fping.pp Allow access through firewall firewall-cmd --zone public --add-service http firewall-cmd --permanent --zone public --add-service http firewall-cmd --zone public --add-service https firewall-cmd --permanent --zone public --add-service https Configure snmpd Copy the example snmpd.conf from the LibreNMS install. cp /opt/librenms/snmpd.conf.example /etc/snmp/snmpd.conf vi /etc/snmp/snmpd.conf Edit the text which says RANDOMSTRINGGOESHERE and set your own community string. curl -o /usr/bin/distro https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/distro chmod +x /usr/bin/distro systemctl enable snmpd systemctl restart snmpd Cron job cp /opt/librenms/librenms.nonroot.cron /etc/cron.d/librenms NOTE: Keep in mind that cron, by default, only uses a very limited set of environment variables. You may need to configure proxy variables for the cron invocation. Alternatively adding the proxy settings in config.php is possible too. The config.php file will be created in the upcoming steps. Review the following URL after you finished librenms install steps: https://docs.librenms.org/Support/Configuration/#proxy-support Copy logrotate config LibreNMS keeps logs in /opt/librenms/logs . Over time these can become large and be rotated out. To rotate out the old logs you can use the provided logrotate config file: cp /opt/librenms/misc/librenms.logrotate /etc/logrotate.d/librenms Web installer Now head to the web installer and follow the on-screen instructions. http://librenms.example.com/install.php The web installer might prompt you to create a config.php file in your librenms install location manually, copying the content displayed on-screen to the file. If you have to do this, please remember to set the permissions on config.php after you copied the on-screen contents to the file. Run: chown librenms:librenms /opt/librenms/config.php Final steps That's it! You now should be able to log in to http://librenms.example.com/ . Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default. Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps. Add the first device We now suggest that you add localhost as your first device from within the WebUI. Troubleshooting If you ever have issues with your install, run validate.php as root in the librenms directory: cd /opt/librenms ./validate.php There are various options for getting help listed on the LibreNMS web site: https://www.librenms.org/#support What next? Now that you've installed LibreNMS, we'd suggest that you have a read of a few other docs to get you going: Performance tuning Alerting Device Groups Auto discovery Closing We hope you enjoy using LibreNMS. If you do, it would be great if you would consider opting into the stats system we have, please see this page on what it is and how to enable it. If you would like to help make LibreNMS better there are many ways to help . You can also back LibreNMS on Open Collective .","title":"Installation CentOS 7 Apache"},{"location":"Installation/Installation-CentOS-7-Apache/#install-common-required-packages","text":"yum install epel-release yum install git cronie fping jwhois ImageMagick mtr MySQL-python net-snmp net-snmp-utils nmap python-memcached rrdtool policycoreutils-python httpd mariadb mariadb-server unzip python3 python3-pip","title":"Install Common Required Packages"},{"location":"Installation/Installation-CentOS-7-Apache/#install-php","text":"CentOS 7 comes with php 5.4 which is not compatible with LibreNMS. There are multiple ways to install php 7.x on CentOS 7, like Webtatic, Remi or SCL, the last two are maintained by Remi Collet of RedHat.","title":"Install PHP"},{"location":"Installation/Installation-CentOS-7-Apache/#running-with-remi-php","text":"yum localinstall http://rpms.remirepo.net/enterprise/remi-release-7.rpm Install the yum-config-manager to change to Remi PHP 7.3 Repo. yum install yum-utils yum-config-manager --enable remi-php73 Install the required packages yum install mod_php php-cli php-common php-curl php-gd php-mbstring php-process php-snmp php-xml php-zip php-memcached php-mysqlnd","title":"Running with Remi PHP"},{"location":"Installation/Installation-CentOS-7-Apache/#running-with-centos-scl-php","text":"yum install centos-release-scl yum install rh-php72 rh-php72-php-cli rh-php72-php-common rh-php72-php-curl rh-php72-php-gd rh-php72-php-mbstring rh-php72-php-process rh-php72-php-snmp rh-php72-php-xml rh-php72-php-zip rh-php72-php-memcached rh-php72-php-mysqlnd ln -s /opt/rh/rh-php72/root/usr/bin/php /usr/bin/php ln -s /opt/rh/httpd24/root/etc/httpd/conf.d/rh-php72-php.conf /etc/httpd/conf.d/ ln -s /opt/rh/httpd24/root/etc/httpd/conf.modules.d/15-rh-php72-php.conf /etc/httpd/conf.modules.d/ ln -s /opt/rh/httpd24/root/etc/httpd/modules/librh-php72-php7.so /etc/httpd/modules/","title":"Running with CentOS SCL php"},{"location":"Installation/Installation-CentOS-7-Apache/#add-librenms-user","text":"useradd librenms -d /opt/librenms -M -r usermod -a -G librenms apache","title":"Add librenms user"},{"location":"Installation/Installation-CentOS-7-Apache/#download-librenms","text":"cd /opt git clone https://github.com/librenms/librenms.git","title":"Download LibreNMS"},{"location":"Installation/Installation-CentOS-7-Apache/#set-permissions","text":"chown -R librenms:librenms /opt/librenms chmod 770 /opt/librenms setfacl -d -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/ /opt/librenms/cache setfacl -R -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/ /opt/librenms/cache","title":"Set permissions"},{"location":"Installation/Installation-CentOS-7-Apache/#install-php-dependencies","text":"su - librenms ./scripts/composer_wrapper.php install --no-dev exit","title":"Install PHP dependencies"},{"location":"Installation/Installation-CentOS-7-Apache/#db-server","text":"","title":"DB Server"},{"location":"Installation/Installation-CentOS-7-Apache/#configure-mysql","text":"systemctl enable --now mariadb mysql -u root NOTE: Please change the 'password' below to something secure. CREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci ; CREATE USER 'librenms' @ 'localhost' IDENTIFIED BY 'password' ; GRANT ALL PRIVILEGES ON librenms . * TO 'librenms' @ 'localhost' ; FLUSH PRIVILEGES ; exit vi /etc/my.cnf Within the [mysqld] section please add: innodb_file_per_table = 1 lower_case_table_names = 0 systemctl restart mariadb","title":"Configure MySQL"},{"location":"Installation/Installation-CentOS-7-Apache/#web-server","text":"","title":"Web Server"},{"location":"Installation/Installation-CentOS-7-Apache/#configure-php","text":"Ensure date.timezone is set in php.ini to your preferred time zone. See http://php.net/manual/en/timezones.php for a list of supported timezones. Valid examples are: \"America/New_York\", \"Australia/Brisbane\", \"Etc/UTC\". When PHP is configured with open_basedir, be sure to allow the following paths for LibreNMS to work: php_admin_value[open_basedir] = \"/opt/librenms:/usr/lib64/nagios/plugins:/dev/urandom:/usr/sbin/fping:/usr/sbin/fping6:/usr/bin/snmpgetnext:/usr/bin/rrdtool:/usr/bin/snmpwalk:/usr/bin/snmpget:/usr/bin/snmpbulkwalk:/usr/bin/snmptranslate:/usr/bin/traceroute:/usr/bin/whois:/bin/ping:/usr/sbin/mtr:/usr/bin/nmap:/usr/sbin/ipmitool:/usr/bin/virsh:/usr/bin/nfdump\" vi /etc/php.ini or vi /etc/opt/rh/rh-php72/php.ini","title":"Configure PHP"},{"location":"Installation/Installation-CentOS-7-Apache/#configure-apache","text":"Create the librenms.conf: vi /etc/httpd/conf.d/librenms.conf Add the following config, edit ServerName as required: <VirtualHost *:80 > DocumentRoot /opt/librenms/html/ ServerName librenms.example.com AllowEncodedSlashes NoDecode <Directory \"/opt/librenms/html/\" > Require all granted AllowOverride All Options FollowSymLinks MultiViews </Directory> </VirtualHost> NOTE: If this is the only site you are hosting on this server (it should be :)) then you will need to disable the default site. rm -f /etc/httpd/conf.d/welcome.conf systemctl enable --now httpd","title":"Configure Apache"},{"location":"Installation/Installation-CentOS-7-Apache/#selinux","text":"Install the policy tool for SELinux: yum install policycoreutils-python","title":"SELinux"},{"location":"Installation/Installation-CentOS-7-Apache/#configure-the-contexts-needed-by-librenms","text":"semanage fcontext -a -t httpd_sys_content_t '/opt/librenms/logs(/.*)?' semanage fcontext -a -t httpd_sys_rw_content_t '/opt/librenms/logs(/.*)?' restorecon -RFvv /opt/librenms/logs/ semanage fcontext -a -t httpd_sys_content_t '/opt/librenms/rrd(/.*)?' semanage fcontext -a -t httpd_sys_rw_content_t '/opt/librenms/rrd(/.*)?' restorecon -RFvv /opt/librenms/rrd/ semanage fcontext -a -t httpd_sys_content_t '/opt/librenms/storage(/.*)?' semanage fcontext -a -t httpd_sys_rw_content_t '/opt/librenms/storage(/.*)?' restorecon -RFvv /opt/librenms/storage/ semanage fcontext -a -t httpd_sys_content_t '/opt/librenms/bootstrap/cache(/.*)?' semanage fcontext -a -t httpd_sys_rw_content_t '/opt/librenms/bootstrap/cache(/.*)?' restorecon -RFvv /opt/librenms/bootstrap/cache/ semanage fcontext -a -t httpd_sys_content_t '/opt/librenms/cache(/.*)?' semanage fcontext -a -t httpd_sys_rw_content_t '/opt/librenms/cache(/.*)?' restorecon -RFvv /var/www/opt/librenms/cache/ setsebool -P httpd_can_sendmail=1 Additional SELinux problems may be found by executing the following command audit2why < /var/log/audit/audit.log","title":"Configure the contexts needed by LibreNMS"},{"location":"Installation/Installation-CentOS-7-Apache/#allow-fping","text":"Create the file http_fping.tt with the following contents. You can create this file anywhere, as it is a throw-away file. The last step in this install procedure will install the module in the proper location. module http_fping 1.0; require { type httpd_t; class capability net_raw; class rawip_socket { getopt create setopt write read }; } #============= httpd_t ============== allow httpd_t self:capability net_raw; allow httpd_t self:rawip_socket { getopt create setopt write read }; Then run these commands checkmodule -M -m -o http_fping.mod http_fping.tt semodule_package -o http_fping.pp -m http_fping.mod semodule -i http_fping.pp","title":"Allow fping"},{"location":"Installation/Installation-CentOS-7-Apache/#allow-access-through-firewall","text":"firewall-cmd --zone public --add-service http firewall-cmd --permanent --zone public --add-service http firewall-cmd --zone public --add-service https firewall-cmd --permanent --zone public --add-service https","title":"Allow access through firewall"},{"location":"Installation/Installation-CentOS-7-Apache/#configure-snmpd","text":"Copy the example snmpd.conf from the LibreNMS install. cp /opt/librenms/snmpd.conf.example /etc/snmp/snmpd.conf vi /etc/snmp/snmpd.conf Edit the text which says RANDOMSTRINGGOESHERE and set your own community string. curl -o /usr/bin/distro https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/distro chmod +x /usr/bin/distro systemctl enable snmpd systemctl restart snmpd","title":"Configure snmpd"},{"location":"Installation/Installation-CentOS-7-Apache/#cron-job","text":"cp /opt/librenms/librenms.nonroot.cron /etc/cron.d/librenms NOTE: Keep in mind that cron, by default, only uses a very limited set of environment variables. You may need to configure proxy variables for the cron invocation. Alternatively adding the proxy settings in config.php is possible too. The config.php file will be created in the upcoming steps. Review the following URL after you finished librenms install steps: https://docs.librenms.org/Support/Configuration/#proxy-support","title":"Cron job"},{"location":"Installation/Installation-CentOS-7-Apache/#copy-logrotate-config","text":"LibreNMS keeps logs in /opt/librenms/logs . Over time these can become large and be rotated out. To rotate out the old logs you can use the provided logrotate config file: cp /opt/librenms/misc/librenms.logrotate /etc/logrotate.d/librenms","title":"Copy logrotate config"},{"location":"Installation/Installation-CentOS-7-Apache/#web-installer","text":"Now head to the web installer and follow the on-screen instructions. http://librenms.example.com/install.php The web installer might prompt you to create a config.php file in your librenms install location manually, copying the content displayed on-screen to the file. If you have to do this, please remember to set the permissions on config.php after you copied the on-screen contents to the file. Run: chown librenms:librenms /opt/librenms/config.php","title":"Web installer"},{"location":"Installation/Installation-CentOS-7-Apache/#final-steps","text":"That's it! You now should be able to log in to http://librenms.example.com/ . Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default. Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps.","title":"Final steps"},{"location":"Installation/Installation-CentOS-7-Apache/#add-the-first-device","text":"We now suggest that you add localhost as your first device from within the WebUI.","title":"Add the first device"},{"location":"Installation/Installation-CentOS-7-Apache/#troubleshooting","text":"If you ever have issues with your install, run validate.php as root in the librenms directory: cd /opt/librenms ./validate.php There are various options for getting help listed on the LibreNMS web site: https://www.librenms.org/#support","title":"Troubleshooting"},{"location":"Installation/Installation-CentOS-7-Apache/#what-next","text":"Now that you've installed LibreNMS, we'd suggest that you have a read of a few other docs to get you going: Performance tuning Alerting Device Groups Auto discovery","title":"What next?"},{"location":"Installation/Installation-CentOS-7-Apache/#closing","text":"We hope you enjoy using LibreNMS. If you do, it would be great if you would consider opting into the stats system we have, please see this page on what it is and how to enable it. If you would like to help make LibreNMS better there are many ways to help . You can also back LibreNMS on Open Collective .","title":"Closing"},{"location":"Installation/Installation-CentOS-7-Nginx/","text":"NOTE: These instructions assume you are the root user. If you are not, prepend sudo to the shell commands (the ones that aren't at mysql> prompts) or temporarily become a user with root privileges with sudo -s or sudo -i . Please note the minimum supported PHP version is 7.2.5 Install Required Packages yum install epel-release yum-utils yum localinstall http://rpms.remirepo.net/enterprise/remi-release-7.rpm yum-config-manager --enable remi-php73 yum install composer cronie fping git ImageMagick jwhois mariadb mariadb-server mtr MySQL-python net-snmp net-snmp-utils nginx nmap php-fpm php-cli php-common php-curl php-gd php-mbstring php-process php-snmp php-xml php-zip php-memcached php-mysqlnd python-memcached rrdtool python3 python3-pip Add librenms user useradd librenms -d /opt/librenms -M -r usermod -a -G librenms nginx Download LibreNMS cd /opt git clone https://github.com/librenms/librenms.git Set permissions chown -R librenms:librenms /opt/librenms chmod 770 /opt/librenms setfacl -d -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/ setfacl -R -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/ chgrp apache /var/lib/php/session/ Install PHP dependencies su - librenms ./scripts/composer_wrapper.php install --no-dev exit DB Server Configure MySQL systemctl start mariadb mysql -u root NOTE: Please change the 'password' below to something secure. CREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci ; CREATE USER 'librenms' @ 'localhost' IDENTIFIED BY 'password' ; GRANT ALL PRIVILEGES ON librenms . * TO 'librenms' @ 'localhost' ; FLUSH PRIVILEGES ; exit vi /etc/my.cnf Within the [mysqld] section please add: innodb_file_per_table = 1 lower_case_table_names = 0 systemctl enable mariadb systemctl restart mariadb Web Server Configure and Start PHP-FPM Ensure date.timezone is set in php.ini to your preferred time zone. See http://php.net/manual/en/timezones.php for a list of supported timezones. Valid examples are: \"America/New_York\", \"Australia/Brisbane\", \"Etc/UTC\". vi /etc/php.ini In /etc/php-fpm.d/www.conf make these changes: vi /etc/php-fpm.d/www.conf ; user = apache user = nginx group = apache ; keep group as apache ; listen = 127.0.0.1 : 9000 listen = /run/php-fpm/php-fpm.sock listen.owner = nginx listen.group = nginx listen.mode = 0660 systemctl enable php-fpm systemctl restart php-fpm Configure NGINX vi /etc/nginx/conf.d/librenms.conf Add the following config, edit server_name as required: server { listen 80 ; server_name librenms.example.com ; root /opt/librenms/html ; index index.php ; charset utf-8 ; gzip on ; gzip_types text/css application/javascript text/javascript application/x-javascript image/svg+xml text/plain text/xsd text/xsl text/xml image/x-icon ; location / { try_files $uri $uri/ /index.php? $query_string ; } location /api/v0 { try_files $uri $uri/ /api_v0.php? $query_string ; } location ~ \\.php { include fastcgi.conf ; fastcgi_split_path_info ^(.+\\.php)(/.+) $ ; fastcgi_pass unix:/run/php-fpm/php-fpm.sock ; } location ~ /\\.ht { deny all ; } } NOTE: If this is the only site you are hosting on this server (it should be :)) then you will need to disable the default site. Delete the server section from /etc/nginx/nginx.conf systemctl enable nginx systemctl restart nginx SELinux Install the policy tool for SELinux: yum install policycoreutils-python Configure the contexts needed by LibreNMS: semanage fcontext -a -t httpd_sys_content_t '/opt/librenms/logs(/.*)?' semanage fcontext -a -t httpd_sys_rw_content_t '/opt/librenms/logs(/.*)?' restorecon -RFvv /opt/librenms/logs/ semanage fcontext -a -t httpd_sys_content_t '/opt/librenms/rrd(/.*)?' semanage fcontext -a -t httpd_sys_rw_content_t '/opt/librenms/rrd(/.*)?' restorecon -RFvv /opt/librenms/rrd/ semanage fcontext -a -t httpd_sys_content_t '/opt/librenms/storage(/.*)?' semanage fcontext -a -t httpd_sys_rw_content_t '/opt/librenms/storage(/.*)?' restorecon -RFvv /opt/librenms/storage/ semanage fcontext -a -t httpd_sys_content_t '/opt/librenms/bootstrap/cache(/.*)?' semanage fcontext -a -t httpd_sys_rw_content_t '/opt/librenms/bootstrap/cache(/.*)?' restorecon -RFvv /opt/librenms/bootstrap/cache/ setsebool -P httpd_can_sendmail=1 setsebool -P httpd_execmem 1 Allow fping Create the file http_fping.tt with the following contents. You can create this file anywhere, as it is a throw-away file. The last step in this install procedure will install the module in the proper location. module http_fping 1.0; require { type httpd_t; class capability net_raw; class rawip_socket { getopt create setopt write read }; } #============= httpd_t ============== allow httpd_t self:capability net_raw; allow httpd_t self:rawip_socket { getopt create setopt write read }; Then run these commands checkmodule -M -m -o http_fping.mod http_fping.tt semodule_package -o http_fping.pp -m http_fping.mod semodule -i http_fping.pp Allow access through firewall firewall-cmd --zone public --add-service http firewall-cmd --permanent --zone public --add-service http firewall-cmd --zone public --add-service https firewall-cmd --permanent --zone public --add-service https Configure snmpd cp /opt/librenms/snmpd.conf.example /etc/snmp/snmpd.conf vi /etc/snmp/snmpd.conf Edit the text which says RANDOMSTRINGGOESHERE and set your own community string. curl -o /usr/bin/distro https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/distro chmod +x /usr/bin/distro systemctl enable snmpd systemctl restart snmpd Cron job cp /opt/librenms/librenms.nonroot.cron /etc/cron.d/librenms NOTE: Keep in mind that cron, by default, only uses a very limited set of environment variables. You may need to configure proxy variables for the cron invocation. Alternatively adding the proxy settings in config.php is possible too. The config.php file will be created in the upcoming steps. Review the following URL after you finished librenms install steps: https://docs.librenms.org/Support/Configuration/#proxy-support Copy logrotate config LibreNMS keeps logs in /opt/librenms/logs . Over time these can become large and be rotated out. To rotate out the old logs you can use the provided logrotate config file: cp /opt/librenms/misc/librenms.logrotate /etc/logrotate.d/librenms Web installer Now head to the web installer and follow the on-screen instructions. http://librenms.example.com/install.php The web installer might prompt you to create a config.php file in your librenms install location manually, copying the content displayed on-screen to the file. If you have to do this, please remember to set the permissions on config.php after you copied the on-screen contents to the file. Run: chown librenms:librenms /opt/librenms/config.php Final steps That's it! You now should be able to log in to http://librenms.example.com/ . Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default. Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps. Add the first device We now suggest that you add localhost as your first device from within the WebUI. Troubleshooting If you ever have issues with your install, run validate.php as root in the librenms directory: cd /opt/librenms ./validate.php There are various options for getting help listed on the LibreNMS web site: https://www.librenms.org/#support What next? Now that you've installed LibreNMS, we'd suggest that you have a read of a few other docs to get you going: Performance tuning Alerting Device Groups Auto discovery Closing We hope you enjoy using LibreNMS. If you do, it would be great if you would consider opting into the stats system we have, please see this page on what it is and how to enable it. If you would like to help make LibreNMS better there are many ways to help . You can also back LibreNMS on Open Collective .","title":"Installation CentOS 7 Nginx"},{"location":"Installation/Installation-CentOS-7-Nginx/#install-required-packages","text":"yum install epel-release yum-utils yum localinstall http://rpms.remirepo.net/enterprise/remi-release-7.rpm yum-config-manager --enable remi-php73 yum install composer cronie fping git ImageMagick jwhois mariadb mariadb-server mtr MySQL-python net-snmp net-snmp-utils nginx nmap php-fpm php-cli php-common php-curl php-gd php-mbstring php-process php-snmp php-xml php-zip php-memcached php-mysqlnd python-memcached rrdtool python3 python3-pip","title":"Install Required Packages"},{"location":"Installation/Installation-CentOS-7-Nginx/#add-librenms-user","text":"useradd librenms -d /opt/librenms -M -r usermod -a -G librenms nginx","title":"Add librenms user"},{"location":"Installation/Installation-CentOS-7-Nginx/#download-librenms","text":"cd /opt git clone https://github.com/librenms/librenms.git","title":"Download LibreNMS"},{"location":"Installation/Installation-CentOS-7-Nginx/#set-permissions","text":"chown -R librenms:librenms /opt/librenms chmod 770 /opt/librenms setfacl -d -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/ setfacl -R -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/ chgrp apache /var/lib/php/session/","title":"Set permissions"},{"location":"Installation/Installation-CentOS-7-Nginx/#install-php-dependencies","text":"su - librenms ./scripts/composer_wrapper.php install --no-dev exit","title":"Install PHP dependencies"},{"location":"Installation/Installation-CentOS-7-Nginx/#db-server","text":"","title":"DB Server"},{"location":"Installation/Installation-CentOS-7-Nginx/#configure-mysql","text":"systemctl start mariadb mysql -u root NOTE: Please change the 'password' below to something secure. CREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci ; CREATE USER 'librenms' @ 'localhost' IDENTIFIED BY 'password' ; GRANT ALL PRIVILEGES ON librenms . * TO 'librenms' @ 'localhost' ; FLUSH PRIVILEGES ; exit vi /etc/my.cnf Within the [mysqld] section please add: innodb_file_per_table = 1 lower_case_table_names = 0 systemctl enable mariadb systemctl restart mariadb","title":"Configure MySQL"},{"location":"Installation/Installation-CentOS-7-Nginx/#web-server","text":"","title":"Web Server"},{"location":"Installation/Installation-CentOS-7-Nginx/#configure-and-start-php-fpm","text":"Ensure date.timezone is set in php.ini to your preferred time zone. See http://php.net/manual/en/timezones.php for a list of supported timezones. Valid examples are: \"America/New_York\", \"Australia/Brisbane\", \"Etc/UTC\". vi /etc/php.ini In /etc/php-fpm.d/www.conf make these changes: vi /etc/php-fpm.d/www.conf ; user = apache user = nginx group = apache ; keep group as apache ; listen = 127.0.0.1 : 9000 listen = /run/php-fpm/php-fpm.sock listen.owner = nginx listen.group = nginx listen.mode = 0660 systemctl enable php-fpm systemctl restart php-fpm","title":"Configure and Start PHP-FPM"},{"location":"Installation/Installation-CentOS-7-Nginx/#configure-nginx","text":"vi /etc/nginx/conf.d/librenms.conf Add the following config, edit server_name as required: server { listen 80 ; server_name librenms.example.com ; root /opt/librenms/html ; index index.php ; charset utf-8 ; gzip on ; gzip_types text/css application/javascript text/javascript application/x-javascript image/svg+xml text/plain text/xsd text/xsl text/xml image/x-icon ; location / { try_files $uri $uri/ /index.php? $query_string ; } location /api/v0 { try_files $uri $uri/ /api_v0.php? $query_string ; } location ~ \\.php { include fastcgi.conf ; fastcgi_split_path_info ^(.+\\.php)(/.+) $ ; fastcgi_pass unix:/run/php-fpm/php-fpm.sock ; } location ~ /\\.ht { deny all ; } } NOTE: If this is the only site you are hosting on this server (it should be :)) then you will need to disable the default site. Delete the server section from /etc/nginx/nginx.conf systemctl enable nginx systemctl restart nginx","title":"Configure NGINX"},{"location":"Installation/Installation-CentOS-7-Nginx/#selinux","text":"Install the policy tool for SELinux: yum install policycoreutils-python","title":"SELinux"},{"location":"Installation/Installation-CentOS-7-Nginx/#configure-the-contexts-needed-by-librenms","text":"semanage fcontext -a -t httpd_sys_content_t '/opt/librenms/logs(/.*)?' semanage fcontext -a -t httpd_sys_rw_content_t '/opt/librenms/logs(/.*)?' restorecon -RFvv /opt/librenms/logs/ semanage fcontext -a -t httpd_sys_content_t '/opt/librenms/rrd(/.*)?' semanage fcontext -a -t httpd_sys_rw_content_t '/opt/librenms/rrd(/.*)?' restorecon -RFvv /opt/librenms/rrd/ semanage fcontext -a -t httpd_sys_content_t '/opt/librenms/storage(/.*)?' semanage fcontext -a -t httpd_sys_rw_content_t '/opt/librenms/storage(/.*)?' restorecon -RFvv /opt/librenms/storage/ semanage fcontext -a -t httpd_sys_content_t '/opt/librenms/bootstrap/cache(/.*)?' semanage fcontext -a -t httpd_sys_rw_content_t '/opt/librenms/bootstrap/cache(/.*)?' restorecon -RFvv /opt/librenms/bootstrap/cache/ setsebool -P httpd_can_sendmail=1 setsebool -P httpd_execmem 1","title":"Configure the contexts needed by LibreNMS:"},{"location":"Installation/Installation-CentOS-7-Nginx/#allow-fping","text":"Create the file http_fping.tt with the following contents. You can create this file anywhere, as it is a throw-away file. The last step in this install procedure will install the module in the proper location. module http_fping 1.0; require { type httpd_t; class capability net_raw; class rawip_socket { getopt create setopt write read }; } #============= httpd_t ============== allow httpd_t self:capability net_raw; allow httpd_t self:rawip_socket { getopt create setopt write read }; Then run these commands checkmodule -M -m -o http_fping.mod http_fping.tt semodule_package -o http_fping.pp -m http_fping.mod semodule -i http_fping.pp","title":"Allow fping"},{"location":"Installation/Installation-CentOS-7-Nginx/#allow-access-through-firewall","text":"firewall-cmd --zone public --add-service http firewall-cmd --permanent --zone public --add-service http firewall-cmd --zone public --add-service https firewall-cmd --permanent --zone public --add-service https","title":"Allow access through firewall"},{"location":"Installation/Installation-CentOS-7-Nginx/#configure-snmpd","text":"cp /opt/librenms/snmpd.conf.example /etc/snmp/snmpd.conf vi /etc/snmp/snmpd.conf Edit the text which says RANDOMSTRINGGOESHERE and set your own community string. curl -o /usr/bin/distro https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/distro chmod +x /usr/bin/distro systemctl enable snmpd systemctl restart snmpd","title":"Configure snmpd"},{"location":"Installation/Installation-CentOS-7-Nginx/#cron-job","text":"cp /opt/librenms/librenms.nonroot.cron /etc/cron.d/librenms NOTE: Keep in mind that cron, by default, only uses a very limited set of environment variables. You may need to configure proxy variables for the cron invocation. Alternatively adding the proxy settings in config.php is possible too. The config.php file will be created in the upcoming steps. Review the following URL after you finished librenms install steps: https://docs.librenms.org/Support/Configuration/#proxy-support","title":"Cron job"},{"location":"Installation/Installation-CentOS-7-Nginx/#copy-logrotate-config","text":"LibreNMS keeps logs in /opt/librenms/logs . Over time these can become large and be rotated out. To rotate out the old logs you can use the provided logrotate config file: cp /opt/librenms/misc/librenms.logrotate /etc/logrotate.d/librenms","title":"Copy logrotate config"},{"location":"Installation/Installation-CentOS-7-Nginx/#web-installer","text":"Now head to the web installer and follow the on-screen instructions. http://librenms.example.com/install.php The web installer might prompt you to create a config.php file in your librenms install location manually, copying the content displayed on-screen to the file. If you have to do this, please remember to set the permissions on config.php after you copied the on-screen contents to the file. Run: chown librenms:librenms /opt/librenms/config.php","title":"Web installer"},{"location":"Installation/Installation-CentOS-7-Nginx/#final-steps","text":"That's it! You now should be able to log in to http://librenms.example.com/ . Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default. Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps.","title":"Final steps"},{"location":"Installation/Installation-CentOS-7-Nginx/#add-the-first-device","text":"We now suggest that you add localhost as your first device from within the WebUI.","title":"Add the first device"},{"location":"Installation/Installation-CentOS-7-Nginx/#troubleshooting","text":"If you ever have issues with your install, run validate.php as root in the librenms directory: cd /opt/librenms ./validate.php There are various options for getting help listed on the LibreNMS web site: https://www.librenms.org/#support","title":"Troubleshooting"},{"location":"Installation/Installation-CentOS-7-Nginx/#what-next","text":"Now that you've installed LibreNMS, we'd suggest that you have a read of a few other docs to get you going: Performance tuning Alerting Device Groups Auto discovery","title":"What next?"},{"location":"Installation/Installation-CentOS-7-Nginx/#closing","text":"We hope you enjoy using LibreNMS. If you do, it would be great if you would consider opting into the stats system we have, please see this page on what it is and how to enable it. If you would like to help make LibreNMS better there are many ways to help . You can also back LibreNMS on Open Collective .","title":"Closing"},{"location":"Installation/Installation-Debian-10-Nginx/","text":"NOTE: These instructions assume you are the root user. If you are not, prepend sudo to the shell commands (the ones that aren't at mysql> prompts) or temporarily become a user with root privileges with sudo -s or sudo -i . Please note the minimum supported PHP version is 7.2.5 Install Required Packages apt install acl curl composer fping git graphviz imagemagick mariadb-client mariadb-server mtr-tiny nginx-full nmap php7.3-cli php7.3-curl php7.3-fpm php7.3-gd php7.3-json php7.3-mbstring php7.3-mysql php7.3-snmp php7.3-xml php7.3-zip python-memcache python-mysqldb rrdtool snmp snmpd whois python3-pymysql python3-dotenv python3-redis python3-setuptools Add librenms user useradd librenms -d /opt/librenms -M -r usermod -a -G librenms www-data Download LibreNMS cd /opt git clone https://github.com/librenms/librenms.git Set permissions chown -R librenms:librenms /opt/librenms chmod 770 /opt/librenms setfacl -d -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/ setfacl -R -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/ Install PHP dependencies su - librenms ./scripts/composer_wrapper.php install --no-dev exit DB Server Configure MySQL service mysql restart mysql -uroot -p NOTE: Please change the 'password' below to something secure. CREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci ; CREATE USER 'librenms' @ 'localhost' IDENTIFIED BY 'password' ; GRANT ALL PRIVILEGES ON librenms . * TO 'librenms' @ 'localhost' ; FLUSH PRIVILEGES ; exit nano /etc/mysql/mariadb.conf.d/50-server.cnf Within the [mysqld] section please add: innodb_file_per_table = 1 lower_case_table_names = 0 service mysql restart Web Server Configure and Start PHP-FPM Ensure date.timezone is set in php.ini to your preferred time zone. See http://php.net/manual/en/timezones.php for a list of supported timezones. Valid examples are: \"America/New_York\", \"Australia/Brisbane\", \"Etc/UTC\". nano /etc/php/7.3/fpm/php.ini nano /etc/php/7.3/cli/php.ini service php7.3-fpm restart Configure NGINX rm /etc/nginx/sites-enabled/default nano /etc/nginx/sites-available/librenms.vhost Add the following config, edit server_name as required: server { listen 80 ; server_name librenms.example.com ; root /opt/librenms/html ; index index.php ; charset utf-8 ; gzip on ; gzip_types text/css application/javascript text/javascript application/x-javascript image/svg+xml text/plain text/xsd text/xsl text/xml image/x-icon ; location / { try_files $uri $uri/ /index.php? $query_string ; } location /api/v0 { try_files $uri $uri/ /api_v0.php? $query_string ; } location ~ \\.php { include fastcgi.conf ; fastcgi_split_path_info ^(.+\\.php)(/.+) $ ; fastcgi_pass unix:/var/run/php/php7.3-fpm.sock ; } location ~ /\\.ht { deny all ; } } ln -s /etc/nginx/sites-available/librenms.vhost /etc/nginx/sites-enabled/librenms.vhost service nginx reload Configure snmpd cp /opt/librenms/snmpd.conf.example /etc/snmp/snmpd.conf chmod 600 /etc/snmp/snmpd.conf nano /etc/snmp/snmpd.conf Edit the text which says RANDOMSTRINGGOESHERE and set your own community string. curl -o /usr/bin/distro https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/distro chmod +x /usr/bin/distro service snmpd restart Cron job cp /opt/librenms/librenms.nonroot.cron /etc/cron.d/librenms NOTE: Keep in mind that cron, by default, only uses a very limited set of environment variables. You may need to configure proxy variables for the cron invocation. Alternatively adding the proxy settings in config.php is possible too. The config.php file will be created in the upcoming steps. Review the following URL after you finished librenms install steps: https://docs.librenms.org/Support/Configuration/#proxy-support Copy logrotate config LibreNMS keeps logs in /opt/librenms/logs . Over time these can become large and be rotated out. To rotate out the old logs you can use the provided logrotate config file: cp /opt/librenms/misc/librenms.logrotate /etc/logrotate.d/librenms Web installer Now head to the web installer and follow the on-screen instructions. http://librenms.example.com/install.php The web installer might prompt you to create a config.php file in your librenms install location manually, copying the content displayed on-screen to the file. If you have to do this, please remember to set the permissions on config.php after you copied the on-screen contents to the file. Run: chown librenms:librenms /opt/librenms/config.php Final steps That's it! You now should be able to log in to http://librenms.example.com/ . Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default. Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps. Add the first device We now suggest that you add localhost as your first device from within the WebUI. Troubleshooting If you ever have issues with your install, run validate.php as root in the librenms directory: cd /opt/librenms ./validate.php There are various options for getting help listed on the LibreNMS web site: https://www.librenms.org/#support What next? Now that you've installed LibreNMS, we'd suggest that you have a read of a few other docs to get you going: Performance tuning Alerting Device Groups Auto discovery Closing We hope you enjoy using LibreNMS. If you do, it would be great if you would consider opting into the stats system we have, please see this page on what it is and how to enable it. If you would like to help make LibreNMS better there are many ways to help . You can also back LibreNMS on Open Collective .","title":"Installation Debian 10 Nginx"},{"location":"Installation/Installation-Debian-10-Nginx/#install-required-packages","text":"apt install acl curl composer fping git graphviz imagemagick mariadb-client mariadb-server mtr-tiny nginx-full nmap php7.3-cli php7.3-curl php7.3-fpm php7.3-gd php7.3-json php7.3-mbstring php7.3-mysql php7.3-snmp php7.3-xml php7.3-zip python-memcache python-mysqldb rrdtool snmp snmpd whois python3-pymysql python3-dotenv python3-redis python3-setuptools","title":"Install Required Packages"},{"location":"Installation/Installation-Debian-10-Nginx/#add-librenms-user","text":"useradd librenms -d /opt/librenms -M -r usermod -a -G librenms www-data","title":"Add librenms user"},{"location":"Installation/Installation-Debian-10-Nginx/#download-librenms","text":"cd /opt git clone https://github.com/librenms/librenms.git","title":"Download LibreNMS"},{"location":"Installation/Installation-Debian-10-Nginx/#set-permissions","text":"chown -R librenms:librenms /opt/librenms chmod 770 /opt/librenms setfacl -d -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/ setfacl -R -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/","title":"Set permissions"},{"location":"Installation/Installation-Debian-10-Nginx/#install-php-dependencies","text":"su - librenms ./scripts/composer_wrapper.php install --no-dev exit","title":"Install PHP dependencies"},{"location":"Installation/Installation-Debian-10-Nginx/#db-server","text":"","title":"DB Server"},{"location":"Installation/Installation-Debian-10-Nginx/#configure-mysql","text":"service mysql restart mysql -uroot -p NOTE: Please change the 'password' below to something secure. CREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci ; CREATE USER 'librenms' @ 'localhost' IDENTIFIED BY 'password' ; GRANT ALL PRIVILEGES ON librenms . * TO 'librenms' @ 'localhost' ; FLUSH PRIVILEGES ; exit nano /etc/mysql/mariadb.conf.d/50-server.cnf Within the [mysqld] section please add: innodb_file_per_table = 1 lower_case_table_names = 0 service mysql restart","title":"Configure MySQL"},{"location":"Installation/Installation-Debian-10-Nginx/#web-server","text":"","title":"Web Server"},{"location":"Installation/Installation-Debian-10-Nginx/#configure-and-start-php-fpm","text":"Ensure date.timezone is set in php.ini to your preferred time zone. See http://php.net/manual/en/timezones.php for a list of supported timezones. Valid examples are: \"America/New_York\", \"Australia/Brisbane\", \"Etc/UTC\". nano /etc/php/7.3/fpm/php.ini nano /etc/php/7.3/cli/php.ini service php7.3-fpm restart","title":"Configure and Start PHP-FPM"},{"location":"Installation/Installation-Debian-10-Nginx/#configure-nginx","text":"rm /etc/nginx/sites-enabled/default nano /etc/nginx/sites-available/librenms.vhost Add the following config, edit server_name as required: server { listen 80 ; server_name librenms.example.com ; root /opt/librenms/html ; index index.php ; charset utf-8 ; gzip on ; gzip_types text/css application/javascript text/javascript application/x-javascript image/svg+xml text/plain text/xsd text/xsl text/xml image/x-icon ; location / { try_files $uri $uri/ /index.php? $query_string ; } location /api/v0 { try_files $uri $uri/ /api_v0.php? $query_string ; } location ~ \\.php { include fastcgi.conf ; fastcgi_split_path_info ^(.+\\.php)(/.+) $ ; fastcgi_pass unix:/var/run/php/php7.3-fpm.sock ; } location ~ /\\.ht { deny all ; } } ln -s /etc/nginx/sites-available/librenms.vhost /etc/nginx/sites-enabled/librenms.vhost service nginx reload","title":"Configure NGINX"},{"location":"Installation/Installation-Debian-10-Nginx/#configure-snmpd","text":"cp /opt/librenms/snmpd.conf.example /etc/snmp/snmpd.conf chmod 600 /etc/snmp/snmpd.conf nano /etc/snmp/snmpd.conf Edit the text which says RANDOMSTRINGGOESHERE and set your own community string. curl -o /usr/bin/distro https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/distro chmod +x /usr/bin/distro service snmpd restart","title":"Configure snmpd"},{"location":"Installation/Installation-Debian-10-Nginx/#cron-job","text":"cp /opt/librenms/librenms.nonroot.cron /etc/cron.d/librenms NOTE: Keep in mind that cron, by default, only uses a very limited set of environment variables. You may need to configure proxy variables for the cron invocation. Alternatively adding the proxy settings in config.php is possible too. The config.php file will be created in the upcoming steps. Review the following URL after you finished librenms install steps: https://docs.librenms.org/Support/Configuration/#proxy-support","title":"Cron job"},{"location":"Installation/Installation-Debian-10-Nginx/#copy-logrotate-config","text":"LibreNMS keeps logs in /opt/librenms/logs . Over time these can become large and be rotated out. To rotate out the old logs you can use the provided logrotate config file: cp /opt/librenms/misc/librenms.logrotate /etc/logrotate.d/librenms","title":"Copy logrotate config"},{"location":"Installation/Installation-Debian-10-Nginx/#web-installer","text":"Now head to the web installer and follow the on-screen instructions. http://librenms.example.com/install.php The web installer might prompt you to create a config.php file in your librenms install location manually, copying the content displayed on-screen to the file. If you have to do this, please remember to set the permissions on config.php after you copied the on-screen contents to the file. Run: chown librenms:librenms /opt/librenms/config.php","title":"Web installer"},{"location":"Installation/Installation-Debian-10-Nginx/#final-steps","text":"That's it! You now should be able to log in to http://librenms.example.com/ . Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default. Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps.","title":"Final steps"},{"location":"Installation/Installation-Debian-10-Nginx/#add-the-first-device","text":"We now suggest that you add localhost as your first device from within the WebUI.","title":"Add the first device"},{"location":"Installation/Installation-Debian-10-Nginx/#troubleshooting","text":"If you ever have issues with your install, run validate.php as root in the librenms directory: cd /opt/librenms ./validate.php There are various options for getting help listed on the LibreNMS web site: https://www.librenms.org/#support","title":"Troubleshooting"},{"location":"Installation/Installation-Debian-10-Nginx/#what-next","text":"Now that you've installed LibreNMS, we'd suggest that you have a read of a few other docs to get you going: Performance tuning Alerting Device Groups Auto discovery","title":"What next?"},{"location":"Installation/Installation-Debian-10-Nginx/#closing","text":"We hope you enjoy using LibreNMS. If you do, it would be great if you would consider opting into the stats system we have, please see this page on what it is and how to enable it. If you would like to help make LibreNMS better there are many ways to help . You can also back LibreNMS on Open Collective .","title":"Closing"},{"location":"Installation/Installation-Ubuntu-1604-Apache/","text":"NOTE: These instructions assume you are the root user. If you are not, prepend sudo to the shell commands (the ones that aren't at mysql> prompts) or temporarily become a user with root privileges with sudo -s or sudo -i . Please note the minimum supported PHP version is 7.2.5 Install Required Packages apt install acl apache2 composer fping git graphviz imagemagick libapache2-mod-php7.0 mariadb-client mariadb-server mtr-tiny nmap php7.0-cli php7.0-curl php7.0-gd php7.0-json php7.0-mbstring php7.0-mcrypt php7.0-mysql php7.0-snmp php7.0-xml php7.0-zip python-memcache python-mysqldb rrdtool snmp snmpd whois Add librenms user useradd librenms -d /opt/librenms -M -r usermod -a -G librenms www-data Install LibreNMS cd /opt composer create-project --no-dev --keep-vcs librenms/librenms librenms dev-master DB Server Configure MySQL systemctl restart mysql mysql -uroot -p NOTE: Please change the 'password' below to something secure. CREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci ; CREATE USER 'librenms' @ 'localhost' IDENTIFIED BY 'password' ; GRANT ALL PRIVILEGES ON librenms . * TO 'librenms' @ 'localhost' ; FLUSH PRIVILEGES ; exit vi /etc/mysql/mariadb.conf.d/50-server.cnf Within the [mysqld] section please add: innodb_file_per_table = 1 lower_case_table_names = 0 systemctl restart mysql Web Server Configure PHP Ensure date.timezone is set in php.ini to your preferred time zone. See http://php.net/manual/en/timezones.php for a list of supported timezones. Valid examples are: \"America/New_York\", \"Australia/Brisbane\", \"Etc/UTC\". vi /etc/php/7.0/apache2/php.ini vi /etc/php/7.0/cli/php.ini a2enmod php7.0 a2dismod mpm_event a2enmod mpm_prefork phpenmod mcrypt Configure Apache vi /etc/apache2/sites-available/librenms.conf Add the following config, edit ServerName as required: <VirtualHost *:80 > DocumentRoot /opt/librenms/html/ ServerName librenms.example.com AllowEncodedSlashes NoDecode <Directory \"/opt/librenms/html/\" > Require all granted AllowOverride All Options FollowSymLinks MultiViews </Directory> </VirtualHost> NOTE: If this is the only site you are hosting on this server (it should be :)) then you will need to disable the default site. a2dissite 000-default a2ensite librenms.conf a2enmod rewrite systemctl restart apache2 Configure snmpd cp /opt/librenms/snmpd.conf.example /etc/snmp/snmpd.conf vi /etc/snmp/snmpd.conf Edit the text which says RANDOMSTRINGGOESHERE and set your own community string. curl -o /usr/bin/distro https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/distro chmod +x /usr/bin/distro systemctl restart snmpd Cron job cp /opt/librenms/librenms.nonroot.cron /etc/cron.d/librenms NOTE: Keep in mind that cron, by default, only uses a very limited set of environment variables. You may need to configure proxy variables for the cron invocation. Alternatively adding the proxy settings in config.php is possible too. The config.php file will be created in the upcoming steps. Review the following URL after you finished librenms install steps: https://docs.librenms.org/Support/Configuration/#proxy-support Copy logrotate config LibreNMS keeps logs in /opt/librenms/logs . Over time these can become large and be rotated out. To rotate out the old logs you can use the provided logrotate config file: cp /opt/librenms/misc/librenms.logrotate /etc/logrotate.d/librenms Set permissions chown -R librenms:librenms /opt/librenms setfacl -d -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/ setfacl -R -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/ Web installer Now head to the web installer and follow the on-screen instructions. http://librenms.example.com/install.php The web installer might prompt you to create a config.php file in your librenms install location manually, copying the content displayed on-screen to the file. If you have to do this, please remember to set the permissions on config.php after you copied the on-screen contents to the file. Run: chown librenms:librenms /opt/librenms/config.php Final steps That's it! You now should be able to log in to http://librenms.example.com/ . Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default. Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps. Add the first device We now suggest that you add localhost as your first device from within the WebUI. Troubleshooting If you ever have issues with your install, run validate.php as root in the librenms directory: cd /opt/librenms ./validate.php There are various options for getting help listed on the LibreNMS web site: https://www.librenms.org/#support What next? Now that you've installed LibreNMS, we'd suggest that you have a read of a few other docs to get you going: Performance tuning Alerting Device Groups Auto discovery Closing We hope you enjoy using LibreNMS. If you do, it would be great if you would consider opting into the stats system we have, please see this page on what it is and how to enable it. If you would like to help make LibreNMS better there are many ways to help . You can also back LibreNMS on Open Collective .","title":"Installation Ubuntu 1604 Apache"},{"location":"Installation/Installation-Ubuntu-1604-Apache/#install-required-packages","text":"apt install acl apache2 composer fping git graphviz imagemagick libapache2-mod-php7.0 mariadb-client mariadb-server mtr-tiny nmap php7.0-cli php7.0-curl php7.0-gd php7.0-json php7.0-mbstring php7.0-mcrypt php7.0-mysql php7.0-snmp php7.0-xml php7.0-zip python-memcache python-mysqldb rrdtool snmp snmpd whois","title":"Install Required Packages"},{"location":"Installation/Installation-Ubuntu-1604-Apache/#add-librenms-user","text":"useradd librenms -d /opt/librenms -M -r usermod -a -G librenms www-data","title":"Add librenms user"},{"location":"Installation/Installation-Ubuntu-1604-Apache/#install-librenms","text":"cd /opt composer create-project --no-dev --keep-vcs librenms/librenms librenms dev-master","title":"Install LibreNMS"},{"location":"Installation/Installation-Ubuntu-1604-Apache/#db-server","text":"","title":"DB Server"},{"location":"Installation/Installation-Ubuntu-1604-Apache/#configure-mysql","text":"systemctl restart mysql mysql -uroot -p NOTE: Please change the 'password' below to something secure. CREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci ; CREATE USER 'librenms' @ 'localhost' IDENTIFIED BY 'password' ; GRANT ALL PRIVILEGES ON librenms . * TO 'librenms' @ 'localhost' ; FLUSH PRIVILEGES ; exit vi /etc/mysql/mariadb.conf.d/50-server.cnf Within the [mysqld] section please add: innodb_file_per_table = 1 lower_case_table_names = 0 systemctl restart mysql","title":"Configure MySQL"},{"location":"Installation/Installation-Ubuntu-1604-Apache/#web-server","text":"","title":"Web Server"},{"location":"Installation/Installation-Ubuntu-1604-Apache/#configure-php","text":"Ensure date.timezone is set in php.ini to your preferred time zone. See http://php.net/manual/en/timezones.php for a list of supported timezones. Valid examples are: \"America/New_York\", \"Australia/Brisbane\", \"Etc/UTC\". vi /etc/php/7.0/apache2/php.ini vi /etc/php/7.0/cli/php.ini a2enmod php7.0 a2dismod mpm_event a2enmod mpm_prefork phpenmod mcrypt","title":"Configure PHP"},{"location":"Installation/Installation-Ubuntu-1604-Apache/#configure-apache","text":"vi /etc/apache2/sites-available/librenms.conf Add the following config, edit ServerName as required: <VirtualHost *:80 > DocumentRoot /opt/librenms/html/ ServerName librenms.example.com AllowEncodedSlashes NoDecode <Directory \"/opt/librenms/html/\" > Require all granted AllowOverride All Options FollowSymLinks MultiViews </Directory> </VirtualHost> NOTE: If this is the only site you are hosting on this server (it should be :)) then you will need to disable the default site. a2dissite 000-default a2ensite librenms.conf a2enmod rewrite systemctl restart apache2","title":"Configure Apache"},{"location":"Installation/Installation-Ubuntu-1604-Apache/#configure-snmpd","text":"cp /opt/librenms/snmpd.conf.example /etc/snmp/snmpd.conf vi /etc/snmp/snmpd.conf Edit the text which says RANDOMSTRINGGOESHERE and set your own community string. curl -o /usr/bin/distro https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/distro chmod +x /usr/bin/distro systemctl restart snmpd","title":"Configure snmpd"},{"location":"Installation/Installation-Ubuntu-1604-Apache/#cron-job","text":"cp /opt/librenms/librenms.nonroot.cron /etc/cron.d/librenms NOTE: Keep in mind that cron, by default, only uses a very limited set of environment variables. You may need to configure proxy variables for the cron invocation. Alternatively adding the proxy settings in config.php is possible too. The config.php file will be created in the upcoming steps. Review the following URL after you finished librenms install steps: https://docs.librenms.org/Support/Configuration/#proxy-support","title":"Cron job"},{"location":"Installation/Installation-Ubuntu-1604-Apache/#copy-logrotate-config","text":"LibreNMS keeps logs in /opt/librenms/logs . Over time these can become large and be rotated out. To rotate out the old logs you can use the provided logrotate config file: cp /opt/librenms/misc/librenms.logrotate /etc/logrotate.d/librenms","title":"Copy logrotate config"},{"location":"Installation/Installation-Ubuntu-1604-Apache/#set-permissions","text":"chown -R librenms:librenms /opt/librenms setfacl -d -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/ setfacl -R -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/","title":"Set permissions"},{"location":"Installation/Installation-Ubuntu-1604-Apache/#web-installer","text":"Now head to the web installer and follow the on-screen instructions. http://librenms.example.com/install.php The web installer might prompt you to create a config.php file in your librenms install location manually, copying the content displayed on-screen to the file. If you have to do this, please remember to set the permissions on config.php after you copied the on-screen contents to the file. Run: chown librenms:librenms /opt/librenms/config.php","title":"Web installer"},{"location":"Installation/Installation-Ubuntu-1604-Apache/#final-steps","text":"That's it! You now should be able to log in to http://librenms.example.com/ . Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default. Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps.","title":"Final steps"},{"location":"Installation/Installation-Ubuntu-1604-Apache/#add-the-first-device","text":"We now suggest that you add localhost as your first device from within the WebUI.","title":"Add the first device"},{"location":"Installation/Installation-Ubuntu-1604-Apache/#troubleshooting","text":"If you ever have issues with your install, run validate.php as root in the librenms directory: cd /opt/librenms ./validate.php There are various options for getting help listed on the LibreNMS web site: https://www.librenms.org/#support","title":"Troubleshooting"},{"location":"Installation/Installation-Ubuntu-1604-Apache/#what-next","text":"Now that you've installed LibreNMS, we'd suggest that you have a read of a few other docs to get you going: Performance tuning Alerting Device Groups Auto discovery","title":"What next?"},{"location":"Installation/Installation-Ubuntu-1604-Apache/#closing","text":"We hope you enjoy using LibreNMS. If you do, it would be great if you would consider opting into the stats system we have, please see this page on what it is and how to enable it. If you would like to help make LibreNMS better there are many ways to help . You can also back LibreNMS on Open Collective .","title":"Closing"},{"location":"Installation/Installation-Ubuntu-1604-Nginx/","text":"NOTE: These instructions assume you are the root user. If you are not, prepend sudo to the shell commands (the ones that aren't at mysql> prompts) or temporarily become a user with root privileges with sudo -s or sudo -i . Please note the minimum supported PHP version is 7.2.5 Install Required Packages apt install acl composer fping git graphviz imagemagick mariadb-client mariadb-server mtr-tiny nginx-full nmap php7.0-cli php7.0-curl php7.0-fpm php7.0-gd php7.0-mbstring php7.0-mcrypt php7.0-mysql php7.0-snmp php7.0-xml php7.0-zip python-memcache python-mysqldb rrdtool snmp snmpd whois Add librenms user useradd librenms -d /opt/librenms -M -r usermod -a -G librenms www-data Install LibreNMS cd /opt composer create-project --no-dev --keep-vcs librenms/librenms librenms dev-master DB Server Configure MySQL systemctl restart mysql mysql -uroot -p NOTE: Please change the 'password' below to something secure. CREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci ; CREATE USER 'librenms' @ 'localhost' IDENTIFIED BY 'password' ; GRANT ALL PRIVILEGES ON librenms . * TO 'librenms' @ 'localhost' ; FLUSH PRIVILEGES ; exit vim /etc/mysql/mariadb.conf.d/50-server.cnf Within the [mysqld] section please add: innodb_file_per_table = 1 lower_case_table_names = 0 systemctl restart mysql Web Server Configure and Start PHP-FPM Ensure date.timezone is set in php.ini to your preferred time zone. See http://php.net/manual/en/timezones.php for a list of supported timezones. Valid examples are: \"America/New_York\", \"Australia/Brisbane\", \"Etc/UTC\". vim /etc/php/7.0/fpm/php.ini vim /etc/php/7.0/cli/php.ini phpenmod mcrypt systemctl restart php7.0-fpm Configure NGINX vim /etc/nginx/conf.d/librenms.conf Add the following config, edit server_name as required: server { listen 80 ; server_name librenms.example.com ; root /opt/librenms/html ; index index.php ; charset utf-8 ; gzip on ; gzip_types text/css application/javascript text/javascript application/x-javascript image/svg+xml text/plain text/xsd text/xsl text/xml image/x-icon ; location / { try_files $uri $uri/ /index.php? $query_string ; } location /api/v0 { try_files $uri $uri/ /api_v0.php? $query_string ; } location ~ \\.php { include fastcgi.conf ; fastcgi_split_path_info ^(.+\\.php)(/.+) $ ; fastcgi_pass unix:/var/run/php/php7.0-fpm.sock ; } location ~ /\\.ht { deny all ; } } rm /etc/nginx/sites-enabled/default systemctl restart nginx Configure snmpd cp /opt/librenms/snmpd.conf.example /etc/snmp/snmpd.conf vim /etc/snmp/snmpd.conf Edit the text which says RANDOMSTRINGGOESHERE and set your own community string. curl -o /usr/bin/distro https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/distro chmod +x /usr/bin/distro systemctl restart snmpd Cron job cp /opt/librenms/librenms.nonroot.cron /etc/cron.d/librenms NOTE: Keep in mind that cron, by default, only uses a very limited set of environment variables. You may need to configure proxy variables for the cron invocation. Alternatively adding the proxy settings in config.php is possible too. The config.php file will be created in the upcoming steps. Review the following URL after you finished librenms install steps: https://docs.librenms.org/Support/Configuration/#proxy-support Copy logrotate config LibreNMS keeps logs in /opt/librenms/logs . Over time these can become large and be rotated out. To rotate out the old logs you can use the provided logrotate config file: cp /opt/librenms/misc/librenms.logrotate /etc/logrotate.d/librenms Set permissions chown -R librenms:librenms /opt/librenms setfacl -d -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/ setfacl -R -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/ Web installer Now head to the web installer and follow the on-screen instructions. http://librenms.example.com/install.php The web installer might prompt you to create a config.php file in your librenms install location manually, copying the content displayed on-screen to the file. If you have to do this, please remember to set the permissions on config.php after you copied the on-screen contents to the file. Run: chown librenms:librenms /opt/librenms/config.php Final steps That's it! You now should be able to log in to http://librenms.example.com/ . Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default. Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps. Add the first device We now suggest that you add localhost as your first device from within the WebUI. Troubleshooting If you ever have issues with your install, run validate.php as root in the librenms directory: cd /opt/librenms ./validate.php There are various options for getting help listed on the LibreNMS web site: https://www.librenms.org/#support What next? Now that you've installed LibreNMS, we'd suggest that you have a read of a few other docs to get you going: Performance tuning Alerting Device Groups Auto discovery Closing We hope you enjoy using LibreNMS. If you do, it would be great if you would consider opting into the stats system we have, please see this page on what it is and how to enable it. If you would like to help make LibreNMS better there are many ways to help . You can also back LibreNMS on Open Collective .","title":"Installation Ubuntu 1604 Nginx"},{"location":"Installation/Installation-Ubuntu-1604-Nginx/#install-required-packages","text":"apt install acl composer fping git graphviz imagemagick mariadb-client mariadb-server mtr-tiny nginx-full nmap php7.0-cli php7.0-curl php7.0-fpm php7.0-gd php7.0-mbstring php7.0-mcrypt php7.0-mysql php7.0-snmp php7.0-xml php7.0-zip python-memcache python-mysqldb rrdtool snmp snmpd whois","title":"Install Required Packages"},{"location":"Installation/Installation-Ubuntu-1604-Nginx/#add-librenms-user","text":"useradd librenms -d /opt/librenms -M -r usermod -a -G librenms www-data","title":"Add librenms user"},{"location":"Installation/Installation-Ubuntu-1604-Nginx/#install-librenms","text":"cd /opt composer create-project --no-dev --keep-vcs librenms/librenms librenms dev-master","title":"Install LibreNMS"},{"location":"Installation/Installation-Ubuntu-1604-Nginx/#db-server","text":"","title":"DB Server"},{"location":"Installation/Installation-Ubuntu-1604-Nginx/#configure-mysql","text":"systemctl restart mysql mysql -uroot -p NOTE: Please change the 'password' below to something secure. CREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci ; CREATE USER 'librenms' @ 'localhost' IDENTIFIED BY 'password' ; GRANT ALL PRIVILEGES ON librenms . * TO 'librenms' @ 'localhost' ; FLUSH PRIVILEGES ; exit vim /etc/mysql/mariadb.conf.d/50-server.cnf Within the [mysqld] section please add: innodb_file_per_table = 1 lower_case_table_names = 0 systemctl restart mysql","title":"Configure MySQL"},{"location":"Installation/Installation-Ubuntu-1604-Nginx/#web-server","text":"","title":"Web Server"},{"location":"Installation/Installation-Ubuntu-1604-Nginx/#configure-and-start-php-fpm","text":"Ensure date.timezone is set in php.ini to your preferred time zone. See http://php.net/manual/en/timezones.php for a list of supported timezones. Valid examples are: \"America/New_York\", \"Australia/Brisbane\", \"Etc/UTC\". vim /etc/php/7.0/fpm/php.ini vim /etc/php/7.0/cli/php.ini phpenmod mcrypt systemctl restart php7.0-fpm","title":"Configure and Start PHP-FPM"},{"location":"Installation/Installation-Ubuntu-1604-Nginx/#configure-nginx","text":"vim /etc/nginx/conf.d/librenms.conf Add the following config, edit server_name as required: server { listen 80 ; server_name librenms.example.com ; root /opt/librenms/html ; index index.php ; charset utf-8 ; gzip on ; gzip_types text/css application/javascript text/javascript application/x-javascript image/svg+xml text/plain text/xsd text/xsl text/xml image/x-icon ; location / { try_files $uri $uri/ /index.php? $query_string ; } location /api/v0 { try_files $uri $uri/ /api_v0.php? $query_string ; } location ~ \\.php { include fastcgi.conf ; fastcgi_split_path_info ^(.+\\.php)(/.+) $ ; fastcgi_pass unix:/var/run/php/php7.0-fpm.sock ; } location ~ /\\.ht { deny all ; } } rm /etc/nginx/sites-enabled/default systemctl restart nginx","title":"Configure NGINX"},{"location":"Installation/Installation-Ubuntu-1604-Nginx/#configure-snmpd","text":"cp /opt/librenms/snmpd.conf.example /etc/snmp/snmpd.conf vim /etc/snmp/snmpd.conf Edit the text which says RANDOMSTRINGGOESHERE and set your own community string. curl -o /usr/bin/distro https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/distro chmod +x /usr/bin/distro systemctl restart snmpd","title":"Configure snmpd"},{"location":"Installation/Installation-Ubuntu-1604-Nginx/#cron-job","text":"cp /opt/librenms/librenms.nonroot.cron /etc/cron.d/librenms NOTE: Keep in mind that cron, by default, only uses a very limited set of environment variables. You may need to configure proxy variables for the cron invocation. Alternatively adding the proxy settings in config.php is possible too. The config.php file will be created in the upcoming steps. Review the following URL after you finished librenms install steps: https://docs.librenms.org/Support/Configuration/#proxy-support","title":"Cron job"},{"location":"Installation/Installation-Ubuntu-1604-Nginx/#copy-logrotate-config","text":"LibreNMS keeps logs in /opt/librenms/logs . Over time these can become large and be rotated out. To rotate out the old logs you can use the provided logrotate config file: cp /opt/librenms/misc/librenms.logrotate /etc/logrotate.d/librenms","title":"Copy logrotate config"},{"location":"Installation/Installation-Ubuntu-1604-Nginx/#set-permissions","text":"chown -R librenms:librenms /opt/librenms setfacl -d -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/ setfacl -R -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/","title":"Set permissions"},{"location":"Installation/Installation-Ubuntu-1604-Nginx/#web-installer","text":"Now head to the web installer and follow the on-screen instructions. http://librenms.example.com/install.php The web installer might prompt you to create a config.php file in your librenms install location manually, copying the content displayed on-screen to the file. If you have to do this, please remember to set the permissions on config.php after you copied the on-screen contents to the file. Run: chown librenms:librenms /opt/librenms/config.php","title":"Web installer"},{"location":"Installation/Installation-Ubuntu-1604-Nginx/#final-steps","text":"That's it! You now should be able to log in to http://librenms.example.com/ . Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default. Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps.","title":"Final steps"},{"location":"Installation/Installation-Ubuntu-1604-Nginx/#add-the-first-device","text":"We now suggest that you add localhost as your first device from within the WebUI.","title":"Add the first device"},{"location":"Installation/Installation-Ubuntu-1604-Nginx/#troubleshooting","text":"If you ever have issues with your install, run validate.php as root in the librenms directory: cd /opt/librenms ./validate.php There are various options for getting help listed on the LibreNMS web site: https://www.librenms.org/#support","title":"Troubleshooting"},{"location":"Installation/Installation-Ubuntu-1604-Nginx/#what-next","text":"Now that you've installed LibreNMS, we'd suggest that you have a read of a few other docs to get you going: Performance tuning Alerting Device Groups Auto discovery","title":"What next?"},{"location":"Installation/Installation-Ubuntu-1604-Nginx/#closing","text":"We hope you enjoy using LibreNMS. If you do, it would be great if you would consider opting into the stats system we have, please see this page on what it is and how to enable it. If you would like to help make LibreNMS better there are many ways to help . You can also back LibreNMS on Open Collective .","title":"Closing"},{"location":"Installation/Installation-Ubuntu-1804-Apache/","text":"NOTE: These instructions assume you are the root user. If you are not, prepend sudo to the shell commands (the ones that aren't at mysql> prompts) or temporarily become a user with root privileges with sudo -s or sudo -i . Please note the minimum supported PHP version is Install Required Packages apt install software-properties-common add-apt-repository universe apt update apt install curl apache2 composer fping git graphviz imagemagick libapache2-mod-php7.2 mariadb-client mariadb-server mtr-tiny nmap php7.2-cli php7.2-curl php7.2-gd php7.2-json php7.2-mbstring php7.2-mysql php7.2-snmp php7.2-xml php7.2-zip python-memcache python-mysqldb rrdtool snmp snmpd whois python3-pip Add librenms user useradd librenms -d /opt/librenms -M -r usermod -a -G librenms www-data Download LibreNMS cd /opt git clone https://github.com/librenms/librenms.git Set permissions chown -R librenms:librenms /opt/librenms chmod 770 /opt/librenms setfacl -d -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/ setfacl -R -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/ Install PHP dependencies su - librenms ./scripts/composer_wrapper.php install --no-dev exit DB Server Configure MySQL systemctl restart mysql mysql -uroot -p NOTE: Please change the 'password' below to something secure. CREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci ; CREATE USER 'librenms' @ 'localhost' IDENTIFIED BY 'password' ; GRANT ALL PRIVILEGES ON librenms . * TO 'librenms' @ 'localhost' ; FLUSH PRIVILEGES ; exit vi /etc/mysql/mariadb.conf.d/50-server.cnf Within the [mysqld] section please add: innodb_file_per_table = 1 lower_case_table_names = 0 systemctl restart mysql Web Server Configure PHP Ensure date.timezone is set in php.ini to your preferred time zone. See http://php.net/manual/en/timezones.php for a list of supported timezones. Valid examples are: \"America/New_York\", \"Australia/Brisbane\", \"Etc/UTC\". vi /etc/php/7.2/apache2/php.ini vi /etc/php/7.2/cli/php.ini a2enmod php7.2 a2dismod mpm_event a2enmod mpm_prefork Configure Apache vi /etc/apache2/sites-available/librenms.conf Add the following config, edit ServerName as required: <VirtualHost *:80 > DocumentRoot /opt/librenms/html/ ServerName librenms.example.com AllowEncodedSlashes NoDecode <Directory \"/opt/librenms/html/\" > Require all granted AllowOverride All Options FollowSymLinks MultiViews </Directory> </VirtualHost> NOTE: If this is the only site you are hosting on this server (it should be :)) then you will need to disable the default site. a2dissite 000-default a2ensite librenms.conf a2enmod rewrite systemctl restart apache2 Configure snmpd cp /opt/librenms/snmpd.conf.example /etc/snmp/snmpd.conf vi /etc/snmp/snmpd.conf Edit the text which says RANDOMSTRINGGOESHERE and set your own community string. curl -o /usr/bin/distro https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/distro chmod +x /usr/bin/distro systemctl restart snmpd Cron job cp /opt/librenms/librenms.nonroot.cron /etc/cron.d/librenms NOTE: Keep in mind that cron, by default, only uses a very limited set of environment variables. You may need to configure proxy variables for the cron invocation. Alternatively adding the proxy settings in config.php is possible too. The config.php file will be created in the upcoming steps. Review the following URL after you finished librenms install steps: https://docs.librenms.org/Support/Configuration/#proxy-support Copy logrotate config LibreNMS keeps logs in /opt/librenms/logs . Over time these can become large and be rotated out. To rotate out the old logs you can use the provided logrotate config file: cp /opt/librenms/misc/librenms.logrotate /etc/logrotate.d/librenms Web installer Now head to the web installer and follow the on-screen instructions. http://librenms.example.com/install.php The web installer might prompt you to create a config.php file in your librenms install location manually, copying the content displayed on-screen to the file. If you have to do this, please remember to set the permissions on config.php after you copied the on-screen contents to the file. Run: chown librenms:librenms /opt/librenms/config.php Final steps That's it! You now should be able to log in to http://librenms.example.com/ . Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default. Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps. Add the first device We now suggest that you add localhost as your first device from within the WebUI. Troubleshooting If you ever have issues with your install, run validate.php as root in the librenms directory: cd /opt/librenms ./validate.php There are various options for getting help listed on the LibreNMS web site: https://www.librenms.org/#support What next? Now that you've installed LibreNMS, we'd suggest that you have a read of a few other docs to get you going: Performance tuning Alerting Device Groups Auto discovery Closing We hope you enjoy using LibreNMS. If you do, it would be great if you would consider opting into the stats system we have, please see this page on what it is and how to enable it. If you would like to help make LibreNMS better there are many ways to help . You can also back LibreNMS on Open Collective .","title":"Installation Ubuntu 1804 Apache"},{"location":"Installation/Installation-Ubuntu-1804-Apache/#install-required-packages","text":"apt install software-properties-common add-apt-repository universe apt update apt install curl apache2 composer fping git graphviz imagemagick libapache2-mod-php7.2 mariadb-client mariadb-server mtr-tiny nmap php7.2-cli php7.2-curl php7.2-gd php7.2-json php7.2-mbstring php7.2-mysql php7.2-snmp php7.2-xml php7.2-zip python-memcache python-mysqldb rrdtool snmp snmpd whois python3-pip","title":"Install Required Packages"},{"location":"Installation/Installation-Ubuntu-1804-Apache/#add-librenms-user","text":"useradd librenms -d /opt/librenms -M -r usermod -a -G librenms www-data","title":"Add librenms user"},{"location":"Installation/Installation-Ubuntu-1804-Apache/#download-librenms","text":"cd /opt git clone https://github.com/librenms/librenms.git","title":"Download LibreNMS"},{"location":"Installation/Installation-Ubuntu-1804-Apache/#set-permissions","text":"chown -R librenms:librenms /opt/librenms chmod 770 /opt/librenms setfacl -d -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/ setfacl -R -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/","title":"Set permissions"},{"location":"Installation/Installation-Ubuntu-1804-Apache/#install-php-dependencies","text":"su - librenms ./scripts/composer_wrapper.php install --no-dev exit","title":"Install PHP dependencies"},{"location":"Installation/Installation-Ubuntu-1804-Apache/#db-server","text":"","title":"DB Server"},{"location":"Installation/Installation-Ubuntu-1804-Apache/#configure-mysql","text":"systemctl restart mysql mysql -uroot -p NOTE: Please change the 'password' below to something secure. CREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci ; CREATE USER 'librenms' @ 'localhost' IDENTIFIED BY 'password' ; GRANT ALL PRIVILEGES ON librenms . * TO 'librenms' @ 'localhost' ; FLUSH PRIVILEGES ; exit vi /etc/mysql/mariadb.conf.d/50-server.cnf Within the [mysqld] section please add: innodb_file_per_table = 1 lower_case_table_names = 0 systemctl restart mysql","title":"Configure MySQL"},{"location":"Installation/Installation-Ubuntu-1804-Apache/#web-server","text":"","title":"Web Server"},{"location":"Installation/Installation-Ubuntu-1804-Apache/#configure-php","text":"Ensure date.timezone is set in php.ini to your preferred time zone. See http://php.net/manual/en/timezones.php for a list of supported timezones. Valid examples are: \"America/New_York\", \"Australia/Brisbane\", \"Etc/UTC\". vi /etc/php/7.2/apache2/php.ini vi /etc/php/7.2/cli/php.ini a2enmod php7.2 a2dismod mpm_event a2enmod mpm_prefork","title":"Configure PHP"},{"location":"Installation/Installation-Ubuntu-1804-Apache/#configure-apache","text":"vi /etc/apache2/sites-available/librenms.conf Add the following config, edit ServerName as required: <VirtualHost *:80 > DocumentRoot /opt/librenms/html/ ServerName librenms.example.com AllowEncodedSlashes NoDecode <Directory \"/opt/librenms/html/\" > Require all granted AllowOverride All Options FollowSymLinks MultiViews </Directory> </VirtualHost> NOTE: If this is the only site you are hosting on this server (it should be :)) then you will need to disable the default site. a2dissite 000-default a2ensite librenms.conf a2enmod rewrite systemctl restart apache2","title":"Configure Apache"},{"location":"Installation/Installation-Ubuntu-1804-Apache/#configure-snmpd","text":"cp /opt/librenms/snmpd.conf.example /etc/snmp/snmpd.conf vi /etc/snmp/snmpd.conf Edit the text which says RANDOMSTRINGGOESHERE and set your own community string. curl -o /usr/bin/distro https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/distro chmod +x /usr/bin/distro systemctl restart snmpd","title":"Configure snmpd"},{"location":"Installation/Installation-Ubuntu-1804-Apache/#cron-job","text":"cp /opt/librenms/librenms.nonroot.cron /etc/cron.d/librenms NOTE: Keep in mind that cron, by default, only uses a very limited set of environment variables. You may need to configure proxy variables for the cron invocation. Alternatively adding the proxy settings in config.php is possible too. The config.php file will be created in the upcoming steps. Review the following URL after you finished librenms install steps: https://docs.librenms.org/Support/Configuration/#proxy-support","title":"Cron job"},{"location":"Installation/Installation-Ubuntu-1804-Apache/#copy-logrotate-config","text":"LibreNMS keeps logs in /opt/librenms/logs . Over time these can become large and be rotated out. To rotate out the old logs you can use the provided logrotate config file: cp /opt/librenms/misc/librenms.logrotate /etc/logrotate.d/librenms","title":"Copy logrotate config"},{"location":"Installation/Installation-Ubuntu-1804-Apache/#web-installer","text":"Now head to the web installer and follow the on-screen instructions. http://librenms.example.com/install.php The web installer might prompt you to create a config.php file in your librenms install location manually, copying the content displayed on-screen to the file. If you have to do this, please remember to set the permissions on config.php after you copied the on-screen contents to the file. Run: chown librenms:librenms /opt/librenms/config.php","title":"Web installer"},{"location":"Installation/Installation-Ubuntu-1804-Apache/#final-steps","text":"That's it! You now should be able to log in to http://librenms.example.com/ . Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default. Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps.","title":"Final steps"},{"location":"Installation/Installation-Ubuntu-1804-Apache/#add-the-first-device","text":"We now suggest that you add localhost as your first device from within the WebUI.","title":"Add the first device"},{"location":"Installation/Installation-Ubuntu-1804-Apache/#troubleshooting","text":"If you ever have issues with your install, run validate.php as root in the librenms directory: cd /opt/librenms ./validate.php There are various options for getting help listed on the LibreNMS web site: https://www.librenms.org/#support","title":"Troubleshooting"},{"location":"Installation/Installation-Ubuntu-1804-Apache/#what-next","text":"Now that you've installed LibreNMS, we'd suggest that you have a read of a few other docs to get you going: Performance tuning Alerting Device Groups Auto discovery","title":"What next?"},{"location":"Installation/Installation-Ubuntu-1804-Apache/#closing","text":"We hope you enjoy using LibreNMS. If you do, it would be great if you would consider opting into the stats system we have, please see this page on what it is and how to enable it. If you would like to help make LibreNMS better there are many ways to help . You can also back LibreNMS on Open Collective .","title":"Closing"},{"location":"Installation/Installation-Ubuntu-1804-Nginx/","text":"NOTE: These instructions assume you are the root user. If you are not, prepend sudo to the shell commands (the ones that aren't at mysql> prompts) or temporarily become a user with root privileges with sudo -s or sudo -i . Please note the minimum supported PHP version is 7.2.5 Install Required Packages apt install software-properties-common add-apt-repository universe apt update apt install curl composer fping git graphviz imagemagick mariadb-client mariadb-server mtr-tiny nginx-full nmap php7.2-cli php7.2-curl php7.2-fpm php7.2-gd php7.2-json php7.2-mbstring php7.2-mysql php7.2-snmp php7.2-xml php7.2-zip python-memcache python-mysqldb rrdtool snmp snmpd whois unzip python3-pip Add librenms user useradd librenms -d /opt/librenms -M -r usermod -a -G librenms www-data Download LibreNMS cd /opt git clone https://github.com/librenms/librenms.git Set permissions chown -R librenms:librenms /opt/librenms chmod 770 /opt/librenms setfacl -d -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/ setfacl -R -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/ Install PHP dependencies su - librenms cd /opt/librenms ./scripts/composer_wrapper.php install --no-dev exit DB Server Configure MySQL systemctl restart mysql mysql -uroot -p NOTE: Please change the 'password' below to something secure. CREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci ; CREATE USER 'librenms' @ 'localhost' IDENTIFIED BY 'password' ; GRANT ALL PRIVILEGES ON librenms . * TO 'librenms' @ 'localhost' ; FLUSH PRIVILEGES ; exit vi /etc/mysql/mariadb.conf.d/50-server.cnf Within the [mysqld] section please add: innodb_file_per_table = 1 lower_case_table_names = 0 systemctl restart mysql Web Server Configure and Start PHP-FPM Ensure date.timezone is set in php.ini to your preferred time zone. See http://php.net/manual/en/timezones.php for a list of supported timezones. Valid examples are: \"America/New_York\", \"Australia/Brisbane\", \"Etc/UTC\". Please remember to set the system timezone as well. vi /etc/php/7.2/fpm/php.ini vi /etc/php/7.2/cli/php.ini systemctl restart php7.2-fpm \u00b4\u00b4\u00b4 timedatectl set-timezone Etc/UTC \u00b4\u00b4\u00b4 Configure NGINX vi /etc/nginx/conf.d/librenms.conf Add the following config, edit server_name as required: server { listen 80 ; server_name librenms.example.com ; root /opt/librenms/html ; index index.php ; charset utf-8 ; gzip on ; gzip_types text/css application/javascript text/javascript application/x-javascript image/svg+xml text/plain text/xsd text/xsl text/xml image/x-icon ; location / { try_files $uri $uri/ /index.php? $query_string ; } location /api/v0 { try_files $uri $uri/ /api_v0.php? $query_string ; } location ~ \\.php { include fastcgi.conf ; fastcgi_split_path_info ^(.+\\.php)(/.+) $ ; fastcgi_pass unix:/var/run/php/php7.2-fpm.sock ; } location ~ /\\.ht { deny all ; } } rm /etc/nginx/sites-enabled/default systemctl restart nginx Configure snmpd cp /opt/librenms/snmpd.conf.example /etc/snmp/snmpd.conf vi /etc/snmp/snmpd.conf Edit the text which says RANDOMSTRINGGOESHERE and set your own community string. curl -o /usr/bin/distro https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/distro chmod +x /usr/bin/distro systemctl restart snmpd Cron job cp /opt/librenms/librenms.nonroot.cron /etc/cron.d/librenms NOTE: Keep in mind that cron, by default, only uses a very limited set of environment variables. You may need to configure proxy variables for the cron invocation. Alternatively adding the proxy settings in config.php is possible too. The config.php file will be created in the upcoming steps. Review the following URL after you finished librenms install steps: https://docs.librenms.org/Support/Configuration/#proxy-support Copy logrotate config LibreNMS keeps logs in /opt/librenms/logs . Over time these can become large and be rotated out. To rotate out the old logs you can use the provided logrotate config file: cp /opt/librenms/misc/librenms.logrotate /etc/logrotate.d/librenms Set permissions chown -R librenms:librenms /opt/librenms setfacl -d -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/ setfacl -R -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/ Web installer Now head to the web installer and follow the on-screen instructions. http://librenms.example.com/install.php The web installer might prompt you to create a config.php file in your librenms install location manually, copying the content displayed on-screen to the file. If you have to do this, please remember to set the permissions on config.php after you copied the on-screen contents to the file. Run: chown librenms:librenms /opt/librenms/config.php Final steps That's it! You now should be able to log in to http://librenms.example.com/ . Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default. Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps. Add the first device We now suggest that you add localhost as your first device from within the WebUI. Troubleshooting If you ever have issues with your install, run validate.php as root in the librenms directory: cd /opt/librenms ./validate.php There are various options for getting help listed on the LibreNMS web site: https://www.librenms.org/#support What next? Now that you've installed LibreNMS, we'd suggest that you have a read of a few other docs to get you going: Performance tuning Alerting Device Groups Auto discovery Closing We hope you enjoy using LibreNMS. If you do, it would be great if you would consider opting into the stats system we have, please see this page on what it is and how to enable it. If you would like to help make LibreNMS better there are many ways to help . You can also back LibreNMS on Open Collective .","title":"Installation Ubuntu 1804 Nginx"},{"location":"Installation/Installation-Ubuntu-1804-Nginx/#install-required-packages","text":"apt install software-properties-common add-apt-repository universe apt update apt install curl composer fping git graphviz imagemagick mariadb-client mariadb-server mtr-tiny nginx-full nmap php7.2-cli php7.2-curl php7.2-fpm php7.2-gd php7.2-json php7.2-mbstring php7.2-mysql php7.2-snmp php7.2-xml php7.2-zip python-memcache python-mysqldb rrdtool snmp snmpd whois unzip python3-pip","title":"Install Required Packages"},{"location":"Installation/Installation-Ubuntu-1804-Nginx/#add-librenms-user","text":"useradd librenms -d /opt/librenms -M -r usermod -a -G librenms www-data","title":"Add librenms user"},{"location":"Installation/Installation-Ubuntu-1804-Nginx/#download-librenms","text":"cd /opt git clone https://github.com/librenms/librenms.git","title":"Download LibreNMS"},{"location":"Installation/Installation-Ubuntu-1804-Nginx/#set-permissions","text":"chown -R librenms:librenms /opt/librenms chmod 770 /opt/librenms setfacl -d -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/ setfacl -R -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/","title":"Set permissions"},{"location":"Installation/Installation-Ubuntu-1804-Nginx/#install-php-dependencies","text":"su - librenms cd /opt/librenms ./scripts/composer_wrapper.php install --no-dev exit","title":"Install PHP dependencies"},{"location":"Installation/Installation-Ubuntu-1804-Nginx/#db-server","text":"","title":"DB Server"},{"location":"Installation/Installation-Ubuntu-1804-Nginx/#configure-mysql","text":"systemctl restart mysql mysql -uroot -p NOTE: Please change the 'password' below to something secure. CREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci ; CREATE USER 'librenms' @ 'localhost' IDENTIFIED BY 'password' ; GRANT ALL PRIVILEGES ON librenms . * TO 'librenms' @ 'localhost' ; FLUSH PRIVILEGES ; exit vi /etc/mysql/mariadb.conf.d/50-server.cnf Within the [mysqld] section please add: innodb_file_per_table = 1 lower_case_table_names = 0 systemctl restart mysql","title":"Configure MySQL"},{"location":"Installation/Installation-Ubuntu-1804-Nginx/#web-server","text":"","title":"Web Server"},{"location":"Installation/Installation-Ubuntu-1804-Nginx/#configure-and-start-php-fpm","text":"Ensure date.timezone is set in php.ini to your preferred time zone. See http://php.net/manual/en/timezones.php for a list of supported timezones. Valid examples are: \"America/New_York\", \"Australia/Brisbane\", \"Etc/UTC\". Please remember to set the system timezone as well. vi /etc/php/7.2/fpm/php.ini vi /etc/php/7.2/cli/php.ini systemctl restart php7.2-fpm \u00b4\u00b4\u00b4 timedatectl set-timezone Etc/UTC \u00b4\u00b4\u00b4","title":"Configure and Start PHP-FPM"},{"location":"Installation/Installation-Ubuntu-1804-Nginx/#configure-nginx","text":"vi /etc/nginx/conf.d/librenms.conf Add the following config, edit server_name as required: server { listen 80 ; server_name librenms.example.com ; root /opt/librenms/html ; index index.php ; charset utf-8 ; gzip on ; gzip_types text/css application/javascript text/javascript application/x-javascript image/svg+xml text/plain text/xsd text/xsl text/xml image/x-icon ; location / { try_files $uri $uri/ /index.php? $query_string ; } location /api/v0 { try_files $uri $uri/ /api_v0.php? $query_string ; } location ~ \\.php { include fastcgi.conf ; fastcgi_split_path_info ^(.+\\.php)(/.+) $ ; fastcgi_pass unix:/var/run/php/php7.2-fpm.sock ; } location ~ /\\.ht { deny all ; } } rm /etc/nginx/sites-enabled/default systemctl restart nginx","title":"Configure NGINX"},{"location":"Installation/Installation-Ubuntu-1804-Nginx/#configure-snmpd","text":"cp /opt/librenms/snmpd.conf.example /etc/snmp/snmpd.conf vi /etc/snmp/snmpd.conf Edit the text which says RANDOMSTRINGGOESHERE and set your own community string. curl -o /usr/bin/distro https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/distro chmod +x /usr/bin/distro systemctl restart snmpd","title":"Configure snmpd"},{"location":"Installation/Installation-Ubuntu-1804-Nginx/#cron-job","text":"cp /opt/librenms/librenms.nonroot.cron /etc/cron.d/librenms NOTE: Keep in mind that cron, by default, only uses a very limited set of environment variables. You may need to configure proxy variables for the cron invocation. Alternatively adding the proxy settings in config.php is possible too. The config.php file will be created in the upcoming steps. Review the following URL after you finished librenms install steps: https://docs.librenms.org/Support/Configuration/#proxy-support","title":"Cron job"},{"location":"Installation/Installation-Ubuntu-1804-Nginx/#copy-logrotate-config","text":"LibreNMS keeps logs in /opt/librenms/logs . Over time these can become large and be rotated out. To rotate out the old logs you can use the provided logrotate config file: cp /opt/librenms/misc/librenms.logrotate /etc/logrotate.d/librenms","title":"Copy logrotate config"},{"location":"Installation/Installation-Ubuntu-1804-Nginx/#set-permissions_1","text":"chown -R librenms:librenms /opt/librenms setfacl -d -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/ setfacl -R -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/","title":"Set permissions"},{"location":"Installation/Installation-Ubuntu-1804-Nginx/#web-installer","text":"Now head to the web installer and follow the on-screen instructions. http://librenms.example.com/install.php The web installer might prompt you to create a config.php file in your librenms install location manually, copying the content displayed on-screen to the file. If you have to do this, please remember to set the permissions on config.php after you copied the on-screen contents to the file. Run: chown librenms:librenms /opt/librenms/config.php","title":"Web installer"},{"location":"Installation/Installation-Ubuntu-1804-Nginx/#final-steps","text":"That's it! You now should be able to log in to http://librenms.example.com/ . Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default. Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps.","title":"Final steps"},{"location":"Installation/Installation-Ubuntu-1804-Nginx/#add-the-first-device","text":"We now suggest that you add localhost as your first device from within the WebUI.","title":"Add the first device"},{"location":"Installation/Installation-Ubuntu-1804-Nginx/#troubleshooting","text":"If you ever have issues with your install, run validate.php as root in the librenms directory: cd /opt/librenms ./validate.php There are various options for getting help listed on the LibreNMS web site: https://www.librenms.org/#support","title":"Troubleshooting"},{"location":"Installation/Installation-Ubuntu-1804-Nginx/#what-next","text":"Now that you've installed LibreNMS, we'd suggest that you have a read of a few other docs to get you going: Performance tuning Alerting Device Groups Auto discovery","title":"What next?"},{"location":"Installation/Installation-Ubuntu-1804-Nginx/#closing","text":"We hope you enjoy using LibreNMS. If you do, it would be great if you would consider opting into the stats system we have, please see this page on what it is and how to enable it. If you would like to help make LibreNMS better there are many ways to help . You can also back LibreNMS on Open Collective .","title":"Closing"},{"location":"Installation/Installing-LibreNMS/","text":"","title":"Installing LibreNMS"},{"location":"Installation/Migrating-from-Observium/","text":"A LibreNMS user, Dan , has kindly provided full details and scripts to be able to migrate from Observium to LibreNMS. See his blog for full details. See Link Here Web Archived Site full details. We have mirrored the scripts he's provided with consent, these are available in the scripts\\Migration folder of your installation..","title":"Migrating from Observium"},{"location":"Installation/Ubuntu-image/","text":"","title":"Ubuntu image"},{"location":"Support/","text":"How to get Help Browse through the navigation on the left Search in the upper right Check the frequently asked questions Additional Support We have a few methods for you to get in touch to ask for help. Community Forum Ask for Help Feature Requests Discord Active chat and discussion Bug Reports","title":"How to get help"},{"location":"Support/#how-to-get-help","text":"Browse through the navigation on the left Search in the upper right Check the frequently asked questions","title":"How to get Help"},{"location":"Support/#additional-support","text":"We have a few methods for you to get in touch to ask for help. Community Forum Ask for Help Feature Requests Discord Active chat and discussion Bug Reports","title":"Additional Support"},{"location":"Support/1-Minute-Polling/","text":"Information We now have support for polling data at intervals to fit your needs. Please be aware of the following: If you just want faster up/down alerts, Fast Ping is a much easier path to that goal. You must also change your cron entry for poller-wrapper.py for this to work (if you change from the default 300 seconds). Your polling MUST complete in the time you configure for the heartbeat step value. See /poller in your WebUI for your current value. This will only affect RRD files created from the moment you change your settings. This change will affect all data storage mechanisms such as MySQL, RRD and InfluxDB. If you decrease the values then please be aware of the increase in space use for MySQL and InfluxDB. It's highly recommended to configure some performance optimizations . Keep in mind that all your devices will write all graphs every minute to the disk and that every device has many graphs. The most important thing is probably the RRDCached configuration that can save a lot of write IOPS. To make the changes, please navigate to /settings/poller/rrdtool/ within your WebUI. Select RRDTool Setup and then update the two values for step and heartbeat intervals: Step is how often you want to insert data, so if you change to 1 minute polling then this should be 60. Heartbeat is how long to wait for data before registering a null value, i.e 120 seconds. Converting existing RRD files We provide a basic script to convert the default rrd files we generate to utilise your configured step and heartbeat values. Please do ensure that you backup your RRD files before running this just in case. The script runs on a per device basis or all devices at once. The rrd files must be accessible from the server you run this script from. ./scripts/rrdstep.php This will provide the help information. To run it for localhost just run: ./scripts/rrdstep.php -h localhost","title":"1 Minute Polling"},{"location":"Support/1-Minute-Polling/#information","text":"We now have support for polling data at intervals to fit your needs. Please be aware of the following: If you just want faster up/down alerts, Fast Ping is a much easier path to that goal. You must also change your cron entry for poller-wrapper.py for this to work (if you change from the default 300 seconds). Your polling MUST complete in the time you configure for the heartbeat step value. See /poller in your WebUI for your current value. This will only affect RRD files created from the moment you change your settings. This change will affect all data storage mechanisms such as MySQL, RRD and InfluxDB. If you decrease the values then please be aware of the increase in space use for MySQL and InfluxDB. It's highly recommended to configure some performance optimizations . Keep in mind that all your devices will write all graphs every minute to the disk and that every device has many graphs. The most important thing is probably the RRDCached configuration that can save a lot of write IOPS. To make the changes, please navigate to /settings/poller/rrdtool/ within your WebUI. Select RRDTool Setup and then update the two values for step and heartbeat intervals: Step is how often you want to insert data, so if you change to 1 minute polling then this should be 60. Heartbeat is how long to wait for data before registering a null value, i.e 120 seconds.","title":"Information"},{"location":"Support/1-Minute-Polling/#converting-existing-rrd-files","text":"We provide a basic script to convert the default rrd files we generate to utilise your configured step and heartbeat values. Please do ensure that you backup your RRD files before running this just in case. The script runs on a per device basis or all devices at once. The rrd files must be accessible from the server you run this script from. ./scripts/rrdstep.php This will provide the help information. To run it for localhost just run: ./scripts/rrdstep.php -h localhost","title":"Converting existing RRD files"},{"location":"Support/Adding-a-Device/","text":"Adding Device You have two options for adding a new device into LibreNMS. You can add a device via the cli or by using the WebUI . CLI Using the command line via ssh you can add a new device by changing to the directory of your LibreNMS install and typing (be sure to put the correct details). ./addhost.php yourhostname [ community ] [ v1 | v2c ] [ port ] [ udp | udp6 | tcp | tcp6 ] As an example, if your device with the name mydevice.example.com is configured to use the community my_company using snmp v2c then you would enter: ./addhost.php mydevice.example.com my_company v2c Please note that if the community contains special characters such as $ then you will need to wrap it in ' . I.e: 'Pa$$w0rd' . WebUI Using the web interface, go to Devices and click Add Device. Enter the details required for the device that you want to add and then click 'Add Host'. As an example, if your device is configured to use the community my_company using snmp v2c then you would enter: SNMP Port defaults to 161. By default Hostname will be used for polling data. If you want to get polling Device data via a specific IP-Addresse (e.g. Management IP) fill out the optional field Overwrite IP with it's IP-Addresse. Ping Only Device You can add ping only devices into LibreNMS through the WebUI. When adding the device switch the SNMP button to \"off\". Device will be added into LibreNMS as Ping Only Device and will show ICMP Response Graph. Hostname: IP address or DNS name. Hardware: Optional you can type in whatever you like. OS: Optional this will add the Device's OS Icon. How to add ping only devices If you would like to add devices automatically then you will probably want to read the Auto-discovery Setup guide. You may also want to add devices programatically, if so, take a look at our API documentation","title":"Adding a device"},{"location":"Support/Adding-a-Device/#adding-device","text":"You have two options for adding a new device into LibreNMS. You can add a device via the cli or by using the WebUI .","title":"Adding Device"},{"location":"Support/Adding-a-Device/#cli","text":"Using the command line via ssh you can add a new device by changing to the directory of your LibreNMS install and typing (be sure to put the correct details). ./addhost.php yourhostname [ community ] [ v1 | v2c ] [ port ] [ udp | udp6 | tcp | tcp6 ] As an example, if your device with the name mydevice.example.com is configured to use the community my_company using snmp v2c then you would enter: ./addhost.php mydevice.example.com my_company v2c Please note that if the community contains special characters such as $ then you will need to wrap it in ' . I.e: 'Pa$$w0rd' .","title":"CLI"},{"location":"Support/Adding-a-Device/#webui","text":"Using the web interface, go to Devices and click Add Device. Enter the details required for the device that you want to add and then click 'Add Host'. As an example, if your device is configured to use the community my_company using snmp v2c then you would enter: SNMP Port defaults to 161. By default Hostname will be used for polling data. If you want to get polling Device data via a specific IP-Addresse (e.g. Management IP) fill out the optional field Overwrite IP with it's IP-Addresse.","title":"WebUI"},{"location":"Support/Adding-a-Device/#ping-only-device","text":"You can add ping only devices into LibreNMS through the WebUI. When adding the device switch the SNMP button to \"off\". Device will be added into LibreNMS as Ping Only Device and will show ICMP Response Graph. Hostname: IP address or DNS name. Hardware: Optional you can type in whatever you like. OS: Optional this will add the Device's OS Icon. How to add ping only devices If you would like to add devices automatically then you will probably want to read the Auto-discovery Setup guide. You may also want to add devices programatically, if so, take a look at our API documentation","title":"Ping Only Device"},{"location":"Support/Bare-Dashboard/","text":"Hide Menubar To hide Menubar e.g. for Monitoring TV Screens attach ?bare=yes on URL No Search Fields in Dashboard Widgets To hide Search Field in Dashboard Widgets take a look into Widget Settings.","title":"Bare Dashboard"},{"location":"Support/Bare-Dashboard/#hide-menubar","text":"To hide Menubar e.g. for Monitoring TV Screens attach ?bare=yes on URL","title":"Hide Menubar"},{"location":"Support/Bare-Dashboard/#no-search-fields-in-dashboard-widgets","text":"To hide Search Field in Dashboard Widgets take a look into Widget Settings.","title":"No Search Fields in Dashboard Widgets"},{"location":"Support/CLI-Tools/","text":"Command line tools Here's a brief list of command line tools, some might be missing. If you think something is missing, feel free to ask us or send a pull request :-) purge-ports.php This script provides CLI access to the \"delete port\" function of the WebUI. This might come in handy when trying to clean up old ports after large changes within the network or when hacking on the poller/discovery functions. LibreNMS Port purge tool -p port_id Purge single port by it's port-id -f file Purge a list of ports, read port-ids from _file_, one on each line A filename of - means reading from STDIN. Querying port IDs from the database One simple way to obtain port IDs is by querying the SQL database. If you wanted to query all deleted ports from the database, you could to this with the following query: echo 'SELECT port_id, hostname, ifDescr FROM ports, devices WHERE devices.device_id = ports.device_id AND deleted = 1' | mysql -h your_DB_server -u your_DB_user -p --skip-column-names your_DB_name When you are sure that the list of ports is correct and you want to delete all of them, you can write the list into a file and call purge-ports.php with that file as input: echo 'SELECT port_id FROM ports, devices WHERE devices.device_id = ports.device_id AND deleted = 1' | mysql -h your_DB_server -u your_DB_user -p --skip-column-names your_DB_name > ports_to_delete ./purge-ports.php -f ports_to_delete","title":"CLI Scripts"},{"location":"Support/CLI-Tools/#command-line-tools","text":"Here's a brief list of command line tools, some might be missing. If you think something is missing, feel free to ask us or send a pull request :-)","title":"Command line tools"},{"location":"Support/CLI-Tools/#purge-portsphp","text":"This script provides CLI access to the \"delete port\" function of the WebUI. This might come in handy when trying to clean up old ports after large changes within the network or when hacking on the poller/discovery functions. LibreNMS Port purge tool -p port_id Purge single port by it's port-id -f file Purge a list of ports, read port-ids from _file_, one on each line A filename of - means reading from STDIN.","title":"purge-ports.php"},{"location":"Support/CLI-Tools/#querying-port-ids-from-the-database","text":"One simple way to obtain port IDs is by querying the SQL database. If you wanted to query all deleted ports from the database, you could to this with the following query: echo 'SELECT port_id, hostname, ifDescr FROM ports, devices WHERE devices.device_id = ports.device_id AND deleted = 1' | mysql -h your_DB_server -u your_DB_user -p --skip-column-names your_DB_name When you are sure that the list of ports is correct and you want to delete all of them, you can write the list into a file and call purge-ports.php with that file as input: echo 'SELECT port_id FROM ports, devices WHERE devices.device_id = ports.device_id AND deleted = 1' | mysql -h your_DB_server -u your_DB_user -p --skip-column-names your_DB_name > ports_to_delete ./purge-ports.php -f ports_to_delete","title":"Querying port IDs from the database"},{"location":"Support/Cleanup-options/","text":"Cleanup Options As the number of devices starts to grow in your LibreNMS install, so will things such as the RRD files, MySQL database containing eventlogs, Syslogs and performance data etc. Your LibreNMS install could become quite large so it becomes necessary to clean up those entries. With Cleanup Options, you can stay in control. These options rely on daily.sh running from cron as per the installation instructions. Cleanup Options are set in config.php $config [ 'syslog_purge' ] = 30 ; $config [ 'eventlog_purge' ] = 30 ; $config [ 'authlog_purge' ] = 30 ; $config [ 'perf_times_purge' ] = 30 ; $config [ 'device_perf_purge' ] = 7 ; $config [ 'rrd_purge' ] = 90 ; // Not set by default $config [ 'ports_purge' ] = true ; // Set to false by default These options will ensure data within LibreNMS over X days old is automatically purged. You can alter these individually, values are in days. NOTE : Please be aware that $config['rrd_purge'] is NOT set by default. This option will remove any RRD files that have not been updated for the set amount of days automatically - only enable this if you are comfortable with that happening. (All active RRD files are updated every polling period.) Ports Purge Over time as you add devices some interfaces will need to be purged as they are set to be ignored or bad interfaces or marked as deleted. You can purge all deleted ports from the WebUI (see below) or by setting $config['ports_purge'] = true; in config.php In the Web UI Under the Ports Tab in the Nav Bar, Click on \"Deleted\" then click on \"Purge all deleted\". This will purge all the ports.","title":"Cleanup Options"},{"location":"Support/Cleanup-options/#cleanup-options","text":"As the number of devices starts to grow in your LibreNMS install, so will things such as the RRD files, MySQL database containing eventlogs, Syslogs and performance data etc. Your LibreNMS install could become quite large so it becomes necessary to clean up those entries. With Cleanup Options, you can stay in control. These options rely on daily.sh running from cron as per the installation instructions. Cleanup Options are set in config.php $config [ 'syslog_purge' ] = 30 ; $config [ 'eventlog_purge' ] = 30 ; $config [ 'authlog_purge' ] = 30 ; $config [ 'perf_times_purge' ] = 30 ; $config [ 'device_perf_purge' ] = 7 ; $config [ 'rrd_purge' ] = 90 ; // Not set by default $config [ 'ports_purge' ] = true ; // Set to false by default These options will ensure data within LibreNMS over X days old is automatically purged. You can alter these individually, values are in days. NOTE : Please be aware that $config['rrd_purge'] is NOT set by default. This option will remove any RRD files that have not been updated for the set amount of days automatically - only enable this if you are comfortable with that happening. (All active RRD files are updated every polling period.)","title":"Cleanup Options"},{"location":"Support/Cleanup-options/#ports-purge","text":"Over time as you add devices some interfaces will need to be purged as they are set to be ignored or bad interfaces or marked as deleted. You can purge all deleted ports from the WebUI (see below) or by setting $config['ports_purge'] = true; in config.php In the Web UI Under the Ports Tab in the Nav Bar, Click on \"Deleted\" then click on \"Purge all deleted\". This will purge all the ports.","title":"Ports Purge"},{"location":"Support/Configuration/","text":"The options shown below also contain the default values. If you would like to alter any of these then please add your config option to config.php . Directories $config [ 'install_dir' ] = \"/opt/librenms\" ; Set the installation directory (defaults to /opt/librenms), if you clone the GitHub branch to another location ensure you alter this. $config [ 'temp_dir' ] = \"/tmp\" ; The temporary directory is where images and other temporary files are created on your filesystem. $config [ 'log_dir' ] = \"/opt/librenms/logs\" ; Log files created by LibreNMS will be stored within this directory. Database config Set these variables either in .env or in the environment. DB_HOST=127.0.0.1 DB_DATABASE=librenms DB_USERNAME=DBUSER DB_PASSWORD=\"DBPASS\" Use non-standard port: DB_PORT=3306 Use a unix socket: DB_SOCKET=/run/mysqld/mysqld.sock Core PHP Settings You can change the memory limits for php within config.php . The value is in Megabytes and should just be an int value: $config['php_memory_limit'] = 128; Programs A lot of these are self explanatory so no further information may be provided. Any extensions that have dedicated documentation page will be linked to rather than having the config provided. RRDTool You can configure these options within the WebUI now, please avoid setting these options within config.php Settings -> External Settings -> RRDTool Setup $config [ 'rrdtool' ] = \"/usr/bin/rrdtool\" ; Please see 1 Minute polling for information on configuring your install to record data more frequently. fping $config [ 'fping' ] = \"/usr/bin/fping\" ; $config [ 'fping6' ] = \"fping6\" ; $config [ 'fping_options' ][ 'timeout' ] = 500 ; $config [ 'fping_options' ][ 'count' ] = 3 ; $config [ 'fping_options' ][ 'interval' ] = 500 ; fping configuration options: timeout ( fping parameter -t ): Amount of time that fping waits for a response to its first request (in milliseconds). See note below count ( fping parameter -c ): Number of request packets to send to each target. interval ( fping parameter -p ): Time in milliseconds that fping waits between successive packets to an individual target. NOTE: Setting a higher timeout value than the interval value can lead to slowing down poller. Example: timeout: 3000 count: 3 interval: 500 In this example, interval will be overwritten by the timeout value of 3000 which is 3 seconds. As we send three icmp packets (count: 3), each one is delayed by 3 seconds which will result in fping taking > 6 seconds to return results. You can disable the fping / icmp check that is done for a device to be determined to be up on a global or per device basis. We don't advise disabling the fping / icmp check unless you know the impact, at worst if you have a large number of devices down then it's possible that the poller would no longer complete in 5 minutes due to waiting for snmp to timeout. Globally disable fping / icmp check: $config [ 'icmp_check' ] = false ; If you would like to do this on a per device basis then you can do so under Device -> Edit -> Misc -> Disable ICMP Test? On traceroute LibreNMS uses traceroute / traceroute6 to record debug information when a device is down due to icmp AND you have $config['debug']['run_trace'] = true; set. $config [ 'traceroute' ] = '/usr/bin/traceroute' ; $config [ 'traceroute6' ] = '/usr/bin/traceroute6' ; SNMP $config [ 'snmpwalk' ] = \"/usr/bin/snmpwalk\" ; $config [ 'snmpget' ] = \"/usr/bin/snmpget\" ; $config [ 'snmpbulkwalk' ] = \"/usr/bin/snmpbulkwalk\" ; SNMP program locations. $config [ 'whois' ] = \"/usr/bin/whois\" ; $config [ 'ping' ] = \"/bin/ping\" ; $config [ 'mtr' ] = \"/usr/bin/mtr\" ; $config [ 'nmap' ] = \"/usr/bin/nmap\" ; $config [ 'nagios_plugins' ] = \"/usr/lib/nagios/plugins\" ; $config [ 'ipmitool' ] = \"/usr/bin/ipmitool\" ; $config [ 'virsh' ] = \"/usr/bin/virsh\" ; $config [ 'dot' ] = \"/usr/bin/dot\" ; $config [ 'unflatten' ] = \"/usr/bin/unflatten\" ; $config [ 'neato' ] = \"/usr/bin/neato\" ; $config [ 'sfdp' ] = \"/usr/bin/sfdp\" ; Authentication Generic Authentication settings. $config [ 'password' ][ 'min_length' ] = 8 ; // password minimum length for auth that allows user creation Proxy support For alerting and the callback functionality, we support the use of a http proxy setting. These can be any one of the following: $config [ 'callback_proxy' ] = 'proxy.domain.com' ; $config [ 'http_proxy' ] = 'proxy.domain.com' ; We can also make use of one of these environment variables which can be set in /etc/environment : http_proxy = proxy.domain.com https_proxy = proxy.domain.com RRDCached RRDCached WebUI Settings $config [ 'base_url' ] = \"http://demo.librenms.org\" ; LibreNMS will attempt to detect the URL you are using but you can override that here. $config [ 'site_style' ] = \"light\" ; Currently we have a number of styles which can be set which will alter the navigation bar look. dark, light and mono with light being the default. $config [ 'webui' ][ 'custom_css' ][] = \"css/custom/styles.css\" ; You can override a large number of visual elements by creating your own css stylesheet and referencing it here, place any custom css files into html/css/custom so they will be ignored by auto updates. You can specify as many css files as you like, the order they are within your config will be the order they are loaded in the browser. $config [ 'title_image' ] = \"images/custom/yourlogo.png\" ; You can override the default logo with yours, place any custom images files into html/images/custom so they will be ignored by auto updates. $config [ 'page_refresh' ] = \"300\" ; Set how often pages are refreshed in seconds. The default is every 5 minutes. Some pages don't refresh at all by design. $config [ 'front_page' ] = \"default\" ; You can create your own front page by adding a blade file in resources/views/overview/custom/ and setting front_page to it's name. For example, if you create resources/views/overview/custom/foobar.blade.php , set front_page to foobar . // This option exists in the web UI, edit it under Global Settings -> webui $config [ 'webui' ][ 'default_dashboard_id' ] = 0 ; Allows the specification of a global default dashboard page for any user who has not set one in their user preferences. Should be set to dashboard_id of an existing dashboard that is shared or shared(read). Otherwise, the system will automatically create each user an empty dashboard called Default on their first login. $config [ 'login_message' ] = \"Unauthorised access or use shall render the user liable to criminal and/or civil prosecution.\" ; This is the default message on the login page displayed to users. $config [ 'public_status' ] = false ; If this is set to true then an overview will be shown on the login page of devices and the status. $config [ 'show_locations' ] = 1 ; # Enable Locations on menu $config [ 'show_locations_dropdown' ] = 1 ; # Enable Locations dropdown on menu $config [ 'show_services' ] = 0 ; # Enable Services on menu $config [ 'int_customers' ] = 1 ; # Enable Customer Port Parsing $config [ 'summary_errors' ] = 0 ; # Show Errored ports in summary boxes on the dashboard $config [ 'customers_descr' ] = 'cust' ; // The description to look for in ifDescr. Can be an array as well array('cust','cid'); $config [ 'transit_descr' ] = 'transit' ; // Add custom transit descriptions (can be an array) $config [ 'peering_descr' ] = 'peering' ; // Add custom peering descriptions (can be an array) $config [ 'core_descr' ] = 'core' ; // Add custom core descriptions (can be an array) $config [ 'custom_descr' ] = '' ; // Add custom interface descriptions (can be an array) $config [ 'int_transit' ] = 1 ; # Enable Transit Types $config [ 'int_peering' ] = 1 ; # Enable Peering Types $config [ 'int_core' ] = 1 ; # Enable Core Port Types $config [ 'int_l2tp' ] = 0 ; # Enable L2TP Port Types Enable / disable certain menus from being shown in the WebUI. You are able to adjust the number and time frames of the quick select time options for graphs and the mini graphs shown per row. Quick select: $config [ 'graphs' ][ 'mini' ][ 'normal' ] = array ( 'day' => '24 Hours' , 'week' => 'One Week' , 'month' => 'One Month' , 'year' => 'One Year' , ); $config [ 'graphs' ][ 'mini' ][ 'widescreen' ] = array ( 'sixhour' => '6 Hours' , 'day' => '24 Hours' , 'twoday' => '48 Hours' , 'week' => 'One Week' , 'twoweek' => 'Two Weeks' , 'month' => 'One Month' , 'twomonth' => 'Two Months' , 'year' => 'One Year' , 'twoyear' => 'Two Years' , ); Mini graphs: $config [ 'graphs' ][ 'row' ][ 'normal' ] = array ( 'sixhour' => '6 Hours' , 'day' => '24 Hours' , 'twoday' => '48 Hours' , 'week' => 'One Week' , 'twoweek' => 'Two Weeks' , 'month' => 'One Month' , 'twomonth' => 'Two Months' , 'year' => 'One Year' , 'twoyear' => 'Two Years' , ); $config [ 'web_mouseover' ] = true ; You can disable the mouseover popover for mini graphs by setting this to false. $config [ 'enable_lazy_load' ] = true ; You can disable image lazy loading by setting this to false. $config [ 'show_overview_tab' ] = true ; Enable or disable the overview tab for a device. $config [ 'overview_show_sysDescr' ] = true ; Enable or disable the sysDescr output for a device. $config [ 'force_ip_to_sysname' ] = false ; When using IP addresses as a hostname you can instead represent the devices on the WebUI by its SNMP sysName resulting in an easier to read overview of your network. This would apply on networks where you don't have DNS records for most of your devices. $config [ 'force_hostname_to_sysname' ] = false ; When using a dynamic DNS hostname or one that does not resolve, this option would allow you to make use of the SNMP sysName instead as the preferred reference to the device. $config [ 'device_traffic_iftype' ][] = '/loopback/' ; Interface types that aren't graphed in the WebUI. The default array contains more items, please see misc/config_definitions.json for the full list. $config [ 'enable_clear_discovery' ] = 1 ; Administrators are able to clear the last discovered time of a device which will force a full discovery run within the configured 5 minute cron window. $config [ 'enable_footer' ] = 1 ; Disable the footer of the WebUI by setting enable_footer to 0. You can enable the old style network map (only available for individual devices with links discovered via xDP) by setting: $config [ 'gui' ][ 'network-map' ][ 'style' ] = 'old' ; $config [ 'percentile_value' ] = X ; Show the X th percentile in the graph instead of the default 95th percentile. $config [ 'shorthost_target_length' ] = X ; The target maximum hostname length when applying the shorthost() function. You can increase this if you want to try and fit more of the hostname in graph titles. The default value is 12 However, this can possibly break graph generation if this is very long. You can enable dynamic graphs within the WebUI under Global Settings -> Webui Settings -> Graph Settings. Graphs will be movable/scalable without reloading the page: Stacked Graphs You can enable stacked graphs instead of the default inverted graphs. Enabling them is possible via webui Global Settings -> Webui Settings -> Graph settings -> Use stacked graphs Add host settings The following setting controls how hosts are added. If a host is added as an ip address it is checked to ensure the ip is not already present. If the ip is present the host is not added. If host is added by hostname this check is not performed. If the setting is true hostnames are resolved and the check is also performed. This helps prevents accidental duplicate hosts. $config [ 'addhost_alwayscheckip' ] = false ; #true - check for duplicate ips even when adding host by name. #false- only check when adding host by ip. By default we allow hosts to be added with duplicate sysName's, you can disable this with the following config: $config [ 'allow_duplicate_sysName' ] = false ; Global poller and discovery modules Generally, it is a better to set these per OS or device. $config [ 'discovery_modules][' arp - table '] = true; $config[' poller_modules '][' bgp - peers ' ] = false ; SNMP Settings Default SNMP options including retry and timeout settings and also default version and port. $config [ 'snmp' ][ 'timeout' ] = 1 ; # timeout in seconds $config [ 'snmp' ][ 'retries' ] = 5 ; # how many times to retry the query $config [ 'snmp' ][ 'transports' ] = array ( 'udp' , 'udp6' , 'tcp' , 'tcp6' ); # Transports to use $config [ 'snmp' ][ 'version' ] = [ 'v2c' , 'v3' , 'v1' ]; # Default versions to use $config [ 'snmp' ][ 'port' ] = 161 ; # Default port $config [ 'snmp' ][ 'exec_timeout' ] = 1200 ; # execution time limit in seconds NOTE: timeout is the time to wait for an answer and exec_timeout is the max time to run a query. The default v1/v2c snmp community to use, you can expand this array with [1] , [2] , [3] , etc. $config [ 'snmp' ][ 'community' ][ 0 ] = \"public\" ; NOTE: This list of SNMP communities is used for auto discovery, and as a default set for any manually added device. The default v3 snmp details to use, you can expand this array with [1] , [2] , [3] , etc. $config [ 'snmp' ][ 'v3' ][ 0 ][ 'authlevel' ] = \"noAuthNoPriv\" ; # noAuthNoPriv | authNoPriv | authPriv $config [ 'snmp' ][ 'v3' ][ 0 ][ 'authname' ] = \"root\" ; # User Name (required even for noAuthNoPriv) $config [ 'snmp' ][ 'v3' ][ 0 ][ 'authpass' ] = \"\" ; # Auth Passphrase $config [ 'snmp' ][ 'v3' ][ 0 ][ 'authalgo' ] = \"MD5\" ; # MD5 | SHA $config [ 'snmp' ][ 'v3' ][ 0 ][ 'cryptopass' ] = \"\" ; # Privacy (Encryption) Passphrase $config [ 'snmp' ][ 'v3' ][ 0 ][ 'cryptoalgo' ] = \"AES\" ; # AES | DES Auto discovery settings Auto-Discovery Email configuration You can configure these options within the WebUI now, please avoid setting these options within config.php $config [ 'email_backend' ] = 'mail' ; $config [ 'email_from' ] = NULL ; $config [ 'email_user' ] = $config [ 'project_id' ]; $config [ 'email_sendmail_path' ] = '/usr/sbin/sendmail' ; $config [ 'email_smtp_host' ] = 'localhost' ; $config [ 'email_smtp_port' ] = 25 ; $config [ 'email_smtp_timeout' ] = 10 ; $config [ 'email_smtp_secure' ] = NULL ; $config [ 'email_smtp_auth' ] = false ; $config [ 'email_smtp_username' ] = NULL ; $config [ 'email_smtp_password' ] = NULL ; What type of mail transport to use for delivering emails. Valid options for email_backend are mail, sendmail or smtp. The varying options after that are to support the different transports. Alerting Alerting Billing Billing Global module support $config [ 'enable_bgp' ] = 1 ; # Enable BGP session collection and display $config [ 'enable_syslog' ] = 0 ; # Enable Syslog $config [ 'enable_inventory' ] = 1 ; # Enable Inventory $config [ 'enable_pseudowires' ] = 1 ; # Enable Pseudowires $config [ 'enable_vrfs' ] = 1 ; # Enable VRFs $config [ 'enable_sla' ] = 0 ; # Enable Cisco SLA collection and display Port extensions Port-Description-Parser $config [ 'enable_ports_etherlike' ] = 0 ; $config [ 'enable_ports_junoseatmvp' ] = 0 ; $config [ 'enable_ports_adsl' ] = 1 ; $config [ 'enable_ports_poe' ] = 0 ; Enable / disable additional port statistics. External integration Rancid $config [ 'rancid_configs' ][] = '/var/lib/rancid/network/configs/' ; $config [ 'rancid_repo_type' ] = 'svn' ; $config [ 'rancid_ignorecomments' ] = 0 ; Rancid configuration, rancid_configs is an array containing all of the locations of your rancid files. Setting rancid_ignorecomments will disable showing lines that start with # Oxidized Oxidized CollectD $config [ 'collectd_dir' ] = '/var/lib/collectd/rrd' ; Specify the location of the collectd rrd files. Note that the location in config.php should be consistent with the location set in /etc/collectd.conf and etc/collectd.d/rrdtool.conf < Plugin rrdtool > DataDir \"/var/lib/collectd/rrd\" CreateFilesAsync false CacheTimeout 120 CacheFlush 900 WritesPerSecond 50 </ Plugin > /etc/collectd.conf LoadPlugin rrdtool < Plugin rrdtool > DataDir \"/var/lib/collectd/rrd\" CacheTimeout 120 CacheFlush 900 </ Plugin > /etc/collectd.d/rrdtool.conf $config [ 'collectd_sock' ] = 'unix:///var/run/collectd.sock' ; Specify the location of the collectd unix socket. Using a socket allows the collectd graphs to be flushed to disk before being drawn. Be sure that your web server has permissions to write to this socket. Smokeping Smokeping NFSen NFSen Location mapping If you just want to set GPS coordinates on a location, you should visit Devices > Geo Locations > All Locations and edit the coordinates there. Exact Matching: $config [ 'location_map' ][ 'Under the Sink' ] = \"Under The Sink, The Office, London, UK\" ; Regex Matching: $config [ 'location_map_regex' ][ '/Sink/' ] = \"Under The Sink, The Office, London, UK\" ; Regex Match Substitution: $config [ 'location_map_regex_sub' ][ '/Sink/' ] = \"Under The Sink, The Office, London, UK [lat, long]\" ; If you have an SNMP SysLocation of \"Rack10,Rm-314,Sink\", Regex Match Substition yields \"Rack10,Rm-314,Under The Sink, The Office, London, UK [lat, long]\". This allows you to keep the SysLocation string short and keeps Rack/Room/Building information intact after the substitution. The above are examples, these will rewrite device snmp locations so you don't need to configure full location within snmp. Interfaces to be ignored Interfaces can be automatically ignored during discovery by modifying bad_if* entries in a default array, unsetting a default array and customizing it, or creating an OS specific array. The preferred method for ignoring interfaces is to use an OS specific array. The default arrays can be found in misc/config_definitions.json. OS specific definitions (includes/definitions/ specific_os .yaml) can contain bad_if* arrays, but should only be modified via pull-request as manipulation of the definition files will block updating. Examples: Add entries to default arrays $config [ 'bad_if' ][] = \"voip-null\" ; $config [ 'bad_iftype' ][] = \"voiceEncap\" ; $config [ 'bad_if_regexp' ][] = '/^lo[0-9].*/' ; // loopback Unset and customize a default array unset ( $config [ 'bad_if' ]); $config [ 'bad_if' ][] = \"voip-null\" ; $config [ 'bad_if' ][] = \"voiceEncap\" ; $config [ 'bad_if' ][] = \"voiceFXO\" ; ... Create an OS specific array $config [ 'os' ][ 'iosxe' ][ 'bad_iftype' ][] = \"macSecControlledIF\" ; $config [ 'os' ][ 'iosxe' ][ 'bad_iftype' ][] = \"macSecUncontrolledIF\" ; Various bad_if* selection options available bad_if is matched against the ifDescr value. bad_iftype is matched against the ifType value. bad_if_regexp is matched against the ifDescr value as a regular expression. bad_ifname_regexp is matched against the ifName value as a regular expression. bad_ifalias_regexp is matched against the ifAlias value as a regular expression. Interfaces that shouldn't be ignored Examples: $config [ 'good_if' ][] = 'FastEthernet' ; $config [ 'os' ][ 'ios' ][ 'good_if' ][] = 'FastEthernet' ; good_if is matched against ifDescr value. This can be a bad_if value as well which would stop that port from being ignored. I.e If bad_if and good_if both contained FastEthernet then ports with this value in the ifDescr will be valid. Interfaces to be rewritten $config [ 'rewrite_if' ][ 'cpu' ] = 'Management Interface' ; $config [ 'rewrite_if_regexp' ][ '/cpu /' ] = 'Management ' ; Entries defined in rewrite_if are being replaced completely. Entries defined in rewrite_if_regexp only replace the match. Matches are compared case-insensitive. Entity sensors to be ignored Some devices register bogus sensors as they are returned via SNMP but either don't exist or just don't return data. This allows you to ignore those based on the descr field in the database. You can either ignore globally or on a per os basis. $config [ 'bad_entity_sensor_regex' ][] = '/Physical id [0-9]+/' ; $config [ 'os' ][ 'cisco' ][ 'bad_entity_sensor_regex' ] = '/Physical id [0-9]+/' ; Entity sensors limit values Vendors may give some limit values (or thresholds) for the discovered sensors. By default, when no such value is given, both high and low limit values are guessed, based on the value measured during the initial discovery. When it is preferred to have no high and/or low limit values at all if these are not provided by the vendor, the guess method can be disabled: $config [ 'sensors' ][ 'guess_limits' ] = false ; Ignoring Health Sensors It is possible to filter some sensors from the configuration: Ignore all temperature sensors $config [ 'disabled_sensors' ][ 'current' ] = true ; Filter all sensors matching regexp '/PEM Iout/' . $config [ 'disabled_sensors_regex' ][] = '/PEM Iout/' ; Filter all 'current' sensors for Operating System 'vrp'. $config [ 'os' ][ 'vrp' ][ 'disabled_sensors' ][ 'current' ] = true ; Filter all sensors matching regexp '/PEM Iout/' for Operating System iosxe. $config [ 'os' ][ 'iosxe' ][ 'disabled_sensors_regex' ][] = '/PEM Iout/' ; Storage configuration Mounted storage / mount points to ignore in discovery and polling. $config [ 'ignore_mount_removable' ] = 1 ; $config [ 'ignore_mount_network' ] = 1 ; $config [ 'ignore_mount_optical' ] = 1 ; $config [ 'ignore_mount' ][] = \"/kern\" ; $config [ 'ignore_mount' ][] = \"/mnt/cdrom\" ; $config [ 'ignore_mount' ][] = \"/proc\" ; $config [ 'ignore_mount' ][] = \"/dev\" ; $config [ 'ignore_mount_string' ][] = \"packages\" ; $config [ 'ignore_mount_string' ][] = \"devfs\" ; $config [ 'ignore_mount_string' ][] = \"procfs\" ; $config [ 'ignore_mount_string' ][] = \"UMA\" ; $config [ 'ignore_mount_string' ][] = \"MALLOC\" ; $config [ 'ignore_mount_regexp' ][] = \"/on: \\/packages/\" ; $config [ 'ignore_mount_regexp' ][] = \"/on: \\/dev/\" ; $config [ 'ignore_mount_regexp' ][] = \"/on: \\/proc/\" ; $config [ 'ignore_mount_regexp' ][] = \"/on: \\/junos^/\" ; $config [ 'ignore_mount_regexp' ][] = \"/on: \\/junos\\/dev/\" ; $config [ 'ignore_mount_regexp' ][] = \"/on: \\/jail\\/dev/\" ; $config [ 'ignore_mount_regexp' ][] = \"/^(dev|proc)fs/\" ; $config [ 'ignore_mount_regexp' ][] = \"/^\\/dev\\/md0/\" ; $config [ 'ignore_mount_regexp' ][] = \"/^\\/var\\/dhcpd\\/dev,/\" ; $config [ 'ignore_mount_regexp' ][] = \"/UMA/\" ; Custom storage warning percentage $config [ 'storage_perc_warn' ] = 60 ; $config [ 'os' ][ 'linux' ][ 'storage_perc_warn' ] = 60 ; IRC Bot IRC Bot Authentication Authentication Cleanup options These options rely on daily.sh running from cron as per the installation instructions. $config [ 'syslog_purge' ] = 30 ; $config [ 'eventlog_purge' ] = 30 ; $config [ 'authlog_purge' ] = 30 ; $config [ 'perf_times_purge' ] = 30 ; $config [ 'device_perf_purge' ] = 7 ; $config [ 'alert_log_purge' ] = 365 ; $config [ 'port_fdb_purge' ] = 10 ; $config [ 'rrd_purge' ] = 90 ; // Not set by default These options will ensure data within LibreNMS over X days old is automatically purged. You can alter these individually. values are in days. NOTE: Please be aware that $config['rrd_purge'] is NOT set by default. This option will remove any old data within the rrd directory automatically - only enable this if you are comfortable with that happening. Syslog options Syslog Virtualization $config [ 'enable_libvirt' ] = 1 ; $config [ 'libvirt_protocols' ] = array ( \"qemu+ssh\" , \"xen+ssh\" ); $config [ 'libvirt_username' ] = 'root' ; Enable this to switch on support for libvirt along with libvirt_protocols to indicate how you connect to libvirt. You also need to: Generate a non-password-protected ssh key for use by LibreNMS, as the user which runs polling & discovery (usually librenms ). On each VM host you wish to monitor: Configure public key authentication from your LibreNMS server/poller by adding the librenms public key to ~root/.ssh/authorized_keys . (xen+ssh only) Enable libvirtd to gather data from xend by setting (xend-unix-server yes) in /etc/xen/xend-config.sxp and restarting xend and libvirtd. To test your setup, run virsh -c qemu+ssh://vmhost/system list or virsh -c xen+ssh://vmhost list as your librenms polling user. BGP Support $config [ 'astext' ][ '65332' ] = \"Cymru FullBogon Feed\" ; You can use this array to rewrite the description of ASes that you have discovered. Auto updates Updating IPMI Setup the types of IPMI protocols to test a host for and in what order. Don't forget to install ipmitool on the monitoring host. $config [ 'ipmi' ][ 'type' ] = array (); $config [ 'ipmi' ][ 'type' ][] = \"lanplus\" ; $config [ 'ipmi' ][ 'type' ][] = \"lan\" ; $config [ 'ipmi' ][ 'type' ][] = \"imb\" ; $config [ 'ipmi' ][ 'type' ][] = \"open\" ; Distributed poller settings Distributed Poller API Settings CORS Support https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS CORS support for the API is disabled by default. Below you will find the standard options, all of which you can configure. $config [ 'api' ][ 'cors' ][ 'enabled' ] = false ; $config [ 'api' ][ 'cors' ][ 'origin' ] = [ '*' ]; $config [ 'api' ][ 'cors' ][ 'maxage' ] = '86400' ; $config [ 'api' ][ 'cors' ][ 'allowmethods' ] = [ 'POST' , 'GET' , 'PUT' , 'DELETE' , 'PATCH' ]; $config [ 'api' ][ 'cors' ][ 'allowheaders' ] = [ 'Origin' , 'X-Requested-With' , 'Content-Type' , 'Accept' , 'X-Auth-Token' ]; $config [ 'api' ][ 'cors' ][ 'exposeheaders' ] = [ 'Cache-Control' , 'Content-Language' , 'Content-Type' , 'Expires' , 'Last-Modified' , 'Pragma' ]; $config [ 'api' ][ 'cors' ][ 'allowcredentials' ] = false ;","title":"Configuration Docs"},{"location":"Support/Configuration/#directories","text":"$config [ 'install_dir' ] = \"/opt/librenms\" ; Set the installation directory (defaults to /opt/librenms), if you clone the GitHub branch to another location ensure you alter this. $config [ 'temp_dir' ] = \"/tmp\" ; The temporary directory is where images and other temporary files are created on your filesystem. $config [ 'log_dir' ] = \"/opt/librenms/logs\" ; Log files created by LibreNMS will be stored within this directory.","title":"Directories"},{"location":"Support/Configuration/#database-config","text":"Set these variables either in .env or in the environment. DB_HOST=127.0.0.1 DB_DATABASE=librenms DB_USERNAME=DBUSER DB_PASSWORD=\"DBPASS\" Use non-standard port: DB_PORT=3306 Use a unix socket: DB_SOCKET=/run/mysqld/mysqld.sock","title":"Database config"},{"location":"Support/Configuration/#core","text":"","title":"Core"},{"location":"Support/Configuration/#php-settings","text":"You can change the memory limits for php within config.php . The value is in Megabytes and should just be an int value: $config['php_memory_limit'] = 128;","title":"PHP Settings"},{"location":"Support/Configuration/#programs","text":"A lot of these are self explanatory so no further information may be provided. Any extensions that have dedicated documentation page will be linked to rather than having the config provided.","title":"Programs"},{"location":"Support/Configuration/#rrdtool","text":"You can configure these options within the WebUI now, please avoid setting these options within config.php Settings -> External Settings -> RRDTool Setup $config [ 'rrdtool' ] = \"/usr/bin/rrdtool\" ; Please see 1 Minute polling for information on configuring your install to record data more frequently.","title":"RRDTool"},{"location":"Support/Configuration/#fping","text":"$config [ 'fping' ] = \"/usr/bin/fping\" ; $config [ 'fping6' ] = \"fping6\" ; $config [ 'fping_options' ][ 'timeout' ] = 500 ; $config [ 'fping_options' ][ 'count' ] = 3 ; $config [ 'fping_options' ][ 'interval' ] = 500 ; fping configuration options: timeout ( fping parameter -t ): Amount of time that fping waits for a response to its first request (in milliseconds). See note below count ( fping parameter -c ): Number of request packets to send to each target. interval ( fping parameter -p ): Time in milliseconds that fping waits between successive packets to an individual target. NOTE: Setting a higher timeout value than the interval value can lead to slowing down poller. Example: timeout: 3000 count: 3 interval: 500 In this example, interval will be overwritten by the timeout value of 3000 which is 3 seconds. As we send three icmp packets (count: 3), each one is delayed by 3 seconds which will result in fping taking > 6 seconds to return results. You can disable the fping / icmp check that is done for a device to be determined to be up on a global or per device basis. We don't advise disabling the fping / icmp check unless you know the impact, at worst if you have a large number of devices down then it's possible that the poller would no longer complete in 5 minutes due to waiting for snmp to timeout. Globally disable fping / icmp check: $config [ 'icmp_check' ] = false ; If you would like to do this on a per device basis then you can do so under Device -> Edit -> Misc -> Disable ICMP Test? On","title":"fping"},{"location":"Support/Configuration/#traceroute","text":"LibreNMS uses traceroute / traceroute6 to record debug information when a device is down due to icmp AND you have $config['debug']['run_trace'] = true; set. $config [ 'traceroute' ] = '/usr/bin/traceroute' ; $config [ 'traceroute6' ] = '/usr/bin/traceroute6' ;","title":"traceroute"},{"location":"Support/Configuration/#snmp","text":"$config [ 'snmpwalk' ] = \"/usr/bin/snmpwalk\" ; $config [ 'snmpget' ] = \"/usr/bin/snmpget\" ; $config [ 'snmpbulkwalk' ] = \"/usr/bin/snmpbulkwalk\" ; SNMP program locations. $config [ 'whois' ] = \"/usr/bin/whois\" ; $config [ 'ping' ] = \"/bin/ping\" ; $config [ 'mtr' ] = \"/usr/bin/mtr\" ; $config [ 'nmap' ] = \"/usr/bin/nmap\" ; $config [ 'nagios_plugins' ] = \"/usr/lib/nagios/plugins\" ; $config [ 'ipmitool' ] = \"/usr/bin/ipmitool\" ; $config [ 'virsh' ] = \"/usr/bin/virsh\" ; $config [ 'dot' ] = \"/usr/bin/dot\" ; $config [ 'unflatten' ] = \"/usr/bin/unflatten\" ; $config [ 'neato' ] = \"/usr/bin/neato\" ; $config [ 'sfdp' ] = \"/usr/bin/sfdp\" ;","title":"SNMP"},{"location":"Support/Configuration/#authentication","text":"Generic Authentication settings. $config [ 'password' ][ 'min_length' ] = 8 ; // password minimum length for auth that allows user creation","title":"Authentication"},{"location":"Support/Configuration/#proxy-support","text":"For alerting and the callback functionality, we support the use of a http proxy setting. These can be any one of the following: $config [ 'callback_proxy' ] = 'proxy.domain.com' ; $config [ 'http_proxy' ] = 'proxy.domain.com' ; We can also make use of one of these environment variables which can be set in /etc/environment : http_proxy = proxy.domain.com https_proxy = proxy.domain.com","title":"Proxy support"},{"location":"Support/Configuration/#rrdcached","text":"RRDCached","title":"RRDCached"},{"location":"Support/Configuration/#webui-settings","text":"$config [ 'base_url' ] = \"http://demo.librenms.org\" ; LibreNMS will attempt to detect the URL you are using but you can override that here. $config [ 'site_style' ] = \"light\" ; Currently we have a number of styles which can be set which will alter the navigation bar look. dark, light and mono with light being the default. $config [ 'webui' ][ 'custom_css' ][] = \"css/custom/styles.css\" ; You can override a large number of visual elements by creating your own css stylesheet and referencing it here, place any custom css files into html/css/custom so they will be ignored by auto updates. You can specify as many css files as you like, the order they are within your config will be the order they are loaded in the browser. $config [ 'title_image' ] = \"images/custom/yourlogo.png\" ; You can override the default logo with yours, place any custom images files into html/images/custom so they will be ignored by auto updates. $config [ 'page_refresh' ] = \"300\" ; Set how often pages are refreshed in seconds. The default is every 5 minutes. Some pages don't refresh at all by design. $config [ 'front_page' ] = \"default\" ; You can create your own front page by adding a blade file in resources/views/overview/custom/ and setting front_page to it's name. For example, if you create resources/views/overview/custom/foobar.blade.php , set front_page to foobar . // This option exists in the web UI, edit it under Global Settings -> webui $config [ 'webui' ][ 'default_dashboard_id' ] = 0 ; Allows the specification of a global default dashboard page for any user who has not set one in their user preferences. Should be set to dashboard_id of an existing dashboard that is shared or shared(read). Otherwise, the system will automatically create each user an empty dashboard called Default on their first login. $config [ 'login_message' ] = \"Unauthorised access or use shall render the user liable to criminal and/or civil prosecution.\" ; This is the default message on the login page displayed to users. $config [ 'public_status' ] = false ; If this is set to true then an overview will be shown on the login page of devices and the status. $config [ 'show_locations' ] = 1 ; # Enable Locations on menu $config [ 'show_locations_dropdown' ] = 1 ; # Enable Locations dropdown on menu $config [ 'show_services' ] = 0 ; # Enable Services on menu $config [ 'int_customers' ] = 1 ; # Enable Customer Port Parsing $config [ 'summary_errors' ] = 0 ; # Show Errored ports in summary boxes on the dashboard $config [ 'customers_descr' ] = 'cust' ; // The description to look for in ifDescr. Can be an array as well array('cust','cid'); $config [ 'transit_descr' ] = 'transit' ; // Add custom transit descriptions (can be an array) $config [ 'peering_descr' ] = 'peering' ; // Add custom peering descriptions (can be an array) $config [ 'core_descr' ] = 'core' ; // Add custom core descriptions (can be an array) $config [ 'custom_descr' ] = '' ; // Add custom interface descriptions (can be an array) $config [ 'int_transit' ] = 1 ; # Enable Transit Types $config [ 'int_peering' ] = 1 ; # Enable Peering Types $config [ 'int_core' ] = 1 ; # Enable Core Port Types $config [ 'int_l2tp' ] = 0 ; # Enable L2TP Port Types Enable / disable certain menus from being shown in the WebUI. You are able to adjust the number and time frames of the quick select time options for graphs and the mini graphs shown per row. Quick select: $config [ 'graphs' ][ 'mini' ][ 'normal' ] = array ( 'day' => '24 Hours' , 'week' => 'One Week' , 'month' => 'One Month' , 'year' => 'One Year' , ); $config [ 'graphs' ][ 'mini' ][ 'widescreen' ] = array ( 'sixhour' => '6 Hours' , 'day' => '24 Hours' , 'twoday' => '48 Hours' , 'week' => 'One Week' , 'twoweek' => 'Two Weeks' , 'month' => 'One Month' , 'twomonth' => 'Two Months' , 'year' => 'One Year' , 'twoyear' => 'Two Years' , ); Mini graphs: $config [ 'graphs' ][ 'row' ][ 'normal' ] = array ( 'sixhour' => '6 Hours' , 'day' => '24 Hours' , 'twoday' => '48 Hours' , 'week' => 'One Week' , 'twoweek' => 'Two Weeks' , 'month' => 'One Month' , 'twomonth' => 'Two Months' , 'year' => 'One Year' , 'twoyear' => 'Two Years' , ); $config [ 'web_mouseover' ] = true ; You can disable the mouseover popover for mini graphs by setting this to false. $config [ 'enable_lazy_load' ] = true ; You can disable image lazy loading by setting this to false. $config [ 'show_overview_tab' ] = true ; Enable or disable the overview tab for a device. $config [ 'overview_show_sysDescr' ] = true ; Enable or disable the sysDescr output for a device. $config [ 'force_ip_to_sysname' ] = false ; When using IP addresses as a hostname you can instead represent the devices on the WebUI by its SNMP sysName resulting in an easier to read overview of your network. This would apply on networks where you don't have DNS records for most of your devices. $config [ 'force_hostname_to_sysname' ] = false ; When using a dynamic DNS hostname or one that does not resolve, this option would allow you to make use of the SNMP sysName instead as the preferred reference to the device. $config [ 'device_traffic_iftype' ][] = '/loopback/' ; Interface types that aren't graphed in the WebUI. The default array contains more items, please see misc/config_definitions.json for the full list. $config [ 'enable_clear_discovery' ] = 1 ; Administrators are able to clear the last discovered time of a device which will force a full discovery run within the configured 5 minute cron window. $config [ 'enable_footer' ] = 1 ; Disable the footer of the WebUI by setting enable_footer to 0. You can enable the old style network map (only available for individual devices with links discovered via xDP) by setting: $config [ 'gui' ][ 'network-map' ][ 'style' ] = 'old' ; $config [ 'percentile_value' ] = X ; Show the X th percentile in the graph instead of the default 95th percentile. $config [ 'shorthost_target_length' ] = X ; The target maximum hostname length when applying the shorthost() function. You can increase this if you want to try and fit more of the hostname in graph titles. The default value is 12 However, this can possibly break graph generation if this is very long. You can enable dynamic graphs within the WebUI under Global Settings -> Webui Settings -> Graph Settings. Graphs will be movable/scalable without reloading the page:","title":"WebUI Settings"},{"location":"Support/Configuration/#stacked-graphs","text":"You can enable stacked graphs instead of the default inverted graphs. Enabling them is possible via webui Global Settings -> Webui Settings -> Graph settings -> Use stacked graphs","title":"Stacked Graphs"},{"location":"Support/Configuration/#add-host-settings","text":"The following setting controls how hosts are added. If a host is added as an ip address it is checked to ensure the ip is not already present. If the ip is present the host is not added. If host is added by hostname this check is not performed. If the setting is true hostnames are resolved and the check is also performed. This helps prevents accidental duplicate hosts. $config [ 'addhost_alwayscheckip' ] = false ; #true - check for duplicate ips even when adding host by name. #false- only check when adding host by ip. By default we allow hosts to be added with duplicate sysName's, you can disable this with the following config: $config [ 'allow_duplicate_sysName' ] = false ;","title":"Add host settings"},{"location":"Support/Configuration/#global-poller-and-discovery-modules","text":"Generally, it is a better to set these per OS or device. $config [ 'discovery_modules][' arp - table '] = true; $config[' poller_modules '][' bgp - peers ' ] = false ;","title":"Global poller and discovery modules"},{"location":"Support/Configuration/#snmp-settings","text":"Default SNMP options including retry and timeout settings and also default version and port. $config [ 'snmp' ][ 'timeout' ] = 1 ; # timeout in seconds $config [ 'snmp' ][ 'retries' ] = 5 ; # how many times to retry the query $config [ 'snmp' ][ 'transports' ] = array ( 'udp' , 'udp6' , 'tcp' , 'tcp6' ); # Transports to use $config [ 'snmp' ][ 'version' ] = [ 'v2c' , 'v3' , 'v1' ]; # Default versions to use $config [ 'snmp' ][ 'port' ] = 161 ; # Default port $config [ 'snmp' ][ 'exec_timeout' ] = 1200 ; # execution time limit in seconds NOTE: timeout is the time to wait for an answer and exec_timeout is the max time to run a query. The default v1/v2c snmp community to use, you can expand this array with [1] , [2] , [3] , etc. $config [ 'snmp' ][ 'community' ][ 0 ] = \"public\" ; NOTE: This list of SNMP communities is used for auto discovery, and as a default set for any manually added device. The default v3 snmp details to use, you can expand this array with [1] , [2] , [3] , etc. $config [ 'snmp' ][ 'v3' ][ 0 ][ 'authlevel' ] = \"noAuthNoPriv\" ; # noAuthNoPriv | authNoPriv | authPriv $config [ 'snmp' ][ 'v3' ][ 0 ][ 'authname' ] = \"root\" ; # User Name (required even for noAuthNoPriv) $config [ 'snmp' ][ 'v3' ][ 0 ][ 'authpass' ] = \"\" ; # Auth Passphrase $config [ 'snmp' ][ 'v3' ][ 0 ][ 'authalgo' ] = \"MD5\" ; # MD5 | SHA $config [ 'snmp' ][ 'v3' ][ 0 ][ 'cryptopass' ] = \"\" ; # Privacy (Encryption) Passphrase $config [ 'snmp' ][ 'v3' ][ 0 ][ 'cryptoalgo' ] = \"AES\" ; # AES | DES","title":"SNMP Settings"},{"location":"Support/Configuration/#auto-discovery-settings","text":"Auto-Discovery","title":"Auto discovery settings"},{"location":"Support/Configuration/#email-configuration","text":"You can configure these options within the WebUI now, please avoid setting these options within config.php $config [ 'email_backend' ] = 'mail' ; $config [ 'email_from' ] = NULL ; $config [ 'email_user' ] = $config [ 'project_id' ]; $config [ 'email_sendmail_path' ] = '/usr/sbin/sendmail' ; $config [ 'email_smtp_host' ] = 'localhost' ; $config [ 'email_smtp_port' ] = 25 ; $config [ 'email_smtp_timeout' ] = 10 ; $config [ 'email_smtp_secure' ] = NULL ; $config [ 'email_smtp_auth' ] = false ; $config [ 'email_smtp_username' ] = NULL ; $config [ 'email_smtp_password' ] = NULL ; What type of mail transport to use for delivering emails. Valid options for email_backend are mail, sendmail or smtp. The varying options after that are to support the different transports.","title":"Email configuration"},{"location":"Support/Configuration/#alerting","text":"Alerting","title":"Alerting"},{"location":"Support/Configuration/#billing","text":"Billing","title":"Billing"},{"location":"Support/Configuration/#global-module-support","text":"$config [ 'enable_bgp' ] = 1 ; # Enable BGP session collection and display $config [ 'enable_syslog' ] = 0 ; # Enable Syslog $config [ 'enable_inventory' ] = 1 ; # Enable Inventory $config [ 'enable_pseudowires' ] = 1 ; # Enable Pseudowires $config [ 'enable_vrfs' ] = 1 ; # Enable VRFs $config [ 'enable_sla' ] = 0 ; # Enable Cisco SLA collection and display","title":"Global module support"},{"location":"Support/Configuration/#port-extensions","text":"Port-Description-Parser $config [ 'enable_ports_etherlike' ] = 0 ; $config [ 'enable_ports_junoseatmvp' ] = 0 ; $config [ 'enable_ports_adsl' ] = 1 ; $config [ 'enable_ports_poe' ] = 0 ; Enable / disable additional port statistics.","title":"Port extensions"},{"location":"Support/Configuration/#external-integration","text":"","title":"External integration"},{"location":"Support/Configuration/#rancid","text":"$config [ 'rancid_configs' ][] = '/var/lib/rancid/network/configs/' ; $config [ 'rancid_repo_type' ] = 'svn' ; $config [ 'rancid_ignorecomments' ] = 0 ; Rancid configuration, rancid_configs is an array containing all of the locations of your rancid files. Setting rancid_ignorecomments will disable showing lines that start with #","title":"Rancid"},{"location":"Support/Configuration/#oxidized","text":"Oxidized","title":"Oxidized"},{"location":"Support/Configuration/#collectd","text":"$config [ 'collectd_dir' ] = '/var/lib/collectd/rrd' ; Specify the location of the collectd rrd files. Note that the location in config.php should be consistent with the location set in /etc/collectd.conf and etc/collectd.d/rrdtool.conf < Plugin rrdtool > DataDir \"/var/lib/collectd/rrd\" CreateFilesAsync false CacheTimeout 120 CacheFlush 900 WritesPerSecond 50 </ Plugin > /etc/collectd.conf LoadPlugin rrdtool < Plugin rrdtool > DataDir \"/var/lib/collectd/rrd\" CacheTimeout 120 CacheFlush 900 </ Plugin > /etc/collectd.d/rrdtool.conf $config [ 'collectd_sock' ] = 'unix:///var/run/collectd.sock' ; Specify the location of the collectd unix socket. Using a socket allows the collectd graphs to be flushed to disk before being drawn. Be sure that your web server has permissions to write to this socket.","title":"CollectD"},{"location":"Support/Configuration/#smokeping","text":"Smokeping","title":"Smokeping"},{"location":"Support/Configuration/#nfsen","text":"NFSen","title":"NFSen"},{"location":"Support/Configuration/#location-mapping","text":"If you just want to set GPS coordinates on a location, you should visit Devices > Geo Locations > All Locations and edit the coordinates there. Exact Matching: $config [ 'location_map' ][ 'Under the Sink' ] = \"Under The Sink, The Office, London, UK\" ; Regex Matching: $config [ 'location_map_regex' ][ '/Sink/' ] = \"Under The Sink, The Office, London, UK\" ; Regex Match Substitution: $config [ 'location_map_regex_sub' ][ '/Sink/' ] = \"Under The Sink, The Office, London, UK [lat, long]\" ; If you have an SNMP SysLocation of \"Rack10,Rm-314,Sink\", Regex Match Substition yields \"Rack10,Rm-314,Under The Sink, The Office, London, UK [lat, long]\". This allows you to keep the SysLocation string short and keeps Rack/Room/Building information intact after the substitution. The above are examples, these will rewrite device snmp locations so you don't need to configure full location within snmp.","title":"Location mapping"},{"location":"Support/Configuration/#interfaces-to-be-ignored","text":"Interfaces can be automatically ignored during discovery by modifying bad_if* entries in a default array, unsetting a default array and customizing it, or creating an OS specific array. The preferred method for ignoring interfaces is to use an OS specific array. The default arrays can be found in misc/config_definitions.json. OS specific definitions (includes/definitions/ specific_os .yaml) can contain bad_if* arrays, but should only be modified via pull-request as manipulation of the definition files will block updating. Examples: Add entries to default arrays $config [ 'bad_if' ][] = \"voip-null\" ; $config [ 'bad_iftype' ][] = \"voiceEncap\" ; $config [ 'bad_if_regexp' ][] = '/^lo[0-9].*/' ; // loopback Unset and customize a default array unset ( $config [ 'bad_if' ]); $config [ 'bad_if' ][] = \"voip-null\" ; $config [ 'bad_if' ][] = \"voiceEncap\" ; $config [ 'bad_if' ][] = \"voiceFXO\" ; ... Create an OS specific array $config [ 'os' ][ 'iosxe' ][ 'bad_iftype' ][] = \"macSecControlledIF\" ; $config [ 'os' ][ 'iosxe' ][ 'bad_iftype' ][] = \"macSecUncontrolledIF\" ; Various bad_if* selection options available bad_if is matched against the ifDescr value. bad_iftype is matched against the ifType value. bad_if_regexp is matched against the ifDescr value as a regular expression. bad_ifname_regexp is matched against the ifName value as a regular expression. bad_ifalias_regexp is matched against the ifAlias value as a regular expression.","title":"Interfaces to be ignored"},{"location":"Support/Configuration/#interfaces-that-shouldnt-be-ignored","text":"Examples: $config [ 'good_if' ][] = 'FastEthernet' ; $config [ 'os' ][ 'ios' ][ 'good_if' ][] = 'FastEthernet' ; good_if is matched against ifDescr value. This can be a bad_if value as well which would stop that port from being ignored. I.e If bad_if and good_if both contained FastEthernet then ports with this value in the ifDescr will be valid.","title":"Interfaces that shouldn't be ignored"},{"location":"Support/Configuration/#interfaces-to-be-rewritten","text":"$config [ 'rewrite_if' ][ 'cpu' ] = 'Management Interface' ; $config [ 'rewrite_if_regexp' ][ '/cpu /' ] = 'Management ' ; Entries defined in rewrite_if are being replaced completely. Entries defined in rewrite_if_regexp only replace the match. Matches are compared case-insensitive.","title":"Interfaces to be rewritten"},{"location":"Support/Configuration/#entity-sensors-to-be-ignored","text":"Some devices register bogus sensors as they are returned via SNMP but either don't exist or just don't return data. This allows you to ignore those based on the descr field in the database. You can either ignore globally or on a per os basis. $config [ 'bad_entity_sensor_regex' ][] = '/Physical id [0-9]+/' ; $config [ 'os' ][ 'cisco' ][ 'bad_entity_sensor_regex' ] = '/Physical id [0-9]+/' ;","title":"Entity sensors to be ignored"},{"location":"Support/Configuration/#entity-sensors-limit-values","text":"Vendors may give some limit values (or thresholds) for the discovered sensors. By default, when no such value is given, both high and low limit values are guessed, based on the value measured during the initial discovery. When it is preferred to have no high and/or low limit values at all if these are not provided by the vendor, the guess method can be disabled: $config [ 'sensors' ][ 'guess_limits' ] = false ;","title":"Entity sensors limit values"},{"location":"Support/Configuration/#ignoring-health-sensors","text":"It is possible to filter some sensors from the configuration: Ignore all temperature sensors $config [ 'disabled_sensors' ][ 'current' ] = true ; Filter all sensors matching regexp '/PEM Iout/' . $config [ 'disabled_sensors_regex' ][] = '/PEM Iout/' ; Filter all 'current' sensors for Operating System 'vrp'. $config [ 'os' ][ 'vrp' ][ 'disabled_sensors' ][ 'current' ] = true ; Filter all sensors matching regexp '/PEM Iout/' for Operating System iosxe. $config [ 'os' ][ 'iosxe' ][ 'disabled_sensors_regex' ][] = '/PEM Iout/' ;","title":"Ignoring Health Sensors"},{"location":"Support/Configuration/#storage-configuration","text":"Mounted storage / mount points to ignore in discovery and polling. $config [ 'ignore_mount_removable' ] = 1 ; $config [ 'ignore_mount_network' ] = 1 ; $config [ 'ignore_mount_optical' ] = 1 ; $config [ 'ignore_mount' ][] = \"/kern\" ; $config [ 'ignore_mount' ][] = \"/mnt/cdrom\" ; $config [ 'ignore_mount' ][] = \"/proc\" ; $config [ 'ignore_mount' ][] = \"/dev\" ; $config [ 'ignore_mount_string' ][] = \"packages\" ; $config [ 'ignore_mount_string' ][] = \"devfs\" ; $config [ 'ignore_mount_string' ][] = \"procfs\" ; $config [ 'ignore_mount_string' ][] = \"UMA\" ; $config [ 'ignore_mount_string' ][] = \"MALLOC\" ; $config [ 'ignore_mount_regexp' ][] = \"/on: \\/packages/\" ; $config [ 'ignore_mount_regexp' ][] = \"/on: \\/dev/\" ; $config [ 'ignore_mount_regexp' ][] = \"/on: \\/proc/\" ; $config [ 'ignore_mount_regexp' ][] = \"/on: \\/junos^/\" ; $config [ 'ignore_mount_regexp' ][] = \"/on: \\/junos\\/dev/\" ; $config [ 'ignore_mount_regexp' ][] = \"/on: \\/jail\\/dev/\" ; $config [ 'ignore_mount_regexp' ][] = \"/^(dev|proc)fs/\" ; $config [ 'ignore_mount_regexp' ][] = \"/^\\/dev\\/md0/\" ; $config [ 'ignore_mount_regexp' ][] = \"/^\\/var\\/dhcpd\\/dev,/\" ; $config [ 'ignore_mount_regexp' ][] = \"/UMA/\" ; Custom storage warning percentage $config [ 'storage_perc_warn' ] = 60 ; $config [ 'os' ][ 'linux' ][ 'storage_perc_warn' ] = 60 ;","title":"Storage configuration"},{"location":"Support/Configuration/#irc-bot","text":"IRC Bot","title":"IRC Bot"},{"location":"Support/Configuration/#authentication_1","text":"Authentication","title":"Authentication"},{"location":"Support/Configuration/#cleanup-options","text":"These options rely on daily.sh running from cron as per the installation instructions. $config [ 'syslog_purge' ] = 30 ; $config [ 'eventlog_purge' ] = 30 ; $config [ 'authlog_purge' ] = 30 ; $config [ 'perf_times_purge' ] = 30 ; $config [ 'device_perf_purge' ] = 7 ; $config [ 'alert_log_purge' ] = 365 ; $config [ 'port_fdb_purge' ] = 10 ; $config [ 'rrd_purge' ] = 90 ; // Not set by default These options will ensure data within LibreNMS over X days old is automatically purged. You can alter these individually. values are in days. NOTE: Please be aware that $config['rrd_purge'] is NOT set by default. This option will remove any old data within the rrd directory automatically - only enable this if you are comfortable with that happening.","title":"Cleanup options"},{"location":"Support/Configuration/#syslog-options","text":"Syslog","title":"Syslog options"},{"location":"Support/Configuration/#virtualization","text":"$config [ 'enable_libvirt' ] = 1 ; $config [ 'libvirt_protocols' ] = array ( \"qemu+ssh\" , \"xen+ssh\" ); $config [ 'libvirt_username' ] = 'root' ; Enable this to switch on support for libvirt along with libvirt_protocols to indicate how you connect to libvirt. You also need to: Generate a non-password-protected ssh key for use by LibreNMS, as the user which runs polling & discovery (usually librenms ). On each VM host you wish to monitor: Configure public key authentication from your LibreNMS server/poller by adding the librenms public key to ~root/.ssh/authorized_keys . (xen+ssh only) Enable libvirtd to gather data from xend by setting (xend-unix-server yes) in /etc/xen/xend-config.sxp and restarting xend and libvirtd. To test your setup, run virsh -c qemu+ssh://vmhost/system list or virsh -c xen+ssh://vmhost list as your librenms polling user.","title":"Virtualization"},{"location":"Support/Configuration/#bgp-support","text":"$config [ 'astext' ][ '65332' ] = \"Cymru FullBogon Feed\" ; You can use this array to rewrite the description of ASes that you have discovered.","title":"BGP Support"},{"location":"Support/Configuration/#auto-updates","text":"Updating","title":"Auto updates"},{"location":"Support/Configuration/#ipmi","text":"Setup the types of IPMI protocols to test a host for and in what order. Don't forget to install ipmitool on the monitoring host. $config [ 'ipmi' ][ 'type' ] = array (); $config [ 'ipmi' ][ 'type' ][] = \"lanplus\" ; $config [ 'ipmi' ][ 'type' ][] = \"lan\" ; $config [ 'ipmi' ][ 'type' ][] = \"imb\" ; $config [ 'ipmi' ][ 'type' ][] = \"open\" ;","title":"IPMI"},{"location":"Support/Configuration/#distributed-poller-settings","text":"Distributed Poller","title":"Distributed poller settings"},{"location":"Support/Configuration/#api-settings","text":"","title":"API Settings"},{"location":"Support/Configuration/#cors-support","text":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS CORS support for the API is disabled by default. Below you will find the standard options, all of which you can configure. $config [ 'api' ][ 'cors' ][ 'enabled' ] = false ; $config [ 'api' ][ 'cors' ][ 'origin' ] = [ '*' ]; $config [ 'api' ][ 'cors' ][ 'maxage' ] = '86400' ; $config [ 'api' ][ 'cors' ][ 'allowmethods' ] = [ 'POST' , 'GET' , 'PUT' , 'DELETE' , 'PATCH' ]; $config [ 'api' ][ 'cors' ][ 'allowheaders' ] = [ 'Origin' , 'X-Requested-With' , 'Content-Type' , 'Accept' , 'X-Auth-Token' ]; $config [ 'api' ][ 'cors' ][ 'exposeheaders' ] = [ 'Cache-Control' , 'Content-Language' , 'Content-Type' , 'Expires' , 'Last-Modified' , 'Pragma' ]; $config [ 'api' ][ 'cors' ][ 'allowcredentials' ] = false ;","title":"CORS Support"},{"location":"Support/Device-Sensors/","text":"Device Sensors LibreNMS has a standard for device sensors they are split into categories. This doc is to help users understand device sensors in general, if you need help with developing sensors for a device please see the Contributing + Developing section. Health Sensors The High and Low values of these sensors can be edited in Web UI by going to the device settings -> Health. There you can set your own custom High and Low values. List of these sensors can be found here Link Note Some values are defined by the manufactures and others are auto calculated when you add the device into librenms. Keep in mind every environment is different and may require user input. Wireless Sensors Some Wireless have High and Low values of these sensors can be edited in Web UI by going to the device settings -> Wireless Sensors There you can set your own custom High and Low values. List of these sensors can be found here Link Note Some values are defined by the manufactures and others are auto calculated when you add the device into librenms. Keep in mind every environment is different and may require user input. State Sensors Return states of device entries sensors states. For example. Drive Status, Memory Status, Power Supply Status. 0 = OK 1 = Warning 2 = Critical 3 = Unknown Alerting Sensors These alert rules can be found inside the Alert Rules Collection. The alert rules below are the default alert rules, there are more device-specific alert rules in the alerts collection. Sensor Over Limit Alert Rule: Will alert on any sensor value that is over the limit. Sensor Under Limit Alert Rule: Will alert on any sensor value that is under the limit. Remember you can set these limits inside device settings in the Web UI. State Sensor Critical: Will alert on any state that returns critical = 2 State Sensor Warning: Will alert on any state that returns warning = 1 Wireless Sensor Over Limit Alert Rule: Will Alert on sensors that listed in device settings under Wireless. Wireless Sensor Under Limit Alert Rule: Will Alert on sensors that listed in device settings under Wireless.","title":"Device Sensors"},{"location":"Support/Device-Sensors/#device-sensors","text":"LibreNMS has a standard for device sensors they are split into categories. This doc is to help users understand device sensors in general, if you need help with developing sensors for a device please see the Contributing + Developing section.","title":"Device Sensors"},{"location":"Support/Device-Sensors/#health-sensors","text":"The High and Low values of these sensors can be edited in Web UI by going to the device settings -> Health. There you can set your own custom High and Low values. List of these sensors can be found here Link Note Some values are defined by the manufactures and others are auto calculated when you add the device into librenms. Keep in mind every environment is different and may require user input.","title":"Health Sensors"},{"location":"Support/Device-Sensors/#wireless-sensors","text":"Some Wireless have High and Low values of these sensors can be edited in Web UI by going to the device settings -> Wireless Sensors There you can set your own custom High and Low values. List of these sensors can be found here Link Note Some values are defined by the manufactures and others are auto calculated when you add the device into librenms. Keep in mind every environment is different and may require user input.","title":"Wireless Sensors"},{"location":"Support/Device-Sensors/#state-sensors","text":"Return states of device entries sensors states. For example. Drive Status, Memory Status, Power Supply Status. 0 = OK 1 = Warning 2 = Critical 3 = Unknown","title":"State Sensors"},{"location":"Support/Device-Sensors/#alerting-sensors","text":"These alert rules can be found inside the Alert Rules Collection. The alert rules below are the default alert rules, there are more device-specific alert rules in the alerts collection. Sensor Over Limit Alert Rule: Will alert on any sensor value that is over the limit. Sensor Under Limit Alert Rule: Will alert on any sensor value that is under the limit. Remember you can set these limits inside device settings in the Web UI. State Sensor Critical: Will alert on any state that returns critical = 2 State Sensor Warning: Will alert on any state that returns warning = 1 Wireless Sensor Over Limit Alert Rule: Will Alert on sensors that listed in device settings under Wireless. Wireless Sensor Under Limit Alert Rule: Will Alert on sensors that listed in device settings under Wireless.","title":"Alerting Sensors"},{"location":"Support/Device-Troubleshooting/","text":"Capture Debug Information You can use this feature to run Debug on Discovery, Poller, SNMP, Alerts. This output information could be helpful for you in troubleshooting a device or when requesting help. This feature can be found by going to the device that you are troubleshooting in the webui, clicking on the settings icon menu on far right and selecting Capture. Discovery Discovery will run and output debug infomation. Poller Poller will run and output debug information. SNMP SNMP will run SNMP Bulk Walk on the device and output the information. Alerts Alerts Capture is handy when you are creating alerts and need to see if your alert rule matches.","title":"Device Troubleshooting"},{"location":"Support/Device-Troubleshooting/#capture-debug-information","text":"You can use this feature to run Debug on Discovery, Poller, SNMP, Alerts. This output information could be helpful for you in troubleshooting a device or when requesting help. This feature can be found by going to the device that you are troubleshooting in the webui, clicking on the settings icon menu on far right and selecting Capture.","title":"Capture Debug Information"},{"location":"Support/Device-Troubleshooting/#discovery","text":"Discovery will run and output debug infomation.","title":"Discovery"},{"location":"Support/Device-Troubleshooting/#poller","text":"Poller will run and output debug information.","title":"Poller"},{"location":"Support/Device-Troubleshooting/#snmp","text":"SNMP will run SNMP Bulk Walk on the device and output the information.","title":"SNMP"},{"location":"Support/Device-Troubleshooting/#alerts","text":"Alerts Capture is handy when you are creating alerts and need to see if your alert rule matches.","title":"Alerts"},{"location":"Support/Discovery%20Support/","text":"discovery.php This document will explain how to use discovery.php to debug issues or manually running to process data. Command options -h <device id> | <device hostname wildcard> Poll single device -h odd Poll odd numbered devices ( same as -i 2 -n 0 ) -h even Poll even numbered devices ( same as -i 2 -n 1 ) -h all Poll all devices -h new Poll all devices that have not had a discovery run before --os <os_name> Poll devices only with specified operating system --type <type> Poll devices only with specified type -i <instances> -n <number> Poll as instance <number> of <instances> Instances start at 0 . 0 -3 for -n 4 Debugging and testing options: -d Enable debugging output -v Enable verbose debugging output -m Specify module ( s ) to be run. Comma separate modules, submodules may be added with / -h Use this to specify a device via either id or hostname (including wildcard using *). You can also specify odd and even. all will run discovery against all devices whilst new will poll only those devices that have recently been added or have been selected for rediscovery. -i This can be used to stagger the discovery process. -d Enables debugging output (verbose output but with most sensitive data masked) so that you can see what is happening during a discovery run. This includes things like rrd updates, SQL queries and response from snmp. -v Enables verbose debugging output with all data in tact. -m This enables you to specify the module you want to run for discovery. Discovery wrapper We have a discovery-wrapper.py script which is based on poller-wrapper.py by Job Snijders . This script is currently the default. If you need to debug the output of discovery-wrapper.py then you can add -d to the end of the command - it is NOT recommended to do this in cron. If you want to switch back to discovery.php then you can replace: 33 */6 * * * librenms /opt/librenms/discovery-wrapper.py 1 >> /dev/null 2>&1 With: 33 */6 * * * librenms /opt/librenms/discovery.php -h all >> /dev/null 2>&1 Discovery config These are the default discovery config items. You can globally disable a module by setting it to 0. If you just want to disable it for one device then you can do this within the WebUI -> Device -> Settings -> Modules. $config [ 'discovery_modules' ][ 'os' ] = true ; $config [ 'discovery_modules' ][ 'ports' ] = true ; $config [ 'discovery_modules' ][ 'ports-stack' ] = true ; $config [ 'discovery_modules' ][ 'entity-physical' ] = true ; $config [ 'discovery_modules' ][ 'entity-state' ] = false ; $config [ 'discovery_modules' ][ 'processors' ] = true ; $config [ 'discovery_modules' ][ 'mempools' ] = true ; $config [ 'discovery_modules' ][ 'cisco-vrf-lite' ] = true ; $config [ 'discovery_modules' ][ 'cisco-mac-accounting' ] = false ; $config [ 'discovery_modules' ][ 'cisco-pw' ] = false ; $config [ 'discovery_modules' ][ 'vrf' ] = false ; $config [ 'discovery_modules' ][ 'cisco-cef' ] = false ; $config [ 'discovery_modules' ][ 'cisco-sla' ] = false ; $config [ 'discovery_modules' ][ 'cisco-cbqos' ] = false ; $config [ 'discovery_modules' ][ 'cisco-otv' ] = false ; $config [ 'discovery_modules' ][ 'ipv4-addresses' ] = true ; $config [ 'discovery_modules' ][ 'ipv6-addresses' ] = true ; $config [ 'discovery_modules' ][ 'route' ] = false ; $config [ 'discovery_modules' ][ 'sensors' ] = true ; $config [ 'discovery_modules' ][ 'storage' ] = true ; $config [ 'discovery_modules' ][ 'hr-device' ] = true ; $config [ 'discovery_modules' ][ 'discovery-protocols' ] = true ; $config [ 'discovery_modules' ][ 'arp-table' ] = true ; $config [ 'discovery_modules' ][ 'discovery-arp' ] = false ; $config [ 'discovery_modules' ][ 'junose-atm-vp' ] = false ; $config [ 'discovery_modules' ][ 'bgp-peers' ] = true ; $config [ 'discovery_modules' ][ 'vlans' ] = true ; $config [ 'discovery_modules' ][ 'vmware-vminfo' ] = false ; $config [ 'discovery_modules' ][ 'libvirt-vminfo' ] = false ; $config [ 'discovery_modules' ][ 'toner' ] = false ; $config [ 'discovery_modules' ][ 'ucd-diskio' ] = true ; $config [ 'discovery_modules' ][ 'applications' ] = false ; $config [ 'discovery_modules' ][ 'services' ] = true ; $config [ 'discovery_modules' ][ 'stp' ] = true ; $config [ 'discovery_modules' ][ 'ntp' ] = true ; $config [ 'discovery_modules' ][ 'loadbalancers' ] = false ; $config [ 'discovery_modules' ][ 'mef' ] = false ; $config [ 'discovery_modules' ][ 'wireless' ] = true ; $config [ 'discovery_modules' ][ 'fdb-table' ] = true ; OS based Discovery config You can enable or disable modules for a specific OS by add corresponding line in config.php OS based settings have preference over global. Device based settings have preference over all others Discover performance improvement can be achieved by deactivating all modules that are not supported by specific OS. E.g. to deactivate spanning tree but activate discovery-arp module for linux OS $config [ 'os' ][ 'linux' ][ 'discovery_modules' ][ 'stp' ] = false ; $config [ 'os' ][ 'linux' ][ 'discovery_modules' ][ 'discovery-arp' ] = true ; Discovery modules os : Os detection. This module will pick up the OS of the device. ports : This module will detect all ports on a device excluding ones configured to be ignored by config options. ports-stack : Same as ports except for stacks. entity-physical : Module to pick up the devices hardware support. processors : Processor support for devices. mempools : Memory detection support for devices. cisco-vrf-lite : VRF-Lite detection and support. ipv4-addresses : IPv4 Address detection ipv6-addresses : IPv6 Address detection route : This module will load the routing table of the device. The default route limit is 1000 (configurable in config.php with $config['routes']['max_number'] = 1000; ), with history data. sensors : Sensor detection such as Temperature, Humidity, Voltages + More storage : Storage detection for hard disks hr-device : Processor and Memory support via HOST-RESOURCES-MIB. discovery-protocols : Auto discovery module for xDP, OSPF and BGP. arp-table : Detection of the ARP table for the device. fdb-table : Detection of the Forwarding DataBase table for the device, with history data. discovery-arp : Auto discovery via ARP. junose-atm-vp : Juniper ATM support. bgp-peers : BGP detection and support. vlans : VLAN detection and support. cisco-mac-accounting : MAC Address account support. cisco-pw : Pseudowires wires detection and support. vrf : VRF detection and support. cisco-cef : CEF detection and support. cisco-sla : SLA detection and support. vmware-vminfo : Detection of vmware guests on an ESXi host libvirt-vminfo : Detection of libvirt guests. toner : Toner levels support. ucd-diskio : Disk I/O support. services : *Nix services support. charge : APC Charge detection and support. Running Here are some examples of running discovery from within your install directory. ./discovery.php -h localhost ./discovery.php -h localhost -m ports Debugging To provide debugging output you will need to run the discovery process with the -d flag. You can do this either against all modules, single or multiple modules: All Modules ./discovery.php -h localhost -d Single Module ./discovery.php -h localhost -m ports -d Multiple Modules ./discovery.php -h localhost -m ports,entity-physical -d Using -d shouldn't output much sensitive information, -v will so it is then advisable to sanitise the output before pasting it somewhere as the debug output will contain snmp details amongst other items including port descriptions. The output will contain: DB Updates SNMP Response","title":"Discovery Support"},{"location":"Support/Discovery%20Support/#discoveryphp","text":"This document will explain how to use discovery.php to debug issues or manually running to process data.","title":"discovery.php"},{"location":"Support/Discovery%20Support/#command-options","text":"-h <device id> | <device hostname wildcard> Poll single device -h odd Poll odd numbered devices ( same as -i 2 -n 0 ) -h even Poll even numbered devices ( same as -i 2 -n 1 ) -h all Poll all devices -h new Poll all devices that have not had a discovery run before --os <os_name> Poll devices only with specified operating system --type <type> Poll devices only with specified type -i <instances> -n <number> Poll as instance <number> of <instances> Instances start at 0 . 0 -3 for -n 4 Debugging and testing options: -d Enable debugging output -v Enable verbose debugging output -m Specify module ( s ) to be run. Comma separate modules, submodules may be added with / -h Use this to specify a device via either id or hostname (including wildcard using *). You can also specify odd and even. all will run discovery against all devices whilst new will poll only those devices that have recently been added or have been selected for rediscovery. -i This can be used to stagger the discovery process. -d Enables debugging output (verbose output but with most sensitive data masked) so that you can see what is happening during a discovery run. This includes things like rrd updates, SQL queries and response from snmp. -v Enables verbose debugging output with all data in tact. -m This enables you to specify the module you want to run for discovery.","title":"Command options"},{"location":"Support/Discovery%20Support/#discovery-wrapper","text":"We have a discovery-wrapper.py script which is based on poller-wrapper.py by Job Snijders . This script is currently the default. If you need to debug the output of discovery-wrapper.py then you can add -d to the end of the command - it is NOT recommended to do this in cron. If you want to switch back to discovery.php then you can replace: 33 */6 * * * librenms /opt/librenms/discovery-wrapper.py 1 >> /dev/null 2>&1 With: 33 */6 * * * librenms /opt/librenms/discovery.php -h all >> /dev/null 2>&1","title":"Discovery wrapper"},{"location":"Support/Discovery%20Support/#discovery-config","text":"These are the default discovery config items. You can globally disable a module by setting it to 0. If you just want to disable it for one device then you can do this within the WebUI -> Device -> Settings -> Modules. $config [ 'discovery_modules' ][ 'os' ] = true ; $config [ 'discovery_modules' ][ 'ports' ] = true ; $config [ 'discovery_modules' ][ 'ports-stack' ] = true ; $config [ 'discovery_modules' ][ 'entity-physical' ] = true ; $config [ 'discovery_modules' ][ 'entity-state' ] = false ; $config [ 'discovery_modules' ][ 'processors' ] = true ; $config [ 'discovery_modules' ][ 'mempools' ] = true ; $config [ 'discovery_modules' ][ 'cisco-vrf-lite' ] = true ; $config [ 'discovery_modules' ][ 'cisco-mac-accounting' ] = false ; $config [ 'discovery_modules' ][ 'cisco-pw' ] = false ; $config [ 'discovery_modules' ][ 'vrf' ] = false ; $config [ 'discovery_modules' ][ 'cisco-cef' ] = false ; $config [ 'discovery_modules' ][ 'cisco-sla' ] = false ; $config [ 'discovery_modules' ][ 'cisco-cbqos' ] = false ; $config [ 'discovery_modules' ][ 'cisco-otv' ] = false ; $config [ 'discovery_modules' ][ 'ipv4-addresses' ] = true ; $config [ 'discovery_modules' ][ 'ipv6-addresses' ] = true ; $config [ 'discovery_modules' ][ 'route' ] = false ; $config [ 'discovery_modules' ][ 'sensors' ] = true ; $config [ 'discovery_modules' ][ 'storage' ] = true ; $config [ 'discovery_modules' ][ 'hr-device' ] = true ; $config [ 'discovery_modules' ][ 'discovery-protocols' ] = true ; $config [ 'discovery_modules' ][ 'arp-table' ] = true ; $config [ 'discovery_modules' ][ 'discovery-arp' ] = false ; $config [ 'discovery_modules' ][ 'junose-atm-vp' ] = false ; $config [ 'discovery_modules' ][ 'bgp-peers' ] = true ; $config [ 'discovery_modules' ][ 'vlans' ] = true ; $config [ 'discovery_modules' ][ 'vmware-vminfo' ] = false ; $config [ 'discovery_modules' ][ 'libvirt-vminfo' ] = false ; $config [ 'discovery_modules' ][ 'toner' ] = false ; $config [ 'discovery_modules' ][ 'ucd-diskio' ] = true ; $config [ 'discovery_modules' ][ 'applications' ] = false ; $config [ 'discovery_modules' ][ 'services' ] = true ; $config [ 'discovery_modules' ][ 'stp' ] = true ; $config [ 'discovery_modules' ][ 'ntp' ] = true ; $config [ 'discovery_modules' ][ 'loadbalancers' ] = false ; $config [ 'discovery_modules' ][ 'mef' ] = false ; $config [ 'discovery_modules' ][ 'wireless' ] = true ; $config [ 'discovery_modules' ][ 'fdb-table' ] = true ;","title":"Discovery config"},{"location":"Support/Discovery%20Support/#os-based-discovery-config","text":"You can enable or disable modules for a specific OS by add corresponding line in config.php OS based settings have preference over global. Device based settings have preference over all others Discover performance improvement can be achieved by deactivating all modules that are not supported by specific OS. E.g. to deactivate spanning tree but activate discovery-arp module for linux OS $config [ 'os' ][ 'linux' ][ 'discovery_modules' ][ 'stp' ] = false ; $config [ 'os' ][ 'linux' ][ 'discovery_modules' ][ 'discovery-arp' ] = true ;","title":"OS based Discovery config"},{"location":"Support/Discovery%20Support/#discovery-modules","text":"os : Os detection. This module will pick up the OS of the device. ports : This module will detect all ports on a device excluding ones configured to be ignored by config options. ports-stack : Same as ports except for stacks. entity-physical : Module to pick up the devices hardware support. processors : Processor support for devices. mempools : Memory detection support for devices. cisco-vrf-lite : VRF-Lite detection and support. ipv4-addresses : IPv4 Address detection ipv6-addresses : IPv6 Address detection route : This module will load the routing table of the device. The default route limit is 1000 (configurable in config.php with $config['routes']['max_number'] = 1000; ), with history data. sensors : Sensor detection such as Temperature, Humidity, Voltages + More storage : Storage detection for hard disks hr-device : Processor and Memory support via HOST-RESOURCES-MIB. discovery-protocols : Auto discovery module for xDP, OSPF and BGP. arp-table : Detection of the ARP table for the device. fdb-table : Detection of the Forwarding DataBase table for the device, with history data. discovery-arp : Auto discovery via ARP. junose-atm-vp : Juniper ATM support. bgp-peers : BGP detection and support. vlans : VLAN detection and support. cisco-mac-accounting : MAC Address account support. cisco-pw : Pseudowires wires detection and support. vrf : VRF detection and support. cisco-cef : CEF detection and support. cisco-sla : SLA detection and support. vmware-vminfo : Detection of vmware guests on an ESXi host libvirt-vminfo : Detection of libvirt guests. toner : Toner levels support. ucd-diskio : Disk I/O support. services : *Nix services support. charge : APC Charge detection and support.","title":"Discovery modules"},{"location":"Support/Discovery%20Support/#running","text":"Here are some examples of running discovery from within your install directory. ./discovery.php -h localhost ./discovery.php -h localhost -m ports","title":"Running"},{"location":"Support/Discovery%20Support/#debugging","text":"To provide debugging output you will need to run the discovery process with the -d flag. You can do this either against all modules, single or multiple modules: All Modules ./discovery.php -h localhost -d Single Module ./discovery.php -h localhost -m ports -d Multiple Modules ./discovery.php -h localhost -m ports,entity-physical -d Using -d shouldn't output much sensitive information, -v will so it is then advisable to sanitise the output before pasting it somewhere as the debug output will contain snmp details amongst other items including port descriptions. The output will contain: DB Updates SNMP Response","title":"Debugging"},{"location":"Support/Environment-Variables/","text":"Environment Variables LibreNMS allows certain settings to be set via the environment or through the .env file. Database Set the variables to connect to the database. The default values are shown below. DB_HOST=localhost DB_PORT=3306 DB_DATABASE=librenms DB_USERNAME=librenms DB_PASSWORD= DB_SOCKET= Trusted Reverse Proxies A comma separated list of trusted reverse proxy IPs or CIDR. For legacy reasons the default is '*' , which means any proxy is allowed. '**' means trust any proxy up the chain. APP_TRUSTED_PROXIES=192.168.1.0/24,192.167.8.20 Base url Set the base url for generated urls. Do not set this if it is not needed. You may need to set this when using reverse proxies combined with a subdirectory. Generally, LibreNMS will make correct URLs (especially if you have set up your proxy variables correctly) APP_URL=http://librenms/ User / Group The user and group that LibreNMS should operate as. Group will default to the same as the user if unset. LIBRENMS_USER=librenms LIBRENMS_GROUP=librenms Debug Increases the amount of information shown when an error occurs. WARNING: This may leak information, do not leave enabled. APP_DEBUG=true","title":"Environment Variables"},{"location":"Support/Environment-Variables/#environment-variables","text":"LibreNMS allows certain settings to be set via the environment or through the .env file.","title":"Environment Variables"},{"location":"Support/Environment-Variables/#database","text":"Set the variables to connect to the database. The default values are shown below. DB_HOST=localhost DB_PORT=3306 DB_DATABASE=librenms DB_USERNAME=librenms DB_PASSWORD= DB_SOCKET=","title":"Database"},{"location":"Support/Environment-Variables/#trusted-reverse-proxies","text":"A comma separated list of trusted reverse proxy IPs or CIDR. For legacy reasons the default is '*' , which means any proxy is allowed. '**' means trust any proxy up the chain. APP_TRUSTED_PROXIES=192.168.1.0/24,192.167.8.20","title":"Trusted Reverse Proxies"},{"location":"Support/Environment-Variables/#base-url","text":"Set the base url for generated urls. Do not set this if it is not needed. You may need to set this when using reverse proxies combined with a subdirectory. Generally, LibreNMS will make correct URLs (especially if you have set up your proxy variables correctly) APP_URL=http://librenms/","title":"Base url"},{"location":"Support/Environment-Variables/#user-group","text":"The user and group that LibreNMS should operate as. Group will default to the same as the user if unset. LIBRENMS_USER=librenms LIBRENMS_GROUP=librenms","title":"User / Group"},{"location":"Support/Environment-Variables/#debug","text":"Increases the amount of information shown when an error occurs. WARNING: This may leak information, do not leave enabled. APP_DEBUG=true","title":"Debug"},{"location":"Support/Example-Hardware-Setup/","text":"Example hardware setups The information in this document is direct from users, it's a place for people to share their setups so you have an idea of what may be required for your install. To obtain the device, port and sensor counts you can run: select count ( * ) from devices ; select count ( * ) from ports where `deleted` = 0 ; select count ( * ) from sensors where `sensor_deleted` = 0 ; laf Home Running in Proxmox. LibreNMS MySQL Type Virtual Virtual OS CentOS 7 CentOS 7 CPU 2 Sockets, 4 Cores 1 Socket, 2 Cores Memory 2GB 2GB Disk Type Raid 1, SSD Raid 1, SSD Disk Space 18GB 30GB Devices 20 - Ports 133 - Health sensors 47 - Load < 0.1 < 0.1 Vente-Priv\u00e9e NOC LibreNMS MariaDB Type Dell R430 Dell R430 OS Debian 7 (dotdeb) Debian 7 (dotdeb) CPU 2 Sockets, 14 Cores 1 Socket, 2 Cores Memory 256GB 256GB Disk Type Raid 10, SSD Raid 10, SSD Disk Space 1TB 1TB Devices 1028 - Ports 26745 - Health sensors 6238 - Load < 0.5 < 0.5 KKrumm Home LibreNMS MySQL Type VM Same Server OS CentOS 7 CPU 2 Sockets, 4 Cores Memory 4GB Disk Type Raid 10, SAS Drives Disk Space 40 GB Devices 12 Ports 130 Health sensors 44 Load < 2.5 KKrumm Work LibreNMS MySQL Type HP Proliantdl380gen8 Same Server OS CentOS 7 CPU 2 Sockets, 24 Cores Memory 32GB Disk Type Raid 10, SAS Drives Disk Space 250 GB Devices 390 Ports 16167 Health sensors 3223 Load < 14.5 CppMonkey(KodApa85) Home LibreNMS MariaDB Type i5-4690K Same Workstation OS Ubuntu 18.04.2 CPU 4 Cores Memory 16GB Disk Type Hybrid SATA Disk Space 2 TB Devices 14 Ports 0 Health sensors 70 Load < 0.5 CppMonkey(KodApa85) Dev Running in Ganeti LibreNMS MariaDB Type VM Same VM OS CentOS 7.5 CPU 2 Cores Memory 4GB Disk Type M.2 Disk Space 40 GB Devices 38 Ports 1583 Health sensors 884 Load < 1.0 CppMonkey(KodApa85) Work NOC Running in Ganeti Cluster with 2x Dell PER730xd - 64GB, Dual E5-2660 v3 LibreNMS MariaDB Type VM VM OS Debian Stretch Debian Stretch CPU 4 Cores 2 Cores Memory 8GB 4GB Disk Type Raid 6, SAS Drives Disk Space 100 GB 40GB Devices 179 Ports 14495 Health sensors 2329 Load < 2.5 < 1.5 LaZyDK Home LibreNMS MariaDB Type VM - QNAP TS-453 Pro Same Server OS Ubuntu 16.04 CPU 1 vCore Memory 2GB Disk Type Raid 1, SATA Drives Disk Space 10 GB Devices 26 Ports 228 Health sensors 117 Load < 0.92 SirMaple Home LibreNMS MariaDB Type VM Same Server OS Ubuntu 18.04 LTS CPU 2 vCore Memory 1GB Disk Type Raid 1, SSD Disk Space 25 GB Devices 30 Ports 196 Health sensors 207 Load < 3.65 VVelox Home / Dev LibreNMS MariaDB Type Supermicro X7SPA-HF Same Server OS FreeBSD 12-STABLE CPU Intel Atom D525 Memory 4GB Disk Type Raid 1, SATA Disk Space 1TB Devices 17 Ports 174 Health sensors 76 Load < 3 SourceDoctor Home / Dev Running in VMWare Workstation Pro LibreNMS MariaDB Type VM Same Server OS Debian Buster CPU 2 vCore Memory 2GB Disk Type Raid 5, SSD Disk Space 20GB Devices 35 Ports 245 Health sensors 101 Load < 1 lazyb0nes Lab LibreNMS MariaDB Type VM Same Server OS RHEL 7.7 CPU 32 cores Memory 64GB Disk Type Flash San Array Disk Space 400GB Devices 670 Ports 25678 Health sensors 2457 Load 10.92 dagb Work Running in VMware. LibreNMS MariaDB Type Virtual Same Server OS CentOS 7 CPU 12 Cores Xeon 6130 Memory 8GB Disk Type SAN (SSD) Disk Space 26GB/72GB/7GB (logs/RRDs/db) Devices 650 Ports 34300 Health sensors 10500 Load 5.5 (45%)","title":"Example Hardware Setups"},{"location":"Support/Example-Hardware-Setup/#example-hardware-setups","text":"The information in this document is direct from users, it's a place for people to share their setups so you have an idea of what may be required for your install. To obtain the device, port and sensor counts you can run: select count ( * ) from devices ; select count ( * ) from ports where `deleted` = 0 ; select count ( * ) from sensors where `sensor_deleted` = 0 ;","title":"Example hardware setups"},{"location":"Support/Example-Hardware-Setup/#laf","text":"Home Running in Proxmox. LibreNMS MySQL Type Virtual Virtual OS CentOS 7 CentOS 7 CPU 2 Sockets, 4 Cores 1 Socket, 2 Cores Memory 2GB 2GB Disk Type Raid 1, SSD Raid 1, SSD Disk Space 18GB 30GB Devices 20 - Ports 133 - Health sensors 47 - Load < 0.1 < 0.1","title":"laf"},{"location":"Support/Example-Hardware-Setup/#vente-privee","text":"NOC LibreNMS MariaDB Type Dell R430 Dell R430 OS Debian 7 (dotdeb) Debian 7 (dotdeb) CPU 2 Sockets, 14 Cores 1 Socket, 2 Cores Memory 256GB 256GB Disk Type Raid 10, SSD Raid 10, SSD Disk Space 1TB 1TB Devices 1028 - Ports 26745 - Health sensors 6238 - Load < 0.5 < 0.5","title":"Vente-Priv\u00e9e"},{"location":"Support/Example-Hardware-Setup/#kkrumm","text":"Home LibreNMS MySQL Type VM Same Server OS CentOS 7 CPU 2 Sockets, 4 Cores Memory 4GB Disk Type Raid 10, SAS Drives Disk Space 40 GB Devices 12 Ports 130 Health sensors 44 Load < 2.5","title":"KKrumm"},{"location":"Support/Example-Hardware-Setup/#kkrumm_1","text":"Work LibreNMS MySQL Type HP Proliantdl380gen8 Same Server OS CentOS 7 CPU 2 Sockets, 24 Cores Memory 32GB Disk Type Raid 10, SAS Drives Disk Space 250 GB Devices 390 Ports 16167 Health sensors 3223 Load < 14.5","title":"KKrumm"},{"location":"Support/Example-Hardware-Setup/#cppmonkeykodapa85","text":"Home LibreNMS MariaDB Type i5-4690K Same Workstation OS Ubuntu 18.04.2 CPU 4 Cores Memory 16GB Disk Type Hybrid SATA Disk Space 2 TB Devices 14 Ports 0 Health sensors 70 Load < 0.5","title":"CppMonkey(KodApa85)"},{"location":"Support/Example-Hardware-Setup/#cppmonkeykodapa85_1","text":"Dev Running in Ganeti LibreNMS MariaDB Type VM Same VM OS CentOS 7.5 CPU 2 Cores Memory 4GB Disk Type M.2 Disk Space 40 GB Devices 38 Ports 1583 Health sensors 884 Load < 1.0","title":"CppMonkey(KodApa85)"},{"location":"Support/Example-Hardware-Setup/#cppmonkeykodapa85_2","text":"Work NOC Running in Ganeti Cluster with 2x Dell PER730xd - 64GB, Dual E5-2660 v3 LibreNMS MariaDB Type VM VM OS Debian Stretch Debian Stretch CPU 4 Cores 2 Cores Memory 8GB 4GB Disk Type Raid 6, SAS Drives Disk Space 100 GB 40GB Devices 179 Ports 14495 Health sensors 2329 Load < 2.5 < 1.5","title":"CppMonkey(KodApa85)"},{"location":"Support/Example-Hardware-Setup/#lazydk","text":"Home LibreNMS MariaDB Type VM - QNAP TS-453 Pro Same Server OS Ubuntu 16.04 CPU 1 vCore Memory 2GB Disk Type Raid 1, SATA Drives Disk Space 10 GB Devices 26 Ports 228 Health sensors 117 Load < 0.92","title":"LaZyDK"},{"location":"Support/Example-Hardware-Setup/#sirmaple","text":"Home LibreNMS MariaDB Type VM Same Server OS Ubuntu 18.04 LTS CPU 2 vCore Memory 1GB Disk Type Raid 1, SSD Disk Space 25 GB Devices 30 Ports 196 Health sensors 207 Load < 3.65","title":"SirMaple"},{"location":"Support/Example-Hardware-Setup/#vvelox","text":"Home / Dev LibreNMS MariaDB Type Supermicro X7SPA-HF Same Server OS FreeBSD 12-STABLE CPU Intel Atom D525 Memory 4GB Disk Type Raid 1, SATA Disk Space 1TB Devices 17 Ports 174 Health sensors 76 Load < 3","title":"VVelox"},{"location":"Support/Example-Hardware-Setup/#sourcedoctor","text":"Home / Dev Running in VMWare Workstation Pro LibreNMS MariaDB Type VM Same Server OS Debian Buster CPU 2 vCore Memory 2GB Disk Type Raid 5, SSD Disk Space 20GB Devices 35 Ports 245 Health sensors 101 Load < 1","title":"SourceDoctor"},{"location":"Support/Example-Hardware-Setup/#lazyb0nes","text":"Lab LibreNMS MariaDB Type VM Same Server OS RHEL 7.7 CPU 32 cores Memory 64GB Disk Type Flash San Array Disk Space 400GB Devices 670 Ports 25678 Health sensors 2457 Load 10.92","title":"lazyb0nes"},{"location":"Support/Example-Hardware-Setup/#dagb","text":"Work Running in VMware. LibreNMS MariaDB Type Virtual Same Server OS CentOS 7 CPU 12 Cores Xeon 6130 Memory 8GB Disk Type SAN (SSD) Disk Space 26GB/72GB/7GB (logs/RRDs/db) Devices 650 Ports 34300 Health sensors 10500 Load 5.5 (45%)","title":"dagb"},{"location":"Support/FAQ/","text":"Getting started How do I install LibreNMS? How do I add a device? How do I get help? What are the supported OSes for installing LibreNMS on? Do you have a demo available? Support How does LibreNMS use MIBs? Why do I get blank pages sometimes in the WebUI? Why do I not see any graphs? How do I debug pages not loading correctly? How do I debug the discovery process? How do I debug the poller process? Why do I get a lot apache or rrdtool zombies in my process list? Why do I see traffic spikes in my graphs? Why do I see gaps in my graphs? How do I change the IP / hostname of a device? My device doesn't finish polling within 300 seconds Things aren't working correctly? What do the values mean in my graphs? Why does a device show as a warning? Why do I not see all interfaces in the Overall traffic graph for a device? How do I move my LibreNMS install to another server? Why is my EdgeRouter device not detected? Why are some of my disks not showing? Why are my disks reporting an incorrect size? What does mean \\\"ignore alert tag\\\" on device, component, service and port? Why can't Normal and Global View users see Oxidized? What is the Demo User for? Why does modifying 'Default Alert Template' fail? Why would alert un-mute itself How do I change the Device Type? Where do I update my database credentials? My reverse proxy is not working My alerts aren't being delivered on time My alert templates stopped working How do I use trend prediction in graphs How do I move only the DB to another server What are the \"optional requirements message\" when I add SNMPv3 devices Developing How do I add support for a new OS? What information do you need to add a new OS? What can I do to help? How can I test another users branch? How do I install LibreNMS? This is currently well documented within the doc folder of the installation files. Please see the following doc How do I add a device? You have two options for adding a new device into LibreNMS. 1: Using the command line via ssh you can add a new device by changing to the directory of your LibreNMS install and typing (be sure to put the correct details). ./addhost.php [community] [v1|v2c] [port] [udp|udp6|tcp|tcp6] Please note that if the community contains special characters such as $ then you will need to wrap it in ' . I.e: 'Pa$$w0rd' . 2: Using the web interface, go to Devices and then Add Device. Enter the details required for the device that you want to add and then click 'Add Host'. How do I get help? Getting Help What are the supported OSes for installing LibreNMS on? Supported is quite a strong word :) The 'officially' supported distros are: Ubuntu / Debian Red Hat / CentOS Gentoo However we will always aim to help wherever possible so if you are running a distro that isn't one of the above then give it a try anyway and if you need help then jump on the discord server . Do you have a demo available? We do indeed, you can find access to the demo here How does LibreNMS use MIBs? LibreNMS does not parse MIBs to discover sensors for devices. LibreNMS uses static discovery definitions written in YAML or PHP. Therefore, updating a MIB alone will not improve OS support, the definitions must be updated. LibreNMS only uses MIBs to make OIDs easier to read. Why do I get blank pages sometimes in the WebUI? You can enable debug information by setting APP_DEBUG=true in your .env. (Do not leave this enabled, it could leak private data) If the page you are trying to load has a substantial amount of data in it then it could be that the php memory limit needs to be increased in config.php . Why do I not see any graphs? The easiest way to check if all is well is to run ./validate.php as root from within your install directory. This should give you info on why things aren't working. One other reason could be a restricted snmpd.conf file or snmp view which limits the data sent back. If you use net-snmp then we suggest using the included snmpd.conf file. How do I debug pages not loading correctly? A debug system is in place which enables you to see the output from php errors, warnings and notices along with the MySQL queries that have been run for that page. You can enable debug information by setting APP_DEBUG=true in your .env. (Do not leave this enabled, it could leak private data) To see additional information, run ./scripts/composer_wrapper.php install , to install additional debug tools. This will add a debug bar at the bottom of every page that will show you detailed debug information. How do I debug the discovery process? Please see the Discovery Support document for further details. How do I debug the poller process? Please see the Poller Support document for further details. Why do I get a lot apache or rrdtool zombies in my process list? If this is related to your web service for LibreNMS then this has been tracked down to an issue within php which the developers aren't fixing. We have implemented a work around which means you shouldn't be seeing this. If you are, please report this in issue 443 . Why do I see traffic spikes in my graphs? This occurs either when a counter resets or the device sends back bogus data making it look like a counter reset. We have enabled support for setting a maximum value for rrd files for ports. Before this all rrd files were set to 100G max values, now you can enable support to limit this to the actual port speed. rrdtool tune will change the max value when the interface speed is detected as being changed (min value will be set for anything 10M or over) or when you run the included script (./scripts/tune_port.php) - see RRDTune doc SNMP ifInOctets and ifOutOctets are counters, which means they start at 0 (at device boot) and count up from there. LibreNMS records the value every 5 minutes and uses the difference between the previous value and the current value to calculate rate. (Also, this value resets to 0 when it hits the max value) Now, when the value is not recorded for awhile RRD (our time series storage) does not record a 0, it records the last value, otherwise, there would be even worse problems. Then finally we get the current ifIn/OutOctets value and record that. Now, it appears as though all of the traffic since it stopped getting values have occurred in the last 5 minute interval. So whenever you see spikes like this, it means we have not received data from the device for several polling intervals. The cause can vary quite a bit: bad snmp implementations, intermittant network connectivity, broken poller, and more. Why do I see gaps in my graphs? This is most commonly due to the poller not being able to complete it's run within 300 seconds. Check which devices are causing this by going to /poll-log/ within the Web interface. When you find the device(s) which are taking the longest you can then look at the Polling module graph under Graphs -> Poller -> Poller Modules Performance. Take a look at what modules are taking the longest and disabled un used modules. If you poll a large number of devices / ports then it's recommended to run a local recurisve dns server such as pdns-recursor. Running RRDCached is also highly advised in larger installs but has benefits no matter the size. How do I change the IP / hostname of a device? There is a host rename tool called renamehost.php in your librenms root directory. When renaming you are also changing the device's IP / hostname address for monitoring. Usage: ./renamehost.php <old hostname> <new hostname> You can also rename a device in the Web UI by going to the device, then clicking settings Icon -> Edit. My device doesn't finish polling within 300 seconds We have a few things you can try: Disable unnecessary polling modules under edit device. Set a max repeater value within the snmp settings for a device. What to set this to is tricky, you really should run an snmpbulkwalk with -Cr10 through -Cr50 to see what works best. 50 is usually a good choice if the device can cope. Things aren't working correctly? Run ./validate.php as root from within your install. Re-run ./validate.php once you've resolved any issues raised. You have an odd issue - we'd suggest you join our discord server to discuss. What do the values mean in my graphs? The values you see are reported as metric values. Thanks to a post on Reddit here are those values: 10^-18 a - atto 10^-15 f - femto 10^-12 p - pico 10^-9 n - nano 10^-6 u - micro 10^-3 m - milli 0 (no unit) 10^3 k - kilo 10^6 M - mega 10^9 G - giga 10^12 T - tera 10^15 P - peta Why does a device show as a warning? This is indicating that the device has rebooted within the last 24 hours (by default). If you want to adjust this threshold then you can do so by setting $config['uptime_warning'] = '84600'; in config.php . The value must be in seconds. Why do I not see all interfaces in the Overall traffic graph for a device? By default numerous interface types and interface descriptions are excluded from this graph. The excluded defailts are: $config [ 'device_traffic_iftype' ][] = '/loopback/' ; $config [ 'device_traffic_iftype' ][] = '/tunnel/' ; $config [ 'device_traffic_iftype' ][] = '/virtual/' ; $config [ 'device_traffic_iftype' ][] = '/mpls/' ; $config [ 'device_traffic_iftype' ][] = '/ieee8023adLag/' ; $config [ 'device_traffic_iftype' ][] = '/l2vlan/' ; $config [ 'device_traffic_iftype' ][] = '/ppp/' ; $config [ 'device_traffic_descr' ][] = '/loopback/' ; $config [ 'device_traffic_descr' ][] = '/vlan/' ; $config [ 'device_traffic_descr' ][] = '/tunnel/' ; $config [ 'device_traffic_descr' ][] = '/bond/' ; $config [ 'device_traffic_descr' ][] = '/null/' ; $config [ 'device_traffic_descr' ][] = '/dummy/' ; If you would like to re-include l2vlan interfaces for instance, you first need to unset the config array and set your options: unset ( $config [ 'device_traffic_iftype' ]); $config [ 'device_traffic_iftype' ][] = '/loopback/' ; $config [ 'device_traffic_iftype' ][] = '/tunnel/' ; $config [ 'device_traffic_iftype' ][] = '/virtual/' ; $config [ 'device_traffic_iftype' ][] = '/mpls/' ; $config [ 'device_traffic_iftype' ][] = '/ieee8023adLag/' ; $config [ 'device_traffic_iftype' ][] = '/ppp/' ; How do I move my LibreNMS install to another server? If you are moving from one CPU architecture to another then you will need to dump the rrd files and re-create them. If you are in this scenario then you can use Dan Brown's migration scripts . If you are just moving to another server with the same CPU architecture then the following steps should be all that's needed: Install LibreNMS as per our normal documentation; you don't need to run through the web installer or building the sql schema. Stop cron by commenting out all lines in /etc/cron.d/librenms Dump the MySQL database librenms from your old server ( mysqldump librenms -u root -p > librenms.sql )... and import it into your new server ( mysql -u root -p librenms < librenms.sql ). Copy the rrd/ folder to the new server. Copy the .env and config.php files to the new server. Check for modified files (eg specific os, ...) with git status and migrate them. Ensure ownership of the copied files and folders (substitute your user if necessary) - chown -R librenms:librenms /opt/librenms Delete old pollers on the GUI (gear icon --> Pollers --> Pollers) Validate your installation (/opt/librenms/validate.php) Re-enable cron by uncommenting all lines in /etc/cron.d/librenms Why is my EdgeRouter device not detected? If you have service snmp description set in your config then this will be why, please remove this. For some reason Ubnt have decided setting this value should override the sysDescr value returned which breaks our detection. If you don't have that set then this may be then due to an update of EdgeOS or a new device type, please create an issue . Why are some of my disks not showing? If you are monitoring a linux server then net-snmp doesn't always expose all disks via hrStorage (HOST-RESOURCES-MIB). We have additional support which will retrieve disks via dskTable (UCD-SNMP-MIB). To expose these disks you need to add additional config to your snmpd.conf file. For example, to expose /dev/sda1 which may be mounted as /storage you can specify: disk /dev/sda1 Or disk /storage Restart snmpd and LibreNMS should populate the additional disk after a fresh discovery. Why are my disks reporting an incorrect size? There is a known issue for net-snmp, which causes it to report incorrect disk size and disk usage when the size of the disk (or raid) are larger then 16TB, a workaround has been implemented but is not active on Centos 6.8 by default due to the fact that this workaround breaks official SNMP specs, and as such could cause unexpected behaviour in other SNMP tools. You can activate the workaround by adding to /etc/snmp/snmpd.conf : realStorageUnits 0 What does mean \\\"ignore alert tag\\\" on device, component, service and port? Tag device, component, service and port to ignore alerts. Alert checks will still run. However, ignore tag can be read in alert rules. For example on device, if devices.ignore = 0 or macros.device = 1 condition is is set and ignore alert tag is on, the alert rule won't match. The alert rule is ignored. How do I add support for a new OS? Please see Supporting a new OS if you are adding all the support yourself, i.e. writing all of the supporting code. If you are only able to supply supporting info, and would like the help of others to write up the code, please follow the below steps. What information do you need to add a new OS? Please open a feature request in the community forum and provide the output of Discovery, Poller, and Snmpwalk as separate non-expiring https://p.libren.ms/ links : Please use preferably the command line to obtain the information. Especially, if snmpwalk results in a large amount of data. Replace the relevant information in these commands such as HOSTNAME and COMMUNITY. Use snmpwalk instead of snmpbulkwalk for v1 devices. These commands will automatically upload the data to LibreNMS servers. ./discovery.php -h HOSTNAME -d | ./pbin.sh ./poller.php -h HOSTNAME -r -f -d | ./pbin.sh snmpbulkwalk -OUneb -v2c -c COMMUNITY HOSTNAME . | ./pbin.sh You can use the links provided by these commands within the community post. If possible please also provide what the OS name should be if it doesn't exist already, as well as any useful link (MIBs from vendor, logo, etc etc) What can I do to help? Thanks for asking, sometimes it's not quite so obvious and everyone can contribute something different. So here are some ways you can help LibreNMS improve. Code. This is a big thing. We want this community to grow by the software developing and evolving to cater for users needs. The biggest area that people can help make this happen is by providing code support. This doesn't necessarily mean contributing code for discovering a new device: Web UI, a new look and feel has been adopted but we are not finished by any stretch of the imagination. Make suggestions, find and fix bugs, update the design / layout. Poller / Discovery code. Improving it (we think a lot can be done to speed things up), adding new device support and updating old ones. The LibreNMS main website, this is hosted on GitHub like the main repo and we accept use contributions here as well :) Hardware. We don't physically need it but if we are to add device support, it's made a whole lot easier with access to the kit via SNMP. If you've got MIBs, they are handy as well :) If you know the vendor and can get permission to use logos that's also great. Bugs. Found one? We want to know about it. Most bugs are fixed after being spotted and reported by someone, I'd love to say we are amazing developers and will fix all bugs before you spot them but that's just not true. Feature requests. Can't code / won't code. No worries, chuck a feature request into our community forum with enough detail and someone will take a look. A lot of the time this might be what interests someone, they need the same feature or they just have time. Please be patient, everyone who contributes does so in their own time. Documentation. Documentation can always be improved and every little bit helps. Not all features are currently documented or documented well, there's speeling mistakes etc. It's very easy to submit updates through the GitHub website , no git experience needed. Be nice, this is the foundation of this project. We expect everyone to be nice. People will fall out, people will disagree but please do it so in a respectable way. Ask questions. Sometimes just by asking questions you prompt deeper conversations that can lead us to somewhere amazing so please never be afraid to ask a question. How can I test another users branch? LibreNMS can and is developed by anyone, this means someone may be working on a new feature or support for a device that you want. It can be helpful for others to test these new features, using Git, this is made easy. cd /opt/librenms Firstly ensure that your current branch is in good state: git status If you see nothing to commit, working directory clean then let's go for it :) Let's say that you want to test a users (f0o) new development branch (issue-1337) then you can do the following: git remote add f0o https://github.com/f0o/librenms.git git remote update f0o git checkout issue-1337 Once you are done testing, you can easily switch back to the master branch: git checkout master If you want to pull any new updates provided by f0o's branch then whilst you are still in it, do the following: git pull f0o issue-1337 Why can't Normal and Global View users see Oxidized? Configs can often contain sensitive data. Because of that only global admins can see configs. What is the Demo User for? Demo users allow full access except adding/editing users and deleting devices and can't change passwords. Why does modifying 'Default Alert Template' fail? This template's entry could be missing in the database. Please run this from the LibreNMS directory: php artisan db:seed --class = DefaultAlertTemplateSeeder Why would alert un-mute itself? If alert un-mutes itself then it most likely means that the alert cleared and is then triggered again. Please review eventlog as it will tell you in there. How do I change the Device Type? You can change the Device Type by going to the device you would like to change, then click on the Gear Icon -> Edit. If you would like to define custom types, we suggest using Device Groups . They will be listed in the menu similarly to device types. Where do I update my database credentials? If you've changed your database credentials then you will need to update LibreNMS with those new details. Please edit .env .env : DB_HOST= DB_DATABASE= DB_USERNAME= DB_PASSWORD= DB_PORT= My reverse proxy is not working Make sure your proxy is passing the proper variables. At a minimum: X-Forwarded-For and X-Forwarded-Proto (X-Forwarded-Port if needed) You also need to Set the proxy or proxies as trusted If you are using a subdirectory on the reverse proxy and not on the actual web server, you may need to set APP_URL and $config['base_url'] . My alerts aren't being delivered on time If you're running MySQL/MariaDB on a separate machine or container make sure the timezone is set properly on both the LibreNMS and MySQL/MariaDB instance. Alerts will be delivered according to MySQL/MariaDB's time, so a mismatch between the two can cause alerts to be delivered late if LibreNMS is on a timezone later than MySQL/MariaDB. My alert templates stopped working You should probably have a look in the documentation concerning the new template syntax: https://docs.librenms.org/Alerting/Templates/ . Since version 1.42, syntax changed, and you basically need to convert your templates to this new syntax (including the titles). How do I use trend prediction in graphs As of Ver. 1.55 a new feature has been added where you can view a simple linear prediction in port graphs. It doesn't work on non-port graphs or consolidated graphs at the time this FAQ entry was written. To view a prediction: Click on any port graph of any network device Select a From date to your liking (not earlier than the device was actually added to LNMS), and then select a future date in the To field. Click update You should now see a linear prediction line on the graph. How do I move only the DB to another server? There is already a reference how to move your whole LNMS installation to another server. But the following steps will help you to split up an \"All-in-one\" installation to one LibreNMS installation with a seperate database install. *Note: This section assumes you have a MySQL/MariaDB instance Stop the apache and mysql service in you LibreNMS installation. Edit out all the cron entries in /etc/cron.d/librenms . Dump your librenms database on your current install by issuing mysqldump librenms -u root -p > librenms.sql . Stop and disable the MySQL server on your current install. On your new server make sure you create a new database with the standard install command, no need to add a user for localhost though. Copy this over to your new database server and import it with mysql -u root -p librenms < librenms.sql . Enter to mysql and add permissions with the following two commands: GRANT ALL PRIVILEGES ON librenms.* TO 'librenms'@'IP_OF_YOUR_LNMS_SERVER' IDENTIFIED BY 'PASSWORD' WITH GRANT OPTION; GRANT ALL PRIVILEGES ON librenms.* TO 'librenms'@'FQDN_OF_YOUR_LNMS_SERVER' IDENTIFIED BY 'PASSWORD' WITH GRANT OPTION; FLUSH PRIVILEGES; exit; Enable and restart MySQL server. Edit your config.php file to point the install to the new database server location. Very important : On your LibreNMS server, inside your install directory is a .env file, in it you need to edit the DBHOST paramater to point to your new server location. After all this is done, enable all the cron entries again and start apache. What are the \"optional requirements message\" when I add SNMPv3 devices? When you add a device via the WebUI you may see a little message stating \"Optional requirements are not met so some options are disabled\". Do not panic. This simply means your system does not contain openssl >= 1.1 and net-snmp >= 5.8 , which are the minimum specifications needed to be able to use AES-192,AES-256 as crypto algorithms and SHA-224|256|384|512 as auth algorithms.","title":"FAQ"},{"location":"Support/FAQ/#getting-started","text":"How do I install LibreNMS? How do I add a device? How do I get help? What are the supported OSes for installing LibreNMS on? Do you have a demo available?","title":"Getting started"},{"location":"Support/FAQ/#support","text":"How does LibreNMS use MIBs? Why do I get blank pages sometimes in the WebUI? Why do I not see any graphs? How do I debug pages not loading correctly? How do I debug the discovery process? How do I debug the poller process? Why do I get a lot apache or rrdtool zombies in my process list? Why do I see traffic spikes in my graphs? Why do I see gaps in my graphs? How do I change the IP / hostname of a device? My device doesn't finish polling within 300 seconds Things aren't working correctly? What do the values mean in my graphs? Why does a device show as a warning? Why do I not see all interfaces in the Overall traffic graph for a device? How do I move my LibreNMS install to another server? Why is my EdgeRouter device not detected? Why are some of my disks not showing? Why are my disks reporting an incorrect size? What does mean \\\"ignore alert tag\\\" on device, component, service and port? Why can't Normal and Global View users see Oxidized? What is the Demo User for? Why does modifying 'Default Alert Template' fail? Why would alert un-mute itself How do I change the Device Type? Where do I update my database credentials? My reverse proxy is not working My alerts aren't being delivered on time My alert templates stopped working How do I use trend prediction in graphs How do I move only the DB to another server What are the \"optional requirements message\" when I add SNMPv3 devices","title":"Support"},{"location":"Support/FAQ/#developing","text":"How do I add support for a new OS? What information do you need to add a new OS? What can I do to help? How can I test another users branch?","title":"Developing"},{"location":"Support/FAQ/#how-do-i-install-librenms","text":"This is currently well documented within the doc folder of the installation files. Please see the following doc","title":" How do I install LibreNMS?"},{"location":"Support/FAQ/#how-do-i-add-a-device","text":"You have two options for adding a new device into LibreNMS. 1: Using the command line via ssh you can add a new device by changing to the directory of your LibreNMS install and typing (be sure to put the correct details). ./addhost.php [community] [v1|v2c] [port] [udp|udp6|tcp|tcp6] Please note that if the community contains special characters such as $ then you will need to wrap it in ' . I.e: 'Pa$$w0rd' . 2: Using the web interface, go to Devices and then Add Device. Enter the details required for the device that you want to add and then click 'Add Host'.","title":" How do I add a device?"},{"location":"Support/FAQ/#how-do-i-get-help","text":"Getting Help","title":" How do I get help?"},{"location":"Support/FAQ/#what-are-the-supported-oses-for-installing-librenms-on","text":"Supported is quite a strong word :) The 'officially' supported distros are: Ubuntu / Debian Red Hat / CentOS Gentoo However we will always aim to help wherever possible so if you are running a distro that isn't one of the above then give it a try anyway and if you need help then jump on the discord server .","title":" What are the supported OSes for installing LibreNMS on?"},{"location":"Support/FAQ/#do-you-have-a-demo-available","text":"We do indeed, you can find access to the demo here","title":" Do you have a demo available?"},{"location":"Support/FAQ/#how-does-librenms-use-mibs","text":"LibreNMS does not parse MIBs to discover sensors for devices. LibreNMS uses static discovery definitions written in YAML or PHP. Therefore, updating a MIB alone will not improve OS support, the definitions must be updated. LibreNMS only uses MIBs to make OIDs easier to read.","title":"How does LibreNMS use MIBs?"},{"location":"Support/FAQ/#why-do-i-get-blank-pages-sometimes-in-the-webui","text":"You can enable debug information by setting APP_DEBUG=true in your .env. (Do not leave this enabled, it could leak private data) If the page you are trying to load has a substantial amount of data in it then it could be that the php memory limit needs to be increased in config.php .","title":" Why do I get blank pages sometimes in the WebUI?"},{"location":"Support/FAQ/#why-do-i-not-see-any-graphs","text":"The easiest way to check if all is well is to run ./validate.php as root from within your install directory. This should give you info on why things aren't working. One other reason could be a restricted snmpd.conf file or snmp view which limits the data sent back. If you use net-snmp then we suggest using the included snmpd.conf file.","title":" Why do I not see any graphs?"},{"location":"Support/FAQ/#how-do-i-debug-pages-not-loading-correctly","text":"A debug system is in place which enables you to see the output from php errors, warnings and notices along with the MySQL queries that have been run for that page. You can enable debug information by setting APP_DEBUG=true in your .env. (Do not leave this enabled, it could leak private data) To see additional information, run ./scripts/composer_wrapper.php install , to install additional debug tools. This will add a debug bar at the bottom of every page that will show you detailed debug information.","title":" How do I debug pages not loading correctly?"},{"location":"Support/FAQ/#how-do-i-debug-the-discovery-process","text":"Please see the Discovery Support document for further details.","title":" How do I debug the discovery process?"},{"location":"Support/FAQ/#how-do-i-debug-the-poller-process","text":"Please see the Poller Support document for further details.","title":" How do I debug the poller process?"},{"location":"Support/FAQ/#why-do-i-get-a-lot-apache-or-rrdtool-zombies-in-my-process-list","text":"If this is related to your web service for LibreNMS then this has been tracked down to an issue within php which the developers aren't fixing. We have implemented a work around which means you shouldn't be seeing this. If you are, please report this in issue 443 .","title":" Why do I get a lot apache or rrdtool zombies in my process list?"},{"location":"Support/FAQ/#why-do-i-see-traffic-spikes-in-my-graphs","text":"This occurs either when a counter resets or the device sends back bogus data making it look like a counter reset. We have enabled support for setting a maximum value for rrd files for ports. Before this all rrd files were set to 100G max values, now you can enable support to limit this to the actual port speed. rrdtool tune will change the max value when the interface speed is detected as being changed (min value will be set for anything 10M or over) or when you run the included script (./scripts/tune_port.php) - see RRDTune doc SNMP ifInOctets and ifOutOctets are counters, which means they start at 0 (at device boot) and count up from there. LibreNMS records the value every 5 minutes and uses the difference between the previous value and the current value to calculate rate. (Also, this value resets to 0 when it hits the max value) Now, when the value is not recorded for awhile RRD (our time series storage) does not record a 0, it records the last value, otherwise, there would be even worse problems. Then finally we get the current ifIn/OutOctets value and record that. Now, it appears as though all of the traffic since it stopped getting values have occurred in the last 5 minute interval. So whenever you see spikes like this, it means we have not received data from the device for several polling intervals. The cause can vary quite a bit: bad snmp implementations, intermittant network connectivity, broken poller, and more.","title":" Why do I see traffic spikes in my graphs?"},{"location":"Support/FAQ/#why-do-i-see-gaps-in-my-graphs","text":"This is most commonly due to the poller not being able to complete it's run within 300 seconds. Check which devices are causing this by going to /poll-log/ within the Web interface. When you find the device(s) which are taking the longest you can then look at the Polling module graph under Graphs -> Poller -> Poller Modules Performance. Take a look at what modules are taking the longest and disabled un used modules. If you poll a large number of devices / ports then it's recommended to run a local recurisve dns server such as pdns-recursor. Running RRDCached is also highly advised in larger installs but has benefits no matter the size.","title":" Why do I see gaps in my graphs?"},{"location":"Support/FAQ/#how-do-i-change-the-ip-hostname-of-a-device","text":"There is a host rename tool called renamehost.php in your librenms root directory. When renaming you are also changing the device's IP / hostname address for monitoring. Usage: ./renamehost.php <old hostname> <new hostname> You can also rename a device in the Web UI by going to the device, then clicking settings Icon -> Edit.","title":" How do I change the IP / hostname of a device?"},{"location":"Support/FAQ/#my-device-doesnt-finish-polling-within-300-seconds","text":"We have a few things you can try: Disable unnecessary polling modules under edit device. Set a max repeater value within the snmp settings for a device. What to set this to is tricky, you really should run an snmpbulkwalk with -Cr10 through -Cr50 to see what works best. 50 is usually a good choice if the device can cope.","title":" My device doesn't finish polling within 300 seconds"},{"location":"Support/FAQ/#things-arent-working-correctly","text":"Run ./validate.php as root from within your install. Re-run ./validate.php once you've resolved any issues raised. You have an odd issue - we'd suggest you join our discord server to discuss.","title":" Things aren't working correctly?"},{"location":"Support/FAQ/#what-do-the-values-mean-in-my-graphs","text":"The values you see are reported as metric values. Thanks to a post on Reddit here are those values: 10^-18 a - atto 10^-15 f - femto 10^-12 p - pico 10^-9 n - nano 10^-6 u - micro 10^-3 m - milli 0 (no unit) 10^3 k - kilo 10^6 M - mega 10^9 G - giga 10^12 T - tera 10^15 P - peta","title":" What do the values mean in my graphs?"},{"location":"Support/FAQ/#why-does-a-device-show-as-a-warning","text":"This is indicating that the device has rebooted within the last 24 hours (by default). If you want to adjust this threshold then you can do so by setting $config['uptime_warning'] = '84600'; in config.php . The value must be in seconds.","title":" Why does a device show as a warning?"},{"location":"Support/FAQ/#why-do-i-not-see-all-interfaces-in-the-overall-traffic-graph-for-a-device","text":"By default numerous interface types and interface descriptions are excluded from this graph. The excluded defailts are: $config [ 'device_traffic_iftype' ][] = '/loopback/' ; $config [ 'device_traffic_iftype' ][] = '/tunnel/' ; $config [ 'device_traffic_iftype' ][] = '/virtual/' ; $config [ 'device_traffic_iftype' ][] = '/mpls/' ; $config [ 'device_traffic_iftype' ][] = '/ieee8023adLag/' ; $config [ 'device_traffic_iftype' ][] = '/l2vlan/' ; $config [ 'device_traffic_iftype' ][] = '/ppp/' ; $config [ 'device_traffic_descr' ][] = '/loopback/' ; $config [ 'device_traffic_descr' ][] = '/vlan/' ; $config [ 'device_traffic_descr' ][] = '/tunnel/' ; $config [ 'device_traffic_descr' ][] = '/bond/' ; $config [ 'device_traffic_descr' ][] = '/null/' ; $config [ 'device_traffic_descr' ][] = '/dummy/' ; If you would like to re-include l2vlan interfaces for instance, you first need to unset the config array and set your options: unset ( $config [ 'device_traffic_iftype' ]); $config [ 'device_traffic_iftype' ][] = '/loopback/' ; $config [ 'device_traffic_iftype' ][] = '/tunnel/' ; $config [ 'device_traffic_iftype' ][] = '/virtual/' ; $config [ 'device_traffic_iftype' ][] = '/mpls/' ; $config [ 'device_traffic_iftype' ][] = '/ieee8023adLag/' ; $config [ 'device_traffic_iftype' ][] = '/ppp/' ;","title":" Why do I not see all interfaces in the Overall traffic graph for a device?"},{"location":"Support/FAQ/#how-do-i-move-my-librenms-install-to-another-server","text":"If you are moving from one CPU architecture to another then you will need to dump the rrd files and re-create them. If you are in this scenario then you can use Dan Brown's migration scripts . If you are just moving to another server with the same CPU architecture then the following steps should be all that's needed: Install LibreNMS as per our normal documentation; you don't need to run through the web installer or building the sql schema. Stop cron by commenting out all lines in /etc/cron.d/librenms Dump the MySQL database librenms from your old server ( mysqldump librenms -u root -p > librenms.sql )... and import it into your new server ( mysql -u root -p librenms < librenms.sql ). Copy the rrd/ folder to the new server. Copy the .env and config.php files to the new server. Check for modified files (eg specific os, ...) with git status and migrate them. Ensure ownership of the copied files and folders (substitute your user if necessary) - chown -R librenms:librenms /opt/librenms Delete old pollers on the GUI (gear icon --> Pollers --> Pollers) Validate your installation (/opt/librenms/validate.php) Re-enable cron by uncommenting all lines in /etc/cron.d/librenms","title":" How do I move my LibreNMS install to another server?"},{"location":"Support/FAQ/#why-is-my-edgerouter-device-not-detected","text":"If you have service snmp description set in your config then this will be why, please remove this. For some reason Ubnt have decided setting this value should override the sysDescr value returned which breaks our detection. If you don't have that set then this may be then due to an update of EdgeOS or a new device type, please create an issue .","title":" Why is my EdgeRouter device not detected?"},{"location":"Support/FAQ/#why-are-some-of-my-disks-not-showing","text":"If you are monitoring a linux server then net-snmp doesn't always expose all disks via hrStorage (HOST-RESOURCES-MIB). We have additional support which will retrieve disks via dskTable (UCD-SNMP-MIB). To expose these disks you need to add additional config to your snmpd.conf file. For example, to expose /dev/sda1 which may be mounted as /storage you can specify: disk /dev/sda1 Or disk /storage Restart snmpd and LibreNMS should populate the additional disk after a fresh discovery.","title":" Why are some of my disks not showing?"},{"location":"Support/FAQ/#why-are-my-disks-reporting-an-incorrect-size","text":"There is a known issue for net-snmp, which causes it to report incorrect disk size and disk usage when the size of the disk (or raid) are larger then 16TB, a workaround has been implemented but is not active on Centos 6.8 by default due to the fact that this workaround breaks official SNMP specs, and as such could cause unexpected behaviour in other SNMP tools. You can activate the workaround by adding to /etc/snmp/snmpd.conf : realStorageUnits 0","title":" Why are my disks reporting an incorrect size?"},{"location":"Support/FAQ/#what-does-mean-ignore-alert-tag-on-device-component-service-and-port","text":"Tag device, component, service and port to ignore alerts. Alert checks will still run. However, ignore tag can be read in alert rules. For example on device, if devices.ignore = 0 or macros.device = 1 condition is is set and ignore alert tag is on, the alert rule won't match. The alert rule is ignored.","title":" What does mean \\\"ignore alert tag\\\" on device, component, service and port?"},{"location":"Support/FAQ/#how-do-i-add-support-for-a-new-os","text":"Please see Supporting a new OS if you are adding all the support yourself, i.e. writing all of the supporting code. If you are only able to supply supporting info, and would like the help of others to write up the code, please follow the below steps.","title":" How do I add support for a new OS?"},{"location":"Support/FAQ/#what-information-do-you-need-to-add-a-new-os","text":"Please open a feature request in the community forum and provide the output of Discovery, Poller, and Snmpwalk as separate non-expiring https://p.libren.ms/ links : Please use preferably the command line to obtain the information. Especially, if snmpwalk results in a large amount of data. Replace the relevant information in these commands such as HOSTNAME and COMMUNITY. Use snmpwalk instead of snmpbulkwalk for v1 devices. These commands will automatically upload the data to LibreNMS servers. ./discovery.php -h HOSTNAME -d | ./pbin.sh ./poller.php -h HOSTNAME -r -f -d | ./pbin.sh snmpbulkwalk -OUneb -v2c -c COMMUNITY HOSTNAME . | ./pbin.sh You can use the links provided by these commands within the community post. If possible please also provide what the OS name should be if it doesn't exist already, as well as any useful link (MIBs from vendor, logo, etc etc)","title":" What information do you need to add a new OS?"},{"location":"Support/FAQ/#what-can-i-do-to-help","text":"Thanks for asking, sometimes it's not quite so obvious and everyone can contribute something different. So here are some ways you can help LibreNMS improve. Code. This is a big thing. We want this community to grow by the software developing and evolving to cater for users needs. The biggest area that people can help make this happen is by providing code support. This doesn't necessarily mean contributing code for discovering a new device: Web UI, a new look and feel has been adopted but we are not finished by any stretch of the imagination. Make suggestions, find and fix bugs, update the design / layout. Poller / Discovery code. Improving it (we think a lot can be done to speed things up), adding new device support and updating old ones. The LibreNMS main website, this is hosted on GitHub like the main repo and we accept use contributions here as well :) Hardware. We don't physically need it but if we are to add device support, it's made a whole lot easier with access to the kit via SNMP. If you've got MIBs, they are handy as well :) If you know the vendor and can get permission to use logos that's also great. Bugs. Found one? We want to know about it. Most bugs are fixed after being spotted and reported by someone, I'd love to say we are amazing developers and will fix all bugs before you spot them but that's just not true. Feature requests. Can't code / won't code. No worries, chuck a feature request into our community forum with enough detail and someone will take a look. A lot of the time this might be what interests someone, they need the same feature or they just have time. Please be patient, everyone who contributes does so in their own time. Documentation. Documentation can always be improved and every little bit helps. Not all features are currently documented or documented well, there's speeling mistakes etc. It's very easy to submit updates through the GitHub website , no git experience needed. Be nice, this is the foundation of this project. We expect everyone to be nice. People will fall out, people will disagree but please do it so in a respectable way. Ask questions. Sometimes just by asking questions you prompt deeper conversations that can lead us to somewhere amazing so please never be afraid to ask a question.","title":" What can I do to help?"},{"location":"Support/FAQ/#how-can-i-test-another-users-branch","text":"LibreNMS can and is developed by anyone, this means someone may be working on a new feature or support for a device that you want. It can be helpful for others to test these new features, using Git, this is made easy. cd /opt/librenms Firstly ensure that your current branch is in good state: git status If you see nothing to commit, working directory clean then let's go for it :) Let's say that you want to test a users (f0o) new development branch (issue-1337) then you can do the following: git remote add f0o https://github.com/f0o/librenms.git git remote update f0o git checkout issue-1337 Once you are done testing, you can easily switch back to the master branch: git checkout master If you want to pull any new updates provided by f0o's branch then whilst you are still in it, do the following: git pull f0o issue-1337","title":" How can I test another users branch?"},{"location":"Support/FAQ/#why-cant-normal-and-global-view-users-see-oxidized","text":"Configs can often contain sensitive data. Because of that only global admins can see configs.","title":" Why can't Normal and Global View users see Oxidized?"},{"location":"Support/FAQ/#what-is-the-demo-user-for","text":"Demo users allow full access except adding/editing users and deleting devices and can't change passwords.","title":" What is the Demo User for?"},{"location":"Support/FAQ/#why-does-modifying-default-alert-template-fail","text":"This template's entry could be missing in the database. Please run this from the LibreNMS directory: php artisan db:seed --class = DefaultAlertTemplateSeeder","title":" Why does modifying 'Default Alert Template' fail?"},{"location":"Support/FAQ/#why-would-alert-un-mute-itself","text":"If alert un-mutes itself then it most likely means that the alert cleared and is then triggered again. Please review eventlog as it will tell you in there.","title":" Why would alert un-mute itself?"},{"location":"Support/FAQ/#how-do-i-change-the-device-type","text":"You can change the Device Type by going to the device you would like to change, then click on the Gear Icon -> Edit. If you would like to define custom types, we suggest using Device Groups . They will be listed in the menu similarly to device types.","title":" How do I change the Device Type?"},{"location":"Support/FAQ/#where-do-i-update-my-database-credentials","text":"If you've changed your database credentials then you will need to update LibreNMS with those new details. Please edit .env .env : DB_HOST= DB_DATABASE= DB_USERNAME= DB_PASSWORD= DB_PORT=","title":"Where do I update my database credentials?"},{"location":"Support/FAQ/#my-reverse-proxy-is-not-working","text":"Make sure your proxy is passing the proper variables. At a minimum: X-Forwarded-For and X-Forwarded-Proto (X-Forwarded-Port if needed) You also need to Set the proxy or proxies as trusted If you are using a subdirectory on the reverse proxy and not on the actual web server, you may need to set APP_URL and $config['base_url'] .","title":"My reverse proxy is not working"},{"location":"Support/FAQ/#my-alerts-arent-being-delivered-on-time","text":"If you're running MySQL/MariaDB on a separate machine or container make sure the timezone is set properly on both the LibreNMS and MySQL/MariaDB instance. Alerts will be delivered according to MySQL/MariaDB's time, so a mismatch between the two can cause alerts to be delivered late if LibreNMS is on a timezone later than MySQL/MariaDB.","title":"My alerts aren't being delivered on time"},{"location":"Support/FAQ/#my-alert-templates-stopped-working","text":"You should probably have a look in the documentation concerning the new template syntax: https://docs.librenms.org/Alerting/Templates/ . Since version 1.42, syntax changed, and you basically need to convert your templates to this new syntax (including the titles).","title":"My alert templates stopped working"},{"location":"Support/FAQ/#how-do-i-use-trend-prediction-in-graphs","text":"As of Ver. 1.55 a new feature has been added where you can view a simple linear prediction in port graphs. It doesn't work on non-port graphs or consolidated graphs at the time this FAQ entry was written. To view a prediction: Click on any port graph of any network device Select a From date to your liking (not earlier than the device was actually added to LNMS), and then select a future date in the To field. Click update You should now see a linear prediction line on the graph.","title":"How do I use trend prediction in graphs"},{"location":"Support/FAQ/#how-do-i-move-only-the-db-to-another-server","text":"There is already a reference how to move your whole LNMS installation to another server. But the following steps will help you to split up an \"All-in-one\" installation to one LibreNMS installation with a seperate database install. *Note: This section assumes you have a MySQL/MariaDB instance Stop the apache and mysql service in you LibreNMS installation. Edit out all the cron entries in /etc/cron.d/librenms . Dump your librenms database on your current install by issuing mysqldump librenms -u root -p > librenms.sql . Stop and disable the MySQL server on your current install. On your new server make sure you create a new database with the standard install command, no need to add a user for localhost though. Copy this over to your new database server and import it with mysql -u root -p librenms < librenms.sql . Enter to mysql and add permissions with the following two commands: GRANT ALL PRIVILEGES ON librenms.* TO 'librenms'@'IP_OF_YOUR_LNMS_SERVER' IDENTIFIED BY 'PASSWORD' WITH GRANT OPTION; GRANT ALL PRIVILEGES ON librenms.* TO 'librenms'@'FQDN_OF_YOUR_LNMS_SERVER' IDENTIFIED BY 'PASSWORD' WITH GRANT OPTION; FLUSH PRIVILEGES; exit; Enable and restart MySQL server. Edit your config.php file to point the install to the new database server location. Very important : On your LibreNMS server, inside your install directory is a .env file, in it you need to edit the DBHOST paramater to point to your new server location. After all this is done, enable all the cron entries again and start apache.","title":"How do I move only the DB to another server?"},{"location":"Support/FAQ/#what-are-the-optional-requirements-message-when-i-add-snmpv3-devices","text":"When you add a device via the WebUI you may see a little message stating \"Optional requirements are not met so some options are disabled\". Do not panic. This simply means your system does not contain openssl >= 1.1 and net-snmp >= 5.8 , which are the minimum specifications needed to be able to use AES-192,AES-256 as crypto algorithms and SHA-224|256|384|512 as auth algorithms.","title":"What are the \"optional requirements message\" when I add SNMPv3 devices?"},{"location":"Support/Features/","text":"Features Here's a brief list of supported features, some might be missing. If you think something is missing, feel free to ask us. Auto discovery Alerting Multiple environnement sensors support Multiple protocols data collection (STP, OSPF, BGP etc) VLAN, ARP and FDB table collection Customizable Dashboards Device Backup integration (Oxidized, RANCID) Distributed Polling Multiple Authentication Methods (MySQL, LDAP, Active Directory, HTTP) NetFlow, sFlow, IPFIX (NfSen) Service monitoring (Nagios Plugins) Syslog (Integrated, Graylog) Traffic Billing (Quota, 95th Percentile) Two Factor Authentication API Auto Updating Vendors Here's a brief list of supported vendors, some might be missing. If you are unsure of whether your device is supported or not, feel free to ask us. 3Com ADTRAN Acceidan Aerohive AKCP Alcatel-Lucent Allied Telesis APC Apple Areca Arista Aruba Audiocodes Avaya Avocent AVTECH Axis Barracuda BCM963 BDCom Bintec Bluecat BNT Brocade Brother Buffalo Calix Cambium Canon Canopy Check Point Cisco Cisco Small Business Citrix Cometsystem Comware D-Link Datacom Deliberant Dell Delta Power Solutions DEVELOP DKT Comega Eaton EDS EMC Engenius Enterasys Epson Extreme Networks F5 Fastback Networks Fiberstore FiberHome Force10 Fortinet FreeBSD Gamatronic Hikvision HP Huawei HW group IBM Infoblox iPoMan ITWatchDogs Juniper Konica Minolta Kyocera Lantronix Lenovo Lexmark Liebert LigoWave Linux Maipu Mellanox Meraki MGE Microsemi Mikrotik MRVLD Multimatic NetApp NetBSD NETGEAR NetMan Netonix Netopia NetVision NetWare Nokia NRG OKI OpenBSD Oracle PacketShaper Palo Alto Networks Papouch PBN Perle Powercode Powerwalker Prestige Proxim Proxmox Quanta Radlan Raritan Redback Ricoh Riverbed Ruckus SAF Tehnika Samsung Siklu Sentry3 Solaris SonicWALL SpeedTouch Supermicro Symbol Telco Systems TPLink Tranzeo Tripp Lite Ubiquiti Viprinet VMware VRP Vyatta VyOS Watchguard WebPower Windows Xerox Xirrus ZTE ZyXEL","title":"Features"},{"location":"Support/Features/#features","text":"Here's a brief list of supported features, some might be missing. If you think something is missing, feel free to ask us. Auto discovery Alerting Multiple environnement sensors support Multiple protocols data collection (STP, OSPF, BGP etc) VLAN, ARP and FDB table collection Customizable Dashboards Device Backup integration (Oxidized, RANCID) Distributed Polling Multiple Authentication Methods (MySQL, LDAP, Active Directory, HTTP) NetFlow, sFlow, IPFIX (NfSen) Service monitoring (Nagios Plugins) Syslog (Integrated, Graylog) Traffic Billing (Quota, 95th Percentile) Two Factor Authentication API Auto Updating","title":"Features"},{"location":"Support/Features/#vendors","text":"Here's a brief list of supported vendors, some might be missing. If you are unsure of whether your device is supported or not, feel free to ask us. 3Com ADTRAN Acceidan Aerohive AKCP Alcatel-Lucent Allied Telesis APC Apple Areca Arista Aruba Audiocodes Avaya Avocent AVTECH Axis Barracuda BCM963 BDCom Bintec Bluecat BNT Brocade Brother Buffalo Calix Cambium Canon Canopy Check Point Cisco Cisco Small Business Citrix Cometsystem Comware D-Link Datacom Deliberant Dell Delta Power Solutions DEVELOP DKT Comega Eaton EDS EMC Engenius Enterasys Epson Extreme Networks F5 Fastback Networks Fiberstore FiberHome Force10 Fortinet FreeBSD Gamatronic Hikvision HP Huawei HW group IBM Infoblox iPoMan ITWatchDogs Juniper Konica Minolta Kyocera Lantronix Lenovo Lexmark Liebert LigoWave Linux Maipu Mellanox Meraki MGE Microsemi Mikrotik MRVLD Multimatic NetApp NetBSD NETGEAR NetMan Netonix Netopia NetVision NetWare Nokia NRG OKI OpenBSD Oracle PacketShaper Palo Alto Networks Papouch PBN Perle Powercode Powerwalker Prestige Proxim Proxmox Quanta Radlan Raritan Redback Ricoh Riverbed Ruckus SAF Tehnika Samsung Siklu Sentry3 Solaris SonicWALL SpeedTouch Supermicro Symbol Telco Systems TPLink Tranzeo Tripp Lite Ubiquiti Viprinet VMware VRP Vyatta VyOS Watchguard WebPower Windows Xerox Xirrus ZTE ZyXEL","title":"Vendors"},{"location":"Support/Install%20Validation/","text":"Install validation With a lot of configuration possibilities, manually editing config.php means it's not uncommon that mistakes get made. It's also impossible to validate user input in config.php when you're just using a text editor :) So, to try and help with some of the general issues people come across we've put together a simple validation tool which at present will: Validate config.php from a php perspective including whitespace where it shouldn't be. Connection to your MySQL server to verify credentials. Checks if you are running the older alerting system. Checks your rrd directory setup if not running rrdcached. Checks disk space for where /opt/librenms is installed. Checks location to fping Tests MySQL strict mode being enabled Tests for files not owned by librenms user (if configured) Optionally you can also pass -m and a module name for that to be tested. Current modules are: mail - This will validate your mail transport configuration. dist-poller - This will test your distributed poller configuration. rrdcheck - This will test your rrd files to see if they are unreadable or corrupted (source of broken graphs). You can run validate.php as root by executing ./validate.php within your install directory. The output will provide you either a clean bill of health or a list of things you need to fix: OK - This is a good thing, you can skip over these :) WARN - You probably want to check this out. FAIL - This is going to need your attention! Validate from the WebUI You can validate your LibreNMS install from the WebUI, using the nav bar and clicking on the little Gear Icon -> Validate Config. Then You should see the results of validate. Below is just example of the results.","title":"Install Validation"},{"location":"Support/Install%20Validation/#install-validation","text":"With a lot of configuration possibilities, manually editing config.php means it's not uncommon that mistakes get made. It's also impossible to validate user input in config.php when you're just using a text editor :) So, to try and help with some of the general issues people come across we've put together a simple validation tool which at present will: Validate config.php from a php perspective including whitespace where it shouldn't be. Connection to your MySQL server to verify credentials. Checks if you are running the older alerting system. Checks your rrd directory setup if not running rrdcached. Checks disk space for where /opt/librenms is installed. Checks location to fping Tests MySQL strict mode being enabled Tests for files not owned by librenms user (if configured) Optionally you can also pass -m and a module name for that to be tested. Current modules are: mail - This will validate your mail transport configuration. dist-poller - This will test your distributed poller configuration. rrdcheck - This will test your rrd files to see if they are unreadable or corrupted (source of broken graphs). You can run validate.php as root by executing ./validate.php within your install directory. The output will provide you either a clean bill of health or a list of things you need to fix: OK - This is a good thing, you can skip over these :) WARN - You probably want to check this out. FAIL - This is going to need your attention!","title":"Install validation"},{"location":"Support/Install%20Validation/#validate-from-the-webui","text":"You can validate your LibreNMS install from the WebUI, using the nav bar and clicking on the little Gear Icon -> Validate Config. Then You should see the results of validate. Below is just example of the results.","title":"Validate from the WebUI"},{"location":"Support/Performance/","text":"Performance optimisations This document will give you some guidance on optimising your setup. The suggestions are in a rough order of how much impact they will have. RRDCached We absolutely recommend running this, it will save on IO load . RRDCached MySQL Optimisation It's advisable after 24 hours of running MySQL that you run MySQL Tuner which will make suggestions on things you can change specific to your setup. One recommendation we can make is that you set the following in my.cnf under a [mysqld] group: innodb_flush_log_at_trx_commit = 0 You can also set this to 2. This will have the possibility that you could lose up to 1 second on mysql data in the event MySQL crashes or your server does but it provides an amazing difference in IO use. Polling modules Review the graph of poller module time take under gear > pollers > performance to see what modules are consuming poller time. This data is shown per device under device > graphs > poller. Disable polling (and discovery) modules that you do not need. You can do this globally in config.php like: Disable OSPF polling $config [ 'poller_modules' ][ 'ospf' ] = false ; You can disable modules globally then re-enable the module per device or the opposite way. For a list of modules please see Poller modules SNMP Max Repeaters We have support for SNMP Max repeaters which can be handy on devices where we poll a lot of ports or bgp sessions for instance and where snmpwalk or snmpbulkwalk is used. This needs to be enabled on a per device basis under edit device -> snmp -> Max repeaters. You can also set this globally with the config option $config['snmp']['max_repeaters'] = X; . It's advisable to test the time taken to snmpwalk IF-MIB or something similar to work out what the best value is. To do this run the following but replace -REPEATERS- with varying numbers from 10 upto around 50. You will also need to set the correct snmp version, hostname and community string: time snmpbulkwalk -v2c -cpublic HOSTNAME -Cr-REPEATERS- -M /opt/librenms/mibs -m IF-MIB IfEntry NOTE: Do not go blindly setting this value as you can impact polling negatively. SNMP Max OIDs For sensors polling we now do bulk snmp gets to speed things up. By default this is ten but you can overwrite this per device under edit device -> snmp -> Max OIDs. You can also set this globally with the config option $config['snmp']['max_oid'] = X; . NOTE: It is advisable to monitor sensor polling when you change this to ensure you don't set the value too high. fping tuning You can change some of the default fping options used globally or per device. The defaults are: $config [ 'fping_options' ][ 'timeout' ] = 500 ; $config [ 'fping_options' ][ 'count' ] = 3 ; $config [ 'fping_options' ][ 'interval' ] = 500 ; If your devices are slow to respond then you will need to increase the timeout value and potentially the interval value. However if your network is stable, you can increase poller performance by dropping the count value to 1 and/or the timeout+millsec value to 200 or 300: $config [ 'fping_options' ][ 'timeout' ] = 300 ; $config [ 'fping_options' ][ 'count' ] = 1 ; $config [ 'fping_options' ][ 'interval' ] = 300 ; This will mean that we no longer delay each icmp packet sent (we send 3 in total by default) by 0.5 seconds. With only 1 icmp packet being sent then we will receive a response quicker. The defaults mean it will take at least 1 second for a response no matter how quick the icmp packet is returned. Optimise poller-wrapper The default 16 threads that poller-wrapper.py runs as isn't necessarily the optimal number. A general rule of thumb is 2 threads per core but we suggest that you play around with lowering / increasing the number until you get the optimal value. Note KEEP in MIND that this doesn't always help, it depends on your system and CPU. So be careful. This can be changed by going to the cron job for librenms. Usually in /etc/cron.d/librenms and changing the \"16\" */5 * * * * librenms /opt/librenms/cronic /opt/librenms/poller-wrapper.py 16 Please also see Dispatcher Service Recursive DNS If your install uses hostnames for devices and you have quite a lot then it's advisable to setup a local recursive dns instance on the LibreNMS server. Something like pdns-recursor can be used and then configure /etc/resolv.conf to use 127.0.0.1 for queries. Per port polling - experimental By default the polling ports module will walk ifXEntry + some items from ifEntry regardless of the port. So if a port is marked as deleted because you don't want to see them or it's disabled then we still collect data. For the most part this is fine as the walks are quite quick. However for devices with a lot of ports and good % of those are either deleted or disabled then this approach isn't optimal. So to counter this you can enable 'selected port polling' per device within the edit device -> misc section or by globally enabling it ( not recommended ): $config['polling']['selected_ports'] = true; . This is truly not recommended, as it has been proven to affect cpu usage of your poller negatively. You can also set it for a specific OS: $config['os']['ios']['polling']['selected_ports'] = true; . Running ./scripts/collect-port-polling.php will poll your devices with both full and selective polling, display a table with the difference and optionally enable or disable selected ports polling for devices which would benefit from a change. Note that it doesn't continously re-evaluate this, it will only be updated when the script is run. There are a number of options: -h <device id> | <device hostname wildcard> Poll single device or wildcard hostname -e <percentage> Enable/disable selected ports polling for devices which would benefit <percentage> from a change If you want to run this script to have it set selected port polling on devices where a change of 10% or more is evaluated , run it with ./scripts/collect-port-polling.php -e 10 . But note: it will not blindly use only the 10%. There is a second condition that the change has to be more than one second in polling time. Web interface HTTP/2 If you are running https then you should enable http/2 support in whatever web server you use: For Nginx (1.9.5 and above) change listen 443 ssl; to listen 443 ssl http2; in the Virtualhost config. For Apache (2.4.17 an above) set Protocols h2 http/1.1 in the Virtualhost config. PHP-opcache A lot of performance can be gained from setting up php-opcache correctly. Note: Memory based caching with PHP cli will increase memory usage and slow things down. File based caching is not as fast as memory based and is more likely to have stale cache issues. Some distributions allow seperate cli, mod_php and php-fpm configurations, we can use this to set the optimal config. For web servers using mod_php and php-fpm Update your web PHP opcache.ini. Possible locations: /etc/php/7.2/fpm/conf.d/opcache.ini , /etc/php.d/opcache.ini , or /etc/php/conf.d/opcache.ini zend_extension=opcache opcache.enable=1 opcache.memory_consumption=256 If you are having caching issues, you can clear the opcache by simply restarting httpd or php-fpm. For pollers Create a cache directory that is writable by the librenms user first: sudo mkdir -p /tmp/cache && sudo chmod 775 /tmp/cache && sudo chown -R librenms /tmp/cache Update your PHP opcache.ini. Possible locations: /etc/php/7.2/cli/conf.d/opcache.ini , /etc/php.d/opcache.ini , or /etc/php/conf.d/opcache.ini zend_extension=opcache.so opcache.enable=1 opcache.enable_cli=1 opcache.file_cache=\"/tmp/cache/\" opcache.file_cache_only=0 opcache.file_cache_consistency_checks=1 opcache.memory_consumption=256 If you are having caching issues, you can clear the file based opcache with rm -rf /tmp/cache .","title":"Performance"},{"location":"Support/Performance/#performance-optimisations","text":"This document will give you some guidance on optimising your setup. The suggestions are in a rough order of how much impact they will have.","title":"Performance optimisations"},{"location":"Support/Performance/#rrdcached","text":"We absolutely recommend running this, it will save on IO load . RRDCached","title":"RRDCached"},{"location":"Support/Performance/#mysql-optimisation","text":"It's advisable after 24 hours of running MySQL that you run MySQL Tuner which will make suggestions on things you can change specific to your setup. One recommendation we can make is that you set the following in my.cnf under a [mysqld] group: innodb_flush_log_at_trx_commit = 0 You can also set this to 2. This will have the possibility that you could lose up to 1 second on mysql data in the event MySQL crashes or your server does but it provides an amazing difference in IO use.","title":"MySQL Optimisation"},{"location":"Support/Performance/#polling-modules","text":"Review the graph of poller module time take under gear > pollers > performance to see what modules are consuming poller time. This data is shown per device under device > graphs > poller. Disable polling (and discovery) modules that you do not need. You can do this globally in config.php like: Disable OSPF polling $config [ 'poller_modules' ][ 'ospf' ] = false ; You can disable modules globally then re-enable the module per device or the opposite way. For a list of modules please see Poller modules","title":"Polling modules"},{"location":"Support/Performance/#snmp-max-repeaters","text":"We have support for SNMP Max repeaters which can be handy on devices where we poll a lot of ports or bgp sessions for instance and where snmpwalk or snmpbulkwalk is used. This needs to be enabled on a per device basis under edit device -> snmp -> Max repeaters. You can also set this globally with the config option $config['snmp']['max_repeaters'] = X; . It's advisable to test the time taken to snmpwalk IF-MIB or something similar to work out what the best value is. To do this run the following but replace -REPEATERS- with varying numbers from 10 upto around 50. You will also need to set the correct snmp version, hostname and community string: time snmpbulkwalk -v2c -cpublic HOSTNAME -Cr-REPEATERS- -M /opt/librenms/mibs -m IF-MIB IfEntry NOTE: Do not go blindly setting this value as you can impact polling negatively.","title":"SNMP Max Repeaters"},{"location":"Support/Performance/#snmp-max-oids","text":"For sensors polling we now do bulk snmp gets to speed things up. By default this is ten but you can overwrite this per device under edit device -> snmp -> Max OIDs. You can also set this globally with the config option $config['snmp']['max_oid'] = X; . NOTE: It is advisable to monitor sensor polling when you change this to ensure you don't set the value too high.","title":"SNMP Max OIDs"},{"location":"Support/Performance/#fping-tuning","text":"You can change some of the default fping options used globally or per device. The defaults are: $config [ 'fping_options' ][ 'timeout' ] = 500 ; $config [ 'fping_options' ][ 'count' ] = 3 ; $config [ 'fping_options' ][ 'interval' ] = 500 ; If your devices are slow to respond then you will need to increase the timeout value and potentially the interval value. However if your network is stable, you can increase poller performance by dropping the count value to 1 and/or the timeout+millsec value to 200 or 300: $config [ 'fping_options' ][ 'timeout' ] = 300 ; $config [ 'fping_options' ][ 'count' ] = 1 ; $config [ 'fping_options' ][ 'interval' ] = 300 ; This will mean that we no longer delay each icmp packet sent (we send 3 in total by default) by 0.5 seconds. With only 1 icmp packet being sent then we will receive a response quicker. The defaults mean it will take at least 1 second for a response no matter how quick the icmp packet is returned.","title":"fping tuning"},{"location":"Support/Performance/#optimise-poller-wrapper","text":"The default 16 threads that poller-wrapper.py runs as isn't necessarily the optimal number. A general rule of thumb is 2 threads per core but we suggest that you play around with lowering / increasing the number until you get the optimal value. Note KEEP in MIND that this doesn't always help, it depends on your system and CPU. So be careful. This can be changed by going to the cron job for librenms. Usually in /etc/cron.d/librenms and changing the \"16\" */5 * * * * librenms /opt/librenms/cronic /opt/librenms/poller-wrapper.py 16 Please also see Dispatcher Service","title":"Optimise poller-wrapper"},{"location":"Support/Performance/#recursive-dns","text":"If your install uses hostnames for devices and you have quite a lot then it's advisable to setup a local recursive dns instance on the LibreNMS server. Something like pdns-recursor can be used and then configure /etc/resolv.conf to use 127.0.0.1 for queries.","title":"Recursive DNS"},{"location":"Support/Performance/#per-port-polling-experimental","text":"By default the polling ports module will walk ifXEntry + some items from ifEntry regardless of the port. So if a port is marked as deleted because you don't want to see them or it's disabled then we still collect data. For the most part this is fine as the walks are quite quick. However for devices with a lot of ports and good % of those are either deleted or disabled then this approach isn't optimal. So to counter this you can enable 'selected port polling' per device within the edit device -> misc section or by globally enabling it ( not recommended ): $config['polling']['selected_ports'] = true; . This is truly not recommended, as it has been proven to affect cpu usage of your poller negatively. You can also set it for a specific OS: $config['os']['ios']['polling']['selected_ports'] = true; . Running ./scripts/collect-port-polling.php will poll your devices with both full and selective polling, display a table with the difference and optionally enable or disable selected ports polling for devices which would benefit from a change. Note that it doesn't continously re-evaluate this, it will only be updated when the script is run. There are a number of options: -h <device id> | <device hostname wildcard> Poll single device or wildcard hostname -e <percentage> Enable/disable selected ports polling for devices which would benefit <percentage> from a change If you want to run this script to have it set selected port polling on devices where a change of 10% or more is evaluated , run it with ./scripts/collect-port-polling.php -e 10 . But note: it will not blindly use only the 10%. There is a second condition that the change has to be more than one second in polling time.","title":"Per port polling - experimental"},{"location":"Support/Performance/#web-interface","text":"","title":"Web interface"},{"location":"Support/Performance/#http2","text":"If you are running https then you should enable http/2 support in whatever web server you use: For Nginx (1.9.5 and above) change listen 443 ssl; to listen 443 ssl http2; in the Virtualhost config. For Apache (2.4.17 an above) set Protocols h2 http/1.1 in the Virtualhost config.","title":"HTTP/2"},{"location":"Support/Performance/#php-opcache","text":"A lot of performance can be gained from setting up php-opcache correctly. Note: Memory based caching with PHP cli will increase memory usage and slow things down. File based caching is not as fast as memory based and is more likely to have stale cache issues. Some distributions allow seperate cli, mod_php and php-fpm configurations, we can use this to set the optimal config.","title":"PHP-opcache"},{"location":"Support/Performance/#for-web-servers-using-mod_php-and-php-fpm","text":"Update your web PHP opcache.ini. Possible locations: /etc/php/7.2/fpm/conf.d/opcache.ini , /etc/php.d/opcache.ini , or /etc/php/conf.d/opcache.ini zend_extension=opcache opcache.enable=1 opcache.memory_consumption=256 If you are having caching issues, you can clear the opcache by simply restarting httpd or php-fpm.","title":"For web servers using mod_php and php-fpm"},{"location":"Support/Performance/#for-pollers","text":"Create a cache directory that is writable by the librenms user first: sudo mkdir -p /tmp/cache && sudo chmod 775 /tmp/cache && sudo chown -R librenms /tmp/cache Update your PHP opcache.ini. Possible locations: /etc/php/7.2/cli/conf.d/opcache.ini , /etc/php.d/opcache.ini , or /etc/php/conf.d/opcache.ini zend_extension=opcache.so opcache.enable=1 opcache.enable_cli=1 opcache.file_cache=\"/tmp/cache/\" opcache.file_cache_only=0 opcache.file_cache_consistency_checks=1 opcache.memory_consumption=256 If you are having caching issues, you can clear the file based opcache with rm -rf /tmp/cache .","title":"For pollers"},{"location":"Support/Poller%20Support/","text":"poller.php This document will explain how to use poller.php to debug issues or manually running to process data. Command options LibreNMS 2014 .master Poller -h <device id> | <device hostname wildcard> Poll single device -h odd Poll odd numbered devices ( same as -i 2 -n 0 ) -h even Poll even numbered devices ( same as -i 2 -n 1 ) -h all Poll all devices -i <instances> -n <number> Poll as instance <number> of <instances> Instances start at 0 . 0 -3 for -n 4 Debugging and testing options: -r Do not create or update RRDs -f Do not insert data into InfluxDB -d Enable debugging output -v Enable verbose debugging output -m Specify module ( s ) to be run. Comma separate modules, submodules may be added with / -h Use this to specify a device via either id or hostname (including wildcard using *). You can also specify odd and even. all will run poller against all devices. -i This can be used to stagger the poller process. -r This option will suppress the creation or update of RRD files. -d Enables debugging output (verbose output but with most sensitive data masked) so that you can see what is happening during a poller run. This includes things like rrd updates, SQL queries and response from snmp. -v Enables verbose debugging output with all data in tact. -m This enables you to specify the module you want to run for poller. Poller Wrapper We have a poller-wrapper.py script by Job Snijders . This script is currently the default. If you need to debug the output of poller-wrapper.py then you can add -d to the end of the command - it is NOT recommended to do this in cron. Poller config These are the default poller config items. You can globally disable a module by setting it to 0. If you just want to disable it for one device then you can do this within the WebUI Device -> Edit -> Modules. $config [ 'poller_modules' ][ 'unix-agent' ] = false ; $config [ 'poller_modules' ][ 'os' ] = true ; $config [ 'poller_modules' ][ 'ipmi' ] = true ; $config [ 'poller_modules' ][ 'sensors' ] = true ; $config [ 'poller_modules' ][ 'processors' ] = true ; $config [ 'poller_modules' ][ 'mempools' ] = true ; $config [ 'poller_modules' ][ 'storage' ] = true ; $config [ 'poller_modules' ][ 'netstats' ] = true ; $config [ 'poller_modules' ][ 'hr-mib' ] = true ; $config [ 'poller_modules' ][ 'ucd-mib' ] = true ; $config [ 'poller_modules' ][ 'ipSystemStats' ] = true ; $config [ 'poller_modules' ][ 'ports' ] = true ; $config [ 'poller_modules' ][ 'nac' ] = false ; $config [ 'poller_modules' ][ 'bgp-peers' ] = true ; $config [ 'poller_modules' ][ 'junose-atm-vp' ] = false ; $config [ 'poller_modules' ][ 'toner' ] = false ; $config [ 'poller_modules' ][ 'ucd-diskio' ] = true ; $config [ 'poller_modules' ][ 'wireless' ] = true ; $config [ 'poller_modules' ][ 'ospf' ] = true ; $config [ 'poller_modules' ][ 'cisco-ipsec-flow-monitor' ] = false ; $config [ 'poller_modules' ][ 'cisco-remote-access-monitor' ] = false ; $config [ 'poller_modules' ][ 'cisco-cef' ] = false ; $config [ 'poller_modules' ][ 'cisco-sla' ] = false ; $config [ 'poller_modules' ][ 'cisco-mac-accounting' ] = false ; $config [ 'poller_modules' ][ 'cipsec-tunnels' ] = false ; $config [ 'poller_modules' ][ 'cisco-ace-loadbalancer' ] = false ; $config [ 'poller_modules' ][ 'cisco-ace-serverfarms' ] = false ; $config [ 'poller_modules' ][ 'cisco-asa-firewall' ] = false ; $config [ 'poller_modules' ][ 'cisco-voice' ] = false ; $config [ 'poller_modules' ][ 'cisco-cbqos' ] = false ; $config [ 'poller_modules' ][ 'cisco-otv' ] = false ; $config [ 'poller_modules' ][ 'cisco-vpdn' ] = false ; $config [ 'poller_modules' ][ 'netscaler-vsvr' ] = false ; $config [ 'poller_modules' ][ 'aruba-controller' ] = false ; $config [ 'poller_modules' ][ 'entity-physical' ] = true ; $config [ 'poller_modules' ][ 'entity-state' ] = false ; $config [ 'poller_modules' ][ 'applications' ] = true ; $config [ 'poller_modules' ][ 'availability' ] = true ; $config [ 'poller_modules' ][ 'stp' ] = true ; $config [ 'poller_modules' ][ 'ntp' ] = true ; $config [ 'poller_modules' ][ 'services' ] = true ; $config [ 'poller_modules' ][ 'loadbalancers' ] = false ; $config [ 'poller_modules' ][ 'mef' ] = false ; OS based Poller config You can enable or disable modules for a specific OS by add corresponding line in config.php OS based settings have preference over global. Device based settings have preference over all others Poller performance improvement can be achieved by deactivating all modules that are not supported by specific OS. E.g. to deactivate spanning tree but activate unix-agent module for linux OS $config [ 'os' ][ 'linux' ][ 'poller_modules' ][ 'stp' ] = false ; $config [ 'os' ][ 'linux' ][ 'poller_modules' ][ 'unix-agent' ] = true ; Poller modules unix-agent : Enable the check_mk agent for external support for applications. system : Provides information on some common items like uptime, sysDescr and sysContact. os : Os detection. This module will pick up the OS of the device. ipmi : Enables support for IPMI if login details have been provided for IPMI. sensors : Sensor detection such as Temperature, Humidity, Voltages + More. processors : Processor support for devices. mempools : Memory detection support for devices. storage : Storage detection for hard disks netstats : Statistics for IP, TCP, UDP, ICMP and SNMP. hr-mib : Host resource support. ucd-mib : Support for CPU, Memory and Load. ipSystemStats : IP statistics for device. ports : This module will detect all ports on a device excluding ones configured to be ignored by config options. nac : Network Access Control (NAC) or 802.1X support. bgp-peers : BGP detection and support. junose-atm-vp : Juniper ATM support. toner : Toner levels support. ucd-diskio : Disk I/O support. wifi : WiFi Support for those devices with support. ospf : OSPF Support. cisco-ipsec-flow-monitor : IPSec statistics support. cisco-remote-access-monitor : Cisco remote access support. cisco-cef : CEF detection and support. cisco-sla : SLA detection and support. cisco-mac-accounting : MAC Address account support. cipsec-tunnels : IPSec tunnel support. cisco-ace-loadbalancer : Cisco ACE Support. cisco-ace-serverfarms : Cisco ACE Support. netscaler-vsvr : Netscaler support. aruba-controller : Aruba wireless controller support. entity-physical : Module to pick up the devices hardware support. applications : Device application support. availability : Device Availability Calculation. cisco-asa-firewall : Cisco ASA firewall support. mib : Support for generic MIB parsing. Running Here are some examples of running poller from within your install directory. ./poller.php -h localhost ./poller.php -h localhost -m ports Debugging To provide debugging output you will need to run the poller process with the -d flag. You can do this either against all modules, single or multiple modules: All Modules ./poller.php -h localhost -d Single Module ./poller.php -h localhost -m ports -d Multiple Modules ./poller.php -h localhost -m ports,entity-physical -d Using -d shouldn't output much sensitive information, -v will so it is then advisable to sanitise the output before pasting it somewhere as the debug output will contain snmp details amongst other items including port descriptions. The output will contain: DB Updates RRD Updates SNMP Response","title":"Poller Support"},{"location":"Support/Poller%20Support/#pollerphp","text":"This document will explain how to use poller.php to debug issues or manually running to process data.","title":"poller.php"},{"location":"Support/Poller%20Support/#command-options","text":"LibreNMS 2014 .master Poller -h <device id> | <device hostname wildcard> Poll single device -h odd Poll odd numbered devices ( same as -i 2 -n 0 ) -h even Poll even numbered devices ( same as -i 2 -n 1 ) -h all Poll all devices -i <instances> -n <number> Poll as instance <number> of <instances> Instances start at 0 . 0 -3 for -n 4 Debugging and testing options: -r Do not create or update RRDs -f Do not insert data into InfluxDB -d Enable debugging output -v Enable verbose debugging output -m Specify module ( s ) to be run. Comma separate modules, submodules may be added with / -h Use this to specify a device via either id or hostname (including wildcard using *). You can also specify odd and even. all will run poller against all devices. -i This can be used to stagger the poller process. -r This option will suppress the creation or update of RRD files. -d Enables debugging output (verbose output but with most sensitive data masked) so that you can see what is happening during a poller run. This includes things like rrd updates, SQL queries and response from snmp. -v Enables verbose debugging output with all data in tact. -m This enables you to specify the module you want to run for poller.","title":"Command options"},{"location":"Support/Poller%20Support/#poller-wrapper","text":"We have a poller-wrapper.py script by Job Snijders . This script is currently the default. If you need to debug the output of poller-wrapper.py then you can add -d to the end of the command - it is NOT recommended to do this in cron.","title":"Poller Wrapper"},{"location":"Support/Poller%20Support/#poller-config","text":"These are the default poller config items. You can globally disable a module by setting it to 0. If you just want to disable it for one device then you can do this within the WebUI Device -> Edit -> Modules. $config [ 'poller_modules' ][ 'unix-agent' ] = false ; $config [ 'poller_modules' ][ 'os' ] = true ; $config [ 'poller_modules' ][ 'ipmi' ] = true ; $config [ 'poller_modules' ][ 'sensors' ] = true ; $config [ 'poller_modules' ][ 'processors' ] = true ; $config [ 'poller_modules' ][ 'mempools' ] = true ; $config [ 'poller_modules' ][ 'storage' ] = true ; $config [ 'poller_modules' ][ 'netstats' ] = true ; $config [ 'poller_modules' ][ 'hr-mib' ] = true ; $config [ 'poller_modules' ][ 'ucd-mib' ] = true ; $config [ 'poller_modules' ][ 'ipSystemStats' ] = true ; $config [ 'poller_modules' ][ 'ports' ] = true ; $config [ 'poller_modules' ][ 'nac' ] = false ; $config [ 'poller_modules' ][ 'bgp-peers' ] = true ; $config [ 'poller_modules' ][ 'junose-atm-vp' ] = false ; $config [ 'poller_modules' ][ 'toner' ] = false ; $config [ 'poller_modules' ][ 'ucd-diskio' ] = true ; $config [ 'poller_modules' ][ 'wireless' ] = true ; $config [ 'poller_modules' ][ 'ospf' ] = true ; $config [ 'poller_modules' ][ 'cisco-ipsec-flow-monitor' ] = false ; $config [ 'poller_modules' ][ 'cisco-remote-access-monitor' ] = false ; $config [ 'poller_modules' ][ 'cisco-cef' ] = false ; $config [ 'poller_modules' ][ 'cisco-sla' ] = false ; $config [ 'poller_modules' ][ 'cisco-mac-accounting' ] = false ; $config [ 'poller_modules' ][ 'cipsec-tunnels' ] = false ; $config [ 'poller_modules' ][ 'cisco-ace-loadbalancer' ] = false ; $config [ 'poller_modules' ][ 'cisco-ace-serverfarms' ] = false ; $config [ 'poller_modules' ][ 'cisco-asa-firewall' ] = false ; $config [ 'poller_modules' ][ 'cisco-voice' ] = false ; $config [ 'poller_modules' ][ 'cisco-cbqos' ] = false ; $config [ 'poller_modules' ][ 'cisco-otv' ] = false ; $config [ 'poller_modules' ][ 'cisco-vpdn' ] = false ; $config [ 'poller_modules' ][ 'netscaler-vsvr' ] = false ; $config [ 'poller_modules' ][ 'aruba-controller' ] = false ; $config [ 'poller_modules' ][ 'entity-physical' ] = true ; $config [ 'poller_modules' ][ 'entity-state' ] = false ; $config [ 'poller_modules' ][ 'applications' ] = true ; $config [ 'poller_modules' ][ 'availability' ] = true ; $config [ 'poller_modules' ][ 'stp' ] = true ; $config [ 'poller_modules' ][ 'ntp' ] = true ; $config [ 'poller_modules' ][ 'services' ] = true ; $config [ 'poller_modules' ][ 'loadbalancers' ] = false ; $config [ 'poller_modules' ][ 'mef' ] = false ;","title":"Poller config"},{"location":"Support/Poller%20Support/#os-based-poller-config","text":"You can enable or disable modules for a specific OS by add corresponding line in config.php OS based settings have preference over global. Device based settings have preference over all others Poller performance improvement can be achieved by deactivating all modules that are not supported by specific OS. E.g. to deactivate spanning tree but activate unix-agent module for linux OS $config [ 'os' ][ 'linux' ][ 'poller_modules' ][ 'stp' ] = false ; $config [ 'os' ][ 'linux' ][ 'poller_modules' ][ 'unix-agent' ] = true ;","title":"OS based Poller config"},{"location":"Support/Poller%20Support/#poller-modules","text":"unix-agent : Enable the check_mk agent for external support for applications. system : Provides information on some common items like uptime, sysDescr and sysContact. os : Os detection. This module will pick up the OS of the device. ipmi : Enables support for IPMI if login details have been provided for IPMI. sensors : Sensor detection such as Temperature, Humidity, Voltages + More. processors : Processor support for devices. mempools : Memory detection support for devices. storage : Storage detection for hard disks netstats : Statistics for IP, TCP, UDP, ICMP and SNMP. hr-mib : Host resource support. ucd-mib : Support for CPU, Memory and Load. ipSystemStats : IP statistics for device. ports : This module will detect all ports on a device excluding ones configured to be ignored by config options. nac : Network Access Control (NAC) or 802.1X support. bgp-peers : BGP detection and support. junose-atm-vp : Juniper ATM support. toner : Toner levels support. ucd-diskio : Disk I/O support. wifi : WiFi Support for those devices with support. ospf : OSPF Support. cisco-ipsec-flow-monitor : IPSec statistics support. cisco-remote-access-monitor : Cisco remote access support. cisco-cef : CEF detection and support. cisco-sla : SLA detection and support. cisco-mac-accounting : MAC Address account support. cipsec-tunnels : IPSec tunnel support. cisco-ace-loadbalancer : Cisco ACE Support. cisco-ace-serverfarms : Cisco ACE Support. netscaler-vsvr : Netscaler support. aruba-controller : Aruba wireless controller support. entity-physical : Module to pick up the devices hardware support. applications : Device application support. availability : Device Availability Calculation. cisco-asa-firewall : Cisco ASA firewall support. mib : Support for generic MIB parsing.","title":"Poller modules"},{"location":"Support/Poller%20Support/#running","text":"Here are some examples of running poller from within your install directory. ./poller.php -h localhost ./poller.php -h localhost -m ports","title":"Running"},{"location":"Support/Poller%20Support/#debugging","text":"To provide debugging output you will need to run the poller process with the -d flag. You can do this either against all modules, single or multiple modules: All Modules ./poller.php -h localhost -d Single Module ./poller.php -h localhost -m ports -d Multiple Modules ./poller.php -h localhost -m ports,entity-physical -d Using -d shouldn't output much sensitive information, -v will so it is then advisable to sanitise the output before pasting it somewhere as the debug output will contain snmp details amongst other items including port descriptions. The output will contain: DB Updates RRD Updates SNMP Response","title":"Debugging"},{"location":"Support/Remote-Monitoring-VPN/","text":"Remote monitoring using tinc VPN This article describes how to use tinc to connect several remote sites and their subnets to your central monitoring server. This will let you connect to devices on remote private IP ranges through one gateway on each site, routing them securely back to your LibreNMS installation. Configuring the monitoring server tinc should be available on nearly all Linux distributions via package management. If you are running something different, just take a look at tinc's homepage to find an appropriate version for your operating system: https://www.tinc-vpn.org/download/ I am going to describe the setup for Debian-based systems, but there are virtually no differences for e.g. CentOS or similar. First make sure your firewall accepts connections on port 655 UDP and TCP. Then install tinc via apt-get install tinc . Create the following directory structure to hold all your configuration files: mkdir -p /etc/tinc/myvpn/hosts \"myvpn\" is your VPN network's name and can be chosen freely. Create your main configuration file: vim /etc/tinc/myvpn/tinc.conf Name = monitoring AddressFamily = ipv4 Device = /dev/net/tun Next we need network up- and down scripts to define a few network settings for inside our VPN: vim /etc/tinc/myvpn/tinc-up #!/bin/sh ifconfig $INTERFACE 10 .6.1.1 netmask 255 .255.255.0 ip route add 10 .6.1.1/24 dev $INTERFACE ip route add 10 .0.0.0/22 dev $INTERFACE ip route add 10 .100.0.0/22 dev $INTERFACE ip route add 10 .200.0.0/22 dev $INTERFACE In this example we have 10.6.1.1 as the VPN IP address for the monitoring server on a /24 subnet. $INTERFACE will be automatically substituted with the name of the VPN, \"myvpn\" in this case. Then we have a route for the VPN subnet, so we can reach other sites via their VPN address. The last 3 lines designate the remote subnets. In the example I want to reach devices on three different remote private /22 subnets and be able to monitor devices on them from this server, so I set up routes for each of those remote sites in my tinc-up script. The tinc-down script is relatively simple as it just removes the custom interface, which should get rid of the routes as well: vim /etc/tinc/myvpn/tinc-down #!/bin/sh ifconfig $INTERFACE down Make sure your scripts scan be executed: chmod +x /etc/tinc/myvpn/tinc-* As a last step we need a host configuration file. This should be named the same as the \"Name\" you defined in tinc.conf: vim /etc/tinc/myvpn/hosts/monitoring Subnet = 10 .6.1.1/32 On the monitoring server we will just fill in the subnet and not define its external IP address to make sure it listens on all available external interfaces. It's time to use tinc to create our key-pair: tincd -n myvpn -K Now the file /etc/tinc/myvpn/hosts/monitoring should have an RSA public key appended to it and your private key should reside in /etc/tinc/myvpn/rsa_key.priv . To make sure that the connection will be restored after each reboot, you can add your VPN name to /etc/tinc/nets.boot . Now you can start tinc with tincd -n myvpn and it will listen for your remote sites to connect to it. Remote site configuration Essentially the same steps as for your central monitoring server apply for all remote gateway devices. These can be routers, or just any computer or VM running on the remote subnet, able to reach the internet with the ability to forward IP packets externally. Install tinc Create directory structure: mkdir -p /etc/tinc/myvpn/hosts Create main configuration: vim /etc/tinc/myvpn/tinc.conf Name = remote1 AddressFamily = ipv4 Device = /dev/net/tun ConnectTo = monitoring Create up script: vim /etc/tinc/myvpn/tinc-up #!/bin/sh ifconfig $INTERFACE 10 .6.1.2 netmask 255 .255.255.0 ip route add 10 .6.1.2/32 dev $INTERFACE Create down script: vim /etc/tinc/myvpn/tinc-down #!/bin/sh ifconfig $INTERFACE down Make executable: chmod +x /etc/tinc/myvpn/tinc* Create device configuration: vim /etc/tinc/myvpn/hosts/remote1 Address = 198 .51.100.2 Subnet = 10 .0.0.0/22 This defines the device IP address outside of the VPN and the subnet it will expose. Copy over the monitoring server's host configuration (including the embedded public key) and add it's external IP address: vim /etc/tinc/myvpn/hosts/monitoring Address = 203 .0.113.6 Subnet = 10 .6.1.1/32 -----BEGIN RSA PUBLIC KEY----- VeDyaqhKd4o2Fz... Generate this device's keys: tincd -n myvpn -K Copy over this devices host file including the embedded public key to your monitoring server. Add the name for the VPN to /etc/tinc/nets.boot if you want to autostart the connection upon reboot. Start tinc: tincd -n myvpn These steps can basically be repeated for every remote site just choosing different names and other internal IP addresses. In my case I connected 3 remote sites running behind Ubiquiti EdgeRouters. Since those devices let me install software through Debian's package management it was very easy to set up. Just create the necessary configuration files and network scripts on each device and distribute the host configurations including the public keys to each device that will actively connect back. Now you can add all devices you want to monitor in LibreNMS using their internal IP address on the remote subnets or using some form of name resolution. I opted to declare the most important devices in my /etc/hosts file on the monitoring server. As an added bonus tinc is a mesh VPN, so in theory you could specify several \"ConnectTo\" on each device and they should hold connections even if one network path goes down.","title":"Remote Monitoring VPN"},{"location":"Support/Remote-Monitoring-VPN/#remote-monitoring-using-tinc-vpn","text":"This article describes how to use tinc to connect several remote sites and their subnets to your central monitoring server. This will let you connect to devices on remote private IP ranges through one gateway on each site, routing them securely back to your LibreNMS installation.","title":"Remote monitoring using tinc VPN"},{"location":"Support/Remote-Monitoring-VPN/#configuring-the-monitoring-server","text":"tinc should be available on nearly all Linux distributions via package management. If you are running something different, just take a look at tinc's homepage to find an appropriate version for your operating system: https://www.tinc-vpn.org/download/ I am going to describe the setup for Debian-based systems, but there are virtually no differences for e.g. CentOS or similar. First make sure your firewall accepts connections on port 655 UDP and TCP. Then install tinc via apt-get install tinc . Create the following directory structure to hold all your configuration files: mkdir -p /etc/tinc/myvpn/hosts \"myvpn\" is your VPN network's name and can be chosen freely. Create your main configuration file: vim /etc/tinc/myvpn/tinc.conf Name = monitoring AddressFamily = ipv4 Device = /dev/net/tun Next we need network up- and down scripts to define a few network settings for inside our VPN: vim /etc/tinc/myvpn/tinc-up #!/bin/sh ifconfig $INTERFACE 10 .6.1.1 netmask 255 .255.255.0 ip route add 10 .6.1.1/24 dev $INTERFACE ip route add 10 .0.0.0/22 dev $INTERFACE ip route add 10 .100.0.0/22 dev $INTERFACE ip route add 10 .200.0.0/22 dev $INTERFACE In this example we have 10.6.1.1 as the VPN IP address for the monitoring server on a /24 subnet. $INTERFACE will be automatically substituted with the name of the VPN, \"myvpn\" in this case. Then we have a route for the VPN subnet, so we can reach other sites via their VPN address. The last 3 lines designate the remote subnets. In the example I want to reach devices on three different remote private /22 subnets and be able to monitor devices on them from this server, so I set up routes for each of those remote sites in my tinc-up script. The tinc-down script is relatively simple as it just removes the custom interface, which should get rid of the routes as well: vim /etc/tinc/myvpn/tinc-down #!/bin/sh ifconfig $INTERFACE down Make sure your scripts scan be executed: chmod +x /etc/tinc/myvpn/tinc-* As a last step we need a host configuration file. This should be named the same as the \"Name\" you defined in tinc.conf: vim /etc/tinc/myvpn/hosts/monitoring Subnet = 10 .6.1.1/32 On the monitoring server we will just fill in the subnet and not define its external IP address to make sure it listens on all available external interfaces. It's time to use tinc to create our key-pair: tincd -n myvpn -K Now the file /etc/tinc/myvpn/hosts/monitoring should have an RSA public key appended to it and your private key should reside in /etc/tinc/myvpn/rsa_key.priv . To make sure that the connection will be restored after each reboot, you can add your VPN name to /etc/tinc/nets.boot . Now you can start tinc with tincd -n myvpn and it will listen for your remote sites to connect to it.","title":"Configuring the monitoring server"},{"location":"Support/Remote-Monitoring-VPN/#remote-site-configuration","text":"Essentially the same steps as for your central monitoring server apply for all remote gateway devices. These can be routers, or just any computer or VM running on the remote subnet, able to reach the internet with the ability to forward IP packets externally. Install tinc Create directory structure: mkdir -p /etc/tinc/myvpn/hosts Create main configuration: vim /etc/tinc/myvpn/tinc.conf Name = remote1 AddressFamily = ipv4 Device = /dev/net/tun ConnectTo = monitoring Create up script: vim /etc/tinc/myvpn/tinc-up #!/bin/sh ifconfig $INTERFACE 10 .6.1.2 netmask 255 .255.255.0 ip route add 10 .6.1.2/32 dev $INTERFACE Create down script: vim /etc/tinc/myvpn/tinc-down #!/bin/sh ifconfig $INTERFACE down Make executable: chmod +x /etc/tinc/myvpn/tinc* Create device configuration: vim /etc/tinc/myvpn/hosts/remote1 Address = 198 .51.100.2 Subnet = 10 .0.0.0/22 This defines the device IP address outside of the VPN and the subnet it will expose. Copy over the monitoring server's host configuration (including the embedded public key) and add it's external IP address: vim /etc/tinc/myvpn/hosts/monitoring Address = 203 .0.113.6 Subnet = 10 .6.1.1/32 -----BEGIN RSA PUBLIC KEY----- VeDyaqhKd4o2Fz... Generate this device's keys: tincd -n myvpn -K Copy over this devices host file including the embedded public key to your monitoring server. Add the name for the VPN to /etc/tinc/nets.boot if you want to autostart the connection upon reboot. Start tinc: tincd -n myvpn These steps can basically be repeated for every remote site just choosing different names and other internal IP addresses. In my case I connected 3 remote sites running behind Ubiquiti EdgeRouters. Since those devices let me install software through Debian's package management it was very easy to set up. Just create the necessary configuration files and network scripts on each device and distribute the host configurations including the public keys to each device that will actively connect back. Now you can add all devices you want to monitor in LibreNMS using their internal IP address on the remote subnets or using some form of name resolution. I opted to declare the most important devices in my /etc/hosts file on the monitoring server. As an added bonus tinc is a mesh VPN, so in theory you could specify several \"ConnectTo\" on each device and they should hold connections even if one network path goes down.","title":"Remote site configuration"},{"location":"Support/SNMP-Configuration-Examples/","text":"SNMP configuration examples Table of Content: Devices Cisco Adaptive Security Appliance (ASA) IOS / IOS XE NX-OS Wireless LAN Controller (WLC) HPE 3PAR Inform OS 3.2.x Infoblox NIOS 7.x+ Juniper Junos OS Mikrotik RouterOS 6.x Palo Alto PANOS 6.x/7.x Ubiquiti EdgeOs VMware ESX/ESXi 5.x/6.x VCenter 6.x Operating systems Linux (snmpd v2) Linux (snmpd v3) Windows Server 2008 R2 Windows Server 2012 R2 and 2016 Mac OSX Devices Cisco Adaptive Security Appliance (ASA) ASDM Launch ASDM and connect to your device Go to Configuration > Management Access > SNMP Add your community string Add in the \"SNMP Host Access List\" section your LibreNMS server IP address Click Apply and Save CLI # SNMPv2c snmp-server community <YOUR-COMMUNITY> snmp-server contact <YOUR-CONTACT> snmp-server location <YOUR-LOCATION> snmp-server host <INTERFACE> <LIBRENMS-IP> poll community <YOUR-COMMUNITY> version 2c # SNMPv3 snmp-server group <GROUP-NAME> v3 priv snmp-server user <USER-NAME> <GROUP-NAME> v3 auth sha <AUTH-PASSWORD> priv aes 128 <PRIV-PASSWORD> snmp-server contact <YOUR-CONTACT> snmp-server location <YOUR-LOCATION> snmp-server host <INTERFACE> <LIBRENMS-IP> poll version 3 <USER-NAME> Note: If the device is unable to find the SNMP user, reboot the ASA. Once rebooted, continue the steps as normal. IOS / IOS XE # SNMPv2c snmp-server community <YOUR-COMMUNITY> RO snmp-server contact <YOUR-CONTACT> snmp-server location <YOUR-LOCATION> # SNMPv3 snmp-server group <GROUP-NAME> v3 priv snmp-server user <USER-NAME> <GROUP-NAME> v3 auth sha <AUTH-PASSWORD> priv aes 128 <PRIV-PASSWORD> snmp-server contact <YOUR-CONTACT> snmp-server location <YOUR-LOCATION> # Note: The following is also required if using SNMPv3 and you want to populate the FDB table. snmp-server group <GROUP-NAME> v3 priv context vlan- match prefix Note: If the device is unable to find the SNMP user, reboot the ASA. Once rebooted, continue the steps as normal. NX-OS # SNMPv2c snmp-server community <YOUR-COMMUNITY> RO snmp-server contact <YOUR-CONTACT> snmp-server location <YOUR-LOCATION> # SNMPv3 snmp-server user <USER-NAME> <GROUP-NAME> v3 auth sha <AUTH-PASSWORD> priv aes 128 <PRIV-PASSWORD> snmp-server contact <YOUR-CONTACT> snmp-server location <YOUR-LOCATION> Wireless LAN Controller (WLC) Access the web admin page and log in If you are running version 8.1 and later, on the new dashboard click \"Advanced\" Go to management Tab On SNMP sub-menu, select \"Communities\" Click \"New...\" Add your community name and leave IP addresses empty Click Apply and Save Eaton Network Card-MS Connect to the Web UI of the device Upgrade to the lastest available manufacturer firmware which applies to your hardware revision. Refer to the releasenotes. For devices which can use the Lx releases, do install LD. After rebooting the card (safe for connected load), configure Network, System and Access Control. Save config for each step. Configure SNMP. The device defaults to both SNMP v1 and v3 enabled, with default credentials. Disable what you do not need. SNMP v3 works, but uses MD5/DES. You may have to add another section to your SNMP credentials table in LibreNMS. Save. HPE 3PAR Inform OS 3.2.x Access the CLI Add an SNMP Manager with your LibreNMS IP address: addsnmpmgr <librenms ip> Add your SNMP community: setsnmppw <community> Infoblox NIOS 7.x+ Access the web admin page and log in Go to Grid tab > Grid Manager In the right menu select \"Grid properties\" Select \"SNMP\" menu Click \"Enable SNMPv1/SNMPv2 Queries\" Add your community Click Save & Close Juniper Junos OS for SNMPv1/v2c set snmp description description set snmp location location set snmp contact contact set snmp community YOUR-COMMUNITY authorization read-only for SNMPv3 (authPriv): set snmp v3 usm local-engine user authpriv authentication-sha authentication-password YOUR_AUTH_SECRET set snmp v3 usm local-engine user authpriv privacy-aes128 privacy-password YOUR_PRIV_SECRET set snmp v3 vacm security-to-group security-model usm security-name authpriv group mysnmpv3 set snmp v3 vacm access group mysnmpv3 default-context-prefix security-model any security-level authentication read-view mysnmpv3view set snmp v3 vacm access group mysnmpv3 default-context-prefix security-model any security-level privacy read-view mysnmpv3view set snmp view mysnmpv3view oid iso include Mikrotik RouterOS 6.x CLI SNMP v2 Configuration /snmp community set [ find default=yes ] read-access=no add addresses=<ALLOWED-SRC-IPs/NETMASK> name=<COMMUNITY> /snmp set contact=\"<NAME>\" enabled=yes engine-id=<ENGINE ID> location=\"<LOCALTION>\" Notes: About the snmp community commands: The commands change the default snmp community. It is probably possible to create a new one instead. specify the address and host (not network) netmask of the LibreNMS server. Example: 192.168.8.71/32 trap-version=2 must also be specified if some other trap-version has been set trap-interfaces may also be used to limit the interfaces the router listens on About the snmp command: contact, engine-id and location are optional trap-community is probably required if a new snmp community has been created. CLI SNMP v3 Configuration for authPriv /snmp community add name=\"<COMMUNITY>\" addresses=\"<ALLOWED-SRC-IPs/NETMASK>\" set \"<COMMUNITY>\" authentication-password=\"<AUTH_PASS>\" authentication-protocol=MD5 set \"<COMMUNITY>\" encryption-password=\"<ENCRYP_PASS>\" encryption-protocol=AES set \"<COMMUNITY>\" read-access=yes write-access=no security=private #Disable public SNMP set public read-access=no write-access=no security=private /snmp set contact=\"<NAME>\" enabled=yes engine-id=\"<ENGINE ID>\" location=\"<LOCALTION>\" Notes: Use password with length of min 8 chars Notes for both SNMP v2 and v3 In some cases of advanced routing one may need to set explicitly the source IP address from which the SNMP daemon will reply - /snmp set src-address=<SELF_IP_ADDRESS> Palo Alto PANOS 6.x/7.x Access the web admin page and log in Go to Device tab > Setup Go to the sub-tab \"Operations\" Click \"SNMP Setup\" Enter your SNMP community and then click \"OK\" Click Apply Note that you need to allow SNMP on the needed interfaces. To do that you need to create a network \"Interface Mgmt\" profile for standard interface and allow SNMP under \"Device > Management > Management Interface Settings\" for out of band management interface. One may also configure SNMP from the command line, which is useful when you need to configure more than one firewall for SNMP monitoring. Log into the firewall(s) via ssh, and perform these commands for basic SNMPv3 configuration: username@devicename> configure username@devicename# set deviceconfig system service disable-snmp no username@devicename# set deviceconfig system snmp-setting access-setting version v3 views pa view iso oid 1.3.6.1 username@devicename# set deviceconfig system snmp-setting access-setting version v3 views pa view iso option include username@devicename# set deviceconfig system snmp-setting access-setting version v3 views pa view iso mask 0xf0 username@devicename# set deviceconfig system snmp-setting access-setting version v3 users authpriv authpwd YOUR_AUTH_SECRET username@devicename# set deviceconfig system snmp-setting access-setting version v3 users authpriv privpwd YOUR_PRIV_SECRET username@devicename# set deviceconfig system snmp-setting access-setting version v3 users authpriv view pa username@devicename# set deviceconfig system snmp-setting snmp-system location \"Yourcity, Yourcountry [60.4,5.31]\" username@devicename# set deviceconfig system snmp-setting snmp-system contact noc@your.org username@devicename# commit username@devicename# exit Ubiquiti EdgeOs If you use the HTTP interface: 1. Access the legacy web admin page and log in 1. Go to System > Advanced Configuration 1. Go to the sub-tab \"SNMP\" > \"Community\" 1. Click \"Add Community Group\" 1. Enter your SNMP community, ip address and click submit 1. Go to System > Summary 1. Go to the sub-tab \"Description\" 1. Enter your System Name, System Location and System Contact. 1. Click submit 1. Click \"Save Configuration\" If you use CLI: username@devicename> enable username@devicename# configure username@devicename (Config)# snmp-server community \"public\" ro username@devicename (Config)# snmp-server sysname \"devicename\" username@devicename (Config)# snmp-server contact \"noc@example.com\" username@devicename (Config)# exit username@devicename# write memory VMware ESX/ESXi 5.x/6.x Log on to your ESX server by means of ssh. You may have to enable the ssh service in the GUI first. From the CLI, execute the following commands: esxcli system snmp set --authentication SHA1 esxcli system snmp set --privacy AES128 esxcli system snmp hash --auth-hash YOUR_AUTH_SECRET --priv-hash YOUR_PRIV_SECRET --raw-secret This command produces output like this Authhash: f3d8982fc28e8d1346c26eee49eb2c4a5950c934 Privhash: 0596ab30b315576a4e9f7d7bde65bf49b749e335 Now define a SNMPv3 user: esxcli system snmp set --users <username>/f3d8982fc28e8d1346c26eee49eb2c4a5950c934/0596ab30b315576a4e9f7d7bde65bf49b749e335/priv esxcli system snmp set -L \"Yourcity, Yourcountry [60.4,5.3]\" esxcli system snmp set -C noc@your.org esxcli system snmp set --enable true Note: In case of snmp timouts, disable the firewall with esxcli network firewall set --enabled false If snmp timeouts still occur with firewall disabled, migrate VMs if needed and reboot ESXi host. VCenter 6.x Log on to your ESX server by means of ssh. You may have to enable the ssh service in the GUI first. From the CLI, execute the following commands: snmp.set --authentication SHA1 snmp.set --privacy AES128 snmp.hash --auth_hash YOUR_AUTH_SECRET --priv_hash YOUR_PRIV_SECRET --raw_secret true This command produces output like this Privhash: 0596ab30b315576a4e9f7d7bde65bf49b749e335 Authhash: f3d8982fc28e8d1346c26eee49eb2c4a5950c934 Now define a SNMPv3 user: snmp.set --users authpriv/f3d8982fc28e8d1346c26eee49eb2c4a5950c934/0596ab30b315576a4e9f7d7bde65bf49b749e335/priv snmp.enable Operating systems Linux (snmpd v2) Replace your snmpd.conf file by the example below and edit it with appropriate community in \"RANDOMSTRINGGOESHERE\". vi /etc/snmp/snmpd.conf # Change RANDOMSTRINGGOESHERE to your preferred SNMP community string com2sec readonly default RANDOMSTRINGGOESHERE group MyROGroup v2c readonly view all included .1 80 access MyROGroup \"\" any noauth exact all none none syslocation Rack, Room, Building, City, Country [GPSX,Y] syscontact Your Name <your@email.address> #Distro Detection extend distro /usr/bin/distro #Hardware Detection (uncomment to enable) #extend hardware '/bin/cat /sys/devices/virtual/dmi/id/product_name' #extend manufacturer '/bin/cat /sys/devices/virtual/dmi/id/sys_vendor' #extend serial '/bin/cat /sys/devices/virtual/dmi/id/product_serial' NOTE : On some systems the snmpd is running as its own user, which means it can't read /sys/devices/virtual/dmi/id/product_serial which is mode 0400. One solution is to include @reboot chmod 444 /sys/devices/virtual/dmi/id/product_serial in the crontab for root or equivalent. Non-x86 or SMBIOS-based systems, such as ARM-based Raspberry Pi units should query device tree locations for this metadata, for example: extend hardware '/bin/cat /sys/firmware/devicetree/base/model' extend serial '/bin/cat /sys/firmware/devicetree/base/serial-number' The LibreNMS server include a copy of this example here: /opt/librenms/snmpd.conf.example The binary /usr/bin/distro must be copied from the original source repository: curl -o /usr/bin/distro https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/distro chmod +x /usr/bin/distro Linux (snmpd v3) Go to /etc/snmp/snmpd.conf Open the file in vi or nano /etc/snmp/snmpd.conf and add the following line to create SNMPV3 User (replace username and passwords with your own): createUser authPrivUser SHA \"authPassword\" AES \"privPassword\" Make sure the agent listens to all interfaces by adding the following line inside snmpd.conf: agentAddress udp:161,udp6:[::1]:161 This line simply means listen to connections across all interfaces IPv4 and IPv6 respectively Uncomment and change the following line to give read access to the username created above (rouser is what LibreNMS uses) : #rouser authPrivUser priv Change the following details inside snmpd.conf syslocation Rack, Room, Building, City, Country [GPSX,Y] syscontact Your Name <your@email.address> Save and exit the file Restart the snmpd service CentOS 6 / Red hat 6 service snmpd restart CentOS 7 / Red hat 7 systemctl restart snmpd Add SNMP to Firewalld firewall-cmd --zone=public --permanent --add-service=snmp firewall-cmd --reload Ubuntu service snmpd restart Windows Server 2008 R2 Log in to your Windows Server 2008 R2 Start \"Server Manager\" under \"Administrative Tools\" Click \"Features\" and then click \"Add Feature\" Check (if not checked) \"SNMP Service\", click \"Next\" until \"Install\" Start \"Services\" under \"Administrative Tools\" Edit \"SNMP Service\" properties Go to the security tab In \"Accepted community name\" click \"Add\" to add your community string and permission In \"Accept SNMP packets from these hosts\" click \"Add\" and add your LibreNMS server IP address Validate change by clicking \"Apply\" Windows Server 2012 R2 and 2016 Log in to your Windows Server 2012 R2 Start \"Server Manager\" under \"Administrative Tools\" Click \"Manage\" and then \"Add Roles and Features\" Continue by pressing \"Next\" to the \"Features\" menu Install (if not installed) \"SNMP Service\" Start \"Services\" under \"Administrative Tools\" Edit \"SNMP Service\" properties Go to the security tab In \"Accepted community name\" click \"Add\" to add your community string and permission In \"Accept SNMP packets from these hosts\" click \"Add\" and add your LibreNMS server IP address Validate change by clicking \"Apply\" Note: SNMPv3 can be supported on Windows platforms with the use of Net-SNMP. Mac OSX Step 1: sudo nano /etc/snmp/snmpd.conf #Allow read-access with the following SNMP Community String: rocommunity public # all other settings are optional but recommended. # Location of the device syslocation data centre A # Human Contact for the device syscontact SysAdmin # System Name of the device sysName SystemName # the system OID for this device. This is optional but recommended, # to identify this as a MAC OS system. sysobjectid 1 .3.6.1.4.1.8072.3.2.16 Step 2: sudo launchctl load -w /System/Library/LaunchDaemons/org.net-snmp.snmpd.plist","title":"SNMP Configuration Examples"},{"location":"Support/SNMP-Configuration-Examples/#snmp-configuration-examples","text":"Table of Content: Devices Cisco Adaptive Security Appliance (ASA) IOS / IOS XE NX-OS Wireless LAN Controller (WLC) HPE 3PAR Inform OS 3.2.x Infoblox NIOS 7.x+ Juniper Junos OS Mikrotik RouterOS 6.x Palo Alto PANOS 6.x/7.x Ubiquiti EdgeOs VMware ESX/ESXi 5.x/6.x VCenter 6.x Operating systems Linux (snmpd v2) Linux (snmpd v3) Windows Server 2008 R2 Windows Server 2012 R2 and 2016 Mac OSX","title":"SNMP configuration examples"},{"location":"Support/SNMP-Configuration-Examples/#devices","text":"","title":"Devices"},{"location":"Support/SNMP-Configuration-Examples/#cisco","text":"","title":"Cisco"},{"location":"Support/SNMP-Configuration-Examples/#adaptive-security-appliance-asa","text":"ASDM Launch ASDM and connect to your device Go to Configuration > Management Access > SNMP Add your community string Add in the \"SNMP Host Access List\" section your LibreNMS server IP address Click Apply and Save CLI # SNMPv2c snmp-server community <YOUR-COMMUNITY> snmp-server contact <YOUR-CONTACT> snmp-server location <YOUR-LOCATION> snmp-server host <INTERFACE> <LIBRENMS-IP> poll community <YOUR-COMMUNITY> version 2c # SNMPv3 snmp-server group <GROUP-NAME> v3 priv snmp-server user <USER-NAME> <GROUP-NAME> v3 auth sha <AUTH-PASSWORD> priv aes 128 <PRIV-PASSWORD> snmp-server contact <YOUR-CONTACT> snmp-server location <YOUR-LOCATION> snmp-server host <INTERFACE> <LIBRENMS-IP> poll version 3 <USER-NAME> Note: If the device is unable to find the SNMP user, reboot the ASA. Once rebooted, continue the steps as normal.","title":"Adaptive Security Appliance (ASA)"},{"location":"Support/SNMP-Configuration-Examples/#ios-ios-xe","text":"# SNMPv2c snmp-server community <YOUR-COMMUNITY> RO snmp-server contact <YOUR-CONTACT> snmp-server location <YOUR-LOCATION> # SNMPv3 snmp-server group <GROUP-NAME> v3 priv snmp-server user <USER-NAME> <GROUP-NAME> v3 auth sha <AUTH-PASSWORD> priv aes 128 <PRIV-PASSWORD> snmp-server contact <YOUR-CONTACT> snmp-server location <YOUR-LOCATION> # Note: The following is also required if using SNMPv3 and you want to populate the FDB table. snmp-server group <GROUP-NAME> v3 priv context vlan- match prefix Note: If the device is unable to find the SNMP user, reboot the ASA. Once rebooted, continue the steps as normal.","title":"IOS / IOS XE"},{"location":"Support/SNMP-Configuration-Examples/#nx-os","text":"# SNMPv2c snmp-server community <YOUR-COMMUNITY> RO snmp-server contact <YOUR-CONTACT> snmp-server location <YOUR-LOCATION> # SNMPv3 snmp-server user <USER-NAME> <GROUP-NAME> v3 auth sha <AUTH-PASSWORD> priv aes 128 <PRIV-PASSWORD> snmp-server contact <YOUR-CONTACT> snmp-server location <YOUR-LOCATION>","title":"NX-OS"},{"location":"Support/SNMP-Configuration-Examples/#wireless-lan-controller-wlc","text":"Access the web admin page and log in If you are running version 8.1 and later, on the new dashboard click \"Advanced\" Go to management Tab On SNMP sub-menu, select \"Communities\" Click \"New...\" Add your community name and leave IP addresses empty Click Apply and Save","title":"Wireless LAN Controller (WLC)"},{"location":"Support/SNMP-Configuration-Examples/#eaton","text":"","title":"Eaton"},{"location":"Support/SNMP-Configuration-Examples/#network-card-ms","text":"Connect to the Web UI of the device Upgrade to the lastest available manufacturer firmware which applies to your hardware revision. Refer to the releasenotes. For devices which can use the Lx releases, do install LD. After rebooting the card (safe for connected load), configure Network, System and Access Control. Save config for each step. Configure SNMP. The device defaults to both SNMP v1 and v3 enabled, with default credentials. Disable what you do not need. SNMP v3 works, but uses MD5/DES. You may have to add another section to your SNMP credentials table in LibreNMS. Save.","title":"Network Card-MS"},{"location":"Support/SNMP-Configuration-Examples/#hpe-3par","text":"","title":"HPE 3PAR"},{"location":"Support/SNMP-Configuration-Examples/#inform-os-32x","text":"Access the CLI Add an SNMP Manager with your LibreNMS IP address: addsnmpmgr <librenms ip> Add your SNMP community: setsnmppw <community>","title":"Inform OS 3.2.x"},{"location":"Support/SNMP-Configuration-Examples/#infoblox","text":"","title":"Infoblox"},{"location":"Support/SNMP-Configuration-Examples/#nios-7x","text":"Access the web admin page and log in Go to Grid tab > Grid Manager In the right menu select \"Grid properties\" Select \"SNMP\" menu Click \"Enable SNMPv1/SNMPv2 Queries\" Add your community Click Save & Close","title":"NIOS 7.x+"},{"location":"Support/SNMP-Configuration-Examples/#juniper","text":"","title":"Juniper"},{"location":"Support/SNMP-Configuration-Examples/#junos-os","text":"for SNMPv1/v2c set snmp description description set snmp location location set snmp contact contact set snmp community YOUR-COMMUNITY authorization read-only for SNMPv3 (authPriv): set snmp v3 usm local-engine user authpriv authentication-sha authentication-password YOUR_AUTH_SECRET set snmp v3 usm local-engine user authpriv privacy-aes128 privacy-password YOUR_PRIV_SECRET set snmp v3 vacm security-to-group security-model usm security-name authpriv group mysnmpv3 set snmp v3 vacm access group mysnmpv3 default-context-prefix security-model any security-level authentication read-view mysnmpv3view set snmp v3 vacm access group mysnmpv3 default-context-prefix security-model any security-level privacy read-view mysnmpv3view set snmp view mysnmpv3view oid iso include","title":"Junos OS"},{"location":"Support/SNMP-Configuration-Examples/#mikrotik","text":"","title":"Mikrotik"},{"location":"Support/SNMP-Configuration-Examples/#routeros-6x","text":"CLI SNMP v2 Configuration /snmp community set [ find default=yes ] read-access=no add addresses=<ALLOWED-SRC-IPs/NETMASK> name=<COMMUNITY> /snmp set contact=\"<NAME>\" enabled=yes engine-id=<ENGINE ID> location=\"<LOCALTION>\" Notes: About the snmp community commands: The commands change the default snmp community. It is probably possible to create a new one instead. specify the address and host (not network) netmask of the LibreNMS server. Example: 192.168.8.71/32 trap-version=2 must also be specified if some other trap-version has been set trap-interfaces may also be used to limit the interfaces the router listens on About the snmp command: contact, engine-id and location are optional trap-community is probably required if a new snmp community has been created. CLI SNMP v3 Configuration for authPriv /snmp community add name=\"<COMMUNITY>\" addresses=\"<ALLOWED-SRC-IPs/NETMASK>\" set \"<COMMUNITY>\" authentication-password=\"<AUTH_PASS>\" authentication-protocol=MD5 set \"<COMMUNITY>\" encryption-password=\"<ENCRYP_PASS>\" encryption-protocol=AES set \"<COMMUNITY>\" read-access=yes write-access=no security=private #Disable public SNMP set public read-access=no write-access=no security=private /snmp set contact=\"<NAME>\" enabled=yes engine-id=\"<ENGINE ID>\" location=\"<LOCALTION>\" Notes: Use password with length of min 8 chars Notes for both SNMP v2 and v3 In some cases of advanced routing one may need to set explicitly the source IP address from which the SNMP daemon will reply - /snmp set src-address=<SELF_IP_ADDRESS>","title":"RouterOS 6.x"},{"location":"Support/SNMP-Configuration-Examples/#palo-alto","text":"","title":"Palo Alto"},{"location":"Support/SNMP-Configuration-Examples/#panos-6x7x","text":"Access the web admin page and log in Go to Device tab > Setup Go to the sub-tab \"Operations\" Click \"SNMP Setup\" Enter your SNMP community and then click \"OK\" Click Apply Note that you need to allow SNMP on the needed interfaces. To do that you need to create a network \"Interface Mgmt\" profile for standard interface and allow SNMP under \"Device > Management > Management Interface Settings\" for out of band management interface. One may also configure SNMP from the command line, which is useful when you need to configure more than one firewall for SNMP monitoring. Log into the firewall(s) via ssh, and perform these commands for basic SNMPv3 configuration: username@devicename> configure username@devicename# set deviceconfig system service disable-snmp no username@devicename# set deviceconfig system snmp-setting access-setting version v3 views pa view iso oid 1.3.6.1 username@devicename# set deviceconfig system snmp-setting access-setting version v3 views pa view iso option include username@devicename# set deviceconfig system snmp-setting access-setting version v3 views pa view iso mask 0xf0 username@devicename# set deviceconfig system snmp-setting access-setting version v3 users authpriv authpwd YOUR_AUTH_SECRET username@devicename# set deviceconfig system snmp-setting access-setting version v3 users authpriv privpwd YOUR_PRIV_SECRET username@devicename# set deviceconfig system snmp-setting access-setting version v3 users authpriv view pa username@devicename# set deviceconfig system snmp-setting snmp-system location \"Yourcity, Yourcountry [60.4,5.31]\" username@devicename# set deviceconfig system snmp-setting snmp-system contact noc@your.org username@devicename# commit username@devicename# exit","title":"PANOS 6.x/7.x"},{"location":"Support/SNMP-Configuration-Examples/#ubiquiti","text":"","title":"Ubiquiti"},{"location":"Support/SNMP-Configuration-Examples/#edgeos","text":"If you use the HTTP interface: 1. Access the legacy web admin page and log in 1. Go to System > Advanced Configuration 1. Go to the sub-tab \"SNMP\" > \"Community\" 1. Click \"Add Community Group\" 1. Enter your SNMP community, ip address and click submit 1. Go to System > Summary 1. Go to the sub-tab \"Description\" 1. Enter your System Name, System Location and System Contact. 1. Click submit 1. Click \"Save Configuration\" If you use CLI: username@devicename> enable username@devicename# configure username@devicename (Config)# snmp-server community \"public\" ro username@devicename (Config)# snmp-server sysname \"devicename\" username@devicename (Config)# snmp-server contact \"noc@example.com\" username@devicename (Config)# exit username@devicename# write memory","title":"EdgeOs"},{"location":"Support/SNMP-Configuration-Examples/#vmware","text":"","title":"VMware"},{"location":"Support/SNMP-Configuration-Examples/#esxesxi-5x6x","text":"Log on to your ESX server by means of ssh. You may have to enable the ssh service in the GUI first. From the CLI, execute the following commands: esxcli system snmp set --authentication SHA1 esxcli system snmp set --privacy AES128 esxcli system snmp hash --auth-hash YOUR_AUTH_SECRET --priv-hash YOUR_PRIV_SECRET --raw-secret This command produces output like this Authhash: f3d8982fc28e8d1346c26eee49eb2c4a5950c934 Privhash: 0596ab30b315576a4e9f7d7bde65bf49b749e335 Now define a SNMPv3 user: esxcli system snmp set --users <username>/f3d8982fc28e8d1346c26eee49eb2c4a5950c934/0596ab30b315576a4e9f7d7bde65bf49b749e335/priv esxcli system snmp set -L \"Yourcity, Yourcountry [60.4,5.3]\" esxcli system snmp set -C noc@your.org esxcli system snmp set --enable true Note: In case of snmp timouts, disable the firewall with esxcli network firewall set --enabled false If snmp timeouts still occur with firewall disabled, migrate VMs if needed and reboot ESXi host.","title":"ESX/ESXi 5.x/6.x"},{"location":"Support/SNMP-Configuration-Examples/#vcenter-6x","text":"Log on to your ESX server by means of ssh. You may have to enable the ssh service in the GUI first. From the CLI, execute the following commands: snmp.set --authentication SHA1 snmp.set --privacy AES128 snmp.hash --auth_hash YOUR_AUTH_SECRET --priv_hash YOUR_PRIV_SECRET --raw_secret true This command produces output like this Privhash: 0596ab30b315576a4e9f7d7bde65bf49b749e335 Authhash: f3d8982fc28e8d1346c26eee49eb2c4a5950c934 Now define a SNMPv3 user: snmp.set --users authpriv/f3d8982fc28e8d1346c26eee49eb2c4a5950c934/0596ab30b315576a4e9f7d7bde65bf49b749e335/priv snmp.enable","title":"VCenter 6.x"},{"location":"Support/SNMP-Configuration-Examples/#operating-systems","text":"","title":"Operating systems"},{"location":"Support/SNMP-Configuration-Examples/#linux-snmpd-v2","text":"Replace your snmpd.conf file by the example below and edit it with appropriate community in \"RANDOMSTRINGGOESHERE\". vi /etc/snmp/snmpd.conf # Change RANDOMSTRINGGOESHERE to your preferred SNMP community string com2sec readonly default RANDOMSTRINGGOESHERE group MyROGroup v2c readonly view all included .1 80 access MyROGroup \"\" any noauth exact all none none syslocation Rack, Room, Building, City, Country [GPSX,Y] syscontact Your Name <your@email.address> #Distro Detection extend distro /usr/bin/distro #Hardware Detection (uncomment to enable) #extend hardware '/bin/cat /sys/devices/virtual/dmi/id/product_name' #extend manufacturer '/bin/cat /sys/devices/virtual/dmi/id/sys_vendor' #extend serial '/bin/cat /sys/devices/virtual/dmi/id/product_serial' NOTE : On some systems the snmpd is running as its own user, which means it can't read /sys/devices/virtual/dmi/id/product_serial which is mode 0400. One solution is to include @reboot chmod 444 /sys/devices/virtual/dmi/id/product_serial in the crontab for root or equivalent. Non-x86 or SMBIOS-based systems, such as ARM-based Raspberry Pi units should query device tree locations for this metadata, for example: extend hardware '/bin/cat /sys/firmware/devicetree/base/model' extend serial '/bin/cat /sys/firmware/devicetree/base/serial-number' The LibreNMS server include a copy of this example here: /opt/librenms/snmpd.conf.example The binary /usr/bin/distro must be copied from the original source repository: curl -o /usr/bin/distro https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/distro chmod +x /usr/bin/distro","title":"Linux (snmpd v2)"},{"location":"Support/SNMP-Configuration-Examples/#linux-snmpd-v3","text":"Go to /etc/snmp/snmpd.conf Open the file in vi or nano /etc/snmp/snmpd.conf and add the following line to create SNMPV3 User (replace username and passwords with your own): createUser authPrivUser SHA \"authPassword\" AES \"privPassword\" Make sure the agent listens to all interfaces by adding the following line inside snmpd.conf: agentAddress udp:161,udp6:[::1]:161 This line simply means listen to connections across all interfaces IPv4 and IPv6 respectively Uncomment and change the following line to give read access to the username created above (rouser is what LibreNMS uses) : #rouser authPrivUser priv Change the following details inside snmpd.conf syslocation Rack, Room, Building, City, Country [GPSX,Y] syscontact Your Name <your@email.address> Save and exit the file","title":"Linux (snmpd v3)"},{"location":"Support/SNMP-Configuration-Examples/#restart-the-snmpd-service","text":"","title":"Restart the snmpd service"},{"location":"Support/SNMP-Configuration-Examples/#centos-6-red-hat-6","text":"service snmpd restart","title":"CentOS 6 / Red hat 6"},{"location":"Support/SNMP-Configuration-Examples/#centos-7-red-hat-7","text":"systemctl restart snmpd Add SNMP to Firewalld firewall-cmd --zone=public --permanent --add-service=snmp firewall-cmd --reload","title":"CentOS 7 / Red hat 7"},{"location":"Support/SNMP-Configuration-Examples/#ubuntu","text":"service snmpd restart","title":"Ubuntu"},{"location":"Support/SNMP-Configuration-Examples/#windows-server-2008-r2","text":"Log in to your Windows Server 2008 R2 Start \"Server Manager\" under \"Administrative Tools\" Click \"Features\" and then click \"Add Feature\" Check (if not checked) \"SNMP Service\", click \"Next\" until \"Install\" Start \"Services\" under \"Administrative Tools\" Edit \"SNMP Service\" properties Go to the security tab In \"Accepted community name\" click \"Add\" to add your community string and permission In \"Accept SNMP packets from these hosts\" click \"Add\" and add your LibreNMS server IP address Validate change by clicking \"Apply\"","title":"Windows Server 2008 R2"},{"location":"Support/SNMP-Configuration-Examples/#windows-server-2012-r2-and-2016","text":"Log in to your Windows Server 2012 R2 Start \"Server Manager\" under \"Administrative Tools\" Click \"Manage\" and then \"Add Roles and Features\" Continue by pressing \"Next\" to the \"Features\" menu Install (if not installed) \"SNMP Service\" Start \"Services\" under \"Administrative Tools\" Edit \"SNMP Service\" properties Go to the security tab In \"Accepted community name\" click \"Add\" to add your community string and permission In \"Accept SNMP packets from these hosts\" click \"Add\" and add your LibreNMS server IP address Validate change by clicking \"Apply\" Note: SNMPv3 can be supported on Windows platforms with the use of Net-SNMP.","title":"Windows Server 2012 R2 and 2016"},{"location":"Support/SNMP-Configuration-Examples/#mac-osx","text":"Step 1: sudo nano /etc/snmp/snmpd.conf #Allow read-access with the following SNMP Community String: rocommunity public # all other settings are optional but recommended. # Location of the device syslocation data centre A # Human Contact for the device syscontact SysAdmin # System Name of the device sysName SystemName # the system OID for this device. This is optional but recommended, # to identify this as a MAC OS system. sysobjectid 1 .3.6.1.4.1.8072.3.2.16 Step 2: sudo launchctl load -w /System/Library/LaunchDaemons/org.net-snmp.snmpd.plist","title":"Mac OSX"},{"location":"Support/SSL-Configuration/","text":"Ubuntu 16.04 Enabling HTTPS - Nginx This example is specifically for Ubuntu 16.04 with Nginx and uses an SSL certificate from Let's Encrypt. Please follow this excellent tutorial on setting up nginx with an SSL cert from LetsEncrypt. Step 1 Follow the LetsEncrypt tutorial until you get to Step 2: Obtain and SSL Certificate. In this section you need to change some config in the Nginx configuration. The tutorial directs you to edit /etc/nginx/sites-available/default however in the standard LibreNMS install, the file you need to edit is actually /etc/nginx/conf.d/librenms.conf . Step 2 When you get to Step 3: Configure TLS/SSL on Web Server (Nginx) there are some differences again. Follow the instructions regarding the \"snippet\" configuration, the main differences come when you get to Adjust the Nginx Configuration to Use SSL . Here you are again directed to edit /etc/nginx/sites-available/default , so we need to go to /etc/nginx/conf.d/librenms.conf . sudo vi /etc/nginx/conf.d/librenms.conf The top section of this file will look like this: server { listen 80; listen [::]:80; server_name example.com; root /opt/librenms/html; index index.php; access_log /opt/librenms/logs/access_log; error_log /opt/librenms/logs/error_log; Edit it to look like this (obviously changing example.com to your actual domain name): server { listen 80; listen [::]:80; server_name example.com; return 301 https://$server_name$request_uri; } server { listen 443 ssl http2; listen [::]:443 ssl http2; include snippets/ssl-example.com.conf; include snippets/ssl-params.conf; server_name example.com; root /opt/librenms/html; index index.php; access_log /opt/librenms/logs/access_log; error_log /opt/librenms/logs/error_log; This config will redirect HTTP traffic to HTTPS and use the SSL config that you have just set up. Check for syntax errors sudo nginx -t Then restart Nginx sudo systemctl restart nginx Step 3 Follow the rest of the tutorial, especially if you have the server's firewall enabled. CentOS Enabling HTTPS - Apache This example is specifically for CentOS 7 with Apache Please follow this How To from CentOS wiki on setting up Apache with a SSL cert. Step 1 Follow the How to until you get to step 3. This is going to be little different with LibreNMS. You will need to make changes in here sudo vi /etc/httpd/conf.d/librenms.conf Your VirtualHost for 443 will need to look something like this for LibreNMS (obviously changing librenms.example.com to your actual domain name) <VirtualHost *:443> SSLEngine on SSLCertificateFile /etc/pki/tls/certs/ca.crt SSLCertificateKeyFile /etc/pki/tls/private/ca.key <Directory \"/opt/librenms/html/\"> AllowOverride All Require all granted Options FollowSymLinks MultiViews </Directory> DocumentRoot /opt/librenms/html/ AllowEncodedSlashes NoDecode ServerName librenms.example.com CustomLog /opt/librenms/logs/access_log combined ErrorLog /opt/librenms/logs/error_log </VirtualHost> Step 2 Then restart Apache sudo systemctl restart httpd Step 3 Follow the rest of the How To, especially if you have the server's firewall enabled.","title":"SSL Configuration"},{"location":"Support/SSL-Configuration/#ubuntu-1604","text":"","title":"Ubuntu 16.04"},{"location":"Support/SSL-Configuration/#enabling-https-nginx","text":"This example is specifically for Ubuntu 16.04 with Nginx and uses an SSL certificate from Let's Encrypt. Please follow this excellent tutorial on setting up nginx with an SSL cert from LetsEncrypt.","title":"Enabling HTTPS - Nginx"},{"location":"Support/SSL-Configuration/#step-1","text":"Follow the LetsEncrypt tutorial until you get to Step 2: Obtain and SSL Certificate. In this section you need to change some config in the Nginx configuration. The tutorial directs you to edit /etc/nginx/sites-available/default however in the standard LibreNMS install, the file you need to edit is actually /etc/nginx/conf.d/librenms.conf .","title":"Step 1"},{"location":"Support/SSL-Configuration/#step-2","text":"When you get to Step 3: Configure TLS/SSL on Web Server (Nginx) there are some differences again. Follow the instructions regarding the \"snippet\" configuration, the main differences come when you get to Adjust the Nginx Configuration to Use SSL . Here you are again directed to edit /etc/nginx/sites-available/default , so we need to go to /etc/nginx/conf.d/librenms.conf . sudo vi /etc/nginx/conf.d/librenms.conf The top section of this file will look like this: server { listen 80; listen [::]:80; server_name example.com; root /opt/librenms/html; index index.php; access_log /opt/librenms/logs/access_log; error_log /opt/librenms/logs/error_log; Edit it to look like this (obviously changing example.com to your actual domain name): server { listen 80; listen [::]:80; server_name example.com; return 301 https://$server_name$request_uri; } server { listen 443 ssl http2; listen [::]:443 ssl http2; include snippets/ssl-example.com.conf; include snippets/ssl-params.conf; server_name example.com; root /opt/librenms/html; index index.php; access_log /opt/librenms/logs/access_log; error_log /opt/librenms/logs/error_log; This config will redirect HTTP traffic to HTTPS and use the SSL config that you have just set up. Check for syntax errors sudo nginx -t Then restart Nginx sudo systemctl restart nginx","title":"Step 2"},{"location":"Support/SSL-Configuration/#step-3","text":"Follow the rest of the tutorial, especially if you have the server's firewall enabled.","title":"Step 3"},{"location":"Support/SSL-Configuration/#centos","text":"","title":"CentOS"},{"location":"Support/SSL-Configuration/#enabling-https-apache","text":"This example is specifically for CentOS 7 with Apache Please follow this How To from CentOS wiki on setting up Apache with a SSL cert.","title":"Enabling HTTPS - Apache"},{"location":"Support/SSL-Configuration/#step-1_1","text":"Follow the How to until you get to step 3. This is going to be little different with LibreNMS. You will need to make changes in here sudo vi /etc/httpd/conf.d/librenms.conf Your VirtualHost for 443 will need to look something like this for LibreNMS (obviously changing librenms.example.com to your actual domain name) <VirtualHost *:443> SSLEngine on SSLCertificateFile /etc/pki/tls/certs/ca.crt SSLCertificateKeyFile /etc/pki/tls/private/ca.key <Directory \"/opt/librenms/html/\"> AllowOverride All Require all granted Options FollowSymLinks MultiViews </Directory> DocumentRoot /opt/librenms/html/ AllowEncodedSlashes NoDecode ServerName librenms.example.com CustomLog /opt/librenms/logs/access_log combined ErrorLog /opt/librenms/logs/error_log </VirtualHost>","title":"Step 1"},{"location":"Support/SSL-Configuration/#step-2_1","text":"Then restart Apache sudo systemctl restart httpd","title":"Step 2"},{"location":"Support/SSL-Configuration/#step-3_1","text":"Follow the rest of the How To, especially if you have the server's firewall enabled.","title":"Step 3"},{"location":"Support/Support-New-OS/","text":"","title":"Support New OS"},{"location":"Support/Device-Notes/","text":"Additional device notes In this section you will find notes and information on devices that may require special attention.","title":"Intro"},{"location":"Support/Device-Notes/#additional-device-notes","text":"In this section you will find notes and information on devices that may require special attention.","title":"Additional device notes"},{"location":"Support/Device-Notes/AsuswrtMerlin/","text":"To use Wireless Sensors on AsuswrtMerlin, an agent of sorts is required. The purpose of the agent is to execute on the client (AsuswrtMerlin) side, to ensure that the needed Wireless Sensor information is returned for SNMP queries (from LibreNMS). Installation AsuswrtMerlin Two items are required on the AsuswrtMerlin side - scripts to generate the necessary information (for SNMP replies), and an SNMP extend configuration update (to return the information vs. the expected query). 1: Install the scripts: Copy the scripts from librenms-agent/snmp/Openwrt - preferably inside /etc/librenms on AsuswrtMerlin (and add this directory to /etc/sysupgrade.conf, to survive firmware updates). The only file that needs to be edited is wlInterfaces.txt, which is a mapping from the wireless interfaces, to the desired display name in LibreNMS. For example, wlan0,wl-2.4G wlan1,wl-5.0G 2: Update the AsuswrtMerlin SNMP configuration, adding extend support for the Wireless Sensor queries: vi /etc/config/snmpd , adding the following entries (assuming the scripts are installed in /etc/librenms, and are executable), and update the network interfaces as needed to match the hardware, config extend option name interfaces option prog \"/bin/cat /etc/librenms/wlInterfaces.txt\" config extend option name clients-wlan0 option prog \"/etc/librenms/wlClients.sh wlan0\" config extend option name clients-wlan1 option prog \"/etc/librenms/wlClients.sh wlan1\" config extend option name clients-wlan option prog \"/etc/librenms/wlClients.sh\" config extend option name frequency-wlan0 option prog \"/etc/librenms/wlFrequency.sh wlan0\" config extend option name frequency-wlan1 option prog \"/etc/librenms/wlFrequency.sh wlan1\" config extend option name rate-tx-wlan0-min option prog \"/etc/librenms/wlRate.sh wlan0 tx min\" config extend option name rate-tx-wlan0-avg option prog \"/etc/librenms/wlRate.sh wlan0 tx avg\" config extend option name rate-tx-wlan0-max option prog \"/etc/librenms/wlRate.sh wlan0 tx max\" config extend option name rate-tx-wlan1-min option prog \"/etc/librenms/wlRate.sh wlan1 tx min\" config extend option name rate-tx-wlan1-avg option prog \"/etc/librenms/wlRate.sh wlan1 tx avg\" config extend option name rate-tx-wlan1-max option prog \"/etc/librenms/wlRate.sh wlan1 tx max\" config extend option name rate-rx-wlan0-min option prog \"/etc/librenms/wlRate.sh wlan0 rx min\" config extend option name rate-rx-wlan0-avg option prog \"/etc/librenms/wlRate.sh wlan0 rx avg\" config extend option name rate-rx-wlan0-max option prog \"/etc/librenms/wlRate.sh wlan0 rx max\" config extend option name rate-rx-wlan1-min option prog \"/etc/librenms/wlRate.sh wlan1 rx min\" config extend option name rate-rx-wlan1-avg option prog \"/etc/librenms/wlRate.sh wlan1 rx avg\" config extend option name rate-rx-wlan1-max option prog \"/etc/librenms/wlRate.sh wlan1 rx max\" config extend option name noise-floor-wlan0 option prog \"/etc/librenms/wlNoiseFloor.sh wlan0\" config extend option name noise-floor-wlan1 option prog \"/etc/librenms/wlNoiseFloor.sh wlan1\" config extend option name snr-wlan0-min option prog \"/etc/librenms/wlSNR.sh wlan0 min\" config extend option name snr-wlan0-avg option prog \"/etc/librenms/wlSNR.sh wlan0 avg\" config extend option name snr-wlan0-max option prog \"/etc/librenms/wlSNR.sh wlan0 max\" config extend option name snr-wlan1-min option prog \"/etc/librenms/wlSNR.sh wlan1 min\" config extend option name snr-wlan1-avg option prog \"/etc/librenms/wlSNR.sh wlan1 avg\" config extend option name snr-wlan1-max option prog \"/etc/librenms/wlSNR.sh wlan1 max\" NOTE, any of the scripts above can be tested simply by running the corresponding command. NOTE, to check the output data from any of these extensions, on the LibreNMS machine, run (for example), snmpwalk -v 2c -c public -Osqnv <openwrt-host> 'NET-SNMP-EXTEND-MIB::nsExtendOutputFull.\"frequency-wlan0\"' NOTE, on the LibreNMS machine, ensure that snmp-mibs-downloader is installed. NOTE, on the AsuswrtMerlin machine, ensure that distro is installed (i.e. that the OS is correctly detected!). 3: Restart the snmp service on AsuswrtMerlin: service snmpd restart And then wait for discovery and polling on LibreNMS!","title":"Asuswrt-Merlin"},{"location":"Support/Device-Notes/AsuswrtMerlin/#installation","text":"","title":"Installation"},{"location":"Support/Device-Notes/AsuswrtMerlin/#asuswrtmerlin","text":"Two items are required on the AsuswrtMerlin side - scripts to generate the necessary information (for SNMP replies), and an SNMP extend configuration update (to return the information vs. the expected query). 1: Install the scripts: Copy the scripts from librenms-agent/snmp/Openwrt - preferably inside /etc/librenms on AsuswrtMerlin (and add this directory to /etc/sysupgrade.conf, to survive firmware updates). The only file that needs to be edited is wlInterfaces.txt, which is a mapping from the wireless interfaces, to the desired display name in LibreNMS. For example, wlan0,wl-2.4G wlan1,wl-5.0G 2: Update the AsuswrtMerlin SNMP configuration, adding extend support for the Wireless Sensor queries: vi /etc/config/snmpd , adding the following entries (assuming the scripts are installed in /etc/librenms, and are executable), and update the network interfaces as needed to match the hardware, config extend option name interfaces option prog \"/bin/cat /etc/librenms/wlInterfaces.txt\" config extend option name clients-wlan0 option prog \"/etc/librenms/wlClients.sh wlan0\" config extend option name clients-wlan1 option prog \"/etc/librenms/wlClients.sh wlan1\" config extend option name clients-wlan option prog \"/etc/librenms/wlClients.sh\" config extend option name frequency-wlan0 option prog \"/etc/librenms/wlFrequency.sh wlan0\" config extend option name frequency-wlan1 option prog \"/etc/librenms/wlFrequency.sh wlan1\" config extend option name rate-tx-wlan0-min option prog \"/etc/librenms/wlRate.sh wlan0 tx min\" config extend option name rate-tx-wlan0-avg option prog \"/etc/librenms/wlRate.sh wlan0 tx avg\" config extend option name rate-tx-wlan0-max option prog \"/etc/librenms/wlRate.sh wlan0 tx max\" config extend option name rate-tx-wlan1-min option prog \"/etc/librenms/wlRate.sh wlan1 tx min\" config extend option name rate-tx-wlan1-avg option prog \"/etc/librenms/wlRate.sh wlan1 tx avg\" config extend option name rate-tx-wlan1-max option prog \"/etc/librenms/wlRate.sh wlan1 tx max\" config extend option name rate-rx-wlan0-min option prog \"/etc/librenms/wlRate.sh wlan0 rx min\" config extend option name rate-rx-wlan0-avg option prog \"/etc/librenms/wlRate.sh wlan0 rx avg\" config extend option name rate-rx-wlan0-max option prog \"/etc/librenms/wlRate.sh wlan0 rx max\" config extend option name rate-rx-wlan1-min option prog \"/etc/librenms/wlRate.sh wlan1 rx min\" config extend option name rate-rx-wlan1-avg option prog \"/etc/librenms/wlRate.sh wlan1 rx avg\" config extend option name rate-rx-wlan1-max option prog \"/etc/librenms/wlRate.sh wlan1 rx max\" config extend option name noise-floor-wlan0 option prog \"/etc/librenms/wlNoiseFloor.sh wlan0\" config extend option name noise-floor-wlan1 option prog \"/etc/librenms/wlNoiseFloor.sh wlan1\" config extend option name snr-wlan0-min option prog \"/etc/librenms/wlSNR.sh wlan0 min\" config extend option name snr-wlan0-avg option prog \"/etc/librenms/wlSNR.sh wlan0 avg\" config extend option name snr-wlan0-max option prog \"/etc/librenms/wlSNR.sh wlan0 max\" config extend option name snr-wlan1-min option prog \"/etc/librenms/wlSNR.sh wlan1 min\" config extend option name snr-wlan1-avg option prog \"/etc/librenms/wlSNR.sh wlan1 avg\" config extend option name snr-wlan1-max option prog \"/etc/librenms/wlSNR.sh wlan1 max\" NOTE, any of the scripts above can be tested simply by running the corresponding command. NOTE, to check the output data from any of these extensions, on the LibreNMS machine, run (for example), snmpwalk -v 2c -c public -Osqnv <openwrt-host> 'NET-SNMP-EXTEND-MIB::nsExtendOutputFull.\"frequency-wlan0\"' NOTE, on the LibreNMS machine, ensure that snmp-mibs-downloader is installed. NOTE, on the AsuswrtMerlin machine, ensure that distro is installed (i.e. that the OS is correctly detected!). 3: Restart the snmp service on AsuswrtMerlin: service snmpd restart And then wait for discovery and polling on LibreNMS!","title":"AsuswrtMerlin"},{"location":"Support/Device-Notes/Carel-pCOweb-Devices/","text":"Carel pCOweb Devices The pCOWeb card is used to interface the pCO system to networks that use the HVAC protocols based on the Ethernet physical standard such the SNMP. The problem with this card is that the implementation is based on the final manufacturer of the HVAC (Heating, Ventilation and Air Conditioning) and not based on a standard given by Carel. So each pCOweb card has a different configuration that needs a different MIB depending on the manufacturer implementation. The main problem is that LibreNMS will discover this card as pCOweb and not as your real manufacturer like it should. A solution was found to bypass this issue, but it's LibreNMS independent and you need to first configure your pCOWeb through the admin interface. Configuring the pCOweb card SNMP for LibreNMS First you need to configure your SNMP card using the admin interface. An SNMP tab in the configuration menu leaves you the choice to choose a System OID. This is a little tricky but based on this information we defined a \"standard\" for all implementation of Carel products with LibreNMS. The base Carel OID is 1.3.6.1.4.1.9839. To this OID we will add the final manufacturer Enterprise OID. You can find all enterprise OID following this link . This will allow us to create a specific support for this device. Example for the Rittal IT Chiller that uses a pCOweb card: Base Carel OID : 1.3.6.1.4.1.9839 Rittal (the manufacturer) base enterprise OID : 2606 Adding value to identify this device in LibreNMS : 1 Complete System OID for a Rittal Chiller using a Carel pCOweb card: 1.3.6.1.4.1.9839.2606.1 After constructing the correct System OID for your SNMP card, you can start the LibreNMS new OS implementation and use this new OID as sysObjectID for the YAML definition file. pCOweb card already supported LibreNMS is ready for the devices listed in this table. You only need to configure your pCOweb card with the accorded System OID: Manufacturer Description System OID Rittal IT Chiller 1.3.6.1.4.1.9839.2606.1","title":"Carel pCOweb"},{"location":"Support/Device-Notes/Carel-pCOweb-Devices/#carel-pcoweb-devices","text":"The pCOWeb card is used to interface the pCO system to networks that use the HVAC protocols based on the Ethernet physical standard such the SNMP. The problem with this card is that the implementation is based on the final manufacturer of the HVAC (Heating, Ventilation and Air Conditioning) and not based on a standard given by Carel. So each pCOweb card has a different configuration that needs a different MIB depending on the manufacturer implementation. The main problem is that LibreNMS will discover this card as pCOweb and not as your real manufacturer like it should. A solution was found to bypass this issue, but it's LibreNMS independent and you need to first configure your pCOWeb through the admin interface.","title":"Carel pCOweb Devices"},{"location":"Support/Device-Notes/Carel-pCOweb-Devices/#configuring-the-pcoweb-card-snmp-for-librenms","text":"First you need to configure your SNMP card using the admin interface. An SNMP tab in the configuration menu leaves you the choice to choose a System OID. This is a little tricky but based on this information we defined a \"standard\" for all implementation of Carel products with LibreNMS. The base Carel OID is 1.3.6.1.4.1.9839. To this OID we will add the final manufacturer Enterprise OID. You can find all enterprise OID following this link . This will allow us to create a specific support for this device. Example for the Rittal IT Chiller that uses a pCOweb card: Base Carel OID : 1.3.6.1.4.1.9839 Rittal (the manufacturer) base enterprise OID : 2606 Adding value to identify this device in LibreNMS : 1 Complete System OID for a Rittal Chiller using a Carel pCOweb card: 1.3.6.1.4.1.9839.2606.1 After constructing the correct System OID for your SNMP card, you can start the LibreNMS new OS implementation and use this new OID as sysObjectID for the YAML definition file.","title":"Configuring the pCOweb card SNMP for LibreNMS"},{"location":"Support/Device-Notes/Carel-pCOweb-Devices/#pcoweb-card-already-supported","text":"LibreNMS is ready for the devices listed in this table. You only need to configure your pCOweb card with the accorded System OID: Manufacturer Description System OID Rittal IT Chiller 1.3.6.1.4.1.9839.2606.1","title":"pCOweb card already supported"},{"location":"Support/Device-Notes/Openwrt/","text":"To use Wireless Sensors on Openwrt, an agent of sorts is required. The purpose of the agent is to execute on the client (Openwrt) side, to ensure that the needed Wireless Sensor information is returned for SNMP queries (from LibreNMS). Installation Openwrt Two items are required on the Openwrt side - scripts to generate the necessary information (for SNMP replies), and an SNMP extend configuration update (to return the information vs. the expected query). 1: Install the scripts: Copy the scripts from librenms-agent/snmp/Openwrt - preferably inside /etc/librenms on Openwrt (and add this directory to /etc/sysupgrade.conf, to survive firmware updates). The only file that needs to be edited is wlInterfaces.txt, which is a mapping from the wireless interfaces, to the desired display name in LibreNMS. For example, wlan0,wl-2.4G wlan1,wl-5.0G 2: Update the Openwrt SNMP configuration, adding extend support for the Wireless Sensor queries: vi /etc/config/snmpd , adding the following entries (assuming the scripts are installed in /etc/librenms, and are executable), and update the network interfaces as needed to match the hardware, config extend option name interfaces option prog \"/bin/cat /etc/librenms/wlInterfaces.txt\" config extend option name clients-wlan0 option prog \"/etc/librenms/wlClients.sh wlan0\" config extend option name clients-wlan1 option prog \"/etc/librenms/wlClients.sh wlan1\" config extend option name clients-wlan option prog \"/etc/librenms/wlClients.sh\" config extend option name frequency-wlan0 option prog \"/etc/librenms/wlFrequency.sh wlan0\" config extend option name frequency-wlan1 option prog \"/etc/librenms/wlFrequency.sh wlan1\" config extend option name rate-tx-wlan0-min option prog \"/etc/librenms/wlRate.sh wlan0 tx min\" config extend option name rate-tx-wlan0-avg option prog \"/etc/librenms/wlRate.sh wlan0 tx avg\" config extend option name rate-tx-wlan0-max option prog \"/etc/librenms/wlRate.sh wlan0 tx max\" config extend option name rate-tx-wlan1-min option prog \"/etc/librenms/wlRate.sh wlan1 tx min\" config extend option name rate-tx-wlan1-avg option prog \"/etc/librenms/wlRate.sh wlan1 tx avg\" config extend option name rate-tx-wlan1-max option prog \"/etc/librenms/wlRate.sh wlan1 tx max\" config extend option name rate-rx-wlan0-min option prog \"/etc/librenms/wlRate.sh wlan0 rx min\" config extend option name rate-rx-wlan0-avg option prog \"/etc/librenms/wlRate.sh wlan0 rx avg\" config extend option name rate-rx-wlan0-max option prog \"/etc/librenms/wlRate.sh wlan0 rx max\" config extend option name rate-rx-wlan1-min option prog \"/etc/librenms/wlRate.sh wlan1 rx min\" config extend option name rate-rx-wlan1-avg option prog \"/etc/librenms/wlRate.sh wlan1 rx avg\" config extend option name rate-rx-wlan1-max option prog \"/etc/librenms/wlRate.sh wlan1 rx max\" config extend option name noise-floor-wlan0 option prog \"/etc/librenms/wlNoiseFloor.sh wlan0\" config extend option name noise-floor-wlan1 option prog \"/etc/librenms/wlNoiseFloor.sh wlan1\" config extend option name snr-wlan0-min option prog \"/etc/librenms/wlSNR.sh wlan0 min\" config extend option name snr-wlan0-avg option prog \"/etc/librenms/wlSNR.sh wlan0 avg\" config extend option name snr-wlan0-max option prog \"/etc/librenms/wlSNR.sh wlan0 max\" config extend option name snr-wlan1-min option prog \"/etc/librenms/wlSNR.sh wlan1 min\" config extend option name snr-wlan1-avg option prog \"/etc/librenms/wlSNR.sh wlan1 avg\" config extend option name snr-wlan1-max option prog \"/etc/librenms/wlSNR.sh wlan1 max\" NOTE, any of the scripts above can be tested simply by running the corresponding command. NOTE, to check the output data from any of these extensions, on the LibreNMS machine, run (for example), snmpwalk -v 2c -c public -Osqnv <openwrt-host> 'NET-SNMP-EXTEND-MIB::nsExtendOutputFull.\"frequency-wlan0\"' NOTE, on the LibreNMS machine, ensure that snmp-mibs-downloader is installed. NOTE, on the AsuswrtMerlin machine, ensure that distro is installed (i.e. that the OS is correctly detected!). 3: Restart the snmp service on Openwrt: service snmpd restart And then wait for discovery and polling on LibreNMS!","title":"OpenWRT"},{"location":"Support/Device-Notes/Openwrt/#installation","text":"","title":"Installation"},{"location":"Support/Device-Notes/Openwrt/#openwrt","text":"Two items are required on the Openwrt side - scripts to generate the necessary information (for SNMP replies), and an SNMP extend configuration update (to return the information vs. the expected query). 1: Install the scripts: Copy the scripts from librenms-agent/snmp/Openwrt - preferably inside /etc/librenms on Openwrt (and add this directory to /etc/sysupgrade.conf, to survive firmware updates). The only file that needs to be edited is wlInterfaces.txt, which is a mapping from the wireless interfaces, to the desired display name in LibreNMS. For example, wlan0,wl-2.4G wlan1,wl-5.0G 2: Update the Openwrt SNMP configuration, adding extend support for the Wireless Sensor queries: vi /etc/config/snmpd , adding the following entries (assuming the scripts are installed in /etc/librenms, and are executable), and update the network interfaces as needed to match the hardware, config extend option name interfaces option prog \"/bin/cat /etc/librenms/wlInterfaces.txt\" config extend option name clients-wlan0 option prog \"/etc/librenms/wlClients.sh wlan0\" config extend option name clients-wlan1 option prog \"/etc/librenms/wlClients.sh wlan1\" config extend option name clients-wlan option prog \"/etc/librenms/wlClients.sh\" config extend option name frequency-wlan0 option prog \"/etc/librenms/wlFrequency.sh wlan0\" config extend option name frequency-wlan1 option prog \"/etc/librenms/wlFrequency.sh wlan1\" config extend option name rate-tx-wlan0-min option prog \"/etc/librenms/wlRate.sh wlan0 tx min\" config extend option name rate-tx-wlan0-avg option prog \"/etc/librenms/wlRate.sh wlan0 tx avg\" config extend option name rate-tx-wlan0-max option prog \"/etc/librenms/wlRate.sh wlan0 tx max\" config extend option name rate-tx-wlan1-min option prog \"/etc/librenms/wlRate.sh wlan1 tx min\" config extend option name rate-tx-wlan1-avg option prog \"/etc/librenms/wlRate.sh wlan1 tx avg\" config extend option name rate-tx-wlan1-max option prog \"/etc/librenms/wlRate.sh wlan1 tx max\" config extend option name rate-rx-wlan0-min option prog \"/etc/librenms/wlRate.sh wlan0 rx min\" config extend option name rate-rx-wlan0-avg option prog \"/etc/librenms/wlRate.sh wlan0 rx avg\" config extend option name rate-rx-wlan0-max option prog \"/etc/librenms/wlRate.sh wlan0 rx max\" config extend option name rate-rx-wlan1-min option prog \"/etc/librenms/wlRate.sh wlan1 rx min\" config extend option name rate-rx-wlan1-avg option prog \"/etc/librenms/wlRate.sh wlan1 rx avg\" config extend option name rate-rx-wlan1-max option prog \"/etc/librenms/wlRate.sh wlan1 rx max\" config extend option name noise-floor-wlan0 option prog \"/etc/librenms/wlNoiseFloor.sh wlan0\" config extend option name noise-floor-wlan1 option prog \"/etc/librenms/wlNoiseFloor.sh wlan1\" config extend option name snr-wlan0-min option prog \"/etc/librenms/wlSNR.sh wlan0 min\" config extend option name snr-wlan0-avg option prog \"/etc/librenms/wlSNR.sh wlan0 avg\" config extend option name snr-wlan0-max option prog \"/etc/librenms/wlSNR.sh wlan0 max\" config extend option name snr-wlan1-min option prog \"/etc/librenms/wlSNR.sh wlan1 min\" config extend option name snr-wlan1-avg option prog \"/etc/librenms/wlSNR.sh wlan1 avg\" config extend option name snr-wlan1-max option prog \"/etc/librenms/wlSNR.sh wlan1 max\" NOTE, any of the scripts above can be tested simply by running the corresponding command. NOTE, to check the output data from any of these extensions, on the LibreNMS machine, run (for example), snmpwalk -v 2c -c public -Osqnv <openwrt-host> 'NET-SNMP-EXTEND-MIB::nsExtendOutputFull.\"frequency-wlan0\"' NOTE, on the LibreNMS machine, ensure that snmp-mibs-downloader is installed. NOTE, on the AsuswrtMerlin machine, ensure that distro is installed (i.e. that the OS is correctly detected!). 3: Restart the snmp service on Openwrt: service snmpd restart And then wait for discovery and polling on LibreNMS!","title":"Openwrt"}]}